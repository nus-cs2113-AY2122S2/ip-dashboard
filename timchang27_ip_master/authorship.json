[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"timchang27"},"content":"# duke.duke project template","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"timchang27"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"timchang27":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timchang27"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"timchang27"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"timchang27"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"timchang27"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"timchang27"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"timchang27"},"content":"import java.util.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"timchang27"},"content":"import java.lang.*;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"timchang27"},"content":"    public static void main(String[] args) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"timchang27"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"timchang27"},"content":"        DukeException ex \u003d new DukeException();","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"timchang27"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"timchang27"},"content":"        System.out.println(\"Hello! I\u0027m Duke.Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"timchang27"},"content":"        displayOptions();","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"timchang27"},"content":"        String userInput;","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"timchang27"},"content":"        do {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"timchang27"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"timchang27"},"content":"            if(userInput.equals(\"list\")){","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"timchang27"},"content":"                System.out.println(\"-------------------------------------------------------------------------\\n\" + \"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"timchang27"},"content":"                int i\u003d1;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"timchang27"},"content":"                for(Task task: tasks){","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"timchang27"},"content":"                    System.out.println(i + \": \" + task.getDescription());","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"timchang27"},"content":"                    i++;","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"timchang27"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"timchang27"},"content":"                i\u003d0;","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"timchang27"},"content":"                System.out.println(\"-------------------------------------------------------------------------\");","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"timchang27"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"timchang27"},"content":"            else if(userInput.equals(\"bye\")){","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"timchang27"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"timchang27"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"timchang27"},"content":"            else if(userInput.startsWith(\"mark\")){","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"timchang27"},"content":"                String[] input \u003d new String[10];","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"timchang27"},"content":"                input  \u003d userInput.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"timchang27"},"content":"                int index \u003d Integer.parseInt(input[1]); //index of task to be marked","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"timchang27"},"content":"                if(tasks.get(index-1).getTaskStatus() \u003d\u003d true){","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"The task is already marked!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"-------------------------------------------------------------------------\");","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"timchang27"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"timchang27"},"content":"                else{","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"timchang27"},"content":"                    tasks.get(index-1).setMark();","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"-------------------------------------------------------------------------\\n\" + \"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"timchang27"},"content":"                    System.out.println(tasks.get(index-1).getDescription());","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"timchang27"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"timchang27"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"timchang27"},"content":"            else if(userInput.startsWith(\"unmark\")){","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"timchang27"},"content":"                String[] input \u003d new String[10];","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"timchang27"},"content":"                input  \u003d userInput.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"timchang27"},"content":"                int index \u003d Integer.parseInt(input[1]); //index of task to be unmarked","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"timchang27"},"content":"                if(tasks.get(index-1).getTaskStatus()\u003d\u003dfalse){","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"The task is not completed yet!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"-------------------------------------------------------------------------\");","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"timchang27"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"timchang27"},"content":"                else {","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"timchang27"},"content":"                    tasks.get(index - 1).setUnmark();","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"-------------------------------------------------------------------------\\n\" + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"timchang27"},"content":"                    System.out.println(tasks.get(index - 1).getDescription());","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"timchang27"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"timchang27"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"timchang27"},"content":"            else if(userInput.startsWith(\"todo\")){","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"timchang27"},"content":"                try{","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"timchang27"},"content":"                    String newtodo \u003d userInput.split(\"todo\")[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"timchang27"},"content":"                    Todo newTodo \u003d new Todo(newtodo);","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"timchang27"},"content":"                    tasks.add(newTodo);","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"-------------------------------------------------------------------------\");","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"Got it! I\u0027ve added this task: \" + newTodo.getDescription());","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"timchang27"},"content":"                } catch(IndexOutOfBoundsException e){","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"timchang27"},"content":"                    ex.missingDescription(\"todo\");","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"timchang27"},"content":"                } finally{","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"What else should I do for you?\");","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"timchang27"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"timchang27"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"timchang27"},"content":"            else if(userInput.startsWith(\"deadline\")){","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"timchang27"},"content":"                try{","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"timchang27"},"content":"                    String[] input \u003d userInput.split(\"/by\");","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"timchang27"},"content":"                    String ddate \u003d input[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"timchang27"},"content":"                    String deadline \u003d input[0].split(\"deadline\")[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"timchang27"},"content":"                    Deadline newDeadline \u003d new Deadline(deadline, ddate);","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"timchang27"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"-------------------------------------------------------------------------\");","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"Got it! I\u0027ve added this task: \");","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"timchang27"},"content":"                    System.out.println(newDeadline.getDescription());","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"timchang27"},"content":"                } catch(IndexOutOfBoundsException e){","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"timchang27"},"content":"                    ex.missingDescription(\"deadline\");","lastModifiedDate":"2022-02-10"},{"lineNumber":100,"author":{"gitId":"timchang27"},"content":"                } finally{","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"What else should I do for you?\");","lastModifiedDate":"2022-02-10"},{"lineNumber":102,"author":{"gitId":"timchang27"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":103,"author":{"gitId":"timchang27"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"timchang27"},"content":"            else if(userInput.startsWith(\"event\")){","lastModifiedDate":"2022-02-04"},{"lineNumber":105,"author":{"gitId":"timchang27"},"content":"                try{","lastModifiedDate":"2022-02-10"},{"lineNumber":106,"author":{"gitId":"timchang27"},"content":"                    String[] input \u003d userInput.split(\"/at\");","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"timchang27"},"content":"                    String eventDate \u003d input[1].trim();","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"timchang27"},"content":"                    String event \u003d input[0].split(\"event\")[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"timchang27"},"content":"                    Event newEvent \u003d new Event(event, eventDate);","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"timchang27"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"-------------------------------------------------------------------------\");","lastModifiedDate":"2022-02-04"},{"lineNumber":112,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"Got it! I\u0027ve added this task: \");","lastModifiedDate":"2022-02-04"},{"lineNumber":113,"author":{"gitId":"timchang27"},"content":"                    System.out.println(newEvent.getDescription());","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"timchang27"},"content":"                } catch(IndexOutOfBoundsException e){","lastModifiedDate":"2022-02-10"},{"lineNumber":116,"author":{"gitId":"timchang27"},"content":"                    ex.missingDescription(\"event\");","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"timchang27"},"content":"                } finally{","lastModifiedDate":"2022-02-10"},{"lineNumber":118,"author":{"gitId":"timchang27"},"content":"                    System.out.println(\"What else should I do for you?\");","lastModifiedDate":"2022-02-10"},{"lineNumber":119,"author":{"gitId":"timchang27"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":120,"author":{"gitId":"timchang27"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":121,"author":{"gitId":"timchang27"},"content":"            else{","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"timchang27"},"content":"                Task newTask \u003d new Task(userInput);","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"timchang27"},"content":"                tasks.add(newTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"timchang27"},"content":"                System.out.println(\"added: \"+ userInput);","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"timchang27"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"timchang27"},"content":"        }while(!userInput.equals(\"bye\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"timchang27"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":131,"author":{"gitId":"timchang27"},"content":"    public static void displayOptions(){","lastModifiedDate":"2022-02-10"},{"lineNumber":132,"author":{"gitId":"timchang27"},"content":"        System.out.println(\"Enter todo to create new todo (...)\\n\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":133,"author":{"gitId":"timchang27"},"content":"                \"Enter event (... /at {eventDate}) to create new event\\n\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":134,"author":{"gitId":"timchang27"},"content":"                \"Enter deadline (... /by {dueDate}) to create new Deadline\");","lastModifiedDate":"2022-02-10"},{"lineNumber":135,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"timchang27":127,"-":9}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timchang27"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"timchang27"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"timchang27"},"content":"    public void missingDescription(String command){","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"timchang27"},"content":"        System.out.println(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"timchang27"},"content":"    public void missingCommand(){","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"timchang27"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"timchang27"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"timchang27":10}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timchang27"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"timchang27"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"timchang27"},"content":"    protected String dueDate;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"timchang27"},"content":"    public Deadline(String description, String dueDate){","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"timchang27"},"content":"        super(description);","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"timchang27"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"timchang27"},"content":"    public Deadline(String description, boolean isTaskDone, String dueDate) {","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"timchang27"},"content":"        super(description, isTaskDone);","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"timchang27"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"timchang27"},"content":"    public String getDescription(){","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"timchang27"},"content":"        return \"[D]\" + super.getDescription() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"timchang27"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"timchang27":19}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timchang27"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"timchang27"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"timchang27"},"content":"    protected String eventDate;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"timchang27"},"content":"    public Event(String description, String eventDate){","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"timchang27"},"content":"        super(description);","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"timchang27"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"timchang27"},"content":"    public Event(String description, boolean isTaskDone, String eventDate) {","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"timchang27"},"content":"        super(description, isTaskDone);","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"timchang27"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"timchang27"},"content":"    public String getDescription(){","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"timchang27"},"content":"        return \"[E]\" + super.getDescription() + \" (by: \" + eventDate + \")\";","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"timchang27"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"timchang27":18}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timchang27"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"timchang27"},"content":"public class Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"timchang27"},"content":"    protected String description;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"timchang27"},"content":"    protected boolean isTaskDone;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"timchang27"},"content":"    public Task(String description){","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"timchang27"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"timchang27"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"timchang27"},"content":"    public Task(String description, boolean isTaskDone){","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"timchang27"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"timchang27"},"content":"        this.isTaskDone \u003d isTaskDone;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"timchang27"},"content":"    public String getDescription(){","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"timchang27"},"content":"        return showStatus() + description;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"timchang27"},"content":"    public void setDescription(String input){","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"timchang27"},"content":"        description \u003d input;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"timchang27"},"content":"    public boolean getTaskStatus(){","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"timchang27"},"content":"        return isTaskDone;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"timchang27"},"content":"    public void setMark(){","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"timchang27"},"content":"        this.isTaskDone \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"timchang27"},"content":"    public void setUnmark(){","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"timchang27"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"timchang27"},"content":"    public String showStatus(){","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"timchang27"},"content":"        if(isTaskDone\u003d\u003dtrue){","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"timchang27"},"content":"            return(\"[X]\");","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"timchang27"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"timchang27"},"content":"        else{","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"timchang27"},"content":"            return(\"[ ]\");","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"timchang27"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"timchang27"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"timchang27":42}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timchang27"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"timchang27"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"timchang27"},"content":"    public Todo(String description){","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"timchang27"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"timchang27"},"content":"    public Todo(String description, boolean isTaskDone){","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"timchang27"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"timchang27"},"content":"    public String getDescription(){","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"timchang27"},"content":"        return \"[T]\" + super.getDescription();","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"timchang27"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"timchang27"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"timchang27"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"timchang27":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"timchang27"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"timchang27":1,"-":20}}]
