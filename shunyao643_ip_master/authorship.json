[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shunyao643"},"content":"import duke.exception.IncompleteCommandException;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"shunyao643"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"shunyao643"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"shunyao643"},"content":"    private static final String GREET_STRING \u003d \"Hello! I\u0027m Duke\" + System.lineSeparator() + \"What can I do for you?\";","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"shunyao643"},"content":"    private static final String BYE_STRING \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"shunyao643"},"content":"    private static final String PROMPT_GENERIC_INVALID_COMMAND \u003d \"I don\u0027t understand what you are saying. Please follow this syntax:\";","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"shunyao643"},"content":"    private static final String PROMPT_ALL_FEATURES \u003d \"Recognised Commands:\" + System.lineSeparator() +","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"shunyao643"},"content":"            \"\u0027list\u0027     | show you all your tasks\" + System.lineSeparator() +","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"shunyao643"},"content":"            \"\u0027mark\u0027     | mark tasks by index once completed\" + System.lineSeparator() +","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"shunyao643"},"content":"            \"\u0027unmark\u0027   | unmark tasks by index to undo \u0027mark\u0027\" + System.lineSeparator() +","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"shunyao643"},"content":"            \"\u0027todo\u0027     | create general task\" + System.lineSeparator() +","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"shunyao643"},"content":"            \"\u0027deadline\u0027 | create task with deadline: include \u0027/by\u0027 for deadline\" + System.lineSeparator() +","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"shunyao643"},"content":"            \"\u0027event\u0027    | create task as event: include \u0027/at\u0027 for the date/time\" + System.lineSeparator() +","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"shunyao643"},"content":"            \"\u0027bye\u0027      | exit Duke\";","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"shunyao643"},"content":"    private static final String PROMPT_CORRECT_DEADLINE \u003d \"example: `deadline Rush CS2113 Assignment /by today`\";","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"shunyao643"},"content":"    private static final String PROMPT_CORRECT_EVENT \u003d \"example: `event Watch CS2113 Lecture /at 4-6pm on Friday`\";","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"shunyao643"},"content":"    private static final String PROMPT_CORRECT_TODO \u003d \"example: `todo Make sure that the user knows I need some text here!`\";","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"shunyao643"},"content":"        Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"shunyao643"},"content":"        InputReader inputReader \u003d new InputReader();","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"shunyao643"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"shunyao643"},"content":"        greet();","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"shunyao643"},"content":"        while (true) {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"shunyao643"},"content":"            String input \u003d s.nextLine().trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"shunyao643"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"shunyao643"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"shunyao643"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"shunyao643"},"content":"                taskList.displayTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"shunyao643"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"shunyao643"},"content":"                int index \u003d inputReader.extractTaskIndexNo(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"shunyao643"},"content":"                taskList.setTaskStatus(index, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"shunyao643"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"shunyao643"},"content":"                int index \u003d inputReader.extractTaskIndexNo(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"shunyao643"},"content":"                taskList.setTaskStatus(index, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"shunyao643"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"shunyao643"},"content":"                try {","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"shunyao643"},"content":"                    String toDoTask \u003d inputReader.extractToDoTask(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"shunyao643"},"content":"                    taskList.addToDo(toDoTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"shunyao643"},"content":"                } catch (IncompleteCommandException e){","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"shunyao643"},"content":"                    promptAgain();","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"shunyao643"},"content":"                    promptToDo();","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"shunyao643"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"shunyao643"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"shunyao643"},"content":"                try {","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"shunyao643"},"content":"                    String[] deadlineTask \u003d inputReader.extractDeadlineTask(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"shunyao643"},"content":"                    taskList.addDeadline(deadlineTask[0], deadlineTask[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"shunyao643"},"content":"                } catch (IncompleteCommandException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"shunyao643"},"content":"                    promptAgain();","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"shunyao643"},"content":"                    promptDeadline();","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"shunyao643"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"shunyao643"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"shunyao643"},"content":"                try {","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"shunyao643"},"content":"                    String[] eventTask \u003d inputReader.extractEventTask(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"shunyao643"},"content":"                    taskList.addEvent(eventTask[0], eventTask[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"shunyao643"},"content":"                } catch (IncompleteCommandException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"shunyao643"},"content":"                    promptAgain();","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"shunyao643"},"content":"                    promptEvent();","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"shunyao643"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"shunyao643"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"shunyao643"},"content":"                promptAgain();","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"shunyao643"},"content":"                promptCommandList();","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"shunyao643"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"shunyao643"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"shunyao643"},"content":"        bye();","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"shunyao643"},"content":"    private static void promptToDo() {","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"shunyao643"},"content":"        System.out.println(PROMPT_CORRECT_TODO);","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"shunyao643"},"content":"    private static void promptCommandList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"shunyao643"},"content":"        System.out.println(PROMPT_ALL_FEATURES);","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"shunyao643"},"content":"    private static void promptDeadline() {","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"shunyao643"},"content":"        System.out.println(PROMPT_CORRECT_DEADLINE);","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"shunyao643"},"content":"    private static void promptEvent() {","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"shunyao643"},"content":"        System.out.println(PROMPT_CORRECT_EVENT);","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"shunyao643"},"content":"    private static void promptAgain() {","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"shunyao643"},"content":"        System.out.println(PROMPT_GENERIC_INVALID_COMMAND);","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"shunyao643"},"content":"    private static void greet() {","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"shunyao643"},"content":"        System.out.println(GREET_STRING);","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"shunyao643"},"content":"    private static void bye() {","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"shunyao643"},"content":"        System.out.println(BYE_STRING);","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shunyao643":103,"-":4}},{"path":"src/main/java/InputReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shunyao643"},"content":"import duke.exception.IncompleteCommandException;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"shunyao643"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"shunyao643"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"shunyao643"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"shunyao643"},"content":"public class InputReader {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"shunyao643"},"content":"    public InputReader() {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"shunyao643"},"content":"     * Uses Regex to replace all instances of non digit characters to be parsed as int","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"shunyao643"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"shunyao643"},"content":"     * @param input","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"shunyao643"},"content":"     * @return int for the task index","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"shunyao643"},"content":"    public int extractTaskIndexNo(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"shunyao643"},"content":"        return Integer.parseInt(input.replaceAll(\"\\\\D+\", \"\")) - 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"shunyao643"},"content":"     * Reformats string to remove \"todo \" substring from user input","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"shunyao643"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"shunyao643"},"content":"     * @param input","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"shunyao643"},"content":"     * @return input less \"todo \" substring","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"shunyao643"},"content":"    public String extractToDoTask(String input) throws IncompleteCommandException {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"shunyao643"},"content":"        String returnString \u003d input.replace(\"todo \", \"\").trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"shunyao643"},"content":"        if (returnString.equals(\"\")){","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"shunyao643"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"shunyao643"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"shunyao643"},"content":"        return returnString;","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"shunyao643"},"content":"     * Reformats string to remove \"deadline \" substring from user input, then","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"shunyao643"},"content":"     * splits into task name and deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"shunyao643"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"shunyao643"},"content":"     * @param input","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"shunyao643"},"content":"     * @return String array of task and deadline, size 2","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"shunyao643"},"content":"    public String[] extractDeadlineTask(String input) throws IncompleteCommandException {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"shunyao643"},"content":"        String[] returnString \u003d trimAll(input.replace(\"deadline \", \"\").split(\"/by\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"shunyao643"},"content":"        if (returnString.length !\u003d 2 || checkNotEmpty(returnString)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"shunyao643"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"shunyao643"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"shunyao643"},"content":"        return returnString;","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"shunyao643"},"content":"     * Reformats string to remove \"event \" substring from user input, then","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"shunyao643"},"content":"     * splits into task name and event time.","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"shunyao643"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"shunyao643"},"content":"     * @param input","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"shunyao643"},"content":"     * @return String array of task and event time, size 2","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"shunyao643"},"content":"    public String[] extractEventTask(String input) throws IncompleteCommandException {","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"shunyao643"},"content":"        String[] returnString \u003d trimAll(input.replace(\"event \", \"\").split(\"/at\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"shunyao643"},"content":"        if (returnString.length !\u003d 2 || checkNotEmpty(returnString)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"shunyao643"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"shunyao643"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"shunyao643"},"content":"        return returnString;","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"shunyao643"},"content":"     * Iterates through String array to trim all whitespace.","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"shunyao643"},"content":"     * @param input","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"shunyao643"},"content":"     * @return String[] with whitespace trimmed","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"shunyao643"},"content":"    public String[] trimAll(String[] input){","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"shunyao643"},"content":"        for (int i \u003d 0; i \u003c input.length; i++){","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"shunyao643"},"content":"            input[i] \u003d input[i].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"shunyao643"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"shunyao643"},"content":"        return input;","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"shunyao643"},"content":"     * Ensures that after whitespace is trimmed, there is no empty String left","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"shunyao643"},"content":"     * @param input","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"shunyao643"},"content":"     * @return boolean if there is any empty string","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"shunyao643"},"content":"    public boolean checkNotEmpty(String[] input){","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"shunyao643"},"content":"        for (int i \u003d 0; i \u003c input.length; i++){","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"shunyao643"},"content":"            if (input[i].equals(\"\")){","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"shunyao643"},"content":"                return true;","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"shunyao643"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"shunyao643"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"shunyao643"},"content":"        return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"shunyao643"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"shunyao643":91}},{"path":"src/main/java/duke.task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shunyao643"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"shunyao643"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"shunyao643"},"content":"    private String dueTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"shunyao643"},"content":"    public Deadline(String taskInfo, String dueTime) {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"shunyao643"},"content":"        super(taskInfo);","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"shunyao643"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"shunyao643"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"shunyao643"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"shunyao643"},"content":"        // ternary operator adapted from John McMonigle https://github.com/nus-cs2113-AY2122S2/ip/pull/56","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"shunyao643"},"content":"        // rewrote return statement based on Clarence Chua Ying How\u0027s implementation https://github.com/nus-cs2113-AY2122S2/ip/pull/84","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"shunyao643"},"content":"        String completion \u003d (super.isDone() ? \"X\" : \" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"shunyao643"},"content":"        return String.format(\"[D] [%s] %s (by: %s)\", completion, super.getTaskInfo(), dueTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"shunyao643"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"shunyao643":19}},{"path":"src/main/java/duke.task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shunyao643"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"shunyao643"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"shunyao643"},"content":"    private String eventTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"shunyao643"},"content":"    public Event(String taskInfo, String eventTime) {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"shunyao643"},"content":"        super(taskInfo);","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"shunyao643"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"shunyao643"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"shunyao643"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"shunyao643"},"content":"        // ternary operator adapted from John McMonigle https://github.com/nus-cs2113-AY2122S2/ip/pull/56","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"shunyao643"},"content":"        // rewrote return statement based on Clarence Chua Ying How\u0027s implementation https://github.com/nus-cs2113-AY2122S2/ip/pull/84","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"shunyao643"},"content":"        String completion \u003d (super.isDone() ? \"X\" : \" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"shunyao643"},"content":"        return String.format(\"[E] [%s] %s (at: %s)\", completion, super.getTaskInfo(), eventTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"shunyao643"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"shunyao643":19}},{"path":"src/main/java/duke.task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shunyao643"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"shunyao643"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"shunyao643"},"content":" * Represents a task with task information stored as a string and a boolean for whether it is completed.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"shunyao643"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"shunyao643"},"content":"public class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"shunyao643"},"content":"    private String taskInfo;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"shunyao643"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"shunyao643"},"content":"     * Constructor for a new Task, assumes that the Task is not completed.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"shunyao643"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"shunyao643"},"content":"     * @param String representing taskInfo","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"shunyao643"},"content":"    public Task(String taskInfo) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"shunyao643"},"content":"        this.taskInfo \u003d taskInfo;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"shunyao643"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"shunyao643"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"shunyao643"},"content":"        return taskInfo;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"shunyao643"},"content":"    public void setTaskInfo(String taskInfo) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"shunyao643"},"content":"        this.taskInfo \u003d taskInfo;","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"shunyao643"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"shunyao643"},"content":"        return isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"shunyao643"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"shunyao643"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"shunyao643"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"shunyao643"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"shunyao643"},"content":"        // ternary operator adapted from John McMonigle https://github.com/nus-cs2113-AY2122S2/ip/pull/56","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"shunyao643"},"content":"        // rewrote return statement based on Clarence Chua Ying How\u0027s implementation https://github.com/nus-cs2113-AY2122S2/ip/pull/84","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"shunyao643"},"content":"        String completion \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"shunyao643"},"content":"        return String.format(\"[%s] %s\", completion, taskInfo);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"shunyao643"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"shunyao643":43}},{"path":"src/main/java/duke.task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shunyao643"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"shunyao643"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"shunyao643"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"shunyao643"},"content":" * Manages an ArrayList of Tasks. Tasks can have an associated deadline, event or nothing at all.","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"shunyao643"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"shunyao643"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"shunyao643"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"shunyao643"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"shunyao643"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"shunyao643"},"content":"     * Adds a new string as ToDo to the ArrayList and prints the Task added.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"shunyao643"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"shunyao643"},"content":"     * @param taskName","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"shunyao643"},"content":"    public void addToDo(String taskName) {","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"shunyao643"},"content":"        Task newToDo \u003d new ToDo(taskName);","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"shunyao643"},"content":"        taskList.add(newToDo);","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"shunyao643"},"content":"        System.out.println(\"Added:\" + System.lineSeparator() + \"   \" + newToDo);","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"shunyao643"},"content":"     * Adds a new string as Deadline to the ArrayList and prints the Task added.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"shunyao643"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"shunyao643"},"content":"     * @param taskName","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"shunyao643"},"content":"     * @param deadline","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"shunyao643"},"content":"    public void addDeadline(String taskName, String deadline) {","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"shunyao643"},"content":"        Task newDeadline \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"shunyao643"},"content":"        taskList.add(newDeadline);","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"shunyao643"},"content":"        System.out.println(\"Added:\" + System.lineSeparator() + \"   \" + newDeadline);","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"shunyao643"},"content":"     * Adds a new string as Event to the ArrayList and prints the Task added.","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"shunyao643"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"shunyao643"},"content":"     * @param taskName","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"shunyao643"},"content":"     * @param eventTime","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"shunyao643"},"content":"    public void addEvent(String taskName, String eventTime) {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"shunyao643"},"content":"        Task newEvent \u003d new Event(taskName, eventTime);","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"shunyao643"},"content":"        taskList.add(newEvent);","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"shunyao643"},"content":"        System.out.println(\"Added:\" + System.lineSeparator() + \"   \" + newEvent);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"shunyao643"},"content":"     * Prints out the list of Tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"shunyao643"},"content":"    public void displayTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"shunyao643"},"content":"        System.out.println(\"Total \" + taskList.size() + \" tasks to be completed:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"shunyao643"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"shunyao643"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"shunyao643"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"shunyao643"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"shunyao643"},"content":"     * Sets the completion status of a Task using its index (as displayed to the user).","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"shunyao643"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"shunyao643"},"content":"     * @param index","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"shunyao643"},"content":"     * @param status","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"shunyao643"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"shunyao643"},"content":"    public void setTaskStatus(int index, boolean status) {","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"shunyao643"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"shunyao643"},"content":"        task.setDone(status);","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"shunyao643"},"content":"        if (status) {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"shunyao643"},"content":"            System.out.println(\"Ok, task done!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"shunyao643"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"shunyao643"},"content":"            System.out.println(\"Ok, you didn\u0027t actually do the task!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"shunyao643"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"shunyao643"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"shunyao643"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"shunyao643":78}},{"path":"src/main/java/duke.task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shunyao643"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"shunyao643"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"shunyao643"},"content":"    public ToDo(String taskInfo) {","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"shunyao643"},"content":"        super(taskInfo);","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"shunyao643"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"shunyao643"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"shunyao643"},"content":"        // rewrote return statement based on Clarence Chua Ying How\u0027s implementation https://github.com/nus-cs2113-AY2122S2/ip/pull/84","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"shunyao643"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"shunyao643"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"shunyao643"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"shunyao643":13}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shunyao643"},"content":"package duke.exception;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"shunyao643"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"shunyao643"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"shunyao643":4}},{"path":"src/main/java/duke/exception/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shunyao643"},"content":"package duke.exception;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"shunyao643"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"shunyao643"},"content":"public class IncompleteCommandException extends DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"shunyao643"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"shunyao643":4}}]
