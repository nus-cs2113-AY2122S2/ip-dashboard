[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"# Vera project template","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"3. After that, locate the `src/main/java/Vera.java` file, right-click it, and choose `Run Vera.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jltha":2,"-":22}},{"path":"src/main/java/vera/Vera.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package vera;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import vera.exception.CommandMissingException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import vera.exception.InputEmptyException;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import vera.exception.InputRepeatedException;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import vera.exception.MaxTaskException;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import vera.task.Deadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import vera.task.Event;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import vera.task.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import vera.task.Todo;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"public class Vera {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    private static Task[] tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    private static int taskCount;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    private static Scanner SCANNER;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    private static final String PARTITION_LINE \u003d \"______________________________\"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"            + \"______________________________\";","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    private static final String HELP_MESSAGE \u003d \"For more information, please enter the \u0027help\u0027 command.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    private static final String ERROR_INVALID_INPUT_MESSAGE \u003d \"Please key in an appropriate command.\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"            + HELP_MESSAGE;","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    private static final String ERROR_MAX_TASK_MESSAGE \u003d \"Sorry! You\u0027ve reached the maximum \"","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"            + \"amount of tasks allowed on your task list.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    private static final String ERROR_EVENT_MISSING_COMMAND_MESSAGE \u003d \"Oops! You forgot to \"","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            + \"add a \u0027/at\u0027 to your \u0027event\u0027 command.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    private static final String ERROR_DEADLINE_MISSING_COMMAND_MESSAGE \u003d \"Oops! You forgot to\"","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"            + \" add a \u0027/by\u0027 to your \u0027deadline\u0027 command.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    private static final String ERROR_TODO_REPEATED_INPUT_MESSAGE \u003d \"Oops! It seems that you\u0027ve \"","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"            + \"already added this task.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    private static final String HELP_MESSAGE_SPECIFIC_COMMAND \u003d \"\\n\\nFor more information on \"","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"            + \"the command you wish to execute,\\nenter \u0027help \u003ccommand\u003e\u0027 e.g. help todo\";","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"    private static final int OPTIONS_INDEX \u003d 0;","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"    private static final int MARK_INDEX \u003d 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    private static final int TASK_CONTENT_INDEX \u003d 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    private static final int TASK_DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    private static final int TASK_DESCRIPTION_INDEX_TODO \u003d 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    private static final int TASK_DATE_INDEX \u003d 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"    public enum TaskType {","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    public static void initTaskManager() {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"        tasks \u003d new Task[100];","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"    public static void printWithPartition(String message) {","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"        System.out.println(PARTITION_LINE + System.lineSeparator()","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"                + message + System.lineSeparator() + PARTITION_LINE);","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"        String message \u003d \"Bye. Hope to see you again soon! :)\";","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        printWithPartition(message);","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        String logo \u003d \" __     __             \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"                + \" \\\\ \\\\   / /__ _ __ __ _ \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"                + \"  \\\\ \\\\ / / _ \\\\ \u0027__/ _` |\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"                + \"   \\\\ V /  __/ | | (_| |\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"                + \"    \\\\_/ \\\\___|_|  \\\\__,_|\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"        String message \u003d logo + \"\\nHello! I\u0027m Vera,\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"                + \"your friendly virtual task manager.\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"                + \"How can I help you today?\";","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"        printWithPartition(message);","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"    public static String getUserInput() {","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"        return SCANNER.nextLine();","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"    public static void showResultsToUser(String feedback) {","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"        printWithPartition(feedback);","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    public static String list() {","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"        int printIndex \u003d 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"        System.out.println(PARTITION_LINE +","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"                \"\\nHere are the tasks in your list:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"            System.out.println(printIndex + \". \" + tasks[i]);","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"            printIndex++;","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"        return \"A total of \" + (printIndex - 1) + \" item(s) have been found!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"    public static boolean isTaskAlreadyAdded(String inputTaskDescription) {","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"            if (tasks[i].getDescription().equalsIgnoreCase(inputTaskDescription)) {","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"                return true;","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"        return false;","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"    public static String printMissingInputMessage(String input, TaskType type) {","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"        return \"☹ Oops! The \" + input + \" of a \" + type + \" cannot be empty.\"","lastModifiedDate":"2022-02-05"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"                + HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"    public static String addTodo(String[] parsedInput) throws InputEmptyException,","lastModifiedDate":"2022-02-05"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"            InputRepeatedException, MaxTaskException {","lastModifiedDate":"2022-02-05"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"        if (taskCount \u003e\u003d 100) {","lastModifiedDate":"2022-02-05"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"            throw new MaxTaskException();","lastModifiedDate":"2022-02-05"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"        if (parsedInput[TASK_DESCRIPTION_INDEX_TODO].isBlank()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"            throw new InputEmptyException();","lastModifiedDate":"2022-02-05"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"        if (isTaskAlreadyAdded(parsedInput[TASK_DESCRIPTION_INDEX_TODO])) {","lastModifiedDate":"2022-02-05"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"            throw new InputRepeatedException();","lastModifiedDate":"2022-02-05"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"        tasks[taskCount] \u003d new Todo(parsedInput[TASK_DESCRIPTION_INDEX_TODO]);","lastModifiedDate":"2022-02-05"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"        taskCount++;","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + tasks[taskCount - 1]","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"                + \"\\nNow you have \" + taskCount + \" task(s) in the list.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"    public static String filterTodoBeforeAddingToTaskList(String[] parsedInput) {","lastModifiedDate":"2022-01-31"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"            return addTodo(parsedInput);","lastModifiedDate":"2022-02-05"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"        } catch (ArrayIndexOutOfBoundsException | InputEmptyException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"            return printMissingInputMessage(\"description\", TaskType.TODO);","lastModifiedDate":"2022-02-05"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"        } catch (InputRepeatedException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"            return ERROR_TODO_REPEATED_INPUT_MESSAGE;","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"        } catch (MaxTaskException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"            return ERROR_MAX_TASK_MESSAGE;","lastModifiedDate":"2022-02-05"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"    public static String addEventOrDeadline(TaskType type, String[] parsedInput, String command)","lastModifiedDate":"2022-02-05"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"            throws InputEmptyException, InputRepeatedException, MaxTaskException, CommandMissingException {","lastModifiedDate":"2022-02-05"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"        if (taskCount \u003e\u003d 100) {","lastModifiedDate":"2022-02-05"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"            throw new MaxTaskException();","lastModifiedDate":"2022-02-05"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"        if (parsedInput[TASK_CONTENT_INDEX].isBlank()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"            throw new InputEmptyException();","lastModifiedDate":"2022-02-05"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"        if (!parsedInput[TASK_CONTENT_INDEX].contains(command)) {","lastModifiedDate":"2022-02-05"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"            throw new CommandMissingException();","lastModifiedDate":"2022-02-05"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"        String[] filteredTaskContent \u003d parsedInput[TASK_CONTENT_INDEX].split(command, 2);","lastModifiedDate":"2022-02-05"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"        if (filteredTaskContent[TASK_DESCRIPTION_INDEX].isBlank() ||","lastModifiedDate":"2022-02-05"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"                filteredTaskContent[TASK_DATE_INDEX].isBlank()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":152,"author":{"gitId":"jltha"},"content":"            throw new InputEmptyException();","lastModifiedDate":"2022-02-05"},{"lineNumber":153,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":154,"author":{"gitId":"jltha"},"content":"        if (isTaskAlreadyAdded(filteredTaskContent[TASK_DESCRIPTION_INDEX])) {","lastModifiedDate":"2022-02-05"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"            throw new InputRepeatedException();","lastModifiedDate":"2022-02-05"},{"lineNumber":156,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":157,"author":{"gitId":"jltha"},"content":"        if (type.equals(TaskType.EVENT)) {","lastModifiedDate":"2022-02-05"},{"lineNumber":158,"author":{"gitId":"jltha"},"content":"            tasks[taskCount] \u003d new Event(filteredTaskContent[TASK_DESCRIPTION_INDEX],","lastModifiedDate":"2022-02-05"},{"lineNumber":159,"author":{"gitId":"jltha"},"content":"                    filteredTaskContent[TASK_DATE_INDEX]);","lastModifiedDate":"2022-02-05"},{"lineNumber":160,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":161,"author":{"gitId":"jltha"},"content":"            tasks[taskCount] \u003d new Deadline(filteredTaskContent[TASK_DESCRIPTION_INDEX],","lastModifiedDate":"2022-02-05"},{"lineNumber":162,"author":{"gitId":"jltha"},"content":"                    filteredTaskContent[TASK_DATE_INDEX]);","lastModifiedDate":"2022-02-05"},{"lineNumber":163,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":164,"author":{"gitId":"jltha"},"content":"        taskCount++;","lastModifiedDate":"2022-02-05"},{"lineNumber":165,"author":{"gitId":"jltha"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + tasks[taskCount - 1]","lastModifiedDate":"2022-02-05"},{"lineNumber":166,"author":{"gitId":"jltha"},"content":"                + \"\\nNow you have \" + taskCount + \" task(s) in the list.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":167,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":168,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":169,"author":{"gitId":"jltha"},"content":"    public static boolean isTaskBeingReplaced() {","lastModifiedDate":"2022-01-31"},{"lineNumber":170,"author":{"gitId":"jltha"},"content":"        boolean isOldTaskReplaced \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":171,"author":{"gitId":"jltha"},"content":"        printWithPartition(\"Oops! It seems that you\u0027ve already added this task.\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":172,"author":{"gitId":"jltha"},"content":"                + \"Would you like to override the\\nexisting time and/or date \"","lastModifiedDate":"2022-01-31"},{"lineNumber":173,"author":{"gitId":"jltha"},"content":"                + \"with the new input? [Y/N]\");","lastModifiedDate":"2022-01-31"},{"lineNumber":174,"author":{"gitId":"jltha"},"content":"        while (true) {","lastModifiedDate":"2022-01-31"},{"lineNumber":175,"author":{"gitId":"jltha"},"content":"            String input \u003d SCANNER.nextLine();","lastModifiedDate":"2022-01-31"},{"lineNumber":176,"author":{"gitId":"jltha"},"content":"            if (input.equalsIgnoreCase(\"Y\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":177,"author":{"gitId":"jltha"},"content":"                isOldTaskReplaced \u003d true;","lastModifiedDate":"2022-01-31"},{"lineNumber":178,"author":{"gitId":"jltha"},"content":"                System.out.println(PARTITION_LINE + \"\\nUnderstood. Proceeding to change\"","lastModifiedDate":"2022-02-03"},{"lineNumber":179,"author":{"gitId":"jltha"},"content":"                        + \"\\nthe old task with the new one..........\");","lastModifiedDate":"2022-02-03"},{"lineNumber":180,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":181,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":182,"author":{"gitId":"jltha"},"content":"            if (input.equalsIgnoreCase(\"N\")) {","lastModifiedDate":"2022-02-05"},{"lineNumber":183,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":184,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":185,"author":{"gitId":"jltha"},"content":"            printWithPartition(\"Please confirm your choice with either Y or N.\");","lastModifiedDate":"2022-02-05"},{"lineNumber":186,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":187,"author":{"gitId":"jltha"},"content":"        return isOldTaskReplaced;","lastModifiedDate":"2022-01-31"},{"lineNumber":188,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":189,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":190,"author":{"gitId":"jltha"},"content":"    public static String handleRepeatedInputs(String[] filteredTaskContent) {","lastModifiedDate":"2022-01-31"},{"lineNumber":191,"author":{"gitId":"jltha"},"content":"        if (isTaskBeingReplaced()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":192,"author":{"gitId":"jltha"},"content":"            int taskIndexToReplace \u003d 0;","lastModifiedDate":"2022-01-31"},{"lineNumber":193,"author":{"gitId":"jltha"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2022-01-31"},{"lineNumber":194,"author":{"gitId":"jltha"},"content":"                if (tasks[i].getDescription().equalsIgnoreCase(filteredTaskContent[TASK_DESCRIPTION_INDEX])) {","lastModifiedDate":"2022-02-03"},{"lineNumber":195,"author":{"gitId":"jltha"},"content":"                    taskIndexToReplace \u003d i;","lastModifiedDate":"2022-01-31"},{"lineNumber":196,"author":{"gitId":"jltha"},"content":"                    break;","lastModifiedDate":"2022-01-31"},{"lineNumber":197,"author":{"gitId":"jltha"},"content":"                }","lastModifiedDate":"2022-01-31"},{"lineNumber":198,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":199,"author":{"gitId":"jltha"},"content":"            tasks[taskIndexToReplace].resetInput(filteredTaskContent[TASK_DATE_INDEX]);","lastModifiedDate":"2022-01-31"},{"lineNumber":200,"author":{"gitId":"jltha"},"content":"            return \"Done! I\u0027ve updated this task:\\n  \" + tasks[taskIndexToReplace];","lastModifiedDate":"2022-02-03"},{"lineNumber":201,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":202,"author":{"gitId":"jltha"},"content":"        return \"Okay, we\u0027ll keep it as it is.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":203,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":204,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"    public static String[] parseData(String data, String keyword, int limit) {","lastModifiedDate":"2022-02-05"},{"lineNumber":206,"author":{"gitId":"jltha"},"content":"        return data.split(keyword, limit);","lastModifiedDate":"2022-02-05"},{"lineNumber":207,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":208,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":209,"author":{"gitId":"jltha"},"content":"    public static String filterTaskBeforeAddingToTaskList(String[] parsedInput, String command, TaskType type) {","lastModifiedDate":"2022-02-03"},{"lineNumber":210,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":211,"author":{"gitId":"jltha"},"content":"            return addEventOrDeadline(type, parsedInput, command);","lastModifiedDate":"2022-02-05"},{"lineNumber":212,"author":{"gitId":"jltha"},"content":"        } catch (ArrayIndexOutOfBoundsException | InputEmptyException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":213,"author":{"gitId":"jltha"},"content":"            return printMissingInputMessage(\"description and date\\n\", type);","lastModifiedDate":"2022-02-05"},{"lineNumber":214,"author":{"gitId":"jltha"},"content":"        } catch (InputRepeatedException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":215,"author":{"gitId":"jltha"},"content":"            return handleRepeatedInputs(parseData(parsedInput[TASK_CONTENT_INDEX], command, 2));","lastModifiedDate":"2022-02-05"},{"lineNumber":216,"author":{"gitId":"jltha"},"content":"        } catch (MaxTaskException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":217,"author":{"gitId":"jltha"},"content":"            return ERROR_MAX_TASK_MESSAGE;","lastModifiedDate":"2022-02-05"},{"lineNumber":218,"author":{"gitId":"jltha"},"content":"        } catch (CommandMissingException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":219,"author":{"gitId":"jltha"},"content":"            if (type.equals(TaskType.EVENT)) {","lastModifiedDate":"2022-02-03"},{"lineNumber":220,"author":{"gitId":"jltha"},"content":"                return ERROR_EVENT_MISSING_COMMAND_MESSAGE + HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-02-05"},{"lineNumber":221,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":222,"author":{"gitId":"jltha"},"content":"            return ERROR_DEADLINE_MISSING_COMMAND_MESSAGE + HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-02-05"},{"lineNumber":223,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":224,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":225,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":226,"author":{"gitId":"jltha"},"content":"    public static boolean isInvalidInput(String[] parsedInput) {","lastModifiedDate":"2022-01-30"},{"lineNumber":227,"author":{"gitId":"jltha"},"content":"        boolean isMarkIndexMissing \u003d parsedInput.length \u003c 2;","lastModifiedDate":"2022-01-31"},{"lineNumber":228,"author":{"gitId":"jltha"},"content":"        if (isMarkIndexMissing) {","lastModifiedDate":"2022-01-31"},{"lineNumber":229,"author":{"gitId":"jltha"},"content":"            return true;","lastModifiedDate":"2022-01-31"},{"lineNumber":230,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":231,"author":{"gitId":"jltha"},"content":"        int inputMarkIndex \u003d Integer.parseInt(parsedInput[MARK_INDEX]);","lastModifiedDate":"2022-01-31"},{"lineNumber":232,"author":{"gitId":"jltha"},"content":"        return inputMarkIndex \u003c\u003d 0 || inputMarkIndex \u003e taskCount;","lastModifiedDate":"2022-01-31"},{"lineNumber":233,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":234,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":235,"author":{"gitId":"jltha"},"content":"    public static String markTask(String[] parsedInput) {","lastModifiedDate":"2022-01-30"},{"lineNumber":236,"author":{"gitId":"jltha"},"content":"        if (isInvalidInput(parsedInput)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":237,"author":{"gitId":"jltha"},"content":"            return \"Bzzt!\\nPlease\"","lastModifiedDate":"2022-01-30"},{"lineNumber":238,"author":{"gitId":"jltha"},"content":"                    + \" key in a valid task number \"","lastModifiedDate":"2022-01-30"},{"lineNumber":239,"author":{"gitId":"jltha"},"content":"                    + \"to mark your task.\" + HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-02-05"},{"lineNumber":240,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":241,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":242,"author":{"gitId":"jltha"},"content":"        int taskIndexToMark \u003d Integer.parseInt(parsedInput[MARK_INDEX]) - 1;","lastModifiedDate":"2022-01-31"},{"lineNumber":243,"author":{"gitId":"jltha"},"content":"        if (tasks[taskIndexToMark].isDone()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":244,"author":{"gitId":"jltha"},"content":"            return \"This task has already been marked!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":245,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":246,"author":{"gitId":"jltha"},"content":"        tasks[taskIndexToMark].markAsDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":247,"author":{"gitId":"jltha"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + tasks[taskIndexToMark];","lastModifiedDate":"2022-01-30"},{"lineNumber":248,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":249,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":250,"author":{"gitId":"jltha"},"content":"    public static String unmarkTask(String[] parsedInput) {","lastModifiedDate":"2022-01-30"},{"lineNumber":251,"author":{"gitId":"jltha"},"content":"        if (isInvalidInput(parsedInput)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":252,"author":{"gitId":"jltha"},"content":"            return \"Bzzt!\\nPlease\"","lastModifiedDate":"2022-01-30"},{"lineNumber":253,"author":{"gitId":"jltha"},"content":"                    + \" key in a valid task number \"","lastModifiedDate":"2022-01-30"},{"lineNumber":254,"author":{"gitId":"jltha"},"content":"                    + \"to unmark your task.\" + HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-02-05"},{"lineNumber":255,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":256,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":257,"author":{"gitId":"jltha"},"content":"        int taskIndexToUnmark \u003d Integer.parseInt(parsedInput[MARK_INDEX]) - 1;","lastModifiedDate":"2022-01-31"},{"lineNumber":258,"author":{"gitId":"jltha"},"content":"        if (!tasks[taskIndexToUnmark].isDone()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":259,"author":{"gitId":"jltha"},"content":"            return \"This task was already unmarked!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":260,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":261,"author":{"gitId":"jltha"},"content":"        tasks[taskIndexToUnmark].markAsUndone();","lastModifiedDate":"2022-01-30"},{"lineNumber":262,"author":{"gitId":"jltha"},"content":"        return \"Ok, I\u0027ve marked this task as\"","lastModifiedDate":"2022-02-03"},{"lineNumber":263,"author":{"gitId":"jltha"},"content":"                + \" not done yet:\\n  \" + tasks[taskIndexToUnmark];","lastModifiedDate":"2022-02-03"},{"lineNumber":264,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":265,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":266,"author":{"gitId":"jltha"},"content":"    public static String filterHelpCommand() {","lastModifiedDate":"2022-02-05"},{"lineNumber":267,"author":{"gitId":"jltha"},"content":"        return \"Will update this list soon! Come back next time!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":268,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":269,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":270,"author":{"gitId":"jltha"},"content":"    public static String executeInput(String userInput) {","lastModifiedDate":"2022-01-30"},{"lineNumber":271,"author":{"gitId":"jltha"},"content":"        String[] parsedInput \u003d parseData(userInput, \" \", 2);","lastModifiedDate":"2022-02-05"},{"lineNumber":272,"author":{"gitId":"jltha"},"content":"        switch (parsedInput[OPTIONS_INDEX].toLowerCase()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":273,"author":{"gitId":"jltha"},"content":"        case \"list\":","lastModifiedDate":"2022-01-30"},{"lineNumber":274,"author":{"gitId":"jltha"},"content":"            return list();","lastModifiedDate":"2022-02-03"},{"lineNumber":275,"author":{"gitId":"jltha"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-30"},{"lineNumber":276,"author":{"gitId":"jltha"},"content":"            return markTask(parsedInput);","lastModifiedDate":"2022-01-30"},{"lineNumber":277,"author":{"gitId":"jltha"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-30"},{"lineNumber":278,"author":{"gitId":"jltha"},"content":"            return unmarkTask(parsedInput);","lastModifiedDate":"2022-01-30"},{"lineNumber":279,"author":{"gitId":"jltha"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-30"},{"lineNumber":280,"author":{"gitId":"jltha"},"content":"            return filterTodoBeforeAddingToTaskList(parsedInput);","lastModifiedDate":"2022-01-31"},{"lineNumber":281,"author":{"gitId":"jltha"},"content":"        case \"event\":","lastModifiedDate":"2022-01-30"},{"lineNumber":282,"author":{"gitId":"jltha"},"content":"            return filterTaskBeforeAddingToTaskList(parsedInput, \"/at\", TaskType.EVENT);","lastModifiedDate":"2022-02-03"},{"lineNumber":283,"author":{"gitId":"jltha"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-30"},{"lineNumber":284,"author":{"gitId":"jltha"},"content":"            return filterTaskBeforeAddingToTaskList(parsedInput, \"/by\", TaskType.DEADLINE);","lastModifiedDate":"2022-02-03"},{"lineNumber":285,"author":{"gitId":"jltha"},"content":"        case \"help\":","lastModifiedDate":"2022-02-05"},{"lineNumber":286,"author":{"gitId":"jltha"},"content":"            return filterHelpCommand();","lastModifiedDate":"2022-02-05"},{"lineNumber":287,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-01-30"},{"lineNumber":288,"author":{"gitId":"jltha"},"content":"            return ERROR_INVALID_INPUT_MESSAGE;","lastModifiedDate":"2022-02-03"},{"lineNumber":289,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":290,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":291,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":292,"author":{"gitId":"jltha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-30"},{"lineNumber":293,"author":{"gitId":"jltha"},"content":"        initTaskManager();","lastModifiedDate":"2022-01-30"},{"lineNumber":294,"author":{"gitId":"jltha"},"content":"        printWelcomeMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":295,"author":{"gitId":"jltha"},"content":"        String userCommand \u003d getUserInput();","lastModifiedDate":"2022-01-30"},{"lineNumber":296,"author":{"gitId":"jltha"},"content":"        while (!userCommand.equals(\"bye\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":297,"author":{"gitId":"jltha"},"content":"            String feedback \u003d executeInput(userCommand);","lastModifiedDate":"2022-01-30"},{"lineNumber":298,"author":{"gitId":"jltha"},"content":"            showResultsToUser(feedback);","lastModifiedDate":"2022-01-30"},{"lineNumber":299,"author":{"gitId":"jltha"},"content":"            userCommand \u003d getUserInput();","lastModifiedDate":"2022-01-30"},{"lineNumber":300,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":301,"author":{"gitId":"jltha"},"content":"        printExitMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":302,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":303,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"jltha":303}},{"path":"src/main/java/vera/exception/CommandMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package vera.exception;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class CommandMissingException extends Exception{","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jltha":4}},{"path":"src/main/java/vera/exception/InputEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package vera.exception;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class InputEmptyException extends Exception{","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jltha":4}},{"path":"src/main/java/vera/exception/InputRepeatedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package vera.exception;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class InputRepeatedException extends Exception{","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jltha":4}},{"path":"src/main/java/vera/exception/MaxTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package vera.exception;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class MaxTaskException extends Exception{","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"jltha":4}},{"path":"src/main/java/vera/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package vera.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    protected String by;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public void resetInput(String date) {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"        by \u003d date;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"        return \"[D] \" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"jltha":20}},{"path":"src/main/java/vera/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package vera.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    protected String at;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public void resetInput(String date) {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"        at \u003d date;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"        return \"[E] \" + super.toString() + \"(at:\" + at + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"jltha":20}},{"path":"src/main/java/vera/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package vera.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    protected String description;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"        return description;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"        return isDone;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    public void resetInput(String date) {","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        markAsUndone();","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"jltha":40}},{"path":"src/main/java/vera/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package vera.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"jltha":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"todo read book","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"mark 1","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"todo join sports club","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"mark 6","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"unmark","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"mark 4","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"todo borrow book","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"N","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"Y","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"deadline return book /by no idea :-p","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"d","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"n","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"mark 0","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"mark -1","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"todo","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"todo","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"deadline","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"deadline","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"event","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"event","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"event /at","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"deadline return book","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"deadline return book by Sunday","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"deadline Sunday","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"deadline /by","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"bye","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"jltha":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\vera\\*.java ..\\src\\main\\java\\vera\\exception\\*.java ..\\src\\main\\java\\vera\\task\\*.java","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"java -classpath ..\\bin vera.Vera \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jltha":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/vera/*.java ../src/main/java/vera/exception/*.java ../src/main/java/vera/task/*.java","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"java -classpath ../bin vera.Vera \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jltha":2,"-":36}}]
