[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"        Scanner mainScan \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"        UserInterface ui \u003d new UserInterface(mainScan);","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"        ui.start();","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"matheril":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"public class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"    protected String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"     * Returns a String indicating if the task is done or not.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"     * @return \"X\" if task is done, \" \" if otherwise","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"    public void doTask() {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"    public void undoTask() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"        return this.description;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"matheril"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"matheril":34}},{"path":"src/main/java/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"public class UserInterface {","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"    private Scanner uiScan;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"     * Constructor.","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"     * @param mainScan a Scanner object that reads commands from the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"    public UserInterface(Scanner mainScan) {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"        this.uiScan \u003d mainScan;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"     * Starts the UserInterface.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"     * Greets the user and begins the command input loop.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"    public void start() {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"        printGreeting();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"        commandLoop();","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"     * Reads commands from stdin and executes them using commandExec(commandInput)","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"     * until the user inputs \"bye\", upon which the function returns.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"    public void commandLoop() {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"        String commandInput;","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"matheril"},"content":"        do {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"matheril"},"content":"            commandInput \u003d uiScan.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"matheril"},"content":"            commandExec(commandInput);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"matheril"},"content":"        } while (!commandInput.equals(\"bye\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"matheril"},"content":"     * Checks the String inputted by the user and executes the appropriate command","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"matheril"},"content":"     * using a switch statement.","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"matheril"},"content":"     * @param nextLine The command to be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"matheril"},"content":"    private void commandExec(String nextLine) {","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"matheril"},"content":"        if (nextLine \u003d\u003d null) {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: Command is null.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"matheril"},"content":"            return;","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"matheril"},"content":"            String[] pieces \u003d nextLine.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"matheril"},"content":"            switch (pieces[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"matheril"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"matheril"},"content":"                printGoodbye();","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"matheril"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"matheril"},"content":"            case \"list\":","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"matheril"},"content":"                listTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"matheril"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"matheril"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"matheril"},"content":"                doTask(pieces[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"matheril"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"matheril"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"matheril"},"content":"                undoTask(pieces[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"matheril"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"matheril"},"content":"            default:","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"matheril"},"content":"                addTask(nextLine);","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"matheril"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"matheril"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"matheril"},"content":"     * Stores a task.","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"matheril"},"content":"     * @param task The description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"matheril"},"content":"    private void addTask(String task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"matheril"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: Task to be stored is null.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"matheril"},"content":"            return;","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"matheril"},"content":"            this.tasks.add(new Task(task));","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"matheril"},"content":"            System.out.println(\"added: \" + task);","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"matheril"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"matheril"},"content":"     * Prints all tasks stored in memory by addTask(Task)","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"matheril"},"content":"    private void listTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"matheril"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"matheril"},"content":"        for (int i \u003d 1; i \u003c\u003d this.tasks.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"matheril"},"content":"            System.out.println(i + \".\" + this.tasks.get(i - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"matheril"},"content":"     * Marks the task selected by the user as done. Tasks are selected by their visual index on the list","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"matheril"},"content":"     * (starting from 1, not 0) and not by name.","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"matheril"},"content":"     * @param task The index of the task to be marked done.","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"matheril"},"content":"    private void doTask(String task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"matheril"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"matheril"},"content":"            System.out.println((\"Error: Task to be done is null.\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"matheril"},"content":"            return;","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"matheril"},"content":"            this.tasks.get(Integer.parseInt(task) - 1).doTask();","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"matheril"},"content":"            System.out.println(this.tasks.get(Integer.parseInt(task) - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"matheril"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"matheril"},"content":"     * Marks the task selected by the user as undone. Tasks are selected by their visual index on the list","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"matheril"},"content":"     * (starting from 1, not 0) and not by name.","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"matheril"},"content":"     * @param task The index of the task to be marked done.","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"matheril"},"content":"    private void undoTask(String task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"matheril"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: Task to be undone is null.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"matheril"},"content":"            return;","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"matheril"},"content":"            this.tasks.get(Integer.parseInt(task) - 1).undoTask();","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"matheril"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"matheril"},"content":"            System.out.println(this.tasks.get(Integer.parseInt(task) - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"matheril"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"matheril"},"content":"     * Prints a goodbye message and returns.","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"matheril"},"content":"    private void printGoodbye() {","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"matheril"},"content":"        System.out.println(\"Goodbye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"matheril"},"content":"     * Prints 37 underscores to stdout to serve as a divider.","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"matheril"},"content":"    private void printDivider() {","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"matheril"},"content":"        System.out.println(\"_____________________________________\");","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"matheril"},"content":"     * Prints a greeting with divider lines.","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"matheril"},"content":"    private void printGreeting() {","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"matheril"},"content":"        System.out.println(\"Hello! I\u0027m Michel.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"matheril"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"matheril":169}}]
