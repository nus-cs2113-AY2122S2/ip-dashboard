[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"Marites is a bot designed to assist tracking the completion of your tasks. ","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"### Task List","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"Maintains an list of tasks for easy viewing.","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"### Task Completion","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"Marites can mark tasks as complete or incomplete, allowing you to get a bird\u0027s eye view of what you need to accomplish.","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"### Different Task Types","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"Marites can differentiate between tasks you can do anytime (todos), and events with a specific date attached (deadlines and events). ","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"### Task Search","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"Finds all tasks with a given keyword in their description. This is useful if you tag these descriptions in some way.","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"### Persistent Storage","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"Marites can reload your task list from a file it has saved before, allowing for easy access even after shutting down the bot.","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"### `todo (description)` - Adds todo to task list","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"Adds a todo to your task list.","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"danbaterisna"},"content":"`\u003e todo Finish increment`","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"danbaterisna"},"content":"Expected outcome:","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"danbaterisna"},"content":"Alright, task added:","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"danbaterisna"},"content":"  [T][ ] Finish increment","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"danbaterisna"},"content":"Your list currently has 1 tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"danbaterisna"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"danbaterisna"},"content":"The output displays the added task, as well as its type (here, a `todo`), and how many tasks are now in the list. ","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"danbaterisna"},"content":"### `event (description) --by (time)` - Adds event to task list","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"danbaterisna"},"content":"Adds an event to your task list. An _event_ is a task which is attended to at a given time.","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"danbaterisna"},"content":"This command requires a `--by` parameter, after which the date and time of the event ","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"danbaterisna"},"content":"should be given in `YYYY-MM-DD HH:SS` format. Note that the time must be 24-hour time.","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"danbaterisna"},"content":"Example of usage:","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"danbaterisna"},"content":"`\u003e event Attend group meeting --by 2022-04-15 15:00`","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"danbaterisna"},"content":"Expected outcome:","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"danbaterisna"},"content":"Alright, task added:","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"danbaterisna"},"content":"  [E][ ] Attend group meeting (at: 15:00 at 2022-04-15)","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"danbaterisna"},"content":"Your list currently has 1 tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"danbaterisna"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"danbaterisna"},"content":"The output displays the added task, as well as its type (here, an `event`), and how many tasks are now in the list. ","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"danbaterisna"},"content":"### `deadline (description) --by (time)` - Adds deadline to task list","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"danbaterisna"},"content":"Adds a deadline to your task list. A _deadline_ is a task which must be attended to before a given time.","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"danbaterisna"},"content":"This command requires a `--by` parameter, after which the date and time of the event ","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"danbaterisna"},"content":"should be given in `YYYY-MM-DD HH:SS` format. Note that the time must be 24-hour time.","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"danbaterisna"},"content":"Example of usage:","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"danbaterisna"},"content":"`\u003e deadline CS3230 assignment --by 2022-03-14 11:59`","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"danbaterisna"},"content":"Expected outcome:","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"danbaterisna"},"content":"Alright, task added:","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"danbaterisna"},"content":"  [D][ ] CS3230 assignment (by: 11:59 at 2022-03-14)","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"danbaterisna"},"content":"Your list currently has 1 tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":83,"author":{"gitId":"danbaterisna"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"danbaterisna"},"content":"The output displays the added task, as well as its type (here, a `deadline`), and how many tasks are now in the list. ","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":87,"author":{"gitId":"danbaterisna"},"content":"### `list` - Lists all tasks ","lastModifiedDate":"2022-03-05"},{"lineNumber":88,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":89,"author":{"gitId":"danbaterisna"},"content":"Prints out a list of all tasks Marites is tracking. It will also tell you whether or not a task has been completed.","lastModifiedDate":"2022-03-05"},{"lineNumber":90,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":91,"author":{"gitId":"danbaterisna"},"content":"Example of usage (assuming these 3 tasks are in the task list):","lastModifiedDate":"2022-03-05"},{"lineNumber":92,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":93,"author":{"gitId":"danbaterisna"},"content":"`\u003e list`","lastModifiedDate":"2022-03-05"},{"lineNumber":94,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":95,"author":{"gitId":"danbaterisna"},"content":"Expected outcome:","lastModifiedDate":"2022-03-05"},{"lineNumber":96,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":97,"author":{"gitId":"danbaterisna"},"content":"1. [T][ ] Finish increment","lastModifiedDate":"2022-03-05"},{"lineNumber":98,"author":{"gitId":"danbaterisna"},"content":"2. [E][ ] Attend group meeting (at: 15:00 at 2022-04-15)","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"danbaterisna"},"content":"3. [D][ ] CS3230 assignment (by: 11:59 at 2022-03-14)","lastModifiedDate":"2022-03-05"},{"lineNumber":100,"author":{"gitId":"danbaterisna"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"danbaterisna"},"content":"The output displays all tasks. The empty box is allocated for marking and unmarking tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"danbaterisna"},"content":"### `mark (index)` - Mark a task as complete","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"danbaterisna"},"content":"Marks the task with the given number as complete.","lastModifiedDate":"2022-03-05"},{"lineNumber":107,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":108,"author":{"gitId":"danbaterisna"},"content":"Example of usage:","lastModifiedDate":"2022-03-05"},{"lineNumber":109,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":110,"author":{"gitId":"danbaterisna"},"content":"`\u003e mark 2`","lastModifiedDate":"2022-03-05"},{"lineNumber":111,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":112,"author":{"gitId":"danbaterisna"},"content":"Expected outcome:","lastModifiedDate":"2022-03-05"},{"lineNumber":113,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":114,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"danbaterisna"},"content":"Good job on getting this done!  ","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"danbaterisna"},"content":"  [E][X] Attend group meeting (at: 15:00 at 2022-04-15)","lastModifiedDate":"2022-03-05"},{"lineNumber":117,"author":{"gitId":"danbaterisna"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":119,"author":{"gitId":"danbaterisna"},"content":"The output shows the task, now marked as complete.","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"danbaterisna"},"content":"### `unmark (index)` - Mark a task as incomplete","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"danbaterisna"},"content":"Marks the task with the given number as incomplete.","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"danbaterisna"},"content":"Example of usage:","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"danbaterisna"},"content":"`\u003e unmark 1`","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"danbaterisna"},"content":"Expected outcome:","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"danbaterisna"},"content":"Okay, I\u0027ve marked this as not yet done:","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"danbaterisna"},"content":"  [T][ ] Finish increment","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"danbaterisna"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":136,"author":{"gitId":"danbaterisna"},"content":"The output shows the task, now marked as incomplete.","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"danbaterisna"},"content":"### `delete (index)` - Delete a task","lastModifiedDate":"2022-03-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"danbaterisna"},"content":"Remove the task with the given index from your list.","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"danbaterisna"},"content":"`\u003e delete 2`","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"danbaterisna"},"content":"Alright, task deleted:","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"danbaterisna"},"content":"  [E][X] Attend group meeting (at: 15:00 at 2022-04-15)","lastModifiedDate":"2022-03-05"},{"lineNumber":151,"author":{"gitId":"danbaterisna"},"content":"Your list currently has 2 tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"danbaterisna"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":153,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":154,"author":{"gitId":"danbaterisna"},"content":"The output shows the task deleted from the list, as well as how many tasks are now in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":156,"author":{"gitId":"danbaterisna"},"content":"### `find (query)` - Search for tasks","lastModifiedDate":"2022-03-05"},{"lineNumber":157,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":158,"author":{"gitId":"danbaterisna"},"content":"Prints out a list of all tasks whose descriptions match the given string.","lastModifiedDate":"2022-03-05"},{"lineNumber":159,"author":{"gitId":"danbaterisna"},"content":"The indices in the result are their indices in the original list, so it may be out of order.","lastModifiedDate":"2022-03-05"},{"lineNumber":160,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":161,"author":{"gitId":"danbaterisna"},"content":"Example of usage:","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"danbaterisna"},"content":"`\u003e find CS3230`","lastModifiedDate":"2022-03-05"},{"lineNumber":164,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":165,"author":{"gitId":"danbaterisna"},"content":"Expected outcome:","lastModifiedDate":"2022-03-05"},{"lineNumber":166,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":167,"author":{"gitId":"danbaterisna"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":168,"author":{"gitId":"danbaterisna"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"danbaterisna"},"content":"2. [D][ ] CS3230 assignment (by: 11:59 at 2022-03-14)","lastModifiedDate":"2022-03-05"},{"lineNumber":170,"author":{"gitId":"danbaterisna"},"content":"4. [E][ ] CS3230 midterm (at: 14:00 at 2022-03-03)","lastModifiedDate":"2022-03-05"},{"lineNumber":171,"author":{"gitId":"danbaterisna"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":173,"author":{"gitId":"danbaterisna"},"content":"Here, task 2 and task 4 contain \"CS3230\" in their descriptions, so they are included in the output.","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"danbaterisna"},"content":"### `bye` - Exit the bot","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"danbaterisna"},"content":"Shuts down the bot.","lastModifiedDate":"2022-03-05"},{"lineNumber":178,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"danbaterisna"},"content":"Example of usage:","lastModifiedDate":"2022-03-05"},{"lineNumber":180,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":181,"author":{"gitId":"danbaterisna"},"content":"`\u003e bye`","lastModifiedDate":"2022-03-05"},{"lineNumber":182,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"danbaterisna"},"content":"Expected outcome:","lastModifiedDate":"2022-03-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":186,"author":{"gitId":"danbaterisna"},"content":"See you next time!","lastModifiedDate":"2022-03-05"},{"lineNumber":187,"author":{"gitId":"danbaterisna"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"``` ","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":27,"danbaterisna":161}},{"path":"src/main/java/marites/Marites.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.command.Command;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.EmptyTaskDescriptionException;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.MaritesException;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.MissingParameterException;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.UnknownTaskTypeException;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Task;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":" * The main class.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"public class Marites {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"    private static final String SAVE_FILENAME \u003d \"tasklist.ser\";","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"    private final Storage storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    private final Ui ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"        new Marites(SAVE_FILENAME).run();","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"    public Marites(String filePath) {","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"        ui \u003d new Ui(System.in, System.out);","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"danbaterisna"},"content":"     * Runs the main loop of the chatbot.","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"danbaterisna"},"content":"    public void run() {","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"danbaterisna"},"content":"        TaskList tasks \u003d storage.load();","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"danbaterisna"},"content":"        ui.showIntroduction();","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"danbaterisna"},"content":"        while (true) {","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"danbaterisna"},"content":"            String inputCommand \u003d ui.readCommand();","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"danbaterisna"},"content":"            try {","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"danbaterisna"},"content":"                Command command \u003d Parser.parse(inputCommand);","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"danbaterisna"},"content":"                command.execute(storage, ui, tasks);","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"danbaterisna"},"content":"                if (command.isExit()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"danbaterisna"},"content":"                    break;","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"danbaterisna"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"danbaterisna"},"content":"            } catch (MaritesException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"danbaterisna"},"content":"                ui.showError(e);","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"danbaterisna"},"content":"            } finally {","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"danbaterisna"},"content":"                ui.showSeparator();","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"danbaterisna"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"danbaterisna":52}},{"path":"src/main/java/marites/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.command.AddTaskCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import marites.command.Command;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import marites.command.DeleteCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"import marites.command.ExitCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"import marites.command.FindCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"import marites.command.ListCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"import marites.command.SetTaskStatusCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.*;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Deadline;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Event;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Todo;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"import java.time.ZoneId;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":" * Class for parsing commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"public class Parser {","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_ADD_TODO \u003d \"todo\";","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_ADD_EVENT \u003d \"event\";","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_ADD_DEADLINE_TAG \u003d \"--by\";","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_ADD_EVENT_TAG \u003d \"--at\";","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"danbaterisna"},"content":"    private static final SimpleDateFormat DATE_TIME_PARSER \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"danbaterisna"},"content":"     * Parses an input command.","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"danbaterisna"},"content":"     * @param inputCommand The user\u0027s input.","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"danbaterisna"},"content":"     * @return A Command object representing the command.","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"danbaterisna"},"content":"     * @throws marites.exception.MaritesException if an error occurs while parsing.","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"danbaterisna"},"content":"    public static Command parse(String inputCommand) throws MaritesException {","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"danbaterisna"},"content":"        String[] commandSplit \u003d splitCommandTypeAndCommand(inputCommand);","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"danbaterisna"},"content":"        String commandType \u003d commandSplit[0], command \u003d commandSplit[1];","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"danbaterisna"},"content":"        switch (commandType) {","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"danbaterisna"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"danbaterisna"},"content":"            return new ListCommand();","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"danbaterisna"},"content":"            return new SetTaskStatusCommand(parseTaskIndex(command), true);","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"danbaterisna"},"content":"            return new SetTaskStatusCommand(parseTaskIndex(command), false);","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_TODO:","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_DEADLINE:","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_EVENT:","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"danbaterisna"},"content":"            // These 3 cases all fallthrough","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"danbaterisna"},"content":"            return parseAddTask(commandType, command);","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"danbaterisna"},"content":"            return new DeleteCommand(parseTaskIndex(command));","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"danbaterisna"},"content":"            return new FindCommand(command);","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"danbaterisna"},"content":"        default:","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"danbaterisna"},"content":"            throw new UnknownTaskTypeException(commandType);","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"danbaterisna"},"content":"     * Parses an index into the TaskList.","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"danbaterisna"},"content":"     * @param index Task index","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"danbaterisna"},"content":"     * @return An int index into the TaskList.","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"danbaterisna"},"content":"     * @throws marites.exception.MaritesException if the index is not an integer.","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"danbaterisna"},"content":"    public static int parseTaskIndex(String index) throws MaritesException {","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"danbaterisna"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"danbaterisna"},"content":"            return Integer.parseInt(index) - 1;","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"danbaterisna"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"danbaterisna"},"content":"            throw new InvalidTaskIndexException(index);","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"danbaterisna"},"content":"     * Divides a line of user input into the command type, and the command.","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"danbaterisna"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"danbaterisna"},"content":"     * @return A String[] with length 2. The first element is the command type,","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"danbaterisna"},"content":"     *  while the second element is the command. If the command has no body","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"danbaterisna"},"content":"     *  (e.g. list, unmark), this second element is an empty string.","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"danbaterisna"},"content":"    private static String[] splitCommandTypeAndCommand(String userInput) {","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"danbaterisna"},"content":"        String[] inputSplit \u003d userInput.split(\"\\\\s\", 2);","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"danbaterisna"},"content":"        return new String[]{inputSplit[0].strip(),","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"danbaterisna"},"content":"                (inputSplit.length \u003e 1 ? inputSplit[1] : \"\").strip()};","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"danbaterisna"},"content":"     * Parses an add task command given by the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"danbaterisna"},"content":"     * @param taskType The task\u0027s type.","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"danbaterisna"},"content":"     * @param command The user\u0027s command.","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"danbaterisna"},"content":"     * @return A marites.Command object representing the command.","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"danbaterisna"},"content":"     * @throws marites.exception.MaritesException if an error occurs.","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"danbaterisna"},"content":"    private static Command parseAddTask(String taskType, String command)","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"danbaterisna"},"content":"            throws MaritesException {","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"danbaterisna"},"content":"        String[] parametersSplit;","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"danbaterisna"},"content":"        if (command.length() \u003d\u003d 0) {","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"danbaterisna"},"content":"            throw new EmptyTaskDescriptionException();","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"danbaterisna"},"content":"        Task newTask;","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"danbaterisna"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"danbaterisna"},"content":"        switch (taskType) {","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_TODO:","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"danbaterisna"},"content":"            newTask \u003d new Todo(command);","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"danbaterisna"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_DEADLINE:","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"danbaterisna"},"content":"            parametersSplit \u003d getAddParameters(command, COMMAND_ADD_DEADLINE_TAG);","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"danbaterisna"},"content":"            dateTime \u003d parseDateTime(parametersSplit[1].strip());","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"danbaterisna"},"content":"            newTask \u003d new Deadline(parametersSplit[0].strip(), dateTime);","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"danbaterisna"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_EVENT:","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"danbaterisna"},"content":"            parametersSplit \u003d getAddParameters(command, COMMAND_ADD_EVENT_TAG);","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"danbaterisna"},"content":"            dateTime \u003d parseDateTime(parametersSplit[1].strip());","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"danbaterisna"},"content":"            newTask \u003d new Event(parametersSplit[0].strip(), dateTime);","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"danbaterisna"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"danbaterisna"},"content":"        default:","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"danbaterisna"},"content":"            throw new UnknownTaskTypeException(taskType);","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"danbaterisna"},"content":"        return new AddTaskCommand(newTask);","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"danbaterisna"},"content":"     * Extracts the description of a task to add, and the date parameter.","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"danbaterisna"},"content":"     * @param command The user\u0027s input.","lastModifiedDate":"2022-03-04"},{"lineNumber":137,"author":{"gitId":"danbaterisna"},"content":"     * @param separator The separator between the description and the date.","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"danbaterisna"},"content":"     * @return A String[] with 2 elements: the description, and the date.","lastModifiedDate":"2022-03-04"},{"lineNumber":139,"author":{"gitId":"danbaterisna"},"content":"     * @throws marites.exception.MissingParameterException if the separator is missing.","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"danbaterisna"},"content":"    private static String[] getAddParameters(String command, String separator) throws MissingParameterException {","lastModifiedDate":"2022-03-04"},{"lineNumber":142,"author":{"gitId":"danbaterisna"},"content":"        String[] parametersSplit;","lastModifiedDate":"2022-03-04"},{"lineNumber":143,"author":{"gitId":"danbaterisna"},"content":"        parametersSplit \u003d command.split(COMMAND_ADD_DEADLINE_TAG);","lastModifiedDate":"2022-03-04"},{"lineNumber":144,"author":{"gitId":"danbaterisna"},"content":"        if (parametersSplit.length \u003d\u003d 1) {","lastModifiedDate":"2022-03-04"},{"lineNumber":145,"author":{"gitId":"danbaterisna"},"content":"            throw new MissingParameterException(COMMAND_ADD_DEADLINE_TAG);","lastModifiedDate":"2022-03-04"},{"lineNumber":146,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":147,"author":{"gitId":"danbaterisna"},"content":"        return parametersSplit;","lastModifiedDate":"2022-03-04"},{"lineNumber":148,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":149,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":150,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":151,"author":{"gitId":"danbaterisna"},"content":"     * Parses a date string using the set format.","lastModifiedDate":"2022-03-04"},{"lineNumber":152,"author":{"gitId":"danbaterisna"},"content":"     * @param dateTime A string representing a user-inputted date and time.","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"danbaterisna"},"content":"     * @return A LocalDateTime representing the date and time.","lastModifiedDate":"2022-03-04"},{"lineNumber":154,"author":{"gitId":"danbaterisna"},"content":"     * @throws InvalidDateTimeException if the input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":155,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":156,"author":{"gitId":"danbaterisna"},"content":"    private static LocalDateTime parseDateTime(String dateTime) throws InvalidDateTimeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":157,"author":{"gitId":"danbaterisna"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":158,"author":{"gitId":"danbaterisna"},"content":"            return DATE_TIME_PARSER.parse(dateTime)","lastModifiedDate":"2022-03-04"},{"lineNumber":159,"author":{"gitId":"danbaterisna"},"content":"                    .toInstant()","lastModifiedDate":"2022-03-04"},{"lineNumber":160,"author":{"gitId":"danbaterisna"},"content":"                    .atZone(ZoneId.systemDefault())","lastModifiedDate":"2022-03-04"},{"lineNumber":161,"author":{"gitId":"danbaterisna"},"content":"                    .toLocalDateTime();","lastModifiedDate":"2022-03-04"},{"lineNumber":162,"author":{"gitId":"danbaterisna"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":163,"author":{"gitId":"danbaterisna"},"content":"            throw new InvalidDateTimeException(dateTime);","lastModifiedDate":"2022-03-04"},{"lineNumber":164,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":165,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":166,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":166}},{"path":"src/main/java/marites/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"import java.io.File;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":" * Class for managing the saved tasklist.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"public class Storage {","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"    private final String filePath;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"     * Loads the TaskList saved in filePath.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"     * @return The saved TaskList, or a new, empty TaskList, if the","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"     * stored one does not exist, or an error occurs while loading it.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"    public TaskList load() {","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"        File saveFile \u003d new File(filePath);","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"danbaterisna"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"danbaterisna"},"content":"            return new TaskList();","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"danbaterisna"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"danbaterisna"},"content":"            FileInputStream fileIn \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"danbaterisna"},"content":"            ObjectInputStream objIn \u003d new ObjectInputStream(fileIn);","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"danbaterisna"},"content":"            return (TaskList)objIn.readObject();","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"danbaterisna"},"content":"        } catch (IOException | ClassNotFoundException | ClassCastException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"danbaterisna"},"content":"            return new TaskList();","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"danbaterisna"},"content":"     * Saves the given TaskList. If an error occurs while saving,","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"danbaterisna"},"content":"     * print a warning message.","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"danbaterisna"},"content":"     * @param list The TaskList to save.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"danbaterisna"},"content":"    public void save(TaskList list) {","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"danbaterisna"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"danbaterisna"},"content":"            File saveFile \u003d new File(filePath);","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"danbaterisna"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"danbaterisna"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"danbaterisna"},"content":"            ObjectOutputStream objOut \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"danbaterisna"},"content":"            objOut.writeObject(list);","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"danbaterisna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"danbaterisna"},"content":"            System.out.println(\"WARNING: Task list not saved to disk successfully\");","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":60}},{"path":"src/main/java/marites/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.TaskListOutOfBoundsException;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":" * Class for managing the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"public class TaskList implements java.io.Serializable {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"     * Returns an ArrayList\u003cTask\u003e representing the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"     * @return The task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"        return taskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"    public TaskList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"     * Return the number of tasks in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"     * @return Task count","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"    public int getTaskCount() {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"danbaterisna"},"content":"        return taskList.size();","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"danbaterisna"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"danbaterisna"},"content":"     * @param task The task to add.","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"danbaterisna"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"danbaterisna"},"content":"        taskList.add(task);","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"danbaterisna"},"content":"     * Obtains the task at a specific index.","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"danbaterisna"},"content":"     * @param taskIndex Task index to locate","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"danbaterisna"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"danbaterisna"},"content":"     * @throws TaskListOutOfBoundsException if the index is out of bounds.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"danbaterisna"},"content":"    public Task getTaskByIndex(int taskIndex) throws TaskListOutOfBoundsException {","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"danbaterisna"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"danbaterisna"},"content":"            return taskList.get(taskIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"danbaterisna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"danbaterisna"},"content":"            throw new TaskListOutOfBoundsException();","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"danbaterisna"},"content":"     * Sets the status of a task using its index.","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"danbaterisna"},"content":"     * @param taskIndex Index of task to modify","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"danbaterisna"},"content":"     * @param isDone New task status","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"danbaterisna"},"content":"     * @throws TaskListOutOfBoundsException if the index is out of bounds.","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"danbaterisna"},"content":"    public void setTaskStatus(int taskIndex, boolean isDone) throws TaskListOutOfBoundsException {","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"danbaterisna"},"content":"        Task task \u003d getTaskByIndex(taskIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"danbaterisna"},"content":"        task.setDone(isDone);","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"danbaterisna"},"content":"     * Delete a task using its index.","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"danbaterisna"},"content":"     * @param taskIndex Index of task to delete","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"danbaterisna"},"content":"     * @throws TaskListOutOfBoundsException if the index is out of bounds.","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"danbaterisna"},"content":"    public void deleteTask(int taskIndex) throws TaskListOutOfBoundsException {","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"danbaterisna"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"danbaterisna"},"content":"            taskList.remove(taskIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"danbaterisna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"danbaterisna"},"content":"            throw new TaskListOutOfBoundsException();","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"danbaterisna"},"content":"     * Finds tasks whose descriptions contain the given query string.","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"danbaterisna"},"content":"     * @param query The string to look for.","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"danbaterisna"},"content":"     * @return An ArrayList\u003cTask\u003e representing a list of matching tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"danbaterisna"},"content":"    public ArrayList\u003cTask\u003e findTasks(String query) {","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"danbaterisna"},"content":"        return taskList.stream()","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"danbaterisna"},"content":"                .filter(task -\u003e task.isMatch(query))","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"danbaterisna"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"danbaterisna"},"content":"     * Finds the index of a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"danbaterisna"},"content":"     * @param task Task to locate","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"danbaterisna"},"content":"     * @return The index of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"danbaterisna"},"content":"    public int getTaskIndex(Task task) {","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"danbaterisna"},"content":"        return taskList.indexOf(task);","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":100}},{"path":"src/main/java/marites/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.MaritesException;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.TaskListOutOfBoundsException;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":" * Class for managing UI interactions.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"public class Ui {","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    /* STRING CONSTANTS */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    // Logo found in https://emojicombos.com/kaomoji","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"    private static final String INTRO_MESSAGE \u003d \"(งツ)ว\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"            \"Hi, I\u0027m Marites! I\u0027ve heard so many things about you!\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"            \"I have a lot of stories to share, but first, how can I help you?\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"    private static final String EXIT_MESSAGE \u003d \"See you next time!\";","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"    private static final String LIST_TASK_ITEM_FORMAT_STRING \u003d \"%d. %s\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"    private static final String ADD_TASK_FORMAT_STRING \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"            \"Alright, task added:%n  %s%nYour list currently has %d tasks.\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"    private static final String MARK_DONE_MESSAGE \u003d \"Good job on getting this done!  \";","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"    private static final String MARK_UNDONE_MESSAGE \u003d \"Okay, I\u0027ve marked this as not yet done:\";","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"    private static final String DELETE_FORMAT_STRING \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"            \"Alright, task deleted:%n  %s%nYour list currently has %d tasks.\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"    private static final String SET_TASK_STATUS_FORMAT_STRING \u003d \"%s%n  %s\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"    private static final String FIND_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"danbaterisna"},"content":"    private static final String FIND_NO_TASKS_MESSAGE \u003d \"No matching tasks were in your list.\";","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"danbaterisna"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"danbaterisna"},"content":"    public static final String READ_TASK_LIST_ERROR_MESSAGE \u003d \"WARNING: Error when reading saved task list; initializing with empty list\";","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"danbaterisna"},"content":"    public static final String SAVE_TASK_LIST_ERROR_MESSAGE \u003d \"WARNING: Error occurred while saving task list\";","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"danbaterisna"},"content":"    private final Scanner in;","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"danbaterisna"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"danbaterisna"},"content":"    public Ui(InputStream inputStream, PrintStream printStream) {","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"danbaterisna"},"content":"        this.in \u003d new Scanner(inputStream);","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"danbaterisna"},"content":"        this.out \u003d printStream;","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"danbaterisna"},"content":"     * Reads a command from the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"danbaterisna"},"content":"     * @return A String representing the command.","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"danbaterisna"},"content":"    public String readCommand() {","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"danbaterisna"},"content":"        return in.nextLine();","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"danbaterisna"},"content":"     * Prints a separator string.","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"danbaterisna"},"content":"    public void showSeparator() {","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"danbaterisna"},"content":"        out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"danbaterisna"},"content":"     * Prints an introduction message.","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"danbaterisna"},"content":"    public void showIntroduction() {","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"danbaterisna"},"content":"        out.println(INTRO_MESSAGE);","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"danbaterisna"},"content":"        showSeparator();","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"danbaterisna"},"content":"     * Prints an exit message.","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"danbaterisna"},"content":"    public void showExitMessage() {","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"danbaterisna"},"content":"        System.out.println(EXIT_MESSAGE);","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"danbaterisna"},"content":"        showSeparator();","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"danbaterisna"},"content":"     * Prints an error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"danbaterisna"},"content":"     * @param error A MaritesException representing the error.","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"danbaterisna"},"content":"    public void showError(MaritesException error) {","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"danbaterisna"},"content":"        System.out.println(error.getErrorMessage());","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"danbaterisna"},"content":"     * Prints a message for adding a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"danbaterisna"},"content":"     * @param task Added task","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"danbaterisna"},"content":"     * @param listLength New length of the task list","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"danbaterisna"},"content":"    public void showAddTaskMessage(Task task, int listLength) {","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"danbaterisna"},"content":"        out.printf(ADD_TASK_FORMAT_STRING, task, listLength);","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"danbaterisna"},"content":"     * Prints a message for deleting a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"danbaterisna"},"content":"     * @param task Deleted task","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"danbaterisna"},"content":"     * @param listLength New length of the task list","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"danbaterisna"},"content":"    public void showDeleteTaskMessage(Task task, int listLength) {","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"danbaterisna"},"content":"        out.printf(DELETE_FORMAT_STRING, task, listLength);","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"danbaterisna"},"content":"     * Prints a message for setting the status of a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"danbaterisna"},"content":"     * @param task Task set","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"danbaterisna"},"content":"     * @param isSet New status","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"danbaterisna"},"content":"    public void showSetTaskStatusMessage(Task task, boolean isSet) {","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"danbaterisna"},"content":"        out.printf(SET_TASK_STATUS_FORMAT_STRING,","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"danbaterisna"},"content":"                isSet ? MARK_DONE_MESSAGE : MARK_UNDONE_MESSAGE, task);","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"danbaterisna"},"content":"     * Prints a task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"danbaterisna"},"content":"     * @param taskList the TaskList to output.","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"danbaterisna"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"danbaterisna"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getTaskCount(); ++i) {","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"danbaterisna"},"content":"            try {","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"danbaterisna"},"content":"                out.printf(LIST_TASK_ITEM_FORMAT_STRING, i, taskList.getTaskByIndex(i-1));","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"danbaterisna"},"content":"            } catch (TaskListOutOfBoundsException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"danbaterisna"},"content":"                // This will not trigger","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"danbaterisna"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"danbaterisna"},"content":"     * Prints the result of a find command.","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"danbaterisna"},"content":"     * @param taskList The task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"danbaterisna"},"content":"     * @param matchingTasks A list of matching tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"danbaterisna"},"content":"    public void showFindResultMessage(TaskList taskList, ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"danbaterisna"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"danbaterisna"},"content":"            out.println(FIND_NO_TASKS_MESSAGE);","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"danbaterisna"},"content":"        } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"danbaterisna"},"content":"            out.println(FIND_MESSAGE);","lastModifiedDate":"2022-03-04"},{"lineNumber":137,"author":{"gitId":"danbaterisna"},"content":"            for (Task task : matchingTasks) {","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"danbaterisna"},"content":"                out.printf(LIST_TASK_ITEM_FORMAT_STRING, taskList.getTaskIndex(task) + 1, task);","lastModifiedDate":"2022-03-04"},{"lineNumber":139,"author":{"gitId":"danbaterisna"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":142,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":142}},{"path":"src/main/java/marites/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import marites.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import marites.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":" * A class that represents add commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    private final Task taskToAdd;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"    public AddTaskCommand(Task newTask) {","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"        this.taskToAdd \u003d newTask;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"        taskList.addTask(taskToAdd);","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"        ui.showAddTaskMessage(taskToAdd, taskList.getTaskCount());","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":23}},{"path":"src/main/java/marites/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import marites.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import marites.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.MaritesException;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":" * Abstract base class for commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"abstract public class Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"     * Returns whether this Command is an ExitCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"     * @return Exit or not","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"        return false;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"     * Executes the given command.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"     * @param storage A Storage instance for handling storage","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"     * @param ui A Ui instance for providing output","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"     * @param taskList A TaskList instance for managing tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"     * @throws MaritesException if an error occurs during execution.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"    abstract public void execute(Storage storage, Ui ui, TaskList taskList) throws MaritesException;","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":28}},{"path":"src/main/java/marites/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import marites.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import marites.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.MaritesException;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":" * A class that represents delete commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"    private final int indexToDelete;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"    public DeleteCommand(int i) {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"        indexToDelete \u003d i;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"     * Executes the DeleteCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"     * @param storage A Storage instance for handling storage","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"     * @param ui A Ui instance for providing output","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"     * @param taskList A TaskList instance for managing tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"     * @throws MaritesException if an error occurs during execution.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) throws MaritesException {","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"            Task deletedTask \u003d taskList.getTaskByIndex(indexToDelete);","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"            taskList.deleteTask(indexToDelete);","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"            ui.showDeleteTaskMessage(deletedTask, taskList.getTaskCount());","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"danbaterisna"},"content":"        } finally {","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"danbaterisna"},"content":"            storage.save(taskList);","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":36}},{"path":"src/main/java/marites/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import marites.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import marites.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":" * Class for representing exit commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"     * Returns whether this Command is an ExitCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"     * @return Exit or not","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"        return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"     * Executes the ExitCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"     * @param storage A Storage instance for handling storage","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"     * @param ui A Ui instance for providing output","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"     * @param taskList A TaskList instance for managing tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"        ui.showExitMessage();","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":30}},{"path":"src/main/java/marites/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import marites.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import marites.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.MaritesException;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":" * Class for representing find commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    private final String query;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"        this.query \u003d query;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"     * Executes the FindCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"     * @param storage A Storage instance for handling storage","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"     * @param ui A Ui instance for providing output","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"     * @param taskList A TaskList instance for managing tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findTasks(query);","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"        ui.showFindResultMessage(taskList, matchingTasks);","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":33}},{"path":"src/main/java/marites/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import marites.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import marites.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":" * A class for representing list commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"     * Executes the ListCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"     * @param storage A Storage instance for handling storage","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"     * @param ui A Ui instance for providing output","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"     * @param taskList A TaskList instance for managing tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"        ui.showTaskList(taskList);","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":21}},{"path":"src/main/java/marites/command/SetTaskStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import marites.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import marites.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"import marites.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"import marites.exception.MaritesException;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"import marites.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":" * A class for representing task set status commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"public class SetTaskStatusCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"    private final int taskIndexToSet;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"    private final boolean newTaskStatus;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    public SetTaskStatusCommand(int i, boolean b) {","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"        taskIndexToSet \u003d i;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"        newTaskStatus \u003d b;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"     * Executes the SetTaskStatusCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"     * @param storage A Storage instance for handling storage","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"     * @param ui A Ui instance for providing output","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"     * @param taskList A TaskList instance for managing tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"     * @throws MaritesException if an error occurs.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) throws MaritesException {","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"danbaterisna"},"content":"            taskList.setTaskStatus(taskIndexToSet, newTaskStatus);","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"danbaterisna"},"content":"            Task setTask \u003d taskList.getTaskByIndex(taskIndexToSet);","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"danbaterisna"},"content":"            ui.showSetTaskStatusMessage(setTask, newTaskStatus);","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"danbaterisna"},"content":"        } finally {","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"danbaterisna"},"content":"            storage.save(taskList);","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":39}},{"path":"src/main/java/marites/exception/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.exception;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":" * Exception raised when a task is created without a description.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"public class EmptyTaskDescriptionException extends MaritesException {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"    private static final String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"            \"Please add a description to your task.\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"     * Returns an error message for user consumption.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"     * @return Error message","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":17}},{"path":"src/main/java/marites/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.exception;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":" * Exception raised when a date or time given by the user is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"public class InvalidDateTimeException extends MaritesException {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"    String dateTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"    private static final String ERROR_MESSAGE \u003d \"This isn\u0027t a valid date and time: %s\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"        \"(Note that the format is yyyy-MM-dd HH:mm)\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"    public InvalidDateTimeException(String dateTime) {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"     * Returns an error message for user consumption.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"     * @return Error message","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"        return String.format(ERROR_MESSAGE, dateTime);","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":21}},{"path":"src/main/java/marites/exception/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.exception;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":" * Exception raised when a task index is invalid (i.e. is not an integer.)","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"public class InvalidTaskIndexException extends MaritesException {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"    private final String taskIndex;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"    private static final String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"            \"Invalid task index: %s\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    public InvalidTaskIndexException(String taskIndex) {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"     * Returns an error message for user consumption.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"     * @return Error message","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"        return String.format(ERROR_MESSAGE, taskIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":24}},{"path":"src/main/java/marites/exception/MaritesException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.exception;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":" * Base class for any exceptions marites.Marites may throw.","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"abstract public class MaritesException extends Exception {","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"     * Returns an error message for user consumption.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"     * @return Error message","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"    abstract public String getErrorMessage();","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"danbaterisna":12}},{"path":"src/main/java/marites/exception/MissingParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.exception;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":" * Exception raised when an input command is missing a parameter.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"public class MissingParameterException extends MaritesException {","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"    private final String missingParameterTag;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"    private static final String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"            \"You\u0027re missing a parameter: %s\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"    public MissingParameterException(String missingParameterTag) {","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"        this.missingParameterTag \u003d missingParameterTag;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"     * Returns an error message for user consumption.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"     * @return Error message","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"        return String.format(ERROR_MESSAGE, missingParameterTag);","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"danbaterisna":24}},{"path":"src/main/java/marites/exception/TaskListOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.exception;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":" * Exception raised when an index into the TaskList is out of bounds.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"public class TaskListOutOfBoundsException extends MaritesException {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"    private int index;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"    public TaskListOutOfBoundsException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"     * Returns an error message for user consumption.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"     * @return Error message","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"        return \"That index is out of bounds.\";","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":20}},{"path":"src/main/java/marites/exception/UnknownTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.exception;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":" * Exception raised when an unknown task type is encountered.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"public class UnknownTaskTypeException extends MaritesException {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"    private final String taskType;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"    public UnknownTaskTypeException(String taskType) {","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"    private static final String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"            \"I don\u0027t know this command: \u0027%s\u0027\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"     * Returns an error message for user consumption.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"     * @return Error message","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"        return String.format(ERROR_MESSAGE, taskType);","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"danbaterisna":25}},{"path":"src/main/java/marites/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":" * A sub-class of Task for deadlines, which is for tasks that must be attended to before a given time.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"    private static final String DEADLINE_FORMAT_STRING \u003d \"[D]%s (by: %s)\";","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm \u0027at\u0027 yyyy-MM-dd\");","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"        return String.format(DEADLINE_FORMAT_STRING, super.toString(),","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"                DATE_TIME_FORMATTER.format(dueDate));","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"danbaterisna":25}},{"path":"src/main/java/marites/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":" * A sub-class of Task for events, which must be attended to at a specific time.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"    private static final String EVENT_FORMAT_STRING \u003d \"[E]%s (at: %s)\";","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm \u0027at\u0027 yyyy-MM-dd\");","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"    private LocalDateTime eventTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"    public Event(String description, LocalDateTime eventTime) {","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"        return String.format(EVENT_FORMAT_STRING, super.toString(),","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"                DATE_TIME_FORMATTER.format(eventTime));","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"danbaterisna":25}},{"path":"src/main/java/marites/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"/** A base class for tasks. */","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"public abstract class Task implements java.io.Serializable {","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"    private final String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"     * @return Task description","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"        return description;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"     * Returns the status of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"     * @return Whether or not the task is done.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"        return isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"     * Sets the status of the task","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"     * @param done The new status.","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"danbaterisna"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"danbaterisna"},"content":"        isDone \u003d done;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"danbaterisna"},"content":"     * Returns True iff the query matches the given task.","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"danbaterisna"},"content":"     * @param query A string to query","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"danbaterisna"},"content":"     * @return Whether or not this task\u0027s description matches.","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"danbaterisna"},"content":"    public boolean isMatch(String query) {","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"danbaterisna"},"content":"        return description.contains(query);","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"danbaterisna"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"danbaterisna"},"content":"        String doneIndicator \u003d (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"danbaterisna"},"content":"        return String.format(\"%s %s\", doneIndicator, this.description);","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"danbaterisna":50}},{"path":"src/main/java/marites/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"package marites.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":" * A sub-class of Task for to-do items, which may be done at any time.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"    private static final String TODO_FORMAT_STRING \u003d \"[T]%s\";","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"         super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"        return String.format(TODO_FORMAT_STRING, super.toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"danbaterisna":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"todo Finish increment","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"deadline Run grading scripts --by next weekend","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"event Midterms --at February 14","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"deadline Prepare proposal --by Thursday midnight","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"mark 2","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"unmark 2","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"mark 1","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"delete 1","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"bye","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"danbaterisna":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"else","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"    rm -r ../bin/*","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"java -classpath ../bin/ marites.Marites \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"danbaterisna":4}}]
