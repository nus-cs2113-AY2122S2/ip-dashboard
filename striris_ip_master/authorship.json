[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"# User Guide","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"Duke is a **desktop app for tracking tasks,","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"optimized for use via a Command Line Interface** (CLI).","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"As Duke is designed to be use in a CLI, this","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"application would benefit users who are able to type fast.","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"## Quick Start","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"1. Ensure you have Java 11 or above installed on your Computer","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"2. Download the latest JAR file from GitHub.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke application.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"   Note that the data file would also be created in the same folder.","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"4. Open the CLI at where you have placed the jar file and run it using the command","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"   `java -jar ip.jar`","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"5. Type the commands in the box and press enter to execute it.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"   Here are some commands you can try:","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"   - `list` : List all current tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"   - `todo Read Book` : Adds a todo task of reading book.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"   - `delete 1` : Deletes the first task from list.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"### Feature list:","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"* Listing all tasks: `list`","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"* Adding a new task:","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"striris"},"content":"   * Todo task: `todo`","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"striris"},"content":"   * Deadline task: `deadline`","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"striris"},"content":"   * Event task: `event`","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"striris"},"content":"* Marking a task as done: `mark`","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"striris"},"content":"* Marking a task as not done: `unmark`","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"striris"},"content":"* Deleting a task: `delete`","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"striris"},"content":"* Finding a task: `find`","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"striris"},"content":"* Exiting the program: `bye`","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"striris"},"content":"## Feature ","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"striris"},"content":"### Adding a Task","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"striris"},"content":"There are three kinds of Tasks: Todos, Deadlines, and Events.","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"striris"},"content":"### Adding a Todo","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"striris"},"content":"Adds a Todo to the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"striris"},"content":"Format: `todo DESCRIPTION` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"striris"},"content":"Words in `UPPER_CASE` are the parameters. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"striris"},"content":"Examples:","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"striris"},"content":"* todo buy sunscreen","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"striris"},"content":"* todo buy bubble tea","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"striris"},"content":"### Adding a Deadline","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"striris"},"content":"Adds a Deadline to the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"striris"},"content":"Format: `deadline DESCRIPTION /by DEADLINE` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"striris"},"content":"Words in `UPPER_CASE` are the parameters. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"striris"},"content":"Examples: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"striris"},"content":"* deadline finish econometrics problem set /by Saturday","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"striris"},"content":"* deadine return book /by Sunday 12:30PM","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"striris"},"content":"### Adding an Event","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"striris"},"content":"Adds an Event to the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"striris"},"content":"Format: `event DESCRIPTION /at TIME` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"striris"},"content":"Words in `UPPER_CASE` are the parameters. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"striris"},"content":"Examples: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"striris"},"content":"* event project meeting /at Saturday 8:00PM","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"striris"},"content":"* event attend CS2113 lecture /at Friday 4:00PM","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"striris"},"content":"### Listing all Tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"striris"},"content":"Displays all tasks that the user has added to their list. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"striris"},"content":"Format: `list` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"striris"},"content":"Output could look like the following: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"striris"},"content":" ```","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"striris"},"content":"`T` denotes a task of type Todo, `D` denotes a task of type Deadline, and `E` denotes a task of type Event.","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"striris"},"content":"### Marking a Task as complete","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"striris"},"content":"You have the option of marking (i.e. checking off) a task that has been completed. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"striris"},"content":"Format: `mark TASK_NUMBER` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"striris"},"content":"`TASK_NUMBER` is the numerical label assigned to the task (that you can find from the output of the `list` command). \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"striris"},"content":"Example: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"striris"},"content":"Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"striris"},"content":"`mark 2` would result in the following list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"striris"},"content":" 2: [D][X] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"striris"},"content":"### Unmarking a Task","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"striris"},"content":"Alternatively, you may also unmark a task that has previously been marked. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"striris"},"content":"Format: `unmark TASK_NUMBER` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"striris"},"content":"Example: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"striris"},"content":"Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"striris"},"content":" 3: [E][X] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"striris"},"content":"`unmark 3` would result in the following list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"striris"},"content":"### Deleting a Task","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"striris"},"content":"Users may also delete a task from the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"striris"},"content":"Format `delete TASK_NUMBER` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"striris"},"content":"Example: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"striris"},"content":"Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"striris"},"content":"`delete 2` would result in the following list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"striris"},"content":" 2: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"striris"},"content":"### Finding a Task","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"striris"},"content":"Users can search for Tasks in their task list with a specific keywords. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"striris"},"content":"Format `find KEYWORD` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"striris"},"content":"Example: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"striris"},"content":"Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"striris"},"content":" 3: [E][X] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"striris"},"content":"`find 2113` would result in the following list:  \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":133,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":" ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"striris":130,"-":6}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"T | 1 | go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"D | 1 | finish 2113 iP | Friday","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"E | 0 | 2113 project meeting | Monday 1:00PM","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"striris":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"Duke is a **desktop app for tracking tasks,","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"optimized for use via a Command Line Interface** (CLI).","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"As Duke is designed to be use in a CLI, this","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"application would benefit users who are able to type fast.","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"## Quick Start","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"1. Ensure you have Java 11 or above installed on your Computer","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"2. Download the latest JAR file from GitHub.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke application.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"   Note that the data file would also be created in the same folder.","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"4. Open the CLI at where you have placed the jar file and run it using the command","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"   `java -jar ip.jar`","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"5. Type the commands in the box and press enter to execute it.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"   Here are some commands you can try:","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"    - `list` : List all current tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"    - `todo Read Book` : Adds a todo task of reading book.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"    - `delete 1` : Deletes the first task from list.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"### Feature list:","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"* Listing all tasks: `list`","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"* Adding a new Todo task: `todo`","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"striris"},"content":"* Adding a new Deadline task: `deadline`","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"striris"},"content":"* Adding a new Event task: `event`","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"striris"},"content":"* Marking a task as done: `mark`","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"striris"},"content":"* Marking a task as not done: `unmark`","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"striris"},"content":"* Deleting a task: `delete`","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"striris"},"content":"* Finding a task: `find`","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"striris"},"content":"* Exiting the program: `bye`","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"striris"},"content":"## Feature","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"striris"},"content":"### Adding a Task","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"striris"},"content":"There are three kinds of Tasks: Todos, Deadlines, and Events.","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"striris"},"content":"### Adding a Todo","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"striris"},"content":"Adds a Todo to the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"striris"},"content":"Format: `todo DESCRIPTION` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"striris"},"content":"Words in `UPPER_CASE` are the parameters. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"striris"},"content":"Examples:","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"striris"},"content":"* todo go to class","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"striris"},"content":"* todo buy fruits","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"striris"},"content":"### Adding a Deadline","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"striris"},"content":"Adds a Deadline to the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"striris"},"content":"Format: `deadline DESCRIPTION /by DEADLINE` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"striris"},"content":"Words in `UPPER_CASE` are the parameters. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"striris"},"content":"Examples: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"striris"},"content":"* deadline finish problem set /by Saturday","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"striris"},"content":"* deadine return book /by Sunday","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"striris"},"content":"### Adding an Event","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"striris"},"content":"Adds an Event to the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"striris"},"content":"Format: `event DESCRIPTION /at TIME` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"striris"},"content":"Words in `UPPER_CASE` are the parameters. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"striris"},"content":"Examples: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"striris"},"content":"* event project meeting /at Saturday 8:00PM","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"striris"},"content":"* event attend CS2113 lecture /at Friday 4:00PM","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":57,"author":{"gitId":"striris"},"content":"### Listing all Tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"striris"},"content":"Displays all tasks that the user has added to their list. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"striris"},"content":"Format: `list` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"striris"},"content":"Output could look like the following: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"striris"},"content":" ```","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"striris"},"content":"`T` denotes a task of type Todo, `D` denotes a task of type Deadline, and `E` denotes a task of type Event.","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"striris"},"content":"### Marking a Task as complete","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"striris"},"content":"You have the option of marking (i.e. checking off) a task that has been completed. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"striris"},"content":"Format: `mark TASK_NUMBER` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"striris"},"content":"`TASK_NUMBER` is the numerical label assigned to the task (that you can find from the output of the `list` command). \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"striris"},"content":"Example: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"striris"},"content":"Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"striris"},"content":"`mark 2` would result in the following list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"striris"},"content":" 2: [D][X] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"striris"},"content":"### Unmarking a Task","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"striris"},"content":"Alternatively, you may also unmark a task that has previously been marked. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"striris"},"content":"Format: `unmark TASK_NUMBER` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"striris"},"content":"Example: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"striris"},"content":"Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"striris"},"content":" 3: [E][X] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"striris"},"content":"`unmark 3` would result in the following list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"striris"},"content":"### Deleting a Task","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"striris"},"content":"Users may also delete a task from the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"striris"},"content":"Format `delete TASK_NUMBER` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"striris"},"content":"Example: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"striris"},"content":"Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"striris"},"content":"`delete 2` would result in the following list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"striris"},"content":" 2: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"striris"},"content":"### Finding a Task","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"striris"},"content":"Users can search for Tasks in their task list with a specific keywords. \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"striris"},"content":"Format `find KEYWORD` \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"striris"},"content":"Example: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"striris"},"content":"Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"striris"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"striris"},"content":" 3: [E][X] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"striris"},"content":"`find 2113` would result in the following list:  \u003cbr /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":132,"author":{"gitId":"striris"},"content":" 1: [T][ ] go shopping","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"striris"},"content":" 2: [D][ ] finish 2113 iP (by: Friday)","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"striris"},"content":" 3: [E][ ] 2113 project meeting (at: Monday 1:00PM)","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":" ```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"striris":121,"-":14}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"striris"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"striris"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"striris"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"public class Duke {","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"    private static TaskList taskList;","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"    private Ui ui;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"        taskList \u003d new TaskList(storage);","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"        taskList.loadTaskList();","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"striris"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"striris"},"content":"        Ui.greeting();","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"striris"},"content":"        startBot();","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"striris"},"content":"        Ui.farewell();","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"striris"},"content":"    private static void startBot() throws IOException {","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"striris"},"content":"        taskList.processTasks();","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"striris"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"striris"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"striris":33,"-":2}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"import duke.tasks.*;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"import java.io.File;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"striris"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"striris"},"content":" * Represents a \u003ccode\u003eStorage\u003c/code\u003e object that contains support for","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"striris"},"content":" * saving tasks/loading tasks from storage (ensures persistent storage","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"striris"},"content":" * of tasks)","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"striris"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"public class Storage {","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"    protected static String filePath;","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"    protected static final char TODO \u003d \u0027T\u0027;","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"    protected static final char EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"    protected static final char DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"striris"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"striris"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"striris"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"striris"},"content":"     * Helper for loadTaskList","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"striris"},"content":"     * Loads tasks from duke.txt (file of saved tasks)","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"striris"},"content":"     * Returns ArrayList of Task objects","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"striris"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"striris"},"content":"    public static ArrayList\u003cTask\u003e loadFile() throws IOException {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"striris"},"content":"        try {","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"striris"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"striris"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"striris"},"content":"            f.createNewFile();","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"striris"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"striris"},"content":"            ArrayList\u003cTask\u003e listArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"striris"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"striris"},"content":"                boolean isDone \u003d true;","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"striris"},"content":"                String message \u003d s.nextLine();","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"striris"},"content":"                String[] splitMessage \u003d message.split(\" \\\\| \");","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"striris"},"content":"                char type \u003d splitMessage[0].charAt(0);","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"striris"},"content":"                int status \u003d Integer.parseInt(splitMessage[1]);","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"striris"},"content":"                if (status \u003d\u003d 0) {","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"striris"},"content":"                    isDone \u003d false;","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"striris"},"content":"                String description \u003d splitMessage[2];","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"striris"},"content":"                switch (type) {","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"striris"},"content":"                    case TODO:","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"striris"},"content":"                        listArray.add(new ToDo(description, isDone));","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"striris"},"content":"                        break;","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"striris"},"content":"                    case EVENT:","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"striris"},"content":"                        String at \u003d splitMessage[3];","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"striris"},"content":"                        listArray.add(new Event(description, isDone, at));","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"striris"},"content":"                        break;","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"striris"},"content":"                    case DEADLINE:","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"striris"},"content":"                        String by \u003d splitMessage[3];","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"striris"},"content":"                        listArray.add(new Deadline(description, isDone, by));","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"striris"},"content":"                        break;","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"striris"},"content":"                    default:","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"striris"},"content":"                        break;","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"striris"},"content":"            s.close();","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"striris"},"content":"            return listArray;","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"striris"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"striris"},"content":"            System.out.println(\"IO exception\");","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"striris"},"content":"        return null;","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"striris"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"striris"},"content":"     * Helper for processTasks","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"striris"},"content":"     * Saves the list of tasks to the filepath of the Storage object","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"striris"},"content":"     * @param listArray an ArrayList of tasks to write to file","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"striris"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"striris"},"content":"    public static void saveFile(ArrayList\u003cTask\u003e listArray) throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"striris"},"content":"        try {","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"striris"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"striris"},"content":"            StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"striris"},"content":"            for (int i \u003d 0; i \u003c listArray.size(); i++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"striris"},"content":"                sb.append(listArray.get(i).saveTasks());","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"striris"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"striris"},"content":"            fw.close();","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"striris"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"striris"},"content":"            System.out.println(\"IO exception\");","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"striris":90}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"public class Ui {","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"    public static void greeting() {","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"        String greeting \u003d \"----------------------------------------------\\n\"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"                + \"Hello! Duke here :)\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"                + \"----------------------------------------------\\n\";","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"        System.out.println(greeting);","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"    public static void farewell() {","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"        System.out.println(bye);","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"    public static String getInput() {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"striris"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"striris"},"content":"        return userInput;","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"striris":25}},{"path":"src/main/java/duke/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"task1","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"ddl1","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"striris":2}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke.tasks;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"striris"},"content":" * Represents an \u003ccode\u003eDeadline\u003c/code\u003e object on a person\u0027s list.","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"striris"},"content":" * This class inherits from the Task class and supports a slightly different toString() method","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"striris"},"content":" * that contains a marker for the Deadline object (an \"D\" for \"Deadline\"). Also","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"striris"},"content":" * allows users to set the time/date the Deadline task should be completed by.","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"striris"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"    protected String by;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"        super(description, isDone);","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"striris"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"striris"},"content":"    public String saveTasks() {","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"striris"},"content":"        return \"D \" + super.saveTasks() + \" | \" + this.by + System.lineSeparator();","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"striris":26}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke.tasks;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"public class Event extends Task {","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"    protected String at;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"    public Event(String description, boolean isDone, String at) {","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"        super(description, isDone);","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"    public String toString() {","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"    public String saveTasks() {","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"        return \"E \" + super.saveTasks() + \" | \" + this.at + System.lineSeparator();","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"striris":21}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke.tasks;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"striris"},"content":" * Represents a Task object on a person\u0027s list of tasks that they must complete.","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"striris"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e corresponds to a Task represented by a description of the","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"striris"},"content":" * task as well as a flag for whether it has been completed.","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"striris"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"public class Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"    protected String description;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"        return description;","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"    public boolean getStatus() { return isDone; }","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"striris"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"striris"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"striris"},"content":"    public void markAsDone(){","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"striris"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"striris"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"striris"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"striris"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"striris"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"striris"},"content":"    public String saveTasks() {","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"striris"},"content":"        int isMarked \u003d 0;","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"striris"},"content":"        if(this.isDone) {","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"striris"},"content":"            isMarked \u003d 1;","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"striris"},"content":"        return \"| \" + isMarked + \" | \" + this.description ;","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"striris":45}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke.tasks;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"import duke.Storage;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"import duke.Ui;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"striris"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"striris"},"content":" * Represents a person\u0027s list of Tasks that they must complete.","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"striris"},"content":" * This class supports the modification of Tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"striris"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"public class TaskList {","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"    private Ui ui;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"striris"},"content":"    public void loadTaskList() throws IOException {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"striris"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"striris"},"content":"            tasks \u003d storage.loadFile();","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"striris"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"striris"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"striris"},"content":"    public void processTasks() throws IOException {","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"striris"},"content":"        String by \u003d new String();","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"striris"},"content":"        String at \u003d new String();","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"striris"},"content":"            while(true){","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"striris"},"content":"                String userInput \u003d Ui.getInput();","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"striris"},"content":"                String choice \u003d userInput.split(\" \")[0];","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"striris"},"content":"                System.out.println(\"----------------------------------------------\");","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"striris"},"content":"                if(userInput.equals(\"bye\")) {","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"striris"},"content":"                    Storage.saveFile(tasks);","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"striris"},"content":"                    break;","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"striris"},"content":"                else if(userInput.equals(\"list\")) {","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"striris"},"content":"                    listTask();","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"striris"},"content":"                else if(choice.equals(\"mark\")) {","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"striris"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"striris"},"content":"                    markTask(taskIndex);","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"striris"},"content":"                else if(choice.equals(\"unmark\")) {","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"striris"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"striris"},"content":"                    unmarkTask(taskIndex);","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"striris"},"content":"                else if(choice.equals(\"todo\")) {","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"striris"},"content":"                    String toDoDescription \u003d userInput.split(\"todo\")[1].trim();","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"striris"},"content":"                    Task t \u003d new ToDo(toDoDescription, false);","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"striris"},"content":"                    addTask(t);","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"striris"},"content":"                else if(choice.equals(\"deadline\")) {","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"striris"},"content":"                    String[] input \u003d userInput.split(\"/by\");","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"striris"},"content":"                    by \u003d input[1].trim();","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"striris"},"content":"                    String deadlineDescription \u003d input[0].split(\"deadline\")[1].trim();","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"striris"},"content":"                    Task d \u003d new Deadline(deadlineDescription, false, by);","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"striris"},"content":"                    addTask(d);","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"striris"},"content":"                else if(choice.equals(\"event\")) {","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"striris"},"content":"                    String[] input \u003d userInput.split(\"/at\");","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"striris"},"content":"                    at \u003d input[1].trim();","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"striris"},"content":"                    String eventDescription \u003d input[0].split(\"event\")[1].trim();","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"striris"},"content":"                    Task e \u003d new Event(eventDescription, false, at);","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"striris"},"content":"                    addTask(e);","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"striris"},"content":"                else if(choice.equals(\"delete\")) {","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"striris"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"striris"},"content":"                    deleteTask(taskIndex);","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"striris"},"content":"                else if(choice.equals(\"find\")) {","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"striris"},"content":"                    String keyWord \u003d userInput.split(\" \")[1];","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"striris"},"content":"                    findTask(keyWord);","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"striris"},"content":"                else{","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"striris"},"content":"                    System.out.println(\"I don\u0027t understand D: Please key in your command again!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"striris"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"striris"},"content":"                System.out.println(\"----------------------------------------------\");","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"striris"},"content":"    public void listTask() {","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"striris"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"striris"},"content":"        for(int i \u003d 0; i\u003ctasks.size() ; i++)","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"striris"},"content":"            System.out.println(i+1 + \".\" + tasks.get(i));","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"striris"},"content":"    private static void markTask(int taskIndex) {","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"striris"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"striris"},"content":"            tasks.get(taskIndex-1).markAsDone();","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"striris"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"striris"},"content":"            System.out.println(tasks.get(taskIndex-1));","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"striris"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"striris"},"content":"            System.out.println(\"This index is not within the range :( Try again!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"striris"},"content":"    private static void unmarkTask(int taskIndex) {","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"striris"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"striris"},"content":"            tasks.get(taskIndex-1).markAsNotDone();","lastModifiedDate":"2022-03-03"},{"lineNumber":109,"author":{"gitId":"striris"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"striris"},"content":"            System.out.println(tasks.get(taskIndex-1));","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"striris"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"striris"},"content":"            System.out.println(\"This index is not within the range :( Try again!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":117,"author":{"gitId":"striris"},"content":"    private static void addTask(Task t) {","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"striris"},"content":"        tasks.add(t);","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"striris"},"content":"        System.out.println(\"Got it! I\u0027ve added this task: \");","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"striris"},"content":"        System.out.println(t);","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"striris"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"striris"},"content":"    private static void deleteTask(int taskIndex) {","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"striris"},"content":"        try{","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"striris"},"content":"            Task deletedTask \u003d tasks.get(taskIndex -1);","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"striris"},"content":"            tasks.remove(taskIndex -1);","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"striris"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"striris"},"content":"            System.out.println(deletedTask);","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"striris"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"striris"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"striris"},"content":"            System.out.println(\"This index is not within the range :( Try again!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":137,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"striris"},"content":"    private static void findTask(String keyWord) {","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"striris"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-03-03"},{"lineNumber":140,"author":{"gitId":"striris"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-03-03"},{"lineNumber":141,"author":{"gitId":"striris"},"content":"        for(Task t: tasks) {","lastModifiedDate":"2022-03-03"},{"lineNumber":142,"author":{"gitId":"striris"},"content":"            if(t.description.contains(keyWord)){","lastModifiedDate":"2022-03-03"},{"lineNumber":143,"author":{"gitId":"striris"},"content":"                System.out.println(i +\".\"+ t);","lastModifiedDate":"2022-03-03"},{"lineNumber":144,"author":{"gitId":"striris"},"content":"                i++;","lastModifiedDate":"2022-03-03"},{"lineNumber":145,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":146,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":147,"author":{"gitId":"striris"},"content":"        if(i \u003d\u003d 1) {","lastModifiedDate":"2022-03-03"},{"lineNumber":148,"author":{"gitId":"striris"},"content":"            System.out.println(\"The keyword doesn\u0027t exist in task descriptions, try other keyword please :)\");","lastModifiedDate":"2022-03-03"},{"lineNumber":149,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":150,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":151,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"striris":151}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke.tasks;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"striris"},"content":"        super(description, isDone);","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"    public String toString() {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"    public String saveTasks() {","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"        return \"T \" + super.saveTasks() + System.lineSeparator();","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"striris":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"striris":1,"-":20}}]
