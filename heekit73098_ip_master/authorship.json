[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":"### Adding Tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"You are able to add tasks of 3 different types (Todo, Deadline and Event).","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"heekit73098"},"content":"- Todo: Basic task (No deadlines or timings)","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":"- Deadline: Includes a deadline for the task for you to keep track","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"- Event: Include a start date and time, and an end date and time for the event","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"heekit73098"},"content":"### Marking / Unmarking a Task","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"heekit73098"},"content":"You are able to mark or unmark any task for your own needs (when you complete a task, e.g.).","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"heekit73098"},"content":"### Removing Tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"heekit73098"},"content":"You are able to remove tasks that you do not need as well.","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"heekit73098"},"content":"### Saving and Loading Tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"heekit73098"},"content":"All tasks and any modifications to them will be automatically saved and loaded when you start the program.","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"heekit73098"},"content":"### Finding and Listing Tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"heekit73098"},"content":"You are able to find tasks based on a matching keyword or list out all your tasks you currently have.","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"heekit73098"},"content":"### Adding a Task","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"heekit73098"},"content":"### `todo` - Add a new Todo task","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"heekit73098"},"content":"`todo TASK_NAME`","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"heekit73098"},"content":"Expected outcome: ","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"heekit73098"},"content":"added: [T][] TASK_NAME","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"heekit73098"},"content":"Total number of tasks now: 1","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"heekit73098"},"content":"### `deadline` - Add a new Deadline task","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"heekit73098"},"content":"The deadline should have the format of YYYY-MM-DD for the date and HH:mm for the time","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"heekit73098"},"content":"Note that for all single digits (in Months, Day, Hour or Time), there should be a preceding 0 to make up the 2 digits.","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"heekit73098"},"content":"Example of usage:","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"heekit73098"},"content":"`deadline TASK_NAME /by YYYY-MM-DD HH:mm`","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"heekit73098"},"content":"Expected outcome:","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"heekit73098"},"content":"The output will have the date and time in MMM DD YYYY HH:mm format (Feb 28 2022 16:30, e.g.).","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"heekit73098"},"content":"added: [D][] TASK_NAME (by: MMM DD YYYY HH:mm)","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"heekit73098"},"content":"Total number of tasks now: 2","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"heekit73098"},"content":"### `event` - Add a new Event task","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"heekit73098"},"content":"The Event task takes in two dates and times, one for the start and one for the end.","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"heekit73098"},"content":"Format for both dates is YYYY-MM-DD and format for both times is HH:mm","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"heekit73098"},"content":"Note that for all single digits (in Months, Day, Hour or Time), there should be a preceding 0 to make up the 2 digits.","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"heekit73098"},"content":"Example of usage:","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"heekit73098"},"content":"`event TASK_NAME /at YYYY-MM-DD HH:mm to YYYY-MM-DD HH:mm`","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"heekit73098"},"content":"The output will have the dates and times in MMM DD YYYY HH:mm format (Feb 28 2022 16:30, e.g.).","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"heekit73098"},"content":"added: [E][] TASK_NAME (at: MMM DD YYYY HH:mm to MMM DD YYYY HH:mm)","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"heekit73098"},"content":"Total number of tasks now: 3","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"heekit73098"},"content":"### Marking and Unmarking a Task","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"heekit73098"},"content":"### `mark` - Mark a Task","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"heekit73098"},"content":"The index of the task can be found by doing a `list` command shown below.","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"heekit73098"},"content":"The index has to be an integer.","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"heekit73098"},"content":"Example of usage:","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"heekit73098"},"content":"`mark INDEX`","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"heekit73098"},"content":"Expected outcome:","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"heekit73098"},"content":"A task would be marked regardless of its status before the command.","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"heekit73098"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"heekit73098"},"content":" [X] TASK_NAME","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"heekit73098"},"content":"### `unmark` - Unmark a Task","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"heekit73098"},"content":"The index of the task can be found by doing a `list` command shown below.","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"heekit73098"},"content":"The index has to be an integer.","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"heekit73098"},"content":"`unmark INDEX`","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"heekit73098"},"content":"A task would be unmarked regardless of its status before the command.","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"heekit73098"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"heekit73098"},"content":" [ ] TASK_NAME","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"heekit73098"},"content":"### Deleting a Task","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"heekit73098"},"content":"### `delete` - Delete a Task","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"heekit73098"},"content":"The index of the task can be found by doing a `list` command shown below.","lastModifiedDate":"2022-02-28"},{"lineNumber":114,"author":{"gitId":"heekit73098"},"content":"The index has to be an integer.","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"heekit73098"},"content":"Example of usage:","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"heekit73098"},"content":"`delete INDEX`","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"heekit73098"},"content":"Expected outcome:","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":123,"author":{"gitId":"heekit73098"},"content":" I have removed this task:","lastModifiedDate":"2022-02-28"},{"lineNumber":124,"author":{"gitId":"heekit73098"},"content":" [D][ ] TASK_NAME (by: MMM DD YYYY HH:mm)","lastModifiedDate":"2022-02-28"},{"lineNumber":125,"author":{"gitId":"heekit73098"},"content":" Total number of tasks now: 2","lastModifiedDate":"2022-02-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":127,"author":{"gitId":"heekit73098"},"content":"### Finding and Listing Tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":128,"author":{"gitId":"heekit73098"},"content":"### `find` - Find tasks based on matching keywords","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":130,"author":{"gitId":"heekit73098"},"content":"A task will only be matched if the keywords are fully in the task name.","lastModifiedDate":"2022-02-28"},{"lineNumber":131,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":132,"author":{"gitId":"heekit73098"},"content":"Example of usage:","lastModifiedDate":"2022-02-28"},{"lineNumber":133,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":134,"author":{"gitId":"heekit73098"},"content":"`find KEYWORD`","lastModifiedDate":"2022-02-28"},{"lineNumber":135,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"heekit73098"},"content":"Expected outcome:","lastModifiedDate":"2022-02-28"},{"lineNumber":137,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":138,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":139,"author":{"gitId":"heekit73098"},"content":" Here are the matching tasks:","lastModifiedDate":"2022-02-28"},{"lineNumber":140,"author":{"gitId":"heekit73098"},"content":" 1 [T][ ] MATCHED_TASK_NAME","lastModifiedDate":"2022-02-28"},{"lineNumber":141,"author":{"gitId":"heekit73098"},"content":" 4 [D][ ] MATCHED_TASK_NAME (by MMM DD YYYY HH:mm)","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":143,"author":{"gitId":"heekit73098"},"content":"If there are no matching tasks, the expected outcome would be:","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"heekit73098"},"content":"There are no matching tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"heekit73098"},"content":"### `list` - List all Tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":148,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":149,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":150,"author":{"gitId":"heekit73098"},"content":"Example of usage:","lastModifiedDate":"2022-02-28"},{"lineNumber":151,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":152,"author":{"gitId":"heekit73098"},"content":"`list`","lastModifiedDate":"2022-02-28"},{"lineNumber":153,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":154,"author":{"gitId":"heekit73098"},"content":"Expected outcome:","lastModifiedDate":"2022-02-28"},{"lineNumber":155,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":156,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"heekit73098"},"content":" Here are the matching tasks:","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"heekit73098"},"content":" 1 [T][ ] TASK_NAME","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"heekit73098"},"content":" 2 [D][X] TASK_NAME (by MMM DD YYYY HH:mm)","lastModifiedDate":"2022-02-28"},{"lineNumber":160,"author":{"gitId":"heekit73098"},"content":" 3 [E][ ] TASK_NAME (at MMM DD YYYY HH:mm to MMM DD YYYY HH:mm)","lastModifiedDate":"2022-02-28"},{"lineNumber":161,"author":{"gitId":"heekit73098"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":162,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"heekit73098":132,"-":30}},{"path":"src/duke/helper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"package duke.helper;","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"import duke.main.DukeException;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"heekit73098"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"heekit73098"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"heekit73098"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"heekit73098"},"content":" * Represents an object to parse the user input","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"heekit73098"},"content":" * Contains the last user\u0027s input parsed into suitable categories","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"heekit73098"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"heekit73098"},"content":"public class Parser {","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"heekit73098"},"content":"    protected static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"heekit73098"},"content":"    protected static String line;","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"heekit73098"},"content":"    protected static String taskName;","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"heekit73098"},"content":"    protected static LocalDate endDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"heekit73098"},"content":"    protected static LocalTime endTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"heekit73098"},"content":"    protected static LocalDate startDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"heekit73098"},"content":"    protected static LocalTime startTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"heekit73098"},"content":"    public static final int INVALID \u003d -1;","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"heekit73098"},"content":"    public static final String FIND_CMD \u003d \"find\";","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"heekit73098"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"heekit73098"},"content":"        return taskName;","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"heekit73098"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"heekit73098"},"content":"        return endDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"heekit73098"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"heekit73098"},"content":"        return endTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"heekit73098"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"heekit73098"},"content":"        return startDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"heekit73098"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"heekit73098"},"content":"        return startTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"heekit73098"},"content":"    public void getNextLine() {","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"heekit73098"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2022-02-23"},{"lineNumber":48,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"heekit73098"},"content":"    public boolean isMarkCommand() {","lastModifiedDate":"2022-02-23"},{"lineNumber":51,"author":{"gitId":"heekit73098"},"content":"        return line.split(\" \")[0].equals(\"mark\");","lastModifiedDate":"2022-02-23"},{"lineNumber":52,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"heekit73098"},"content":"    public boolean isUnmarkCommand() {","lastModifiedDate":"2022-02-23"},{"lineNumber":55,"author":{"gitId":"heekit73098"},"content":"        return line.split(\" \")[0].equals(\"unmark\");","lastModifiedDate":"2022-02-23"},{"lineNumber":56,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":57,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":58,"author":{"gitId":"heekit73098"},"content":"    public boolean isDeleteCommand() {","lastModifiedDate":"2022-02-23"},{"lineNumber":59,"author":{"gitId":"heekit73098"},"content":"        return line.split(\" \")[0].equals(\"delete\");","lastModifiedDate":"2022-02-23"},{"lineNumber":60,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":61,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":62,"author":{"gitId":"heekit73098"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2022-02-23"},{"lineNumber":63,"author":{"gitId":"heekit73098"},"content":"        return line.equals(\"bye\");","lastModifiedDate":"2022-02-23"},{"lineNumber":64,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":65,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":66,"author":{"gitId":"heekit73098"},"content":"    public boolean isListCommand() {","lastModifiedDate":"2022-02-23"},{"lineNumber":67,"author":{"gitId":"heekit73098"},"content":"        return line.equals(\"list\");","lastModifiedDate":"2022-02-23"},{"lineNumber":68,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":69,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":70,"author":{"gitId":"heekit73098"},"content":"    public boolean isFindCommand() {","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"heekit73098"},"content":"        return line.split(\" \")[0].equals(FIND_CMD);","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"heekit73098"},"content":"    public String getLine() {","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"heekit73098"},"content":"        return line;","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"heekit73098"},"content":"     * Returns the index that the user input to use with the command","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"heekit73098"},"content":"     * @param ui Ui object to handle communication with the user","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"heekit73098"},"content":"     * @param taskCount the number of present tasks the user has","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"heekit73098"},"content":"     * @return the index that the user input, INVALID if the user input an invalid index","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"heekit73098"},"content":"    public int parseIndex(Ui ui, int taskCount) {","lastModifiedDate":"2022-02-23"},{"lineNumber":85,"author":{"gitId":"heekit73098"},"content":"        int index;","lastModifiedDate":"2022-02-23"},{"lineNumber":86,"author":{"gitId":"heekit73098"},"content":"        try {","lastModifiedDate":"2022-02-23"},{"lineNumber":87,"author":{"gitId":"heekit73098"},"content":"            index \u003d Integer.parseInt(line.split(\" \")[1]) - 1;","lastModifiedDate":"2022-02-23"},{"lineNumber":88,"author":{"gitId":"heekit73098"},"content":"            if (index \u003e\u003d taskCount || index \u003c 0) {","lastModifiedDate":"2022-02-23"},{"lineNumber":89,"author":{"gitId":"heekit73098"},"content":"                throw new DukeException(\"Task Index is out of bounds.\");","lastModifiedDate":"2022-02-23"},{"lineNumber":90,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-23"},{"lineNumber":91,"author":{"gitId":"heekit73098"},"content":"        }catch (NumberFormatException | DukeException e) {","lastModifiedDate":"2022-02-23"},{"lineNumber":92,"author":{"gitId":"heekit73098"},"content":"            ui.printExceptionMessage(e.getMessage());","lastModifiedDate":"2022-02-23"},{"lineNumber":93,"author":{"gitId":"heekit73098"},"content":"            return INVALID;","lastModifiedDate":"2022-02-23"},{"lineNumber":94,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":95,"author":{"gitId":"heekit73098"},"content":"        return index;","lastModifiedDate":"2022-02-23"},{"lineNumber":96,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":97,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"heekit73098"},"content":"     * Continuously wait for the user to input a command.","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"heekit73098"},"content":"     * Infinite Loop unless user terminates program","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"heekit73098"},"content":"     * or when user inputs exit command","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"heekit73098"},"content":"     * @param ui Ui object to handle communication with the user","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"heekit73098"},"content":"     * @param storage Storage object to handle saving and loading tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"heekit73098"},"content":"     * @param tasks TaskList object that contains the list of all tasks from the user","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"heekit73098"},"content":"    public void waitForInput(Ui ui,Storage storage, TaskList tasks) {","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"heekit73098"},"content":"        while (true) {","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"heekit73098"},"content":"            getNextLine();","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"heekit73098"},"content":"            if (isExitCommand()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"heekit73098"},"content":"                break;","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"heekit73098"},"content":"            }else if (isListCommand()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"heekit73098"},"content":"                tasks.listTasks();","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"heekit73098"},"content":"            }else if (isMarkCommand()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":114,"author":{"gitId":"heekit73098"},"content":"                int index \u003d parseIndex(ui, tasks.getTaskCount());","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"heekit73098"},"content":"                tasks.updateMarkTask(index, true, ui, storage);","lastModifiedDate":"2022-02-24"},{"lineNumber":116,"author":{"gitId":"heekit73098"},"content":"            }else if (isUnmarkCommand()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"heekit73098"},"content":"                int index \u003d parseIndex(ui, tasks.getTaskCount());","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"heekit73098"},"content":"                tasks.updateMarkTask(index, false, ui, storage);","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"heekit73098"},"content":"            }else if (isDeleteCommand()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"heekit73098"},"content":"                int index \u003d parseIndex(ui, tasks.getTaskCount());","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"heekit73098"},"content":"                tasks.deleteTask(index, ui, storage);","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"heekit73098"},"content":"            }else if (isFindCommand()) {","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"heekit73098"},"content":"                removeCommand(FIND_CMD);","lastModifiedDate":"2022-02-28"},{"lineNumber":124,"author":{"gitId":"heekit73098"},"content":"                String keyword \u003d getLine();","lastModifiedDate":"2022-02-28"},{"lineNumber":125,"author":{"gitId":"heekit73098"},"content":"                tasks.findTasks(keyword);","lastModifiedDate":"2022-02-28"},{"lineNumber":126,"author":{"gitId":"heekit73098"},"content":"            }else {","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"heekit73098"},"content":"                tasks.addNewTask(ui, storage, this);","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":131,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":132,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":133,"author":{"gitId":"heekit73098"},"content":"     * Returns the task type (Todo, Deadline, Event)","lastModifiedDate":"2022-02-28"},{"lineNumber":134,"author":{"gitId":"heekit73098"},"content":"     * @return Task Type (Todo, Deadline, Event)","lastModifiedDate":"2022-02-28"},{"lineNumber":135,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"heekit73098"},"content":"    public String parseTaskType() {","lastModifiedDate":"2022-02-24"},{"lineNumber":137,"author":{"gitId":"heekit73098"},"content":"        return line.split(\" \")[0];","lastModifiedDate":"2022-02-24"},{"lineNumber":138,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":140,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":141,"author":{"gitId":"heekit73098"},"content":"     * Removes the command from the line input by user","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"heekit73098"},"content":"     * @param command the command of the user input","lastModifiedDate":"2022-02-28"},{"lineNumber":143,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"heekit73098"},"content":"    public void removeCommand(String command) {","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"heekit73098"},"content":"        if (line.length() \u003e command.length()) {","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"heekit73098"},"content":"            line \u003d line.substring(command.length() + 1);","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"heekit73098"},"content":"        }else {","lastModifiedDate":"2022-02-24"},{"lineNumber":148,"author":{"gitId":"heekit73098"},"content":"            line \u003d \"\";","lastModifiedDate":"2022-02-24"},{"lineNumber":149,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":150,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":151,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":152,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":153,"author":{"gitId":"heekit73098"},"content":"     * Extracts the task name from the line that the user typed","lastModifiedDate":"2022-02-28"},{"lineNumber":154,"author":{"gitId":"heekit73098"},"content":"     * @throws DukeException if there is no task name given as input","lastModifiedDate":"2022-02-28"},{"lineNumber":155,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":156,"author":{"gitId":"heekit73098"},"content":"    public void parseTodo() throws DukeException {","lastModifiedDate":"2022-02-24"},{"lineNumber":157,"author":{"gitId":"heekit73098"},"content":"        if (line.equals(\"\")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":158,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"Argument of todo should not be empty.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":159,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":160,"author":{"gitId":"heekit73098"},"content":"        taskName \u003d line;","lastModifiedDate":"2022-02-24"},{"lineNumber":161,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":162,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":163,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":164,"author":{"gitId":"heekit73098"},"content":"     * Extracts the task name, end date and time from the line that the user type","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"heekit73098"},"content":"     * @throws DukeException if unable to parse the deadlines or task name","lastModifiedDate":"2022-02-28"},{"lineNumber":166,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":167,"author":{"gitId":"heekit73098"},"content":"    public void parseDeadline() throws DukeException {","lastModifiedDate":"2022-02-24"},{"lineNumber":168,"author":{"gitId":"heekit73098"},"content":"        String[] taskNameAndDeadline \u003d line.split(\" /by \");","lastModifiedDate":"2022-02-24"},{"lineNumber":169,"author":{"gitId":"heekit73098"},"content":"        taskName \u003d taskNameAndDeadline[0];","lastModifiedDate":"2022-02-24"},{"lineNumber":170,"author":{"gitId":"heekit73098"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2022-02-28"},{"lineNumber":171,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"A Deadline Task should have its name.\");","lastModifiedDate":"2022-02-28"},{"lineNumber":172,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":173,"author":{"gitId":"heekit73098"},"content":"        if (taskNameAndDeadline.length \u003c 2) {","lastModifiedDate":"2022-02-24"},{"lineNumber":174,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"A Deadline Task should have the deadline.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":175,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":176,"author":{"gitId":"heekit73098"},"content":"        String[] deadlineDateAndTime \u003d taskNameAndDeadline[1].split(\" \");","lastModifiedDate":"2022-02-24"},{"lineNumber":177,"author":{"gitId":"heekit73098"},"content":"        if (deadlineDateAndTime.length !\u003d 2) {","lastModifiedDate":"2022-02-24"},{"lineNumber":178,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"Invalid Date/Time format\");","lastModifiedDate":"2022-02-24"},{"lineNumber":179,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":180,"author":{"gitId":"heekit73098"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":181,"author":{"gitId":"heekit73098"},"content":"            endDate \u003d LocalDate.parse(deadlineDateAndTime[0]);","lastModifiedDate":"2022-02-24"},{"lineNumber":182,"author":{"gitId":"heekit73098"},"content":"            endTime \u003d LocalTime.parse(deadlineDateAndTime[1], DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":183,"author":{"gitId":"heekit73098"},"content":"        }catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":184,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"Invalid Date/Time format\");","lastModifiedDate":"2022-02-24"},{"lineNumber":185,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":186,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":187,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":188,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":189,"author":{"gitId":"heekit73098"},"content":"     * Extracts the task name, start date, start time,end date and time from the line that the user type","lastModifiedDate":"2022-02-28"},{"lineNumber":190,"author":{"gitId":"heekit73098"},"content":"     * @throws DukeException if unable to parse the timings or task name","lastModifiedDate":"2022-02-28"},{"lineNumber":191,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":192,"author":{"gitId":"heekit73098"},"content":"    public void parseEvent() throws DukeException {","lastModifiedDate":"2022-02-24"},{"lineNumber":193,"author":{"gitId":"heekit73098"},"content":"        String[] taskNameAndTiming \u003d line.split(\" /at \");","lastModifiedDate":"2022-02-24"},{"lineNumber":194,"author":{"gitId":"heekit73098"},"content":"        taskName \u003d taskNameAndTiming[0];","lastModifiedDate":"2022-02-24"},{"lineNumber":195,"author":{"gitId":"heekit73098"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2022-02-28"},{"lineNumber":196,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"A Deadline Task should have its name.\");","lastModifiedDate":"2022-02-28"},{"lineNumber":197,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":198,"author":{"gitId":"heekit73098"},"content":"        if (taskNameAndTiming.length \u003c 2) {","lastModifiedDate":"2022-02-24"},{"lineNumber":199,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"An Event Task should have the event timing.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":200,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":201,"author":{"gitId":"heekit73098"},"content":"        String[] eventDateAndTime \u003d taskNameAndTiming[1].split(\" to \");","lastModifiedDate":"2022-02-24"},{"lineNumber":202,"author":{"gitId":"heekit73098"},"content":"        if (eventDateAndTime.length !\u003d 2) {","lastModifiedDate":"2022-02-24"},{"lineNumber":203,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"An Event Task should have both start and end timings.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":204,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":205,"author":{"gitId":"heekit73098"},"content":"        String[] startDateAndTime \u003d eventDateAndTime[0].split(\" \");","lastModifiedDate":"2022-02-24"},{"lineNumber":206,"author":{"gitId":"heekit73098"},"content":"        if (startDateAndTime.length !\u003d 2) {","lastModifiedDate":"2022-02-24"},{"lineNumber":207,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"Start Timing should have both Date and Time, separated with a space\");","lastModifiedDate":"2022-02-24"},{"lineNumber":208,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":209,"author":{"gitId":"heekit73098"},"content":"        String[] endDateAndTime \u003d eventDateAndTime[1].split(\" \");","lastModifiedDate":"2022-02-24"},{"lineNumber":210,"author":{"gitId":"heekit73098"},"content":"        if (endDateAndTime.length !\u003d 2) {","lastModifiedDate":"2022-02-24"},{"lineNumber":211,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"End Timing should have both Date and Time, separated with a space\");","lastModifiedDate":"2022-02-24"},{"lineNumber":212,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":213,"author":{"gitId":"heekit73098"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":214,"author":{"gitId":"heekit73098"},"content":"            startDate \u003d LocalDate.parse(startDateAndTime[0]);","lastModifiedDate":"2022-02-24"},{"lineNumber":215,"author":{"gitId":"heekit73098"},"content":"            startTime \u003d LocalTime.parse(startDateAndTime[1], DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":216,"author":{"gitId":"heekit73098"},"content":"            endDate \u003d LocalDate.parse(endDateAndTime[0]);","lastModifiedDate":"2022-02-24"},{"lineNumber":217,"author":{"gitId":"heekit73098"},"content":"            endTime \u003d LocalTime.parse(endDateAndTime[1], DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":218,"author":{"gitId":"heekit73098"},"content":"        }catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":219,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"Invalid Date/Time format\");","lastModifiedDate":"2022-02-24"},{"lineNumber":220,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":221,"author":{"gitId":"heekit73098"},"content":"        if (startDate.isAfter(endDate)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":222,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"Start Date after End Date\");","lastModifiedDate":"2022-02-28"},{"lineNumber":223,"author":{"gitId":"heekit73098"},"content":"        }else if (startDate.isEqual(endDate)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":224,"author":{"gitId":"heekit73098"},"content":"            if (startTime.isAfter(endTime)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":225,"author":{"gitId":"heekit73098"},"content":"                throw new DukeException(\"Start Time after End Time\");","lastModifiedDate":"2022-02-28"},{"lineNumber":226,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-28"},{"lineNumber":227,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":228,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":229,"author":{"gitId":"heekit73098"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"heekit73098":229}},{"path":"src/duke/helper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"package duke.helper;","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"import duke.main.Duke;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":"import duke.main.DukeException;","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"heekit73098"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"heekit73098"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"import java.io.File;","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"heekit73098"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"heekit73098"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"heekit73098"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"heekit73098"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"heekit73098"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"heekit73098"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"heekit73098"},"content":"import static duke.helper.TaskList.TODO;","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"heekit73098"},"content":"import static duke.helper.TaskList.DEADLINE;","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"heekit73098"},"content":"import static duke.helper.TaskList.EVENT;","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"heekit73098"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"heekit73098"},"content":" * Represents a storage object to store the data created in the application.","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"heekit73098"},"content":" * Allows the user to save and load saved files in the form of .txt","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"heekit73098"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"heekit73098"},"content":"public class Storage {","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"heekit73098"},"content":"    public static final String FILEPATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"heekit73098"},"content":"    public static final String DIR_PATH \u003d \"data\";","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"heekit73098"},"content":"    public static final int TODO_FIELDS \u003d 3;","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"heekit73098"},"content":"    public static final int DEADLINE_FIELDS \u003d 5;","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"heekit73098"},"content":"    public static final int EVENT_FIELDS \u003d 7;","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"heekit73098"},"content":"    protected static boolean isLoaded \u003d false;","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"heekit73098"},"content":"    public boolean isLoaded() {","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"heekit73098"},"content":"        return isLoaded;","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"heekit73098"},"content":"     * Adds a task based on the task type to the list","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"heekit73098"},"content":"     * @param fields array of strings containing the fields of the task","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"heekit73098"},"content":"     * @param tasks TaskList object containing the list of tasks to be added to","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"heekit73098"},"content":"     * @throws DukeException if the number of fields of the task in the .txt does not match with what is required","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"heekit73098"},"content":"    private void loadTask(String[] fields, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"heekit73098"},"content":"        String taskType \u003d fields[0];","lastModifiedDate":"2022-02-23"},{"lineNumber":46,"author":{"gitId":"heekit73098"},"content":"        String marked \u003d fields[1];","lastModifiedDate":"2022-02-23"},{"lineNumber":47,"author":{"gitId":"heekit73098"},"content":"        String taskName \u003d fields[2];","lastModifiedDate":"2022-02-23"},{"lineNumber":48,"author":{"gitId":"heekit73098"},"content":"        switch(taskType) {","lastModifiedDate":"2022-02-23"},{"lineNumber":49,"author":{"gitId":"heekit73098"},"content":"        case TODO:","lastModifiedDate":"2022-02-23"},{"lineNumber":50,"author":{"gitId":"heekit73098"},"content":"            tasks.addSavedTask(new Todo(taskName, marked.equals(\"1\")));","lastModifiedDate":"2022-02-23"},{"lineNumber":51,"author":{"gitId":"heekit73098"},"content":"            break;","lastModifiedDate":"2022-02-23"},{"lineNumber":52,"author":{"gitId":"heekit73098"},"content":"        case DEADLINE:","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"heekit73098"},"content":"            if (fields.length !\u003d DEADLINE_FIELDS){","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"heekit73098"},"content":"                throw new DukeException(\"Invalid File Format (Wrong number of fields)\");","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"heekit73098"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(fields[3]);","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"heekit73098"},"content":"            LocalTime deadlineTime \u003d LocalTime.parse(fields[4]);","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"heekit73098"},"content":"            tasks.addSavedTask(new Deadline(taskName, marked.equals(\"1\"), deadlineDate, deadlineTime));","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"heekit73098"},"content":"            break;","lastModifiedDate":"2022-02-23"},{"lineNumber":60,"author":{"gitId":"heekit73098"},"content":"        case EVENT:","lastModifiedDate":"2022-02-23"},{"lineNumber":61,"author":{"gitId":"heekit73098"},"content":"            if (fields.length !\u003d EVENT_FIELDS){","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"heekit73098"},"content":"                throw new DukeException(\"Invalid File Format (Wrong number of fields)\");","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"heekit73098"},"content":"            LocalDate startDate \u003d LocalDate.parse(fields[3]);","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"heekit73098"},"content":"            LocalTime startTime \u003d LocalTime.parse(fields[4]);","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"heekit73098"},"content":"            LocalDate endDate \u003d LocalDate.parse(fields[5]);","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"heekit73098"},"content":"            LocalTime endTime \u003d LocalTime.parse(fields[6]);","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"heekit73098"},"content":"            tasks.addSavedTask(new Event(taskName, marked.equals(\"1\"), startDate, startTime,","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"heekit73098"},"content":"                    endDate, endTime));","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"heekit73098"},"content":"            break;","lastModifiedDate":"2022-02-23"},{"lineNumber":71,"author":{"gitId":"heekit73098"},"content":"        default:","lastModifiedDate":"2022-02-23"},{"lineNumber":72,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"Invalid file format.\");","lastModifiedDate":"2022-02-23"},{"lineNumber":73,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":74,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":75,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"heekit73098"},"content":"     * Get the fields of the task in the line as saved in the .txt file","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"heekit73098"},"content":"     * @param txtScanner Scanner object to read the next line in the file","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"heekit73098"},"content":"     * @return an array of string containing the fields of the task","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"heekit73098"},"content":"     * @throws DukeException if the file format is invalid","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"heekit73098"},"content":"    private String[] getFields(Scanner txtScanner) throws DukeException {","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"heekit73098"},"content":"        isLoaded \u003d true;","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"heekit73098"},"content":"        String line \u003d txtScanner.nextLine();","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"heekit73098"},"content":"        String[] fields \u003d line.split(\" \\\\| \");","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"heekit73098"},"content":"        if (fields.length \u003c TODO_FIELDS) {","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"heekit73098"},"content":"            throw new DukeException(\"Invalid File Format (Fields missing)\");","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"heekit73098"},"content":"        return fields;","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"heekit73098"},"content":"     * Loads the saved tasks from the fixed file location to the list of tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"heekit73098"},"content":"     * @param ui Ui object to handle communication with the user","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"heekit73098"},"content":"     * @param tasks TaskList object to store the saved tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"heekit73098"},"content":"    public void loadSavedTasks(Ui ui, TaskList tasks) {","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"heekit73098"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"heekit73098"},"content":"            File dirPath \u003d new File(DIR_PATH);","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"heekit73098"},"content":"            if (!dirPath.exists()){","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"heekit73098"},"content":"                dirPath.mkdirs();","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"heekit73098"},"content":"            File file \u003d new File(FILEPATH);","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"heekit73098"},"content":"            Scanner txtScanner \u003d new Scanner(file);","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"heekit73098"},"content":"            while (txtScanner.hasNext()) {","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"heekit73098"},"content":"                String[] fields \u003d getFields(txtScanner);","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"heekit73098"},"content":"                loadTask(fields, tasks);","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"heekit73098"},"content":"        }catch (DukeException | DateTimeParseException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"heekit73098"},"content":"            ui.printExceptionMessage(e.getMessage());","lastModifiedDate":"2022-02-23"},{"lineNumber":111,"author":{"gitId":"heekit73098"},"content":"            isLoaded \u003d false;","lastModifiedDate":"2022-02-23"},{"lineNumber":112,"author":{"gitId":"heekit73098"},"content":"        }catch (IOException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"heekit73098"},"content":"            isLoaded \u003d false;","lastModifiedDate":"2022-02-24"},{"lineNumber":114,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":115,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":116,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"heekit73098"},"content":"     * Save the tasks in the list into a .txt file","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"heekit73098"},"content":"     * @param ui Ui object to handle communication with the user","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"heekit73098"},"content":"     * @param tasks TaskList object that contains the list of tasks to be saved","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":122,"author":{"gitId":"heekit73098"},"content":"    public void saveTasks(Ui ui, TaskList tasks) {","lastModifiedDate":"2022-02-23"},{"lineNumber":123,"author":{"gitId":"heekit73098"},"content":"        try {","lastModifiedDate":"2022-02-23"},{"lineNumber":124,"author":{"gitId":"heekit73098"},"content":"            File dirPath \u003d new File(DIR_PATH);","lastModifiedDate":"2022-02-28"},{"lineNumber":125,"author":{"gitId":"heekit73098"},"content":"            if (!dirPath.exists()) {","lastModifiedDate":"2022-02-23"},{"lineNumber":126,"author":{"gitId":"heekit73098"},"content":"                dirPath.mkdirs();","lastModifiedDate":"2022-02-23"},{"lineNumber":127,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-23"},{"lineNumber":128,"author":{"gitId":"heekit73098"},"content":"            FileWriter file \u003d new FileWriter(FILEPATH, false);","lastModifiedDate":"2022-02-23"},{"lineNumber":129,"author":{"gitId":"heekit73098"},"content":"            String data \u003d \"\";","lastModifiedDate":"2022-02-23"},{"lineNumber":130,"author":{"gitId":"heekit73098"},"content":"            for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2022-02-23"},{"lineNumber":131,"author":{"gitId":"heekit73098"},"content":"                data +\u003d tasks.getTaskDetails(i);","lastModifiedDate":"2022-02-23"},{"lineNumber":132,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-23"},{"lineNumber":133,"author":{"gitId":"heekit73098"},"content":"            file.write(data);","lastModifiedDate":"2022-02-23"},{"lineNumber":134,"author":{"gitId":"heekit73098"},"content":"            file.close();","lastModifiedDate":"2022-02-23"},{"lineNumber":135,"author":{"gitId":"heekit73098"},"content":"        }catch (IOException e) {","lastModifiedDate":"2022-02-23"},{"lineNumber":136,"author":{"gitId":"heekit73098"},"content":"            ui.printExceptionMessage(e.getMessage());","lastModifiedDate":"2022-02-23"},{"lineNumber":137,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":138,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":139,"author":{"gitId":"heekit73098"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"heekit73098":139}},{"path":"src/duke/helper/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"package duke.helper;","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"import duke.main.DukeException;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"heekit73098"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":"import static duke.helper.Parser.INVALID;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"import static duke.helper.Ui.LINEBREAK;","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"heekit73098"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"heekit73098"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"heekit73098"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"heekit73098"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"heekit73098"},"content":" * Represents a Task List object, containing the list of tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"heekit73098"},"content":" * and the number of tasks currently present.","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"heekit73098"},"content":" * Handles all methods to do with the list of tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"heekit73098"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"heekit73098"},"content":"public class TaskList {","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"heekit73098"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"heekit73098"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"heekit73098"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"heekit73098"},"content":"    public static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"heekit73098"},"content":"    protected static int taskCount \u003d 0;","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"heekit73098"},"content":"    public int getTaskCount() {","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"heekit73098"},"content":"        return taskCount;","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"heekit73098"},"content":"     * Adds an existing saved task from storage to the list","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"heekit73098"},"content":"     * @param task the Task object of the saved task","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"heekit73098"},"content":"    public void addSavedTask(Task task) {","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"heekit73098"},"content":"        list.add(task);","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"heekit73098"},"content":"        taskCount++;","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"heekit73098"},"content":"     * Returns the string details of a task in the saving format","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"heekit73098"},"content":"     * @param index index of the task in the list to be saved","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"heekit73098"},"content":"     * @return the details of the task in the saving format","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"heekit73098"},"content":"    public String getTaskDetails(int index) {","lastModifiedDate":"2022-02-23"},{"lineNumber":46,"author":{"gitId":"heekit73098"},"content":"        return list.get(index).getTaskDetails();","lastModifiedDate":"2022-02-23"},{"lineNumber":47,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":48,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":49,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"heekit73098"},"content":"     * Prints the list of tasks in standard output","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"heekit73098"},"content":"    public void listTasks() {","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"heekit73098"},"content":"        for (int j \u003d 0; j \u003c taskCount; j++) {","lastModifiedDate":"2022-02-23"},{"lineNumber":55,"author":{"gitId":"heekit73098"},"content":"            System.out.println(Integer.toString(j + 1) + list.get(j));","lastModifiedDate":"2022-02-23"},{"lineNumber":56,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":57,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":58,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":59,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":60,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"heekit73098"},"content":"     * Search for a task based on a keyword","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"heekit73098"},"content":"     * @param keyword the keyword that the user would like to search for the task","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"heekit73098"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"heekit73098"},"content":"        String matchedTasks \u003d \"Here are the matching tasks: \\n\";","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"heekit73098"},"content":"        boolean hasMatched \u003d false;","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"heekit73098"},"content":"        for (int j \u003d 0; j \u003c taskCount; j++) {","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"heekit73098"},"content":"            boolean isMatched \u003d list.get(j).getName().contains(keyword);","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"heekit73098"},"content":"            if (isMatched) {","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"heekit73098"},"content":"                hasMatched \u003d true;","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"heekit73098"},"content":"                matchedTasks +\u003d Integer.toString(j + 1) + list.get(j) + \"\\n\";","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"heekit73098"},"content":"        if (hasMatched) {","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"heekit73098"},"content":"            System.out.println(matchedTasks);","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"heekit73098"},"content":"        }else {","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"heekit73098"},"content":"            System.out.println(\"There are no matching tasks.\");","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"heekit73098"},"content":"     * Deletes a task from the list of tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"heekit73098"},"content":"     * @param index index in the list the task to be deleted","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"heekit73098"},"content":"     * @param ui Ui object to handle communication with the user","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"heekit73098"},"content":"     * @param storage Storage object to handle saving and loading tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"heekit73098"},"content":"    public void deleteTask(int index, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-23"},{"lineNumber":90,"author":{"gitId":"heekit73098"},"content":"        if (index \u003d\u003d INVALID) {","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"heekit73098"},"content":"            return;","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"heekit73098"},"content":"        taskCount--;","lastModifiedDate":"2022-02-23"},{"lineNumber":94,"author":{"gitId":"heekit73098"},"content":"        ui.printDeleteMessage(list.get(index).toString(), taskCount);","lastModifiedDate":"2022-02-23"},{"lineNumber":95,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":96,"author":{"gitId":"heekit73098"},"content":"        list.remove((index));","lastModifiedDate":"2022-02-23"},{"lineNumber":97,"author":{"gitId":"heekit73098"},"content":"        storage.saveTasks(ui, this);","lastModifiedDate":"2022-02-23"},{"lineNumber":98,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":99,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":100,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"heekit73098"},"content":"     * Marks/Unmarks the status of the task","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"heekit73098"},"content":"     * @param index index in the list the task to be marked/unmarked","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"heekit73098"},"content":"     * @param mark boolean to show if the task should be marked or not","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"heekit73098"},"content":"     * @param ui Ui object to handle communication with the user","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"heekit73098"},"content":"     * @param storage Storage object to handle saving and loading tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"heekit73098"},"content":"    public void updateMarkTask(int index, boolean mark, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-23"},{"lineNumber":108,"author":{"gitId":"heekit73098"},"content":"        if (index \u003d\u003d INVALID) {","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"heekit73098"},"content":"            return;","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"heekit73098"},"content":"        ui.printMarkedMessage(mark, list.get(index).getName());","lastModifiedDate":"2022-02-23"},{"lineNumber":112,"author":{"gitId":"heekit73098"},"content":"        list.get(index).setMarked(mark);","lastModifiedDate":"2022-02-23"},{"lineNumber":113,"author":{"gitId":"heekit73098"},"content":"        storage.saveTasks(ui, this);","lastModifiedDate":"2022-02-23"},{"lineNumber":114,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":115,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":116,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"heekit73098"},"content":"     * Adds a Todo task to the end of the list","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"heekit73098"},"content":"     * @param parser Parser object to parse the user\u0027s input","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"heekit73098"},"content":"     * @throws DukeException if unable to parse the user\u0027s input correctly","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"heekit73098"},"content":"    public void addTodo(Parser parser) throws DukeException {","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"heekit73098"},"content":"        parser.parseTodo();","lastModifiedDate":"2022-02-24"},{"lineNumber":123,"author":{"gitId":"heekit73098"},"content":"        String taskName \u003d parser.getTaskName();","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"heekit73098"},"content":"        list.add(new Todo(taskName, false));","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":126,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":127,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":128,"author":{"gitId":"heekit73098"},"content":"     * Adds a Deadline task to the end of the list","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"heekit73098"},"content":"     * @param parser Parser object to parse the user\u0027s input","lastModifiedDate":"2022-02-28"},{"lineNumber":130,"author":{"gitId":"heekit73098"},"content":"     * @throws DukeException if unable to parse the user\u0027s input correctly","lastModifiedDate":"2022-02-28"},{"lineNumber":131,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":132,"author":{"gitId":"heekit73098"},"content":"    public void addDeadline(Parser parser) throws DukeException {","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"heekit73098"},"content":"       parser.parseDeadline();","lastModifiedDate":"2022-02-24"},{"lineNumber":134,"author":{"gitId":"heekit73098"},"content":"       String taskName \u003d parser.getTaskName();","lastModifiedDate":"2022-02-24"},{"lineNumber":135,"author":{"gitId":"heekit73098"},"content":"       LocalDate deadlineDate \u003d parser.getEndDate();","lastModifiedDate":"2022-02-24"},{"lineNumber":136,"author":{"gitId":"heekit73098"},"content":"       LocalTime deadlineTime \u003d parser.getEndTime();","lastModifiedDate":"2022-02-24"},{"lineNumber":137,"author":{"gitId":"heekit73098"},"content":"       list.add(new Deadline(taskName, false, deadlineDate, deadlineTime));","lastModifiedDate":"2022-02-24"},{"lineNumber":138,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":139,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":140,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":141,"author":{"gitId":"heekit73098"},"content":"     * Adds an Event task to the end of the list","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"heekit73098"},"content":"     * @param parser Parser object to parse the user\u0027s input","lastModifiedDate":"2022-02-28"},{"lineNumber":143,"author":{"gitId":"heekit73098"},"content":"     * @throws DukeException if unable to parse the user\u0027s input correctly","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"heekit73098"},"content":"    public void addEvent(Parser parser) throws DukeException {","lastModifiedDate":"2022-02-24"},{"lineNumber":146,"author":{"gitId":"heekit73098"},"content":"        parser.parseEvent();","lastModifiedDate":"2022-02-24"},{"lineNumber":147,"author":{"gitId":"heekit73098"},"content":"        String taskName \u003d parser.getTaskName();","lastModifiedDate":"2022-02-24"},{"lineNumber":148,"author":{"gitId":"heekit73098"},"content":"        LocalDate startDate \u003d parser.getStartDate();","lastModifiedDate":"2022-02-24"},{"lineNumber":149,"author":{"gitId":"heekit73098"},"content":"        LocalTime startTime \u003d parser.getStartTime();","lastModifiedDate":"2022-02-24"},{"lineNumber":150,"author":{"gitId":"heekit73098"},"content":"        LocalDate endDate \u003d parser.getEndDate();","lastModifiedDate":"2022-02-24"},{"lineNumber":151,"author":{"gitId":"heekit73098"},"content":"        LocalTime endTime \u003d parser.getEndTime();","lastModifiedDate":"2022-02-24"},{"lineNumber":152,"author":{"gitId":"heekit73098"},"content":"        list.add(new Event(taskName, false, startDate, startTime, endDate, endTime));","lastModifiedDate":"2022-02-24"},{"lineNumber":153,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":154,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":155,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":156,"author":{"gitId":"heekit73098"},"content":"     * Add a task to the list based on the type that the user gave","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"heekit73098"},"content":"     * @param ui Ui object to handle communication with the user","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"heekit73098"},"content":"     * @param storage Storage object to handle saving and loading tasks","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"heekit73098"},"content":"     * @param parser Parser object to parse the user\u0027s input","lastModifiedDate":"2022-02-28"},{"lineNumber":160,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":161,"author":{"gitId":"heekit73098"},"content":"    public void addNewTask(Ui ui, Storage storage, Parser parser){","lastModifiedDate":"2022-02-24"},{"lineNumber":162,"author":{"gitId":"heekit73098"},"content":"        String taskType \u003d parser.parseTaskType();","lastModifiedDate":"2022-02-24"},{"lineNumber":163,"author":{"gitId":"heekit73098"},"content":"        parser.removeCommand(taskType);","lastModifiedDate":"2022-02-24"},{"lineNumber":164,"author":{"gitId":"heekit73098"},"content":"        try {","lastModifiedDate":"2022-02-23"},{"lineNumber":165,"author":{"gitId":"heekit73098"},"content":"            switch (taskType) {","lastModifiedDate":"2022-02-23"},{"lineNumber":166,"author":{"gitId":"heekit73098"},"content":"            case TODO:","lastModifiedDate":"2022-02-23"},{"lineNumber":167,"author":{"gitId":"heekit73098"},"content":"                addTodo(parser);","lastModifiedDate":"2022-02-24"},{"lineNumber":168,"author":{"gitId":"heekit73098"},"content":"                break;","lastModifiedDate":"2022-02-23"},{"lineNumber":169,"author":{"gitId":"heekit73098"},"content":"            case DEADLINE:","lastModifiedDate":"2022-02-23"},{"lineNumber":170,"author":{"gitId":"heekit73098"},"content":"                addDeadline(parser);","lastModifiedDate":"2022-02-24"},{"lineNumber":171,"author":{"gitId":"heekit73098"},"content":"                break;","lastModifiedDate":"2022-02-23"},{"lineNumber":172,"author":{"gitId":"heekit73098"},"content":"            case EVENT:","lastModifiedDate":"2022-02-23"},{"lineNumber":173,"author":{"gitId":"heekit73098"},"content":"                addEvent(parser);","lastModifiedDate":"2022-02-24"},{"lineNumber":174,"author":{"gitId":"heekit73098"},"content":"                break;","lastModifiedDate":"2022-02-23"},{"lineNumber":175,"author":{"gitId":"heekit73098"},"content":"            default:","lastModifiedDate":"2022-02-23"},{"lineNumber":176,"author":{"gitId":"heekit73098"},"content":"                throw new DukeException(\"Command not recognised.\");","lastModifiedDate":"2022-02-23"},{"lineNumber":177,"author":{"gitId":"heekit73098"},"content":"            }","lastModifiedDate":"2022-02-23"},{"lineNumber":178,"author":{"gitId":"heekit73098"},"content":"        }catch (DukeException e) {","lastModifiedDate":"2022-02-23"},{"lineNumber":179,"author":{"gitId":"heekit73098"},"content":"            ui.printExceptionMessage(e.getMessage());","lastModifiedDate":"2022-02-23"},{"lineNumber":180,"author":{"gitId":"heekit73098"},"content":"            return;","lastModifiedDate":"2022-02-23"},{"lineNumber":181,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":182,"author":{"gitId":"heekit73098"},"content":"        ui.printAddTaskMessage(list.get(taskCount).toString(), taskCount + 1);","lastModifiedDate":"2022-02-23"},{"lineNumber":183,"author":{"gitId":"heekit73098"},"content":"        taskCount++;","lastModifiedDate":"2022-02-23"},{"lineNumber":184,"author":{"gitId":"heekit73098"},"content":"        storage.saveTasks(ui, this);","lastModifiedDate":"2022-02-23"},{"lineNumber":185,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":186,"author":{"gitId":"heekit73098"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"heekit73098":186}},{"path":"src/duke/helper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"package duke.helper;","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":" * Represents an object to handle communication to the user","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"heekit73098"},"content":"public class Ui {","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"    public static final String LINEBREAK \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"     * Prints to standard output the error message received","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"heekit73098"},"content":"     * @param message message of the error faced","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"heekit73098"},"content":"    public void printExceptionMessage(String message) {","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"heekit73098"},"content":"        System.out.println(\" Error: \" + message);","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"heekit73098"},"content":"     * Prints to standard output the message when a task is marked/unmarked","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"heekit73098"},"content":"     * @param mark boolean to show if the task is marked or not","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"heekit73098"},"content":"     * @param taskName Task name that was marked/unmarked","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"heekit73098"},"content":"    public void printMarkedMessage(boolean mark, String taskName) {","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"heekit73098"},"content":"        if (mark) {","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"heekit73098"},"content":"            System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"heekit73098"},"content":"            System.out.println(\"  [X] \" + taskName);","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"heekit73098"},"content":"        }else {","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"heekit73098"},"content":"            System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"heekit73098"},"content":"            System.out.println(\"  [ ] \" + taskName);","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"heekit73098"},"content":"     * Prints to standard output the message when a task is added","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"heekit73098"},"content":"     * @param task task object added to the list","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"heekit73098"},"content":"     * @param taskCount number of tasks in the list currently","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"heekit73098"},"content":"    public void printAddTaskMessage(String task, int taskCount) {","lastModifiedDate":"2022-02-23"},{"lineNumber":42,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"heekit73098"},"content":"        System.out.println(\" added: \" + task);","lastModifiedDate":"2022-02-23"},{"lineNumber":44,"author":{"gitId":"heekit73098"},"content":"        System.out.println(\" Total number of tasks now: \" + taskCount);","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":46,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":47,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":48,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"heekit73098"},"content":"     * Prints to standard output the start up message","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"heekit73098"},"content":"     * @param isLoaded boolean to check if the save file was loaded or not","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"heekit73098"},"content":"    public void printStartUpMessage(boolean isLoaded) {","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"heekit73098"},"content":"        System.out.println(\" Hello! I\u0027m Duke\\n What can I do for you?\");","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":55,"author":{"gitId":"heekit73098"},"content":"        if (isLoaded) {","lastModifiedDate":"2022-02-23"},{"lineNumber":56,"author":{"gitId":"heekit73098"},"content":"            System.out.println(\" Loaded Save File.\");","lastModifiedDate":"2022-02-23"},{"lineNumber":57,"author":{"gitId":"heekit73098"},"content":"            System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":58,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":59,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":60,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":61,"author":{"gitId":"heekit73098"},"content":"    public void printExitMessage() {","lastModifiedDate":"2022-02-23"},{"lineNumber":62,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":63,"author":{"gitId":"heekit73098"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-23"},{"lineNumber":64,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":65,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":66,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":67,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"heekit73098"},"content":"     * Print to standard output the message when a task is deleted","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"heekit73098"},"content":"     * @param task the task object that was deleted","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"heekit73098"},"content":"     * @param taskCount number of tasks in the list currently","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"heekit73098"},"content":"    public void printDeleteMessage(String task, int taskCount) {","lastModifiedDate":"2022-02-23"},{"lineNumber":73,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":74,"author":{"gitId":"heekit73098"},"content":"        System.out.println(\" I have removed this task:\");","lastModifiedDate":"2022-02-23"},{"lineNumber":75,"author":{"gitId":"heekit73098"},"content":"        System.out.println(task);","lastModifiedDate":"2022-02-23"},{"lineNumber":76,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":77,"author":{"gitId":"heekit73098"},"content":"        System.out.println(\" Total number of tasks now: \" + taskCount);","lastModifiedDate":"2022-02-23"},{"lineNumber":78,"author":{"gitId":"heekit73098"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":79,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":80,"author":{"gitId":"heekit73098"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"heekit73098":80}},{"path":"src/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"package duke.main;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"import duke.helper.Storage;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":"import duke.helper.TaskList;","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":"import duke.helper.Ui;","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"heekit73098"},"content":"import duke.helper.Parser;","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":"    private static final Storage storage \u003d new Storage();","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"    private static final TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"heekit73098"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"heekit73098"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"heekit73098"},"content":"    public static void run() {","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"heekit73098"},"content":"        storage.loadSavedTasks(ui, tasks);","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"heekit73098"},"content":"        ui.printStartUpMessage(storage.isLoaded());","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"heekit73098"},"content":"        parser.waitForInput(ui, storage, tasks);","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"heekit73098"},"content":"        ui.printExitMessage();","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"heekit73098"},"content":"    public static void main(String[] args){","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"heekit73098"},"content":"        run();","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"heekit73098":22,"-":3}},{"path":"src/duke/main/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"package duke.main;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":" * Represents the exceptions that are specific to the application","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"heekit73098"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"    public DukeException(String message){","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"heekit73098"},"content":"        super(message);","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"heekit73098":10}},{"path":"src/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"package duke.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"heekit73098"},"content":" * Represents a Deadline object. A Task with a deadline","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"heekit73098"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"heekit73098"},"content":"    protected LocalTime deadlineTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"heekit73098"},"content":"    public Deadline(String name, boolean marked, LocalDate deadlineDate, LocalTime deadlineTime) {","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"heekit73098"},"content":"        super(name, marked);","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"heekit73098"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"heekit73098"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"heekit73098"},"content":"     * Get the deadline in a string format that is more readible for the user","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"heekit73098"},"content":"     * @return a string of the deadline that is more readible for the user","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"heekit73098"},"content":"    private String getDeadline() {","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"heekit73098"},"content":"        String deadline \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \";","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"heekit73098"},"content":"        deadline +\u003d deadlineTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"heekit73098"},"content":"        return deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"heekit73098"},"content":"     * Get a string representation of the deadline in the save format","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"heekit73098"},"content":"     * @return string of the deadline in the save format","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"heekit73098"},"content":"    private String getDeadlineDetails() {","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"heekit73098"},"content":"        return deadlineDate + \" | \" + deadlineTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"heekit73098"},"content":"     * Converts the Deadline object into string format","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"heekit73098"},"content":"     * @return a string representation of the Deadline object","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"heekit73098"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"heekit73098"},"content":"        if (super.getMarked()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"heekit73098"},"content":"            return \" [D][X] \" + getName() + \" (by: \" + getDeadline() + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"heekit73098"},"content":"        }else {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"heekit73098"},"content":"            return \" [D][ ] \" + getName() + \" (by: \" + getDeadline() + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":50,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"heekit73098"},"content":"     * Converts the Deadline object into string format for storage","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"heekit73098"},"content":"     * @return a string representation of the Deadline object to be stored","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"heekit73098"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"heekit73098"},"content":"        return \"deadline | \" + (getMarked() ? 1:0) + \" | \" + getName() + \" | \" + getDeadlineDetails() + \"\\n\";","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"heekit73098"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"heekit73098":57}},{"path":"src/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"package duke.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"heekit73098"},"content":" * Represents an Event object. A Task with a timing","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"heekit73098"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"heekit73098"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"heekit73098"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"heekit73098"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"heekit73098"},"content":"    public Event(String name, boolean marked, LocalDate startDate, LocalTime startTime,","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"heekit73098"},"content":"                 LocalDate endDate, LocalTime endTime) {","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"heekit73098"},"content":"        super(name, marked);","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"heekit73098"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"heekit73098"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"heekit73098"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"heekit73098"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"heekit73098"},"content":"     * Get the event timing in a string format that is more readible for the user","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"heekit73098"},"content":"     * @return a string of the event timing that is more readible for the user","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"heekit73098"},"content":"    private String getEventTime() {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"heekit73098"},"content":"        String eventTime \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \";","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"heekit73098"},"content":"        eventTime +\u003d startTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \" to \";","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"heekit73098"},"content":"        eventTime +\u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \";","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"heekit73098"},"content":"        eventTime +\u003d endTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"heekit73098"},"content":"        return eventTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"heekit73098"},"content":"     * Get a string representation of the event time in the save format","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"heekit73098"},"content":"     * @return string of the event time in the save format","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"heekit73098"},"content":"    public String getEventTimeDetails(){","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"heekit73098"},"content":"        return startDate + \" | \" + startTime + \" | \" + endDate + \" | \" + endTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"heekit73098"},"content":"     * Converts the Event object into string format","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"heekit73098"},"content":"     * @return a string representation of the Event object","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"heekit73098"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"heekit73098"},"content":"        if (super.getMarked()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"heekit73098"},"content":"            return \" [E][X] \" + getName() + \" (at: \" + getEventTime() + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"heekit73098"},"content":"        }else {","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"heekit73098"},"content":"            return \" [E][ ] \" + getName() + \" (at: \" + getEventTime() + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":57,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"heekit73098"},"content":"     * Converts the Event object into string format for storage","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"heekit73098"},"content":"     * @return a string representation of the Event object to be stored","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"heekit73098"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"heekit73098"},"content":"        return \"event | \" + (getMarked() ? 1:0) + \" | \" + getName() + \" | \" + getEventTimeDetails() + \"\\n\";","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"heekit73098"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"heekit73098":64}},{"path":"src/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"package duke.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":" * Represents a generic task object","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"heekit73098"},"content":"public class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"    private String name;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"heekit73098"},"content":"    private boolean isMarked;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"    public String getName(){","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"heekit73098"},"content":"        return name;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"heekit73098"},"content":"    public boolean getMarked(){","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"heekit73098"},"content":"        return isMarked;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"heekit73098"},"content":"    public void setMarked(boolean marked){","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"heekit73098"},"content":"        this.isMarked \u003d marked;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"heekit73098"},"content":"    public Task(String name, boolean isMarked) {","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"heekit73098"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"heekit73098"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"heekit73098"},"content":"     * Converts the task object into string format","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"heekit73098"},"content":"     * @return a string representation of the task object","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"heekit73098"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"heekit73098"},"content":"        return \" [ ][ ] \" + getName();","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"heekit73098"},"content":"     * Converts the task object into string format for storage","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"heekit73098"},"content":"     * @return a string representation of the task object to be stored","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"heekit73098"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"heekit73098"},"content":"        return \"task | \" + (getMarked() ? 1:0) + \" | \" + getName() + \"\\n\";","lastModifiedDate":"2022-02-23"},{"lineNumber":41,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"heekit73098"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"heekit73098":42}},{"path":"src/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"package duke.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":" * Represents a Todo object. A Task without any deadlines or timings","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"heekit73098"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"heekit73098"},"content":"    public Todo(String name, boolean marked){","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"heekit73098"},"content":"        super(name,marked);","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"heekit73098"},"content":"     * Converts the Todo object into string format","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"heekit73098"},"content":"     * @return a string representation of the Todo object","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"heekit73098"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"heekit73098"},"content":"        if (super.getMarked()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"heekit73098"},"content":"            return \" [T][X] \" + getName();","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"heekit73098"},"content":"        }else {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"heekit73098"},"content":"            return \" [T][ ] \" + getName();","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"heekit73098"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"heekit73098"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"heekit73098"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"heekit73098"},"content":"     * Converts the Todo object into string format for storage","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"heekit73098"},"content":"     * @return a string representation of the Todo object to be stored","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"heekit73098"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"heekit73098"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"heekit73098"},"content":"        return \"todo | \" + (getMarked() ? 1:0) + \" | \" + getName() + \"\\n\";","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"heekit73098"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"heekit73098"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"heekit73098":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"heekit73098"},"content":"todo borrow book","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"heekit73098"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"heekit73098"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"heekit73098"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"heekit73098"},"content":"list","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"heekit73098":5}}]
