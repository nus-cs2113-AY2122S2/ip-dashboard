[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"# Duke.Duke project template","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nnythingy":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"Duke is a CLI app for managing tasks that any user might need","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"* [Quick Start][1]","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"* [Features][2]","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"  * [Add task][3]","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"    * [Todo][11]","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    * [Deadline][12]","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"    * [Event][13]","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"  * [delete task][4]","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"  * [list all tasks][5]","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"  * [mark task as done][6]","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"  * [unmark task as undone][7]","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"  * [find a task][8]","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"  * [exit][9]","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"* [command summary][10]","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"* ","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"## Quick Start","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"1. Ensure that you have [Java 11](https://www.oracle.com/java/technologies/downloads/#java11) or above installed in your Computer","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"2. Download the latest `Duke.jar` from [here]()","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"3. Copy the file to the folder you want to use as the home folder for Duke","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"4. Open the terminal in the folder which contains `Duke.jar` and run `java -jar Duke.jar`. The Startup should look like below:","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"```","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"Nnythingy"},"content":"Hello! I\u0027m Duke`","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"Nnythingy"},"content":"What can I do for you?`","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"Nnythingy"},"content":"```","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"Nnythingy"},"content":"5. Type the commands in the terminal and press Enter to execute them. For example: typing `list` and pressing Enter will show you all the current tasks in the list.","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"Nnythingy"},"content":"This should show up empty if this is your first time opening Duke. Check [Command Summary][10] for example commands to use.","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"Nnythingy"},"content":"### Feature Add Task","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"Nnythingy"},"content":"A task is considered as either a `Todo`, `Deadline`, or `Event`.","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"Nnythingy"},"content":"- A `todo` task will contain the description of the task to be done.","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"Nnythingy"},"content":"- A `Deadline` task will contain the description of the task to be done **and** the due date for when the task must be done.","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"Nnythingy"},"content":"- An `Event` task similarly will contain the description of the task **and** the time for when the event will happen.","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"Nnythingy"},"content":"#### Adding a todo task:`todo`","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"Nnythingy"},"content":"create a new `todo` task and add to the list of tasks.","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"Nnythingy"},"content":"format: `todo \"description of task\"`","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"Nnythingy"},"content":"eg: ","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"Nnythingy"},"content":"* `todo buy bread` which creates a `todo` task to buy bread","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"Nnythingy"},"content":"#### Adding a deadline task:`deadline`","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"Nnythingy"},"content":"Create a new `deadline` task and add to the list of tasks.","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"Nnythingy"},"content":"format: `deadline \"description of task\" /by \"time which task is due\"`","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"Nnythingy"},"content":"eg:","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"Nnythingy"},"content":"* `deadline buy bread /by Monday` which creates a `deadline` task to buy bread by monday","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"Nnythingy"},"content":"* `deadline buy bread /by 2022-02-27` which creates a `deadline` task to buy bread by yyyy-mm-dd specified.","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"Nnythingy"},"content":"* `deadline buy bread /by 2022-02-27 5pm` which creates a `deadline` task to buy bread by yyyy-mm-dd specified at the time specified (5pm)","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"Nnythingy"},"content":"* `deadline buy bread /by 2022-02-27 17:00` which creates a `deadline` task to buy bread by yyyy-mm-dd specified at the time specified in 24 hours format (17:00).","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"Nnythingy"},"content":"#### Adding a event task:`event`","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"Nnythingy"},"content":"Create a new `event` task and add to the list of tasks.","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"Nnythingy"},"content":"format: `event \"description of task\" /at \"time which task is due\"`","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"Nnythingy"},"content":"eg:","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"Nnythingy"},"content":"* `event buy bread /at Monday` which creates a `event` task to buy bread by monday","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"Nnythingy"},"content":"* `event buy bread /at 2022-02-27` which creates a `event` task to buy bread by yyyy-mm-dd specified.","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"Nnythingy"},"content":"* `event buy bread /at 2022-02-27 5pm` which creates a `event` task to buy bread by yyyy-mm-dd specified at the time specified (5pm)","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"Nnythingy"},"content":"* `event buy bread /at 2022-02-27 17:00` which creates a `event` task to buy bread by yyyy-mm-dd specified at the time specified in 24 hours format (17:00).","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"Nnythingy"},"content":"### Feature Deleting a Task:`delete`","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"Nnythingy"},"content":"Deletes a task which was previously added from the list of tasks.","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"Nnythingy"},"content":"format: `delete \"task number\"`","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":76,"author":{"gitId":"Nnythingy"},"content":"eg:","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"Nnythingy"},"content":"* `delete 1` deletes the 1st task","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"Nnythingy"},"content":"* `delete 5` deletes the 5th task","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"Nnythingy"},"content":"**Note:** Deletion can only occur after tasks have been added to the list.","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"Nnythingy"},"content":"### Feature List All Tasks:`list`","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"Nnythingy"},"content":"List all current tasks added","lastModifiedDate":"2022-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"Nnythingy"},"content":"format: `list`","lastModifiedDate":"2022-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"Nnythingy"},"content":"eg:","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"Nnythingy"},"content":"* `list` will show all tasks currently added","lastModifiedDate":"2022-02-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":90,"author":{"gitId":"Nnythingy"},"content":"```","lastModifiedDate":"2022-02-25"},{"lineNumber":91,"author":{"gitId":"Nnythingy"},"content":"$ list","lastModifiedDate":"2022-02-25"},{"lineNumber":92,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":93,"author":{"gitId":"Nnythingy"},"content":" here are the tasks in your list:","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"Nnythingy"},"content":" 1.[T][ ] buy bread","lastModifiedDate":"2022-02-25"},{"lineNumber":95,"author":{"gitId":"Nnythingy"},"content":" 2.[D][ ] buy bread (by: feb 27 2022 17:00)","lastModifiedDate":"2022-02-25"},{"lineNumber":96,"author":{"gitId":"Nnythingy"},"content":" 3.[E][ ] buy bread (at: feb 27 2022 17:00)","lastModifiedDate":"2022-02-25"},{"lineNumber":97,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":98,"author":{"gitId":"Nnythingy"},"content":"```","lastModifiedDate":"2022-02-25"},{"lineNumber":99,"author":{"gitId":"Nnythingy"},"content":"### Feature Mark Task as Done:`mark`","lastModifiedDate":"2022-02-25"},{"lineNumber":100,"author":{"gitId":"Nnythingy"},"content":"Marks a specific task as completed","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"Nnythingy"},"content":"format: `mark \"task number\"`","lastModifiedDate":"2022-02-25"},{"lineNumber":103,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":104,"author":{"gitId":"Nnythingy"},"content":"eg:","lastModifiedDate":"2022-02-25"},{"lineNumber":105,"author":{"gitId":"Nnythingy"},"content":"* `mark 1` mark the 1st task","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"Nnythingy"},"content":"* `mark 5` mark the 5th task","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":108,"author":{"gitId":"Nnythingy"},"content":"```","lastModifiedDate":"2022-02-25"},{"lineNumber":109,"author":{"gitId":"Nnythingy"},"content":"$ mark 1","lastModifiedDate":"2022-02-25"},{"lineNumber":110,"author":{"gitId":"Nnythingy"},"content":"$ list","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":112,"author":{"gitId":"Nnythingy"},"content":" here are the tasks in your list:","lastModifiedDate":"2022-02-25"},{"lineNumber":113,"author":{"gitId":"Nnythingy"},"content":" 1.[T][X] buy bread","lastModifiedDate":"2022-02-25"},{"lineNumber":114,"author":{"gitId":"Nnythingy"},"content":" 2.[D][ ] buy bread (by: feb 27 2022 17:00)","lastModifiedDate":"2022-02-25"},{"lineNumber":115,"author":{"gitId":"Nnythingy"},"content":" 3.[E][ ] buy bread (at: feb 27 2022 17:00)","lastModifiedDate":"2022-02-25"},{"lineNumber":116,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":117,"author":{"gitId":"Nnythingy"},"content":"```","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"Nnythingy"},"content":"**Note:** Marking a task can only occur after that task has been added to the list.","lastModifiedDate":"2022-02-25"},{"lineNumber":120,"author":{"gitId":"Nnythingy"},"content":"### Feature Unmark Task as Not Done:`unmark`","lastModifiedDate":"2022-02-25"},{"lineNumber":121,"author":{"gitId":"Nnythingy"},"content":"Unmarks a specific task as **not** completed","lastModifiedDate":"2022-02-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"Nnythingy"},"content":"format: `unmark \"task number\"`","lastModifiedDate":"2022-02-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"Nnythingy"},"content":"eg:","lastModifiedDate":"2022-02-25"},{"lineNumber":126,"author":{"gitId":"Nnythingy"},"content":"* `unmark 1` mark the 1st task","lastModifiedDate":"2022-02-25"},{"lineNumber":127,"author":{"gitId":"Nnythingy"},"content":"* `unmark 5` mark the 5th task","lastModifiedDate":"2022-02-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":129,"author":{"gitId":"Nnythingy"},"content":"```","lastModifiedDate":"2022-02-25"},{"lineNumber":130,"author":{"gitId":"Nnythingy"},"content":"$ list","lastModifiedDate":"2022-02-25"},{"lineNumber":131,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":132,"author":{"gitId":"Nnythingy"},"content":" here are the tasks in your list:","lastModifiedDate":"2022-02-25"},{"lineNumber":133,"author":{"gitId":"Nnythingy"},"content":" 1.[T][X] buy bread","lastModifiedDate":"2022-02-25"},{"lineNumber":134,"author":{"gitId":"Nnythingy"},"content":" 2.[D][ ] buy bread (by: feb 27 2022 17:00)","lastModifiedDate":"2022-02-25"},{"lineNumber":135,"author":{"gitId":"Nnythingy"},"content":" 3.[E][ ] buy bread (at: feb 27 2022 17:00)","lastModifiedDate":"2022-02-25"},{"lineNumber":136,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":137,"author":{"gitId":"Nnythingy"},"content":"$ unmark 1","lastModifiedDate":"2022-02-25"},{"lineNumber":138,"author":{"gitId":"Nnythingy"},"content":"$ list","lastModifiedDate":"2022-02-25"},{"lineNumber":139,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":140,"author":{"gitId":"Nnythingy"},"content":" here are the tasks in your list:","lastModifiedDate":"2022-02-25"},{"lineNumber":141,"author":{"gitId":"Nnythingy"},"content":" 1.[T][ ] buy bread","lastModifiedDate":"2022-02-25"},{"lineNumber":142,"author":{"gitId":"Nnythingy"},"content":" 2.[D][ ] buy bread (by: feb 27 2022 17:00)","lastModifiedDate":"2022-02-25"},{"lineNumber":143,"author":{"gitId":"Nnythingy"},"content":" 3.[E][ ] buy bread (at: feb 27 2022 17:00)","lastModifiedDate":"2022-02-25"},{"lineNumber":144,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":145,"author":{"gitId":"Nnythingy"},"content":"```","lastModifiedDate":"2022-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"Nnythingy"},"content":"**Note:** Unmarking a task can only occur after that task has been marked in the list.","lastModifiedDate":"2022-02-25"},{"lineNumber":148,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":149,"author":{"gitId":"Nnythingy"},"content":"### Feature Find a task:`find`","lastModifiedDate":"2022-02-25"},{"lineNumber":150,"author":{"gitId":"Nnythingy"},"content":"Find a task based on the task\u0027s description","lastModifiedDate":"2022-02-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"Nnythingy"},"content":"format: `todo \"keyword\"`","lastModifiedDate":"2022-02-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"Nnythingy"},"content":"eg:","lastModifiedDate":"2022-02-25"},{"lineNumber":155,"author":{"gitId":"Nnythingy"},"content":"* `find bread` which will find all tasks which has bread in their description","lastModifiedDate":"2022-02-25"},{"lineNumber":156,"author":{"gitId":"Nnythingy"},"content":"* `find buy bread` which will find all tasks which has buying bread in their description","lastModifiedDate":"2022-02-25"},{"lineNumber":157,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":158,"author":{"gitId":"Nnythingy"},"content":"### Feature Exit:`bye`","lastModifiedDate":"2022-02-25"},{"lineNumber":159,"author":{"gitId":"Nnythingy"},"content":"Exit out the program","lastModifiedDate":"2022-02-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":161,"author":{"gitId":"Nnythingy"},"content":"format: `bye`","lastModifiedDate":"2022-02-25"},{"lineNumber":162,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":163,"author":{"gitId":"Nnythingy"},"content":"eg:","lastModifiedDate":"2022-02-25"},{"lineNumber":164,"author":{"gitId":"Nnythingy"},"content":"* `bye` exit","lastModifiedDate":"2022-02-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":167,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":168,"author":{"gitId":"Nnythingy"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-02-25"},{"lineNumber":169,"author":{"gitId":"Nnythingy"},"content":"____________________________________________________________","lastModifiedDate":"2022-02-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":171,"author":{"gitId":"Nnythingy"},"content":"## Command Summary","lastModifiedDate":"2022-02-25"},{"lineNumber":172,"author":{"gitId":"Nnythingy"},"content":" |Action             | Format                             |","lastModifiedDate":"2022-02-25"},{"lineNumber":173,"author":{"gitId":"Nnythingy"},"content":" |-------------------|------------------------------------|","lastModifiedDate":"2022-02-25"},{"lineNumber":174,"author":{"gitId":"Nnythingy"},"content":" |**[Todo][11]**     | `todo \"description\"`               |","lastModifiedDate":"2022-02-25"},{"lineNumber":175,"author":{"gitId":"Nnythingy"},"content":" |**[Deadline][12]** | `deadline \"description\" /by \"time\"`|","lastModifiedDate":"2022-02-25"},{"lineNumber":176,"author":{"gitId":"Nnythingy"},"content":" |**[Event][13]**    | `event \"description\" /at \"time\"`   |","lastModifiedDate":"2022-02-25"},{"lineNumber":177,"author":{"gitId":"Nnythingy"},"content":" |**[Delete][4]**    | `delete \"index\"`                   |","lastModifiedDate":"2022-02-25"},{"lineNumber":178,"author":{"gitId":"Nnythingy"},"content":" |**[List][5]**      | `list`                             |","lastModifiedDate":"2022-02-25"},{"lineNumber":179,"author":{"gitId":"Nnythingy"},"content":" |**[Mark][6]**      | `mark \"index\"`                     |","lastModifiedDate":"2022-02-25"},{"lineNumber":180,"author":{"gitId":"Nnythingy"},"content":" |**[Unmark][7]**    | `unmark \"index\"`                   |","lastModifiedDate":"2022-02-25"},{"lineNumber":181,"author":{"gitId":"Nnythingy"},"content":" |**[Find][8]**      | `find \"keywords\"`                  |","lastModifiedDate":"2022-02-25"},{"lineNumber":182,"author":{"gitId":"Nnythingy"},"content":" |**[Exit][9]**      | `bye`                              |","lastModifiedDate":"2022-02-25"},{"lineNumber":183,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":184,"author":{"gitId":"Nnythingy"},"content":"[1]: https://nnythingy.github.io/ip/#quick-start","lastModifiedDate":"2022-02-25"},{"lineNumber":185,"author":{"gitId":"Nnythingy"},"content":"[2]: https://nnythingy.github.io/ip/#features","lastModifiedDate":"2022-02-25"},{"lineNumber":186,"author":{"gitId":"Nnythingy"},"content":"[3]: https://nnythingy.github.io/ip/#feature-add-task","lastModifiedDate":"2022-02-25"},{"lineNumber":187,"author":{"gitId":"Nnythingy"},"content":"[4]: https://nnythingy.github.io/ip/#feature-deleting-a-taskdelete","lastModifiedDate":"2022-02-25"},{"lineNumber":188,"author":{"gitId":"Nnythingy"},"content":"[5]: https://nnythingy.github.io/ip/#feature-list-all-taskslist","lastModifiedDate":"2022-02-25"},{"lineNumber":189,"author":{"gitId":"Nnythingy"},"content":"[6]: https://nnythingy.github.io/ip/#feature-mark-task-as-donemark","lastModifiedDate":"2022-02-25"},{"lineNumber":190,"author":{"gitId":"Nnythingy"},"content":"[7]: https://nnythingy.github.io/ip/#feature-unmark-task-as-not-doneunmark","lastModifiedDate":"2022-02-25"},{"lineNumber":191,"author":{"gitId":"Nnythingy"},"content":"[8]: https://nnythingy.github.io/ip/#feature-find-a-taskfind","lastModifiedDate":"2022-02-25"},{"lineNumber":192,"author":{"gitId":"Nnythingy"},"content":"[9]: https://nnythingy.github.io/ip/#feature-exitbye","lastModifiedDate":"2022-02-25"},{"lineNumber":193,"author":{"gitId":"Nnythingy"},"content":"[10]: https://nnythingy.github.io/ip/#command-summary","lastModifiedDate":"2022-02-25"},{"lineNumber":194,"author":{"gitId":"Nnythingy"},"content":"[11]: https://nnythingy.github.io/ip/#adding-a-todo-tasktodo","lastModifiedDate":"2022-02-25"},{"lineNumber":195,"author":{"gitId":"Nnythingy"},"content":"[12]: https://nnythingy.github.io/ip/#adding-a-deadline-taskdeadline","lastModifiedDate":"2022-02-25"},{"lineNumber":196,"author":{"gitId":"Nnythingy"},"content":"[13]: https:/nnythingy.github.io/ip//#adding-a-event-taskevent","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"Nnythingy":173,"-":23}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"import java.sql.Time;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"    protected String by;","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    protected TimeHandler dateTime;","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"    public Deadline(String description, String by) throws DukeExceptionTiming {","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"        this.dateTime \u003d new TimeHandler(by);","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"                formatter.format(dateTime.getLocalDateTime()) + \")\\n\";","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Nnythingy":23}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"public class Duke {","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"        String welcome\u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"                \" Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"                \"____________________________________________________________\\n\";","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"        System.out.println(welcome);","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"    public static void byeMessage() {","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"        String goodBye \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"                \"____________________________________________________________\\n\";","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"        System.out.println(goodBye);","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"        welcomeMessage();","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"        UserInterface.userInterface();","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"        byeMessage();","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"Nnythingy":24}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionList extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionTiming extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionDescription extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionCommand extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionMark extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionMarkBounds extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionFind extends DukeException {","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"Nnythingy":25}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"import java.sql.Time;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"    protected String at;","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    protected TimeHandler dateTime;","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"    public Event (String taskName, String at) throws DukeExceptionTiming{","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"        super(taskName);","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"        this.dateTime \u003d new TimeHandler(at);","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"                formatter.format(dateTime.getLocalDateTime()) + \")\\n\";","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Nnythingy":23}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":" * Duke.Tokenise is to help split user input","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":" * into individual strings for sanitisation","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":" * and other checks","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"public class Parser {","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"    private String[] tokens \u003d new String[]{};","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"    private int markIndex;","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"    private String description;","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"    private String time;","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"    public Parser(String userInput) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"        tokens \u003d userInput.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"        switch (tokens[0]) {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"        case \"list\":","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length !\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionList();","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"Nnythingy"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionDescription();","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"Nnythingy"},"content":"            int deadlineBy \u003d findIndex(tokens, \"/by\");","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"Nnythingy"},"content":"            if (deadlineBy \u003e 0) {","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"Nnythingy"},"content":"                //remove keyword deadline and deadline time from raw user input","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"Nnythingy"},"content":"                description \u003d combineToken(tokens, 1, deadlineBy);","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"Nnythingy"},"content":"                time \u003d combineToken(tokens, deadlineBy + 1);","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"Nnythingy"},"content":"            } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionTiming();","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"Nnythingy"},"content":"        case \"event\":","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionDescription();","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"Nnythingy"},"content":"            int eventAt \u003d findIndex(tokens, \"/at\");","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"Nnythingy"},"content":"            if (eventAt \u003e 0) {","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"Nnythingy"},"content":"                //remove keyword deadline and deadline time from raw user input","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"Nnythingy"},"content":"                description \u003d combineToken(tokens, 1, eventAt);","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"Nnythingy"},"content":"                time \u003d combineToken(tokens, eventAt + 1);","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"Nnythingy"},"content":"            } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionTiming();","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"Nnythingy"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionDescription();","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"Nnythingy"},"content":"            description \u003d combineToken(tokens, 1);","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"Nnythingy"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"Nnythingy"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"Nnythingy"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"Nnythingy"},"content":"            //checking if value after mark or unmark is a number","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length !\u003d 2) {","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionMark();","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"Nnythingy"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"Nnythingy"},"content":"                markIndex \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"Nnythingy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionMark();","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"Nnythingy"},"content":"        case \"find\":","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionFind();","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"Nnythingy"},"content":"            this.description \u003d combineToken(tokens, 1);","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"Nnythingy"},"content":"        default:","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"Nnythingy"},"content":"            throw new DukeExceptionCommand();","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"Nnythingy"},"content":"    public int getMarkIndex() {","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"Nnythingy"},"content":"        return markIndex;","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"Nnythingy"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"Nnythingy"},"content":"        return description;","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"Nnythingy"},"content":"    public String getTime() {","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"Nnythingy"},"content":"        return time;","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":94,"author":{"gitId":"Nnythingy"},"content":"    public String[] getTokens() {","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"Nnythingy"},"content":"        return tokens;","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"Nnythingy"},"content":"     * Finds the index of word in the string array","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"Nnythingy"},"content":"     * mimicking the use of an array list","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"Nnythingy"},"content":"     * @param tokens string to search of in tokens array","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"Nnythingy"},"content":"     * @param word string to search of in tokens array","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"Nnythingy"},"content":"     * @return index of word in tokens array, or -1 if word is not found","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"Nnythingy"},"content":"    private int findIndex(String[] tokens, String word) {","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"Nnythingy"},"content":"        for (int i \u003d 0; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"Nnythingy"},"content":"            if (tokens[i].equals(word)) {","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"Nnythingy"},"content":"                return i;","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":110,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":111,"author":{"gitId":"Nnythingy"},"content":"        return -1;","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":115,"author":{"gitId":"Nnythingy"},"content":"     * This will combine the Token into a String for the actual Duke.Task","lastModifiedDate":"2022-02-20"},{"lineNumber":116,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":117,"author":{"gitId":"Nnythingy"},"content":"     * @param tokens User input token","lastModifiedDate":"2022-02-07"},{"lineNumber":118,"author":{"gitId":"Nnythingy"},"content":"     * @param startIndex Where to start copying the tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":119,"author":{"gitId":"Nnythingy"},"content":"     * @return combinedToken String of the combined tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":120,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":121,"author":{"gitId":"Nnythingy"},"content":"    private String combineToken(String[] tokens, int startIndex) {","lastModifiedDate":"2022-02-07"},{"lineNumber":122,"author":{"gitId":"Nnythingy"},"content":"        String combinedToken \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":123,"author":{"gitId":"Nnythingy"},"content":"        for (int i \u003d startIndex; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-02-07"},{"lineNumber":124,"author":{"gitId":"Nnythingy"},"content":"            combinedToken \u003d combinedToken + tokens[i] + \" \";","lastModifiedDate":"2022-02-07"},{"lineNumber":125,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":126,"author":{"gitId":"Nnythingy"},"content":"        return combinedToken.trim();","lastModifiedDate":"2022-02-07"},{"lineNumber":127,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":128,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":130,"author":{"gitId":"Nnythingy"},"content":"     * This will combine the Token into a String for the actual Duke.Task","lastModifiedDate":"2022-02-20"},{"lineNumber":131,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":132,"author":{"gitId":"Nnythingy"},"content":"     * @param tokens User input token","lastModifiedDate":"2022-02-07"},{"lineNumber":133,"author":{"gitId":"Nnythingy"},"content":"     * @param startIndex Where to start copying the tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":134,"author":{"gitId":"Nnythingy"},"content":"     * @param endIndex Where to end copying the tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":135,"author":{"gitId":"Nnythingy"},"content":"     * @return combinedToken String of the combined tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":136,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":137,"author":{"gitId":"Nnythingy"},"content":"    private String combineToken(String[] tokens, int startIndex, int endIndex) {","lastModifiedDate":"2022-02-07"},{"lineNumber":138,"author":{"gitId":"Nnythingy"},"content":"        String combinedToken \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":139,"author":{"gitId":"Nnythingy"},"content":"        for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2022-02-15"},{"lineNumber":140,"author":{"gitId":"Nnythingy"},"content":"            combinedToken \u003d combinedToken + tokens[i] + \" \";","lastModifiedDate":"2022-02-07"},{"lineNumber":141,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":142,"author":{"gitId":"Nnythingy"},"content":"        return combinedToken.trim();","lastModifiedDate":"2022-02-07"},{"lineNumber":143,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":144,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Nnythingy":144}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"import java.io.File;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"public class Storage {","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"     * Saves the list of Tasks to hard drive","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"     * Will be called whenever a task is added or deleted","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"     * @param userLists ArrayList of user tasks","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"    public static void saveList(ArrayList\u003cTask\u003e userLists) {","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"        String pathName \u003d \"./data/duke.txt\";","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"        File file \u003d new File(pathName);","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"                //new file created","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"Nnythingy"},"content":"                writeToFile(pathName, userLists);","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"Nnythingy"},"content":"            } else {","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"Nnythingy"},"content":"                //file has already been created","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"Nnythingy"},"content":"                writeToFile(pathName, userLists);","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"Nnythingy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"Nnythingy"},"content":"            File directory \u003d new File(\"./data/\");","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"Nnythingy"},"content":"            boolean isDirCreated \u003d directory.mkdir();","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"Nnythingy"},"content":"            if (isDirCreated) {","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"Nnythingy"},"content":"                saveList(userLists);","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"Nnythingy"},"content":"     * Write the list of user tasks to file specified","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"Nnythingy"},"content":"     * by the path","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"Nnythingy"},"content":"     * @param pathName string with the path of file","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"Nnythingy"},"content":"     * @param userList Arraylist of user tasks","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"Nnythingy"},"content":"     * @throws IOException Unable to write to file","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"Nnythingy"},"content":"    public static void writeToFile(String pathName, ArrayList\u003cTask\u003e userList) throws IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"Nnythingy"},"content":"        FileWriter fileWriter \u003d new FileWriter(pathName);","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"Nnythingy"},"content":"        fileWriter.write(TaskList.listTask(userList));","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"Nnythingy"},"content":"        fileWriter.close();","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"Nnythingy"},"content":"     * Load the file duke.txt and parse the strings","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"Nnythingy"},"content":"     * inside the file to add those tasks back to","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"Nnythingy"},"content":"     * the ArrayList of user tasks","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":59,"author":{"gitId":"Nnythingy"},"content":"     * @param userLists ArrayList of user tasks","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"Nnythingy"},"content":"    public static void loadSaveFile(ArrayList\u003cTask\u003e userLists) {","lastModifiedDate":"2022-02-20"},{"lineNumber":62,"author":{"gitId":"Nnythingy"},"content":"        String pathName \u003d \"./data/duke.txt\";","lastModifiedDate":"2022-02-20"},{"lineNumber":63,"author":{"gitId":"Nnythingy"},"content":"        File file \u003d new File(pathName);","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"Nnythingy"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":65,"author":{"gitId":"Nnythingy"},"content":"            if (file.exists()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":66,"author":{"gitId":"Nnythingy"},"content":"                //save file exists, load in save file","lastModifiedDate":"2022-02-20"},{"lineNumber":67,"author":{"gitId":"Nnythingy"},"content":"                Scanner fileContent \u003d new Scanner(file);","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"Nnythingy"},"content":"                while (fileContent.hasNext()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"Nnythingy"},"content":"                    String listContent \u003d fileContent.nextLine();","lastModifiedDate":"2022-02-20"},{"lineNumber":70,"author":{"gitId":"Nnythingy"},"content":"                    String regexTask \u003d \"(?\u003ctask\u003e\\\\[[TDE]])\";","lastModifiedDate":"2022-02-20"},{"lineNumber":71,"author":{"gitId":"Nnythingy"},"content":"                    Matcher matcher \u003d  regexMatching(regexTask, listContent);","lastModifiedDate":"2022-02-20"},{"lineNumber":72,"author":{"gitId":"Nnythingy"},"content":"                    if (!matcher.find()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":73,"author":{"gitId":"Nnythingy"},"content":"                        continue;","lastModifiedDate":"2022-02-23"},{"lineNumber":74,"author":{"gitId":"Nnythingy"},"content":"                    }","lastModifiedDate":"2022-02-20"},{"lineNumber":75,"author":{"gitId":"Nnythingy"},"content":"                    String task \u003d matcher.group(\"task\");","lastModifiedDate":"2022-02-20"},{"lineNumber":76,"author":{"gitId":"Nnythingy"},"content":"                    switch (task) {","lastModifiedDate":"2022-02-20"},{"lineNumber":77,"author":{"gitId":"Nnythingy"},"content":"                    case \"[T]\":","lastModifiedDate":"2022-02-20"},{"lineNumber":78,"author":{"gitId":"Nnythingy"},"content":"                        String regexTodo \u003d \"(?\u003ctask\u003e\\\\[[TDE]])(?\u003cmark\u003e\\\\[[\\\\s|X]])\"+","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"Nnythingy"},"content":"                                \"(?\u003cdescription\u003e\\\\D*)\";","lastModifiedDate":"2022-02-20"},{"lineNumber":80,"author":{"gitId":"Nnythingy"},"content":"                        Matcher matcherTodo \u003d  regexMatching(regexTodo, listContent);","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"Nnythingy"},"content":"                        if (!matcherTodo.find()) {","lastModifiedDate":"2022-02-23"},{"lineNumber":82,"author":{"gitId":"Nnythingy"},"content":"                            continue;","lastModifiedDate":"2022-02-23"},{"lineNumber":83,"author":{"gitId":"Nnythingy"},"content":"                        }","lastModifiedDate":"2022-02-23"},{"lineNumber":84,"author":{"gitId":"Nnythingy"},"content":"                        String description \u003d matcherTodo.group(\"description\").trim();","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"Nnythingy"},"content":"                        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"Nnythingy"},"content":"                        if (matcherTodo.group(\"mark\").equals(\"[X]\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"Nnythingy"},"content":"                            newTodo.setMark();","lastModifiedDate":"2022-02-20"},{"lineNumber":88,"author":{"gitId":"Nnythingy"},"content":"                        }","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"Nnythingy"},"content":"                        userLists.add(newTodo);","lastModifiedDate":"2022-02-20"},{"lineNumber":90,"author":{"gitId":"Nnythingy"},"content":"                        break;","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"Nnythingy"},"content":"                    case \"[D]\":","lastModifiedDate":"2022-02-20"},{"lineNumber":92,"author":{"gitId":"Nnythingy"},"content":"                        String regexDeadline \u003d \"(?\u003ctask\u003e\\\\[[TDE]])(?\u003cmark\u003e\\\\[[\\\\s|X]])\"+","lastModifiedDate":"2022-02-20"},{"lineNumber":93,"author":{"gitId":"Nnythingy"},"content":"                                \"(?\u003cdescription\u003e\\\\D*)(?\u003ctime\u003e\\\\(at\\\\S*)\";","lastModifiedDate":"2022-02-20"},{"lineNumber":94,"author":{"gitId":"Nnythingy"},"content":"                        Matcher matcherDeadline \u003d  regexMatching(regexDeadline, listContent);","lastModifiedDate":"2022-02-20"},{"lineNumber":95,"author":{"gitId":"Nnythingy"},"content":"                        if (!matcherDeadline.find()) {","lastModifiedDate":"2022-02-23"},{"lineNumber":96,"author":{"gitId":"Nnythingy"},"content":"                            continue;","lastModifiedDate":"2022-02-23"},{"lineNumber":97,"author":{"gitId":"Nnythingy"},"content":"                        }","lastModifiedDate":"2022-02-23"},{"lineNumber":98,"author":{"gitId":"Nnythingy"},"content":"                        description \u003d matcherDeadline.group(\"description\").trim();","lastModifiedDate":"2022-02-20"},{"lineNumber":99,"author":{"gitId":"Nnythingy"},"content":"                        String time \u003d matcherDeadline.group(\"time\");","lastModifiedDate":"2022-02-20"},{"lineNumber":100,"author":{"gitId":"Nnythingy"},"content":"                        Deadline newDeadline \u003d new Deadline(description, time);","lastModifiedDate":"2022-02-23"},{"lineNumber":101,"author":{"gitId":"Nnythingy"},"content":"                        if (matcherDeadline.group(\"mark\").equals(\"[X]\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":102,"author":{"gitId":"Nnythingy"},"content":"                            newDeadline.setMark();","lastModifiedDate":"2022-02-20"},{"lineNumber":103,"author":{"gitId":"Nnythingy"},"content":"                        }","lastModifiedDate":"2022-02-20"},{"lineNumber":104,"author":{"gitId":"Nnythingy"},"content":"                        userLists.add(newDeadline);","lastModifiedDate":"2022-02-20"},{"lineNumber":105,"author":{"gitId":"Nnythingy"},"content":"                        break;","lastModifiedDate":"2022-02-20"},{"lineNumber":106,"author":{"gitId":"Nnythingy"},"content":"                    case \"[E]\":","lastModifiedDate":"2022-02-20"},{"lineNumber":107,"author":{"gitId":"Nnythingy"},"content":"                        String regexEvent \u003d \"(?\u003ctask\u003e\\\\[[TDE]])(?\u003cmark\u003e\\\\[[\\\\s|X]])\"+","lastModifiedDate":"2022-02-20"},{"lineNumber":108,"author":{"gitId":"Nnythingy"},"content":"                                \"(?\u003cdescription\u003e\\\\D*)(?\u003ctime\u003e\\\\(at\\\\S*)\";","lastModifiedDate":"2022-02-20"},{"lineNumber":109,"author":{"gitId":"Nnythingy"},"content":"                        Matcher matcherEvent \u003d  regexMatching(regexEvent, listContent);","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"Nnythingy"},"content":"                        if (matcherEvent.find()) {","lastModifiedDate":"2022-02-23"},{"lineNumber":111,"author":{"gitId":"Nnythingy"},"content":"                            continue;","lastModifiedDate":"2022-02-23"},{"lineNumber":112,"author":{"gitId":"Nnythingy"},"content":"                        }","lastModifiedDate":"2022-02-23"},{"lineNumber":113,"author":{"gitId":"Nnythingy"},"content":"                        description \u003d matcherEvent.group(\"description\").trim();","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"Nnythingy"},"content":"                        time \u003d matcherEvent.group(\"time\");","lastModifiedDate":"2022-02-20"},{"lineNumber":115,"author":{"gitId":"Nnythingy"},"content":"                        Event newEvent \u003d new Event(description, time);","lastModifiedDate":"2022-02-23"},{"lineNumber":116,"author":{"gitId":"Nnythingy"},"content":"                        if (matcherEvent.group(\"mark\").equals(\"[X]\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"Nnythingy"},"content":"                            newEvent.setMark();","lastModifiedDate":"2022-02-20"},{"lineNumber":118,"author":{"gitId":"Nnythingy"},"content":"                        }","lastModifiedDate":"2022-02-20"},{"lineNumber":119,"author":{"gitId":"Nnythingy"},"content":"                        userLists.add(newEvent);","lastModifiedDate":"2022-02-20"},{"lineNumber":120,"author":{"gitId":"Nnythingy"},"content":"                        break;","lastModifiedDate":"2022-02-20"},{"lineNumber":121,"author":{"gitId":"Nnythingy"},"content":"                    }","lastModifiedDate":"2022-02-20"},{"lineNumber":122,"author":{"gitId":"Nnythingy"},"content":"                }","lastModifiedDate":"2022-02-20"},{"lineNumber":123,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":124,"author":{"gitId":"Nnythingy"},"content":"        } catch (DukeExceptionTiming e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":125,"author":{"gitId":"Nnythingy"},"content":"            //do nothing","lastModifiedDate":"2022-02-25"},{"lineNumber":126,"author":{"gitId":"Nnythingy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":127,"author":{"gitId":"Nnythingy"},"content":"            //do nothing","lastModifiedDate":"2022-02-20"},{"lineNumber":128,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":129,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":130,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":131,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":132,"author":{"gitId":"Nnythingy"},"content":"     * Match the given input with the given String Regex","lastModifiedDate":"2022-02-20"},{"lineNumber":133,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":134,"author":{"gitId":"Nnythingy"},"content":"     * @param regex Given regex pattern","lastModifiedDate":"2022-02-20"},{"lineNumber":135,"author":{"gitId":"Nnythingy"},"content":"     * @param input Given input to match regex against","lastModifiedDate":"2022-02-20"},{"lineNumber":136,"author":{"gitId":"Nnythingy"},"content":"     * @return Matcher class after matching the input with regex","lastModifiedDate":"2022-02-20"},{"lineNumber":137,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":138,"author":{"gitId":"Nnythingy"},"content":"    public static Matcher regexMatching(String regex, String input) {","lastModifiedDate":"2022-02-20"},{"lineNumber":139,"author":{"gitId":"Nnythingy"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2022-02-20"},{"lineNumber":140,"author":{"gitId":"Nnythingy"},"content":"        return pattern.matcher(input);","lastModifiedDate":"2022-02-20"},{"lineNumber":141,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":142,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"Nnythingy":142}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"public class Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"    private Boolean isMarked \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"    private String taskName;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"    public void setMark() {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"        isMarked \u003d true;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"    public void unMark() {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"        isMarked \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskName;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"        if (isMarked) {","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"            return \"X\";","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Nnythingy"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Nnythingy"},"content":"            return \" \";","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Nnythingy":30}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"public class TaskList {","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"     * Add a task to the list of userLists","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"     * @param task Task class to be added","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"     * @param userLists ArrayList of user userLists","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"    public static void addTask (Task task, ArrayList\u003cTask\u003e userLists) {","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"        userLists.add(task);","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"        String userInput \u003d Wrapper.wrapMessage(","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"                String.format(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"                                \"  %s\" +","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"                                \" Now you have %d tasks in the list\\n\",","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"                        task.toString(), userLists.size()));","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"        System.out.println(userInput);","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"     * Deletes a task from the list of userLists","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"     * @param userLists ArrayList of user userLists","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"Nnythingy"},"content":"     * @param index Index in the ArrayList to be deleted","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"Nnythingy"},"content":"     * @throws DukeExceptionMarkBounds when index is out of the ArrayList","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"Nnythingy"},"content":"    public static void deleteTask (ArrayList\u003cTask\u003e userLists, int index) throws","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"Nnythingy"},"content":"            DukeExceptionMarkBounds {","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"Nnythingy"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"Nnythingy"},"content":"            Task removedTask \u003d userLists.remove(index);","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"Nnythingy"},"content":"            String userInput \u003d Wrapper.wrapMessage(","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"Nnythingy"},"content":"                    String.format(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"Nnythingy"},"content":"                                    \"  %s\" +","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"Nnythingy"},"content":"                                    \" Now you have %d userLists in the list\\n\",","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"Nnythingy"},"content":"                            removedTask, userLists.size()));","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"Nnythingy"},"content":"            System.out.println(userInput);","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"Nnythingy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"Nnythingy"},"content":"            throw new DukeExceptionMarkBounds();","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"Nnythingy"},"content":"     * Change userLists into a printable list","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"Nnythingy"},"content":"     * of current userLists the user have","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"Nnythingy"},"content":"     * @param userLists ArrayList of user tasks","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"Nnythingy"},"content":"     * @return String of all the userLists","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"Nnythingy"},"content":"    public static String listTask(ArrayList\u003cTask\u003e userLists) {","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"Nnythingy"},"content":"        String allTasks \u003d \"\";","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"Nnythingy"},"content":"        for (int i \u003d 1; i \u003c\u003d userLists.size(); i++) {","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"Nnythingy"},"content":"            allTasks \u003d allTasks + \" \" + i + \".\" + userLists.get(i - 1).toString();","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"Nnythingy"},"content":"        return allTasks;","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"Nnythingy"},"content":"     * Find tasks related to the search keyword","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"Nnythingy"},"content":"     * Adds all these tasks into a string with all","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"Nnythingy"},"content":"     * tasks that fit the search keyword","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"Nnythingy"},"content":"     * @param userLists ArrayList of user userLists","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"Nnythingy"},"content":"     * @param searchStr Keyword to search","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"Nnythingy"},"content":"     * @return String of the tasks which are found","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"Nnythingy"},"content":"    public static String findTask(ArrayList\u003cTask\u003e userLists, String searchStr) {","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"Nnythingy"},"content":"        String foundTask \u003d \"\";","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"Nnythingy"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"Nnythingy"},"content":"        for (Task task : userLists) {","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"Nnythingy"},"content":"            if (task.toString().contains(searchStr)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"Nnythingy"},"content":"                i++;","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"Nnythingy"},"content":"                foundTask \u003d foundTask + \" \" + i + \".\" + task.toString();","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"Nnythingy"},"content":"        return foundTask;","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"Nnythingy":80}},{"path":"src/main/java/Duke/TimeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"import java.util.List;","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"import java.util.Locale;","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"public class TimeHandler {","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"    private LocalDate localDate;","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"    private LocalTime localTime;","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"    private LocalDateTime localDateTime;","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"    public TimeHandler(String input) throws  DukeExceptionTiming{","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"        this.localDate \u003d convertDate(input.trim());","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"        this.localTime \u003d convertTime(input.trim());","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"        this.localDateTime \u003d joinDateTime(localDate, localTime);","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"     * Takes the time section of the user input for","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"Nnythingy"},"content":"     * event and deadline after the respective keyword /at or /by","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"Nnythingy"},"content":"     * and change them into a LocalDate format","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"Nnythingy"},"content":"     * Users can input either the day eg: \"Monday\" or","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"Nnythingy"},"content":"     * input the exact date in yyyy/mm/dd or yyyy-mm-dd","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"Nnythingy"},"content":"     * @param input User input string containing the due date","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"Nnythingy"},"content":"     * @return LocalDate which contains the date of the task end","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"Nnythingy"},"content":"     * @throws DukeExceptionTiming","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"Nnythingy"},"content":"    private LocalDate convertDate(String input) throws DukeExceptionTiming  {","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"Nnythingy"},"content":"        LocalDate localDate \u003d LocalDate.now();","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"Nnythingy"},"content":"        String date \u003d input.split(\" \")[0];","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"Nnythingy"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"Nnythingy"},"content":"            if (input.contains(\"day\")) {","lastModifiedDate":"2022-02-23"},{"lineNumber":41,"author":{"gitId":"Nnythingy"},"content":"                //user input only includes day","lastModifiedDate":"2022-02-23"},{"lineNumber":42,"author":{"gitId":"Nnythingy"},"content":"                localDate \u003d dueDate(input, localDate);","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"Nnythingy"},"content":"            } else if (input.contains(\"/\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"Nnythingy"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"Nnythingy"},"content":"                        \"yyyy/mm/dd\");","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"Nnythingy"},"content":"                localDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"Nnythingy"},"content":"            } else {","lastModifiedDate":"2022-02-23"},{"lineNumber":48,"author":{"gitId":"Nnythingy"},"content":"                localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"Nnythingy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"Nnythingy"},"content":"            throw new DukeExceptionTiming();","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"Nnythingy"},"content":"        return localDate;","lastModifiedDate":"2022-02-23"},{"lineNumber":55,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":56,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":57,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"Nnythingy"},"content":"     * This is to handle the instance where user input for time","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"Nnythingy"},"content":"     * was just a day \"Monday\" or \"Sunday\"","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"Nnythingy"},"content":"     * @param input User input string containing the due date","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"Nnythingy"},"content":"     * @param localDate local date when the task was added","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"Nnythingy"},"content":"     * @return LocalDate of when the due date of the task is","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"Nnythingy"},"content":"    private LocalDate dueDate(String input, LocalDate localDate) {","lastModifiedDate":"2022-02-23"},{"lineNumber":66,"author":{"gitId":"Nnythingy"},"content":"        String day \u003d input.split(\" \")[0].toUpperCase(Locale.ROOT);","lastModifiedDate":"2022-02-23"},{"lineNumber":67,"author":{"gitId":"Nnythingy"},"content":"        DayOfWeek dueDay \u003d DayOfWeek.valueOf(day.trim());","lastModifiedDate":"2022-02-23"},{"lineNumber":68,"author":{"gitId":"Nnythingy"},"content":"        int dayToAdd \u003d dueDay.getValue() - localDate.getDayOfWeek().getValue();","lastModifiedDate":"2022-02-23"},{"lineNumber":69,"author":{"gitId":"Nnythingy"},"content":"        if (dayToAdd \u003c 0) {","lastModifiedDate":"2022-02-23"},{"lineNumber":70,"author":{"gitId":"Nnythingy"},"content":"            localDate \u003d localDate.plusDays(dayToAdd + 7);","lastModifiedDate":"2022-02-23"},{"lineNumber":71,"author":{"gitId":"Nnythingy"},"content":"        } else {","lastModifiedDate":"2022-02-23"},{"lineNumber":72,"author":{"gitId":"Nnythingy"},"content":"            localDate \u003d localDate.plusDays(dayToAdd);","lastModifiedDate":"2022-02-23"},{"lineNumber":73,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":74,"author":{"gitId":"Nnythingy"},"content":"        return localDate;","lastModifiedDate":"2022-02-23"},{"lineNumber":75,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":76,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":77,"author":{"gitId":"Nnythingy"},"content":"    private LocalDateTime joinDateTime(LocalDate date, LocalTime time) {","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"Nnythingy"},"content":"        return time.atDate(date);","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"Nnythingy"},"content":"     * Checks if the user input includes a specific due time","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"Nnythingy"},"content":"     * If yes then add it in, if not then set it as due by 2359","lastModifiedDate":"2022-02-25"},{"lineNumber":84,"author":{"gitId":"Nnythingy"},"content":"     * The user input can come in the form of 7am, 6pm, 16:00","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"Nnythingy"},"content":"     * or just 1500 in 24 hours format","lastModifiedDate":"2022-02-25"},{"lineNumber":86,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":87,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"Nnythingy"},"content":"     * @param input User input string containing the due time","lastModifiedDate":"2022-02-25"},{"lineNumber":89,"author":{"gitId":"Nnythingy"},"content":"     * @return LocalTime for the due time","lastModifiedDate":"2022-02-25"},{"lineNumber":90,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":91,"author":{"gitId":"Nnythingy"},"content":"    private LocalTime convertTime(String input) {","lastModifiedDate":"2022-02-23"},{"lineNumber":92,"author":{"gitId":"Nnythingy"},"content":"        LocalTime localTime;","lastModifiedDate":"2022-02-23"},{"lineNumber":93,"author":{"gitId":"Nnythingy"},"content":"        int index \u003d 0;","lastModifiedDate":"2022-02-23"},{"lineNumber":94,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":95,"author":{"gitId":"Nnythingy"},"content":"        //take at most the 2 digits before am/pm as a time","lastModifiedDate":"2022-02-23"},{"lineNumber":96,"author":{"gitId":"Nnythingy"},"content":"        if(input.toLowerCase(Locale.ROOT).contains(\"am\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":97,"author":{"gitId":"Nnythingy"},"content":"            index \u003d input.toLowerCase(Locale.ROOT).indexOf(\"am\");","lastModifiedDate":"2022-02-25"},{"lineNumber":98,"author":{"gitId":"Nnythingy"},"content":"            localTime \u003d convertTime(input, index, false, false);","lastModifiedDate":"2022-02-25"},{"lineNumber":99,"author":{"gitId":"Nnythingy"},"content":"        } else if (input.toLowerCase(Locale.ROOT).contains(\"pm\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":100,"author":{"gitId":"Nnythingy"},"content":"            index \u003d input.toLowerCase(Locale.ROOT).indexOf(\"pm\");","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"Nnythingy"},"content":"            localTime \u003d convertTime(input, index, false, true);","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"Nnythingy"},"content":"        } else if (input.contains(\":\")) {","lastModifiedDate":"2022-02-23"},{"lineNumber":103,"author":{"gitId":"Nnythingy"},"content":"            index \u003d input.indexOf(\":\");","lastModifiedDate":"2022-02-23"},{"lineNumber":104,"author":{"gitId":"Nnythingy"},"content":"            localTime \u003d convertTime(input, index, true, false);","lastModifiedDate":"2022-02-25"},{"lineNumber":105,"author":{"gitId":"Nnythingy"},"content":"        } else {","lastModifiedDate":"2022-02-23"},{"lineNumber":106,"author":{"gitId":"Nnythingy"},"content":"            localTime \u003d checkTime(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":107,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":108,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":109,"author":{"gitId":"Nnythingy"},"content":"        //if user did not input a time, checkTime() will return null","lastModifiedDate":"2022-02-23"},{"lineNumber":110,"author":{"gitId":"Nnythingy"},"content":"        if (localTime \u003d\u003d null) {","lastModifiedDate":"2022-02-23"},{"lineNumber":111,"author":{"gitId":"Nnythingy"},"content":"            localTime \u003d LocalTime.of(23,59);","lastModifiedDate":"2022-02-25"},{"lineNumber":112,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":113,"author":{"gitId":"Nnythingy"},"content":"        return localTime;","lastModifiedDate":"2022-02-23"},{"lineNumber":114,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":115,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":116,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":117,"author":{"gitId":"Nnythingy"},"content":"     * Converting user input due time into a LocalTime variable","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":119,"author":{"gitId":"Nnythingy"},"content":"     * @param input User input string containing the due time","lastModifiedDate":"2022-02-25"},{"lineNumber":120,"author":{"gitId":"Nnythingy"},"content":"     * @param index Index for where the number time is contained","lastModifiedDate":"2022-02-25"},{"lineNumber":121,"author":{"gitId":"Nnythingy"},"content":"     * @param hasMinute check if due time includes minutes","lastModifiedDate":"2022-02-25"},{"lineNumber":122,"author":{"gitId":"Nnythingy"},"content":"     * @param isPm check if the time is indicated as pm","lastModifiedDate":"2022-02-25"},{"lineNumber":123,"author":{"gitId":"Nnythingy"},"content":"     * @return LocalTime for the due time","lastModifiedDate":"2022-02-25"},{"lineNumber":124,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":125,"author":{"gitId":"Nnythingy"},"content":"    private LocalTime convertTime(String input, int index, boolean hasMinute, boolean isPm) {","lastModifiedDate":"2022-02-25"},{"lineNumber":126,"author":{"gitId":"Nnythingy"},"content":"        int hourInt;","lastModifiedDate":"2022-02-25"},{"lineNumber":127,"author":{"gitId":"Nnythingy"},"content":"        int minInt \u003d 0;","lastModifiedDate":"2022-02-25"},{"lineNumber":128,"author":{"gitId":"Nnythingy"},"content":"        if (hasMinute) {","lastModifiedDate":"2022-02-23"},{"lineNumber":129,"author":{"gitId":"Nnythingy"},"content":"            String hourStr \u003d input.substring(index - 2 ,index);","lastModifiedDate":"2022-02-23"},{"lineNumber":130,"author":{"gitId":"Nnythingy"},"content":"            String minStr \u003d input.substring(index + 1, index + 2);","lastModifiedDate":"2022-02-23"},{"lineNumber":131,"author":{"gitId":"Nnythingy"},"content":"            hourInt \u003d Integer.parseInt(hourStr.trim());","lastModifiedDate":"2022-02-25"},{"lineNumber":132,"author":{"gitId":"Nnythingy"},"content":"            minInt \u003d Integer.parseInt(minStr.trim());","lastModifiedDate":"2022-02-25"},{"lineNumber":133,"author":{"gitId":"Nnythingy"},"content":"            return LocalTime.of(hourInt, minInt);","lastModifiedDate":"2022-02-23"},{"lineNumber":134,"author":{"gitId":"Nnythingy"},"content":"        } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":135,"author":{"gitId":"Nnythingy"},"content":"            String hourStr \u003d input.substring(index - 2, index);","lastModifiedDate":"2022-02-23"},{"lineNumber":136,"author":{"gitId":"Nnythingy"},"content":"            hourInt \u003d Integer.parseInt(hourStr.trim());","lastModifiedDate":"2022-02-25"},{"lineNumber":137,"author":{"gitId":"Nnythingy"},"content":"            //if time is PM, other than 12 pm, convert to 24 hour format","lastModifiedDate":"2022-02-25"},{"lineNumber":138,"author":{"gitId":"Nnythingy"},"content":"            if (isPm) {","lastModifiedDate":"2022-02-25"},{"lineNumber":139,"author":{"gitId":"Nnythingy"},"content":"                if (hourInt !\u003d 12) {","lastModifiedDate":"2022-02-25"},{"lineNumber":140,"author":{"gitId":"Nnythingy"},"content":"                    hourInt +\u003d 12;","lastModifiedDate":"2022-02-25"},{"lineNumber":141,"author":{"gitId":"Nnythingy"},"content":"                }","lastModifiedDate":"2022-02-25"},{"lineNumber":142,"author":{"gitId":"Nnythingy"},"content":"            } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":143,"author":{"gitId":"Nnythingy"},"content":"                //if time is 12am, convert to 24 hour format 0000","lastModifiedDate":"2022-02-25"},{"lineNumber":144,"author":{"gitId":"Nnythingy"},"content":"                if (hourInt \u003d\u003d 12) {","lastModifiedDate":"2022-02-25"},{"lineNumber":145,"author":{"gitId":"Nnythingy"},"content":"                    hourInt \u003d 0;","lastModifiedDate":"2022-02-25"},{"lineNumber":146,"author":{"gitId":"Nnythingy"},"content":"                }","lastModifiedDate":"2022-02-25"},{"lineNumber":147,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":148,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":149,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":150,"author":{"gitId":"Nnythingy"},"content":"        return LocalTime.of(hourInt, minInt);","lastModifiedDate":"2022-02-25"},{"lineNumber":151,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":152,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":153,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":154,"author":{"gitId":"Nnythingy"},"content":"     * Using regex to find if the due time indicated","lastModifiedDate":"2022-02-25"},{"lineNumber":155,"author":{"gitId":"Nnythingy"},"content":"     * is just in a 24 hours format eg: 1900","lastModifiedDate":"2022-02-25"},{"lineNumber":156,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":157,"author":{"gitId":"Nnythingy"},"content":"     * @param input User input string containing the due time","lastModifiedDate":"2022-02-25"},{"lineNumber":158,"author":{"gitId":"Nnythingy"},"content":"     * @return LocalTime for the due time or NULL if no due time is found","lastModifiedDate":"2022-02-25"},{"lineNumber":159,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":160,"author":{"gitId":"Nnythingy"},"content":"    private LocalTime checkTime(String input) {","lastModifiedDate":"2022-02-23"},{"lineNumber":161,"author":{"gitId":"Nnythingy"},"content":"        String regex \u003d \"\\\\d{4}$\";","lastModifiedDate":"2022-02-25"},{"lineNumber":162,"author":{"gitId":"Nnythingy"},"content":"        Matcher matcher \u003d Storage.regexMatching(regex, input);","lastModifiedDate":"2022-02-23"},{"lineNumber":163,"author":{"gitId":"Nnythingy"},"content":"        if (matcher.find()) {","lastModifiedDate":"2022-02-23"},{"lineNumber":164,"author":{"gitId":"Nnythingy"},"content":"            String time \u003d matcher.group();","lastModifiedDate":"2022-02-23"},{"lineNumber":165,"author":{"gitId":"Nnythingy"},"content":"            String timeHrs \u003d time.substring(0, 2);","lastModifiedDate":"2022-02-23"},{"lineNumber":166,"author":{"gitId":"Nnythingy"},"content":"            String timeMin \u003d time.substring(2);","lastModifiedDate":"2022-02-23"},{"lineNumber":167,"author":{"gitId":"Nnythingy"},"content":"            return LocalTime.of(Integer.parseInt(timeHrs),","lastModifiedDate":"2022-02-23"},{"lineNumber":168,"author":{"gitId":"Nnythingy"},"content":"                    Integer.parseInt(timeMin));","lastModifiedDate":"2022-02-23"},{"lineNumber":169,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":170,"author":{"gitId":"Nnythingy"},"content":"        return null;","lastModifiedDate":"2022-02-23"},{"lineNumber":171,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":172,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":173,"author":{"gitId":"Nnythingy"},"content":"    public LocalDateTime getLocalDateTime() {","lastModifiedDate":"2022-02-25"},{"lineNumber":174,"author":{"gitId":"Nnythingy"},"content":"        return localDateTime;","lastModifiedDate":"2022-02-25"},{"lineNumber":175,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":176,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"Nnythingy":176}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"        super(taskName);","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"        return \"[T]\" + super.toString() + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Nnythingy":12}},{"path":"src/main/java/Duke/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"public class UserInterface {","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"     * Main user interface to handle the entire interaction with","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"     * the user","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"     * @throws DukeException","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"    public static void userInterface() throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"        ArrayList\u003cTask\u003e userLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"        Storage.loadSaveFile(userLists);","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"        String userInput \u003d input.nextLine();","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"        //main handler for receiving input","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"            String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"            try {","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"                Parser userInputTokens \u003d new Parser(userInput);","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"                //change user input into an array of tokens","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"                switch (userInputTokens.getTokens()[0]) {","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"                case \"list\":","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"Nnythingy"},"content":"                    String allTasks \u003d \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"Nnythingy"},"content":"                            TaskList.listTask(userLists);","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"Nnythingy"},"content":"                    allTasks \u003d Wrapper.wrapMessage(allTasks);","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"Nnythingy"},"content":"                    System.out.println(allTasks);","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"Nnythingy"},"content":"                case \"todo\":","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"Nnythingy"},"content":"                    Todo newTodo \u003d new Todo(userInputTokens.getDescription());","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"Nnythingy"},"content":"                    TaskList.addTask(newTodo, userLists);","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"Nnythingy"},"content":"                case \"deadline\":","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"Nnythingy"},"content":"                    Deadline newDeadline \u003d new Deadline(","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"Nnythingy"},"content":"                            userInputTokens.getDescription(),","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"Nnythingy"},"content":"                            userInputTokens.getTime());","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"Nnythingy"},"content":"                    TaskList.addTask(newDeadline, userLists);","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"Nnythingy"},"content":"                case \"event\":","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"Nnythingy"},"content":"                    //find index in user input tokens which contains the time separator","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"Nnythingy"},"content":"                    Event newEvent \u003d new Event(","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"Nnythingy"},"content":"                            userInputTokens.getDescription(),","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"Nnythingy"},"content":"                            userInputTokens.getTime());","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"Nnythingy"},"content":"                    TaskList.addTask(newEvent, userLists);","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"Nnythingy"},"content":"                case \"mark\":","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"Nnythingy"},"content":"                    int markIndex \u003d userInputTokens.getMarkIndex();","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"Nnythingy"},"content":"                    if (markIndex \u003e userLists.size()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"Nnythingy"},"content":"                        throw new DukeExceptionMarkBounds();","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"Nnythingy"},"content":"                    }","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"Nnythingy"},"content":"                    userLists.get(markIndex).setMark();","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"Nnythingy"},"content":"                    System.out.println(","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"Nnythingy"},"content":"                            Wrapper.wrapMessage(\"Nice! I\u0027ve marked this task as done:\\n \" +","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"Nnythingy"},"content":"                                    userLists.get(userInputTokens.getMarkIndex()).toString()","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"Nnythingy"},"content":"                            ));","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-02-20"},{"lineNumber":59,"author":{"gitId":"Nnythingy"},"content":"                case \"unmark\":","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"Nnythingy"},"content":"                    markIndex \u003d userInputTokens.getMarkIndex();","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"Nnythingy"},"content":"                    if (markIndex \u003e userLists.size()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":62,"author":{"gitId":"Nnythingy"},"content":"                        throw new DukeExceptionMarkBounds();","lastModifiedDate":"2022-02-20"},{"lineNumber":63,"author":{"gitId":"Nnythingy"},"content":"                    }","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"Nnythingy"},"content":"                    userLists.get(userInputTokens.getMarkIndex()).unMark();","lastModifiedDate":"2022-02-20"},{"lineNumber":65,"author":{"gitId":"Nnythingy"},"content":"                    System.out.println(","lastModifiedDate":"2022-02-20"},{"lineNumber":66,"author":{"gitId":"Nnythingy"},"content":"                            Wrapper.wrapMessage(\"OK, I\u0027ve marked this task as not done yet:\\n \" +","lastModifiedDate":"2022-02-20"},{"lineNumber":67,"author":{"gitId":"Nnythingy"},"content":"                                    userLists.get(userInputTokens.getMarkIndex()).toString()","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"Nnythingy"},"content":"                            ));","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-02-20"},{"lineNumber":70,"author":{"gitId":"Nnythingy"},"content":"                case \"delete\":","lastModifiedDate":"2022-02-20"},{"lineNumber":71,"author":{"gitId":"Nnythingy"},"content":"                    int deleteIndex \u003d userInputTokens.getMarkIndex();","lastModifiedDate":"2022-02-20"},{"lineNumber":72,"author":{"gitId":"Nnythingy"},"content":"                    TaskList.deleteTask(userLists, deleteIndex);","lastModifiedDate":"2022-02-20"},{"lineNumber":73,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-02-20"},{"lineNumber":74,"author":{"gitId":"Nnythingy"},"content":"                case \"find\":","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"Nnythingy"},"content":"                    String foundTasks \u003d \"Here are the matching tasks in your list:\\n\" +","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"Nnythingy"},"content":"                            TaskList.findTask(userLists, userInputTokens.getDescription());","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"Nnythingy"},"content":"                    foundTasks \u003d Wrapper.wrapMessage(foundTasks);","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"Nnythingy"},"content":"                    System.out.println(foundTasks);","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"Nnythingy"},"content":"                default:","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"Nnythingy"},"content":"                }","lastModifiedDate":"2022-02-20"},{"lineNumber":82,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionCommand e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":83,"author":{"gitId":"Nnythingy"},"content":"                System.out.println(","lastModifiedDate":"2022-02-20"},{"lineNumber":84,"author":{"gitId":"Nnythingy"},"content":"                        Wrapper.wrapMessage(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionDescription e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"Nnythingy"},"content":"                System.out.printf(","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"Nnythingy"},"content":"                        Wrapper.wrapMessage(\"OOPS!!! The description of a %s cannot be empty!\\n\"),","lastModifiedDate":"2022-02-20"},{"lineNumber":88,"author":{"gitId":"Nnythingy"},"content":"                        tokens[0]);","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionTiming e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":90,"author":{"gitId":"Nnythingy"},"content":"                System.out.printf(","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"Nnythingy"},"content":"                        Wrapper.wrapMessage(\"OOPS!!! Please add the date and time for your %s\" +","lastModifiedDate":"2022-02-25"},{"lineNumber":92,"author":{"gitId":"Nnythingy"},"content":"                                \"in this format yyyy-mm-dd hh:mm!\\n\"),","lastModifiedDate":"2022-02-25"},{"lineNumber":93,"author":{"gitId":"Nnythingy"},"content":"                        tokens[0]);","lastModifiedDate":"2022-02-20"},{"lineNumber":94,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionList e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":95,"author":{"gitId":"Nnythingy"},"content":"                System.out.println(","lastModifiedDate":"2022-02-20"},{"lineNumber":96,"author":{"gitId":"Nnythingy"},"content":"                        Wrapper.wrapMessage(\"OOPS!!! List should not have any other text after!\\n\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":97,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionMark e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":98,"author":{"gitId":"Nnythingy"},"content":"                System.out.printf(","lastModifiedDate":"2022-02-20"},{"lineNumber":99,"author":{"gitId":"Nnythingy"},"content":"                        Wrapper.wrapMessage(\"%s needs a number as an input\\n\"), tokens[0]);","lastModifiedDate":"2022-02-20"},{"lineNumber":100,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionMarkBounds e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":101,"author":{"gitId":"Nnythingy"},"content":"                System.out.println(","lastModifiedDate":"2022-02-20"},{"lineNumber":102,"author":{"gitId":"Nnythingy"},"content":"                        Wrapper.wrapMessage(\"Number provided is not in the list\\n\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":103,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionFind e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":104,"author":{"gitId":"Nnythingy"},"content":"                System.out.println(","lastModifiedDate":"2022-02-25"},{"lineNumber":105,"author":{"gitId":"Nnythingy"},"content":"                        Wrapper.wrapMessage(\"Please add the words you want to search for\" +","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"Nnythingy"},"content":"                                \"eg: find book\\n\"));","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":108,"author":{"gitId":"Nnythingy"},"content":"            userInput \u003d input.nextLine();","lastModifiedDate":"2022-02-20"},{"lineNumber":109,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"Nnythingy"},"content":"        Storage.saveList(userLists);","lastModifiedDate":"2022-02-20"},{"lineNumber":111,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":112,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"Nnythingy":112}},{"path":"src/main/java/Duke/Wrapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"package Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"public class Wrapper {","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"    public static String wrapMessage(String message) {","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"        String divider \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"        message \u003d String.format(\"%s %s%s\", divider, message, divider);","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"        return message;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"Nnythingy":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"todo borrow book","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"deadline return book /by 2022-03-13 19:00","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"event meeting /at Monday","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"todo join sports club","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"todo read book","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"mark 1","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"mark 2","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"mark 4","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"list","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"delete 3","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"bye","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Nnythingy":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nnythingy":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nnythingy":1,"-":37}}]
