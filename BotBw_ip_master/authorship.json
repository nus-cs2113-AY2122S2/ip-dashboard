[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"public class Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"     * The original user input (raw command)","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    private final String rawCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"     * The functional unit in raw command","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"    private final String[] commandTokens;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"    Command(String rawCommand) {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"        this.rawCommand \u003d rawCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"        commandTokens \u003d parseCommand(rawCommand);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"     * Split the raw command (a string contains space and quotes) into tokens,","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"     * recognizing string in quotes as a whole string. Automatically","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"     * add a quote at the end of the string if there is an odd number","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"     * of quotes.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"     * @param raw raw command string","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"     * @return a string array containing tokens","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"    public String[] parseCommand(String raw) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"        int leftIndex \u003d 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"        boolean inQuotes \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"        List\u003cString\u003e tokens \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"        raw \u003d raw.trim();","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 0; i \u003c raw.length(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"            switch (raw.charAt(i)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"            case \u0027 \u0027:","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"                if (inQuotes) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"                    continue;","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"                } else if (leftIndex !\u003d -1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"                    tokens.add(raw.substring(leftIndex, i));","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"                    leftIndex \u003d -1;","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"            case \u0027\\\"\u0027:","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"                if (inQuotes) {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"                    tokens.add(raw.substring(leftIndex, i));","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"                    leftIndex \u003d -1;","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"                    inQuotes \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"                    inQuotes \u003d true;","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"                    leftIndex \u003d i + 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"            default:","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"                if (!inQuotes \u0026\u0026 leftIndex \u003d\u003d -1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"                    leftIndex \u003d i;","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"        if (leftIndex !\u003d -1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"            tokens.add(raw.substring(leftIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"        return tokens.toArray(new String[0]);","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"     * @return the original user input (raw string)","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"    public String getRawCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"        return rawCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"BotBw"},"content":"     * @return the tokens/args","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"BotBw"},"content":"    public String[] getCommandTokens() {","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"BotBw"},"content":"        return commandTokens;","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"BotBw":80}},{"path":"src/main/java/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"public class CommandManager {","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"     * Scanner to get user input","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"    private final static String CMD_ADD \u003d \"add\";","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"    private final static String CMD_MARK \u003d \"mark\";","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"    private final static String CMD_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"    private final static String CMD_LIST \u003d \"list\";","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"    private final static String CMD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"    private final static String CMD_EVENT \u003d \"event\";","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"    private final static String CMD_TODO \u003d \"todo\";","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"    private final static String CMD_ECHO \u003d \"echo\";","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"     * Get the input string (raw command) from user","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"     * @return the command from user","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"    public static Command getCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"        String rawCommand \u003d sc.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"        return new Command(rawCommand);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"     * Run the corresponding command/method regarding args, default command is add reminder","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"     * @param command the command to execute","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"    public static void runCommand(Command command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"        String[] args \u003d command.getCommandTokens();","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"        // TODO Maybe use something like a function pointer array in C","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"        switch (args[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"        case CMD_ADD:","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"            addAndHandleException(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"        case CMD_MARK:","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"            markAndHandleException(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"        case CMD_UNMARK:","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"            unmarkAndHandleException(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"        case CMD_LIST:","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"            listAndHandleException(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"        case CMD_DEADLINE:","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"            addDeadlineAndHandleException(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"        case CMD_EVENT:","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"            addEventAndHandleException(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"        case CMD_TODO:","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"            addTodoAndHandleException(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"        case CMD_ECHO:","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"            echo(args);","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"        default:","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"            defaultCmd(command);","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"    private static void defaultCmd(Command command) {","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Sorry I don\u0027t understand this sentence:\\n\\t\\t\" + command.getRawCommand() + \"\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"    private static void addTodoAndHandleException(String[] args) {","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"BotBw"},"content":"            TaskManager.addToDoes(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"BotBw"},"content":"            TaskManager.printTaskNumber();","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"BotBw"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"BotBw"},"content":"            System.out.println(exception);","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"BotBw"},"content":"    private static void addEventAndHandleException(String[] args) {","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"BotBw"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"BotBw"},"content":"            TaskManager.addEvents(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"BotBw"},"content":"            TaskManager.printTaskNumber();","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"BotBw"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"BotBw"},"content":"            System.out.println(exception);","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"BotBw"},"content":"    private static void addDeadlineAndHandleException(String[] args) {","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"BotBw"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"BotBw"},"content":"            TaskManager.addDeadlines(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":94,"author":{"gitId":"BotBw"},"content":"            TaskManager.printTaskNumber();","lastModifiedDate":"2022-02-07"},{"lineNumber":95,"author":{"gitId":"BotBw"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-07"},{"lineNumber":96,"author":{"gitId":"BotBw"},"content":"            System.out.println(exception);","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"BotBw"},"content":"    private static void listAndHandleException(String[] args) {","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"BotBw"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"BotBw"},"content":"            TaskManager.listTasks(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"BotBw"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"BotBw"},"content":"            System.out.println(exception);","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"BotBw"},"content":"    private static void unmarkAndHandleException(String[] args) {","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"BotBw"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":110,"author":{"gitId":"BotBw"},"content":"            TaskManager.unmark(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":111,"author":{"gitId":"BotBw"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"BotBw"},"content":"            System.out.println(exception);","lastModifiedDate":"2022-02-07"},{"lineNumber":113,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":114,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":115,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":116,"author":{"gitId":"BotBw"},"content":"    private static void markAndHandleException(String[] args) {","lastModifiedDate":"2022-02-07"},{"lineNumber":117,"author":{"gitId":"BotBw"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":118,"author":{"gitId":"BotBw"},"content":"            TaskManager.mark(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":119,"author":{"gitId":"BotBw"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-07"},{"lineNumber":120,"author":{"gitId":"BotBw"},"content":"            System.out.println(exception);","lastModifiedDate":"2022-02-07"},{"lineNumber":121,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":122,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":123,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":124,"author":{"gitId":"BotBw"},"content":"    private static void addAndHandleException(String[] args) {","lastModifiedDate":"2022-02-07"},{"lineNumber":125,"author":{"gitId":"BotBw"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":126,"author":{"gitId":"BotBw"},"content":"            TaskManager.addTasks(args);","lastModifiedDate":"2022-02-07"},{"lineNumber":127,"author":{"gitId":"BotBw"},"content":"            TaskManager.printTaskNumber();","lastModifiedDate":"2022-02-07"},{"lineNumber":128,"author":{"gitId":"BotBw"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-07"},{"lineNumber":129,"author":{"gitId":"BotBw"},"content":"            System.out.println(exception);","lastModifiedDate":"2022-02-07"},{"lineNumber":130,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":131,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":132,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":133,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"BotBw"},"content":"     * Print every token in args","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"BotBw"},"content":"     * @param args tokens to print","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"BotBw"},"content":"    private static void echo(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"BotBw"},"content":"        if (!args[0].equals(\"echo\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":140,"author":{"gitId":"BotBw"},"content":"            // there must be some error","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"BotBw"},"content":"            // TODO exception handle","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"BotBw"},"content":"            return;","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"BotBw"},"content":"            System.out.print(args[i]);","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"BotBw"},"content":"            if (i !\u003d args.length - 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"BotBw"},"content":"                System.out.print(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"BotBw"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"BotBw"},"content":"                System.out.print(\"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"BotBw":153}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"    private String deadlineTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"    public Deadline(String content, String deadlineTime) {","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"        super(content);","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDeadlineTime() + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"    public String getDeadlineTime() {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"        return deadlineTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"BotBw":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":" * Duke, your personal terminal assistant","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"     * The appellation for the guest","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    private static String userName \u003d \"Mr/Mrs Geek\";","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"     * Exit commands","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"    private static String[] exitCommands \u003d {\"bye\", \"exit\", \"quit\"};","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"     * The main method of Duke, do program initialization and then start running Duke","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"     * @param args the appellation for the guest, should only be assigned to {@value #userName} or None","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"        initializeDuke(args);","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"        printUserGreet();","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"        runDuke();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"        printUserFarewell();","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"     * Assign the appellation since this in the only thing to initialize","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"     * @param args the appellation for the guest, should only be assigned to {@value #userName} or None","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"    private static void initializeDuke(String[] args) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"        if (args.length \u003e\u003d 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"            userName \u003d args[args.length - 1];","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"     * Return only when user\u0027s command containing word \"bye\"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"     * Get command from user, parse the command and then execute the corresponding command.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"    private static void runDuke() {","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"        while (true) {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"            printUserPrompt();","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"            Command command \u003d CommandManager.getCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"            printLineDivider();","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"            if (exitIfContainExitCommand(command)) {","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"                return;","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"            CommandManager.runCommand(command);","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"            printLineDivider();","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"    private static boolean exitIfContainExitCommand(Command command) {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"        for (String token : command.getCommandTokens()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"            if (isExiting(token)) {","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"                return true;","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"        return false;","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"     * Print a line Divider, making the layout more clear","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"    private static void printLineDivider() {","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"        // TODO Beautify","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"------------------------------\");","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"     * Greet the user, called right after initialization","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"    private static void printUserGreet() {","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"BotBw"},"content":"        // TODO Personalize the greeting information (maybe change DUKE to BECK or something else)","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"BotBw"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"BotBw"},"content":"                 ____        _       \\s","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"BotBw"},"content":"                |  _ \\\\ _   _| | _____\\s","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"BotBw"},"content":"                | | | | | | | |/ / _ \\\\","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"BotBw"},"content":"                | |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"BotBw"},"content":"                |____/ \\\\__,_|_|\\\\_\\\\___|","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"BotBw"},"content":"                \"\"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"BotBw"},"content":"        printLineDivider();","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Hello, I\u0027m Duke\");","lastModifiedDate":"2022-01-19"},{"lineNumber":86,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"What can I do for you? \" + userName);","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"BotBw"},"content":"        printLineDivider();","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"BotBw"},"content":"     * Say goodbye to user, called when program is ready to exit","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"BotBw"},"content":"    private static void printUserFarewell() {","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Bye, \" + userName + \". Hope to see you soon!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"BotBw"},"content":"        printLineDivider();","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":98,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"BotBw"},"content":"     * Print {@value #userName} and prompt symbol, making the layout more clear","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"BotBw"},"content":"    private static void printUserPrompt() {","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"BotBw"},"content":"        // TODO add more prompt style","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"BotBw"},"content":"        System.out.print(userName + \" \u003e \");","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":105,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":106,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"BotBw"},"content":"     * Check whether the token is contained in exit command","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":110,"author":{"gitId":"BotBw"},"content":"     * @param token the command token to be checked","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"BotBw"},"content":"     * @return whether the token is contained in exit command","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"BotBw"},"content":"    private static boolean isExiting(String token) {","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"BotBw"},"content":"        for (String str : exitCommands) {","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"BotBw"},"content":"            if (token.equalsIgnoreCase(str)) {","lastModifiedDate":"2022-02-02"},{"lineNumber":116,"author":{"gitId":"BotBw"},"content":"                return true;","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"BotBw"},"content":"        return false;","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"BotBw":117,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"public class DukeException extends Throwable {","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"    public DukeException(String content) {","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"        super(content);","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"BotBw":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"    private final String schedule;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"    public Event(String content, String schedule) {","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"        super(content);","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + getSchedule() + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"    public String getSchedule() {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"        return schedule;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"BotBw":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":" * A basic reminder with status (done or not done yet)","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"public class Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"     * The content of a reminder","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    private String content;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"     * Whether this reminder is marked as done or not","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"    private Boolean isDone;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"     * The only method to create a reminder by others","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"     * @param content","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"    public Task(String content) {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"        this(content, false);","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"     * Inner constructor, used when changing the status of instance","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"     * @param content","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"     * @param isDone","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"    private Task(String content, boolean isDone) {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"     * Get a new Reminder marked as Done with the same content.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"     * @return A new Reminder marked as Done with the same content","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"    public void setDone() {","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"     * Get a new Reminder marked as not Done yet with the same content.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"     * @return A new Reminder marked as not Done yet with the same content","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"    public void clearDone() {","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"     * Check the reminder is marked as done or not;","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"     * @return The status of reminder","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"        return isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"     * Get the content of the reminder.","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"     * @return The content of the reminder","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"    public String getContent() {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"        return content;","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"        return \"[\" + (isDone() ? \"X\" : \" \") + \"] \" + getContent();","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"BotBw":75}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"import java.util.List;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"public class TaskManager {","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"     * list to store all tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    private final static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"     * Add all the tasks in args","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"     * @param args tasks to be added","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"    public static void addTasks(String[] args) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"        throwIfArgsIsNotValid(args, \"task\");","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"            Task task \u003d new Task(args[i]);","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"            tasks.add(task);","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"            System.out.println(\"Added: \" + task);","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"    private static void throwIfArgsIsNotValid(String[] args, String functionName) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"        if (args.length \u003c\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a \" + functionName + \" cannot be empty.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"     * Return the corresponding task index by its array index.","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"     * By conventional task index \u003d\u003d array index + 1","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"     * @param arrayID array id","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"     * @return task id of corresponding array id","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"    private static int getTaskID(int arrayID) {","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"        return arrayID + 1;","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"     * Return the corresponding task index by its array index.","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"     * By conventional array index \u003d\u003d task index - 1","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"     * @param taskID task id","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"     * @return array id of corresponding task id","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"    private static int getArrayID(int taskID) {","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"        return taskID - 1;","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"     * List all the tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"     * @param args dump variable, no use","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"    public static void listTasks(String[] args) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"        // TODO args can be used to control the style of output","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"            System.out.printf(\"%d. %s\\n\", getTaskID(i), tasks.get(i));","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"     * Mark every task whose is in args[1..n) as done","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"     * Using by \u003e mark {task1 id} {task2 id} ...","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"     * @param args arguments","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"    public static void mark(String[] args) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"        throwIfArgsIsNotValid(args, \"mark\");","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"            int taskID \u003d Integer.parseInt(args[i]);","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"BotBw"},"content":"            int arrayID \u003d getArrayID(taskID);","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"BotBw"},"content":"            if (arrayID \u003c 0 || arrayID \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"BotBw"},"content":"                System.out.println(\"There is no \" + taskID + \" task.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"BotBw"},"content":"                continue;","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"BotBw"},"content":"            tasks.get(arrayID).setDone();","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"BotBw"},"content":"            System.out.println(tasks.get(arrayID));","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Nice! I\u0027ve marked those valid tasks as done\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"BotBw"},"content":"     * Mark every task whose is in args[1..n) as not done yet.","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"BotBw"},"content":"     * Using by \u003e unmark {task1 id} {task2 id} ...","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"BotBw"},"content":"     * @param args arguments","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"BotBw"},"content":"    public static void unmark(String[] args) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":94,"author":{"gitId":"BotBw"},"content":"        throwIfArgsIsNotValid(args, \"unmark\");","lastModifiedDate":"2022-02-07"},{"lineNumber":95,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Nice! I\u0027ve marked these tasks as not done yet\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"BotBw"},"content":"            int taskID \u003d Integer.parseInt(args[i]);","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"BotBw"},"content":"            int arrayID \u003d getArrayID(taskID);","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"BotBw"},"content":"            if (arrayID \u003c 0 || arrayID \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"BotBw"},"content":"                System.out.println(\"There is no \" + taskID + \" task.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"BotBw"},"content":"                continue;","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"BotBw"},"content":"            tasks.get(arrayID).clearDone();","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"BotBw"},"content":"            System.out.println(tasks.get(arrayID));","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":110,"author":{"gitId":"BotBw"},"content":"     * @return the total number of tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"BotBw"},"content":"    public static int getTaskNumber() {","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"BotBw"},"content":"        return tasks.size();","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":116,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"BotBw"},"content":"     * Print the total number of tasks to user","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"BotBw"},"content":"    public static void printTaskNumber() {","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Now you have \" + getTaskNumber() + \" task(s) in the list.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":122,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":123,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":124,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":125,"author":{"gitId":"BotBw"},"content":"     * Add multiple ToDoes to the task array","lastModifiedDate":"2022-02-02"},{"lineNumber":126,"author":{"gitId":"BotBw"},"content":"     * Using by \u003e todo {todo1 id} {todo2 id} ...","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":128,"author":{"gitId":"BotBw"},"content":"     * @param args arguments","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":130,"author":{"gitId":"BotBw"},"content":"    public static void addToDoes(String[] args) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":131,"author":{"gitId":"BotBw"},"content":"        throwIfArgsIsNotValid(args, \"todo\");","lastModifiedDate":"2022-02-07"},{"lineNumber":132,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"BotBw"},"content":"            ToDo todo \u003d new ToDo((args[i]));","lastModifiedDate":"2022-02-02"},{"lineNumber":134,"author":{"gitId":"BotBw"},"content":"            tasks.add(todo);","lastModifiedDate":"2022-02-02"},{"lineNumber":135,"author":{"gitId":"BotBw"},"content":"            System.out.println(\"Added: \" + todo);","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":137,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":138,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":139,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":140,"author":{"gitId":"BotBw"},"content":"     * Add multiple deadlines to task array","lastModifiedDate":"2022-02-02"},{"lineNumber":141,"author":{"gitId":"BotBw"},"content":"     * Using by \u003e deadline {ddl 1} {ddl 2} ... /by {ddl time for 1, 2...} {adl a} {ddl b} ... /by {ddl time for a, b...} ...","lastModifiedDate":"2022-02-02"},{"lineNumber":142,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":143,"author":{"gitId":"BotBw"},"content":"     * @param args arguments","lastModifiedDate":"2022-02-02"},{"lineNumber":144,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"BotBw"},"content":"    public static void addDeadlines(String[] args) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":146,"author":{"gitId":"BotBw"},"content":"        throwIfArgsIsNotValid(args, \"deadline\");","lastModifiedDate":"2022-02-07"},{"lineNumber":147,"author":{"gitId":"BotBw"},"content":"        List\u003cString\u003e contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":148,"author":{"gitId":"BotBw"},"content":"        String deadlineTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":149,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":150,"author":{"gitId":"BotBw"},"content":"            if (args[i].equals(\"/by\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":151,"author":{"gitId":"BotBw"},"content":"                if (i + 1 \u003c args.length) {","lastModifiedDate":"2022-02-02"},{"lineNumber":152,"author":{"gitId":"BotBw"},"content":"                    deadlineTime \u003d args[i + 1];","lastModifiedDate":"2022-02-02"},{"lineNumber":153,"author":{"gitId":"BotBw"},"content":"                    addMultipleDeadlines(contents, deadlineTime);","lastModifiedDate":"2022-02-02"},{"lineNumber":154,"author":{"gitId":"BotBw"},"content":"                    contents.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":155,"author":{"gitId":"BotBw"},"content":"                    i++;","lastModifiedDate":"2022-02-02"},{"lineNumber":156,"author":{"gitId":"BotBw"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"BotBw"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":158,"author":{"gitId":"BotBw"},"content":"                contents.add(args[i]);","lastModifiedDate":"2022-02-02"},{"lineNumber":159,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":160,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":161,"author":{"gitId":"BotBw"},"content":"        if (!contents.isEmpty()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":162,"author":{"gitId":"BotBw"},"content":"            System.out.print(\"Deadline adding failed (no corresponding deadline time):\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":163,"author":{"gitId":"BotBw"},"content":"            for (int i \u003d 0; i \u003c contents.size(); i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":164,"author":{"gitId":"BotBw"},"content":"                System.out.print((i + 1) + \". \" + contents.get(i) + \"\\t\");","lastModifiedDate":"2022-02-02"},{"lineNumber":165,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":166,"author":{"gitId":"BotBw"},"content":"            System.out.println();","lastModifiedDate":"2022-02-02"},{"lineNumber":167,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":168,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":169,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":170,"author":{"gitId":"BotBw"},"content":"    private static void addMultipleDeadlines(List\u003cString\u003e contents, String deadlineTime) {","lastModifiedDate":"2022-02-02"},{"lineNumber":171,"author":{"gitId":"BotBw"},"content":"        for (String content : contents) {","lastModifiedDate":"2022-02-02"},{"lineNumber":172,"author":{"gitId":"BotBw"},"content":"            Deadline ddl \u003d new Deadline(content, deadlineTime);","lastModifiedDate":"2022-02-02"},{"lineNumber":173,"author":{"gitId":"BotBw"},"content":"            tasks.add(ddl);","lastModifiedDate":"2022-02-02"},{"lineNumber":174,"author":{"gitId":"BotBw"},"content":"            System.out.println(\"Added: \" + ddl);","lastModifiedDate":"2022-02-02"},{"lineNumber":175,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":176,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":177,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":178,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":179,"author":{"gitId":"BotBw"},"content":"     * Add multiple events to task array.","lastModifiedDate":"2022-02-02"},{"lineNumber":180,"author":{"gitId":"BotBw"},"content":"     * Using by \u003e event {evt 1} {evt 2} ... /at {evt time for 1, 2...} {evt a} {evt b} ... /at {evt time for a, b...} ...","lastModifiedDate":"2022-02-02"},{"lineNumber":181,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":182,"author":{"gitId":"BotBw"},"content":"     * @param args arguments","lastModifiedDate":"2022-02-02"},{"lineNumber":183,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":184,"author":{"gitId":"BotBw"},"content":"    public static void addEvents(String[] args) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":185,"author":{"gitId":"BotBw"},"content":"        throwIfArgsIsNotValid(args, \"event\");","lastModifiedDate":"2022-02-07"},{"lineNumber":186,"author":{"gitId":"BotBw"},"content":"        List\u003cString\u003e contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":187,"author":{"gitId":"BotBw"},"content":"        String schedule;","lastModifiedDate":"2022-02-02"},{"lineNumber":188,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":189,"author":{"gitId":"BotBw"},"content":"            if (args[i].equals(\"/at\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":190,"author":{"gitId":"BotBw"},"content":"                if (i + 1 \u003c args.length) {","lastModifiedDate":"2022-02-02"},{"lineNumber":191,"author":{"gitId":"BotBw"},"content":"                    schedule \u003d args[i + 1];","lastModifiedDate":"2022-02-02"},{"lineNumber":192,"author":{"gitId":"BotBw"},"content":"                    addMultipleEvents(contents, schedule);","lastModifiedDate":"2022-02-02"},{"lineNumber":193,"author":{"gitId":"BotBw"},"content":"                    contents.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":194,"author":{"gitId":"BotBw"},"content":"                    i++;","lastModifiedDate":"2022-02-02"},{"lineNumber":195,"author":{"gitId":"BotBw"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":196,"author":{"gitId":"BotBw"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":197,"author":{"gitId":"BotBw"},"content":"                contents.add(args[i]);","lastModifiedDate":"2022-02-02"},{"lineNumber":198,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":199,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":200,"author":{"gitId":"BotBw"},"content":"        if (!contents.isEmpty()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":201,"author":{"gitId":"BotBw"},"content":"            System.out.print(\"Event adding failed (no corresponding schedule time):\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":202,"author":{"gitId":"BotBw"},"content":"            for (int i \u003d 0; i \u003c contents.size(); i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":203,"author":{"gitId":"BotBw"},"content":"                System.out.print((i + 1) + \". \" + contents.get(i) + \"\\t\");","lastModifiedDate":"2022-02-02"},{"lineNumber":204,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":205,"author":{"gitId":"BotBw"},"content":"            System.out.println();","lastModifiedDate":"2022-02-02"},{"lineNumber":206,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":207,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":208,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":209,"author":{"gitId":"BotBw"},"content":"    private static void addMultipleEvents(List\u003cString\u003e contents, String deadlineTime) {","lastModifiedDate":"2022-02-02"},{"lineNumber":210,"author":{"gitId":"BotBw"},"content":"        for (String content : contents) {","lastModifiedDate":"2022-02-02"},{"lineNumber":211,"author":{"gitId":"BotBw"},"content":"            Event ddl \u003d new Event(content, deadlineTime);","lastModifiedDate":"2022-02-02"},{"lineNumber":212,"author":{"gitId":"BotBw"},"content":"            tasks.add(ddl);","lastModifiedDate":"2022-02-02"},{"lineNumber":213,"author":{"gitId":"BotBw"},"content":"            System.out.println(\"Added: \" + ddl);","lastModifiedDate":"2022-02-02"},{"lineNumber":214,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":215,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":216,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"BotBw":216}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"    public ToDo(String content) {","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"        super(content);","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"BotBw":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"Do you understand this?","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"Of course, you cannot understand this.","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"Because I didn\u0027t program you.","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"But you will understand those.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"Now I will add multiple tasks","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"add \"multiple task1   \" multiple_task2 \"    multiple task3\" \"multiple    task4\"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"Now I will finish task 1 and 4","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"mark 1 4","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"Now I will try to finish task5, which is not created.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"mark 5","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"Now show me all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"list","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"I lied to you, I didn\u0027t finish task4, so unmark","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"unmark 4","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"Show me all the tasks again","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"list","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"Now I will add multiple todoes","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"todo \"   multiple todo1\" multiple_todo2 \"    multiple todo3\" \"multiple       todo4\"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"list","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"Now I will add multiple deadlines","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"deadline \"  ddl  1 \" \"d d l 2\" ddl3 /by \"time for ddl1,2,3\" \"d d l 4\" ddl5 ddl6 /by timefor4,5,6","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"list","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"Now I will add multiple events","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"event \"event1\" event2 \"  ev ent  3  \" /at \"duration for event 1, 2, 3\" event4 event5 \"ddl6\" /at duration_for_event_4,5,6","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"Now I will mark and unmark random tasks/todoes/ddls/events","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"mark 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"unmark 3 8 9 10 21 25 27 29","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"Nice, if you are clever enough, you will recognize my next sentence and terminate","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"hahahahhahahahahhahahahahahahahahhaahah bye hahahahahhahahahahahahhahahahahahahaha","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"BotBw":31}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"java -classpath ../bin Duke HAOXUAN \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BotBw":1,"-":37}}]
