[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# Hello, I\u0027m Sora, Your Personal Chatbot","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"I am capable of keeping tabs on the tasks that you need to keep track of.","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"## Brief Rundown of What I Can Do","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"- Create one of the following three types of tasks:","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"    - Deadline: For tasks that you _die die_ need to complete by a certain period.","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    - Event: For certain occasions such as project meetings, an upcoming exam, or that One Ok Rock concert ","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"  that you\u0027ve been looking forward to forever.","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    - Todo: For things that you plan to do (and hopefully _do_ complete it)","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"## My User Guide","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"For a more detailed guide on how to interact with me, please refer to my [user guide](docs/README.md).","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"alanlowzies":10,"-":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# User Guide for Sora Chatbot","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"### Create a New Task","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"Create a new task that is a deadline, an event, or a to-do, and add it to Sora\u0027s ","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"list for her to keep track of your tasks.","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"### Display Your Tasks","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"Get Sora to display all the tasks that you have created and given to her to keep track on.","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"### Mark Your Tasks as Completed","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"Tell Sora that you have completed a task and she will update it accordingly in her list of tasks.","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"### Delete an Existing Task","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"Remove a task that you no longer wish Sora to keep track of.","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"### Search for an Existing Task","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"Enter a search query and Sora will show you the tasks that matches your search keywords.","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"### Automatic Saving of Task Data to Local Storage","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"Every time you create, update, or delete a task, Sora automatically saves these changes into a file","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"that is stored locally on your system\u0027s storage. This way, your tasks will remain after you bid","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"Sora farewell for the day and will be available the next time you start her up.","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"## Quick Start Guide","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"1. Download the JAR file for Sora.","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"2. (Optional but recommended) Create a new folder and transfer `Sora.jar` into it.","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"3. From your terminal, set the new folder as your working directory.","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"4. Start up Sora with `java -jar Sora.jar`.","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"### `deadline` - Create a new deadline task","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"Creates a new task that is a deadline.","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"**Syntax**","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"deadline \u003cdescription\u003e /by \u003cdue date\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"| Parameters | Description |","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"| --- | --- |","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"| `\u003cdescription\u003e` | Information about this deadline task. |","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"| `\u003cdue date\u003e` | When this task is due. Format: `DD/MM/YYYY HHmm`, where `HHmm` is the time in 24-hour format. |","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"**Example**","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"\u003e deadline Project submission /by 12/04/2022 2359","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"**Expected Outcome**","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"Alright, I\u0027ve added your new task to my list:","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"\t[D][ ] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"A new deadline task called \u0027Project submission\u0027 with a deadline of 12 April 2022 at 11:59pm is created","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"and added to Sora\u0027s list.","lastModifiedDate":"2022-02-22"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"### `event` - Create a new event task","lastModifiedDate":"2022-02-22"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"Creates a new task that is an event.","lastModifiedDate":"2022-02-22"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"**Syntax**","lastModifiedDate":"2022-02-22"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"event \u003cdescription\u003e /at \u003cevent date\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"| Parameters | Description |","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"| --- | --- |","lastModifiedDate":"2022-02-22"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"| `\u003cdescription\u003e` | Information about this event task. |","lastModifiedDate":"2022-02-22"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"| `\u003cevent date\u003e` | When this event is set to occur. Format: `DD/MM/YYYY HHmm`, where `HHmm` is the time in 24-hour format. |","lastModifiedDate":"2022-02-22"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"**Example**","lastModifiedDate":"2022-02-22"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"\u003e event Table tennis match /at 22/02/2022 1400","lastModifiedDate":"2022-02-22"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"**Expected Outcome**","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"Okay, I\u0027ve added your new task to my list:","lastModifiedDate":"2022-02-22"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"\t[E][ ] Table tennis match (scheduled for: Tue, 22 Feb 2022, 2:00 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"A new event task called \u0027Table tennis match\u0027 that is expected to take place on 22 February 2022 at 2pm","lastModifiedDate":"2022-02-22"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"is created and added to Sora\u0027s list.","lastModifiedDate":"2022-02-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"### `todo` - Create a new todo task","lastModifiedDate":"2022-02-22"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"Creates a new task that is a todo.","lastModifiedDate":"2022-02-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"**Syntax**","lastModifiedDate":"2022-02-22"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"| Parameter | Description |","lastModifiedDate":"2022-02-22"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"| --- | --- |","lastModifiedDate":"2022-02-22"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"| `\u003cdescription\u003e` | Information about this todo task. |","lastModifiedDate":"2022-02-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"\u003e **Note**: Unlike deadline and event tasks, todo tasks do not have dates.","lastModifiedDate":"2022-02-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"**Example**","lastModifiedDate":"2022-02-22"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"\u003e todo Buy groceries","lastModifiedDate":"2022-02-22"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"**Expected Outcome**","lastModifiedDate":"2022-02-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"Gotcha, I\u0027ve added your new task to my list:","lastModifiedDate":"2022-02-22"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"\t[T][ ] Buy groceries","lastModifiedDate":"2022-02-22"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"A new todo task called \u0027Buy groceries\u0027 is created and added to Sora\u0027s list.","lastModifiedDate":"2022-02-22"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"### `list` - Show your tasks","lastModifiedDate":"2022-02-22"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"Lists down all the tasks that you have given to Sora.","lastModifiedDate":"2022-02-22"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"**Syntax**","lastModifiedDate":"2022-02-22"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-22"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"**Example Outcome**","lastModifiedDate":"2022-02-22"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"Gotcha, here\u0027s a list of 3 tasks that you have given to me:","lastModifiedDate":"2022-02-22"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"\t1.[D][ ] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"\t2.[E][ ] Table tennis match (scheduled for: Tue, 22 Feb 2022, 2:00 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"\t3.[T][ ] Buy groceries","lastModifiedDate":"2022-02-22"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"Each task entry","lastModifiedDate":"2022-02-22"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"has the following information:","lastModifiedDate":"2022-02-22"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"| Example | Attribute Name | Description |","lastModifiedDate":"2022-02-22"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"| --- | --- | --- |","lastModifiedDate":"2022-02-22"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"| `1.` | Task number | The task number of the task entry. |","lastModifiedDate":"2022-02-22"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"| `[D]` | Task type | The type of task this entry is. `D` for deadline tasks, `E` for event tasks, and `T` for todo tasks. |","lastModifiedDate":"2022-02-22"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"| `[ ]` | Task status | Indicates whether a task is complete or not. If it is marked as done, it will be shown as `[X]`.","lastModifiedDate":"2022-02-22"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"| `Project submission` | Task description | The description of the task entry. |","lastModifiedDate":"2022-02-22"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"| `(due on: Tue, 12 Apr 2022, 11:59 PM)` | Task date \u0026 time | (_Applicable to deadline and event tasks only_) The date and time associated with the task entry.","lastModifiedDate":"2022-02-22"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2022-02-22"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"Marks a task as completed.","lastModifiedDate":"2022-02-22"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"**Syntax**","lastModifiedDate":"2022-02-22"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"mark \u003ctask number\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"| Parameter | Description |","lastModifiedDate":"2022-02-22"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"| --- | --- |","lastModifiedDate":"2022-02-22"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"| `\u003ctask number\u003e` | The number of the task that you want to mark as done. |","lastModifiedDate":"2022-02-22"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"**Example**","lastModifiedDate":"2022-02-22"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"Assume that Sora has the following list (generated by the `list` command):","lastModifiedDate":"2022-02-22"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"Gotcha, here\u0027s a list of 3 tasks that you have given to me:","lastModifiedDate":"2022-02-22"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"\t1.[D][ ] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"\t2.[E][ ] Table tennis match (scheduled for: Tue, 22 Feb 2022, 2:00 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"\t3.[T][ ] Buy groceries","lastModifiedDate":"2022-02-22"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"Suppose that you want to mark the project submission, which is labelled as task number 1","lastModifiedDate":"2022-02-22"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"on the list as complete, you can type","lastModifiedDate":"2022-02-22"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"\u003e mark 1","lastModifiedDate":"2022-02-22"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"**Expected Outcome**","lastModifiedDate":"2022-02-22"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"Gotcha, I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-22"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"\t[D][X] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"Now, if you run the `list` command again, you will see that your \u0027Project submission\u0027 deadline ","lastModifiedDate":"2022-02-22"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"task has been marked as complete, as denoted by the `[X]` checkbox.","lastModifiedDate":"2022-02-22"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"Okay, here\u0027s a list of 3 tasks that you have given to me:","lastModifiedDate":"2022-02-22"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"\t1.[D][X] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":210,"author":{"gitId":"alanlowzies"},"content":"\t2.[E][ ] Table tennis match (scheduled for: Tue, 22 Feb 2022, 2:00 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":211,"author":{"gitId":"alanlowzies"},"content":"\t3.[T][ ] Buy groceries","lastModifiedDate":"2022-02-22"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"### `Unmark` - Mark a task as not done","lastModifiedDate":"2022-02-22"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"Marks a task as incomplete.","lastModifiedDate":"2022-02-22"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"**Syntax**","lastModifiedDate":"2022-02-22"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"unmark \u003ctask number\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"| Parameter | Description |","lastModifiedDate":"2022-02-22"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"| --- | --- |","lastModifiedDate":"2022-02-22"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"| `\u003ctask number\u003e` | The number of the task that you want to mark as not done. |","lastModifiedDate":"2022-02-22"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":228,"author":{"gitId":"alanlowzies"},"content":"**Example**","lastModifiedDate":"2022-02-22"},{"lineNumber":229,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":230,"author":{"gitId":"alanlowzies"},"content":"Assume that you have the following list of tasks (generated by the `list` command):","lastModifiedDate":"2022-02-22"},{"lineNumber":231,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":232,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"Okay, here\u0027s a list of 3 tasks that you have given to me:","lastModifiedDate":"2022-02-22"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":235,"author":{"gitId":"alanlowzies"},"content":"\t1.[D][X] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"\t2.[E][ ] Table tennis match (scheduled for: Tue, 22 Feb 2022, 2:00 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"\t3.[T][ ] Buy groceries","lastModifiedDate":"2022-02-22"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":239,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"Suppose you want to mark your \u0027Project submission\u0027 task as not done, you can type","lastModifiedDate":"2022-02-22"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":243,"author":{"gitId":"alanlowzies"},"content":"\u003e unmark 1","lastModifiedDate":"2022-02-22"},{"lineNumber":244,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":245,"author":{"gitId":"alanlowzies"},"content":"**Expected Outcome**","lastModifiedDate":"2022-02-22"},{"lineNumber":246,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"Got it, I\u0027ve marked this task as not done:","lastModifiedDate":"2022-02-22"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"\t[D][ ] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"Now, if you run the `list` command again, you will see that the \u0027Project submission\u0027 task is no longer marked as done,","lastModifiedDate":"2022-02-22"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"as indicated by the empty `[ ]` checkbox.","lastModifiedDate":"2022-02-22"},{"lineNumber":256,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"### `delete` - Delete a task","lastModifiedDate":"2022-02-22"},{"lineNumber":258,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":259,"author":{"gitId":"alanlowzies"},"content":"Deletes a task that is on the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":260,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":261,"author":{"gitId":"alanlowzies"},"content":"**Syntax**","lastModifiedDate":"2022-02-22"},{"lineNumber":262,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":263,"author":{"gitId":"alanlowzies"},"content":"delete \u003ctask number\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":264,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":265,"author":{"gitId":"alanlowzies"},"content":"| Parameter | Description |","lastModifiedDate":"2022-02-22"},{"lineNumber":266,"author":{"gitId":"alanlowzies"},"content":"| --- | --- |","lastModifiedDate":"2022-02-22"},{"lineNumber":267,"author":{"gitId":"alanlowzies"},"content":"| `\u003ctask number\u003e` | The number of the task that you want to delete. |","lastModifiedDate":"2022-02-22"},{"lineNumber":268,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":269,"author":{"gitId":"alanlowzies"},"content":"**Example**","lastModifiedDate":"2022-02-22"},{"lineNumber":270,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":271,"author":{"gitId":"alanlowzies"},"content":"Assuming that the following is your current list of tasks (generated by the `list` command):","lastModifiedDate":"2022-02-22"},{"lineNumber":272,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":273,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":274,"author":{"gitId":"alanlowzies"},"content":"Gotcha, here\u0027s a list of 3 tasks that you have given to me:","lastModifiedDate":"2022-02-22"},{"lineNumber":275,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":276,"author":{"gitId":"alanlowzies"},"content":"\t1.[D][ ] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":277,"author":{"gitId":"alanlowzies"},"content":"\t2.[E][ ] Table tennis match (scheduled for: Tue, 22 Feb 2022, 2:00 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":278,"author":{"gitId":"alanlowzies"},"content":"\t3.[T][ ] Buy groceries","lastModifiedDate":"2022-02-22"},{"lineNumber":279,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":280,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":281,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":282,"author":{"gitId":"alanlowzies"},"content":"Suppose that your table tennis match has been cancelled due to unforseen circumstances","lastModifiedDate":"2022-02-22"},{"lineNumber":283,"author":{"gitId":"alanlowzies"},"content":"and you wish to remove it from the list, you can type:","lastModifiedDate":"2022-02-22"},{"lineNumber":284,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":285,"author":{"gitId":"alanlowzies"},"content":"\u003e delete 2","lastModifiedDate":"2022-02-22"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":287,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":288,"author":{"gitId":"alanlowzies"},"content":"**Expected Outcome**","lastModifiedDate":"2022-02-22"},{"lineNumber":289,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":290,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":291,"author":{"gitId":"alanlowzies"},"content":"Alright, I\u0027ve deleted this task:","lastModifiedDate":"2022-02-22"},{"lineNumber":292,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":293,"author":{"gitId":"alanlowzies"},"content":"\t[E][ ] Table tennis match (scheduled for: Tue, 22 Feb 2022, 2:00 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":294,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":295,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":296,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":297,"author":{"gitId":"alanlowzies"},"content":"Now, if you run the `list` command again, you will notice that the above task is no longer in your","lastModifiedDate":"2022-02-22"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"list and you only have 2 tasks left.","lastModifiedDate":"2022-02-22"},{"lineNumber":299,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":300,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":301,"author":{"gitId":"alanlowzies"},"content":"Alright, here\u0027s a list of 2 tasks that you have given to me:","lastModifiedDate":"2022-02-22"},{"lineNumber":302,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":303,"author":{"gitId":"alanlowzies"},"content":"\t1.[D][ ] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":304,"author":{"gitId":"alanlowzies"},"content":"\t2.[T][ ] Buy groceries","lastModifiedDate":"2022-02-22"},{"lineNumber":305,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":306,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":307,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":308,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":309,"author":{"gitId":"alanlowzies"},"content":"### `find` - Search for task(s)","lastModifiedDate":"2022-02-22"},{"lineNumber":310,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":311,"author":{"gitId":"alanlowzies"},"content":"Searches the list for tasks that matches your specified search query. Your query can be a word or a phrase.","lastModifiedDate":"2022-02-22"},{"lineNumber":312,"author":{"gitId":"alanlowzies"},"content":"The search mechanism is a simple word/phrase match on the texts as shown in the `list` command.","lastModifiedDate":"2022-02-22"},{"lineNumber":313,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":314,"author":{"gitId":"alanlowzies"},"content":"**Syntax**","lastModifiedDate":"2022-02-22"},{"lineNumber":315,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":316,"author":{"gitId":"alanlowzies"},"content":"find \u003csearch query\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":317,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":318,"author":{"gitId":"alanlowzies"},"content":"| Parameter | Description |","lastModifiedDate":"2022-02-22"},{"lineNumber":319,"author":{"gitId":"alanlowzies"},"content":"| --- | --- |","lastModifiedDate":"2022-02-22"},{"lineNumber":320,"author":{"gitId":"alanlowzies"},"content":"| `\u003csearch query\u003e` | The word/phrase that you wish to search for in your list of tasks. |","lastModifiedDate":"2022-02-22"},{"lineNumber":321,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":322,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":323,"author":{"gitId":"alanlowzies"},"content":"**Examples**","lastModifiedDate":"2022-02-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":325,"author":{"gitId":"alanlowzies"},"content":"Suppose you have the following list of tasks (generated by the `list` command):","lastModifiedDate":"2022-02-22"},{"lineNumber":326,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":328,"author":{"gitId":"alanlowzies"},"content":"Alright, here\u0027s a list of 8 tasks that you have given to me:","lastModifiedDate":"2022-02-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":330,"author":{"gitId":"alanlowzies"},"content":"\t1.[D][X] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":331,"author":{"gitId":"alanlowzies"},"content":"\t2.[T][ ] Buy groceries","lastModifiedDate":"2022-02-22"},{"lineNumber":332,"author":{"gitId":"alanlowzies"},"content":"\t3.[T][ ] Homework","lastModifiedDate":"2022-02-22"},{"lineNumber":333,"author":{"gitId":"alanlowzies"},"content":"\t4.[E][ ] Fireworks (scheduled for: Sun, 1 Jan 2023, 12:00 AM)","lastModifiedDate":"2022-02-22"},{"lineNumber":334,"author":{"gitId":"alanlowzies"},"content":"\t5.[D][X] SEP application (due on: Mon, 28 Feb 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":335,"author":{"gitId":"alanlowzies"},"content":"\t6.[T][ ] Walk the dog","lastModifiedDate":"2022-02-22"},{"lineNumber":336,"author":{"gitId":"alanlowzies"},"content":"\t7.[D][ ] Art submission (due on: Fri, 11 Nov 2022, 10:00 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":337,"author":{"gitId":"alanlowzies"},"content":"\t8.[E][ ] Raining cats and dogs (scheduled for: Fri, 1 Apr 2022, 8:00 AM)","lastModifiedDate":"2022-02-22"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":339,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":340,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":341,"author":{"gitId":"alanlowzies"},"content":"If you want to find tasks with the word \u0027submission\u0027, you can type","lastModifiedDate":"2022-02-22"},{"lineNumber":342,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"\u003e find submission","lastModifiedDate":"2022-02-22"},{"lineNumber":344,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":345,"author":{"gitId":"alanlowzies"},"content":"and Sora will respond to you with","lastModifiedDate":"2022-02-22"},{"lineNumber":346,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":347,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":348,"author":{"gitId":"alanlowzies"},"content":"Alright, I have found 2 tasks that matches your search","lastModifiedDate":"2022-02-22"},{"lineNumber":349,"author":{"gitId":"alanlowzies"},"content":"phrase:","lastModifiedDate":"2022-02-22"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":351,"author":{"gitId":"alanlowzies"},"content":"\t1.[D][X] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":352,"author":{"gitId":"alanlowzies"},"content":"\t7.[D][ ] Art submission (due on: Fri, 11 Nov 2022, 10:00 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":354,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":355,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":357,"author":{"gitId":"alanlowzies"},"content":"If you want to find all event tasks, you can type","lastModifiedDate":"2022-02-22"},{"lineNumber":358,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":359,"author":{"gitId":"alanlowzies"},"content":"\u003e find [E]","lastModifiedDate":"2022-02-22"},{"lineNumber":360,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":361,"author":{"gitId":"alanlowzies"},"content":"and Sora will reply to you with","lastModifiedDate":"2022-02-22"},{"lineNumber":362,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":363,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":364,"author":{"gitId":"alanlowzies"},"content":"Okay, I have found 2 tasks that matches your search","lastModifiedDate":"2022-02-22"},{"lineNumber":365,"author":{"gitId":"alanlowzies"},"content":"phrase:","lastModifiedDate":"2022-02-22"},{"lineNumber":366,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":367,"author":{"gitId":"alanlowzies"},"content":"\t4.[E][ ] Fireworks (scheduled for: Sun, 1 Jan 2023, 12:00 AM)","lastModifiedDate":"2022-02-22"},{"lineNumber":368,"author":{"gitId":"alanlowzies"},"content":"\t8.[E][ ] Raining cats and dogs (scheduled for: Fri, 1 Apr 2022, 8:00 AM)","lastModifiedDate":"2022-02-22"},{"lineNumber":369,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":370,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":371,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":372,"author":{"gitId":"alanlowzies"},"content":"If you want to find all completed tasks, you can type","lastModifiedDate":"2022-02-22"},{"lineNumber":373,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":374,"author":{"gitId":"alanlowzies"},"content":"\u003e find [X]","lastModifiedDate":"2022-02-22"},{"lineNumber":375,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":376,"author":{"gitId":"alanlowzies"},"content":"and Sora will reply with","lastModifiedDate":"2022-02-22"},{"lineNumber":377,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":378,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":379,"author":{"gitId":"alanlowzies"},"content":"Gotcha, I have found 2 tasks that matches your search","lastModifiedDate":"2022-02-22"},{"lineNumber":380,"author":{"gitId":"alanlowzies"},"content":"phrase:","lastModifiedDate":"2022-02-22"},{"lineNumber":381,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":382,"author":{"gitId":"alanlowzies"},"content":"\t1.[D][X] Project submission (due on: Tue, 12 Apr 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":383,"author":{"gitId":"alanlowzies"},"content":"\t5.[D][X] SEP application (due on: Mon, 28 Feb 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":384,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":385,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":386,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":387,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":388,"author":{"gitId":"alanlowzies"},"content":"\u003e**Note**: The search mechanism is case-sensitive. Thus, `find SEP` will give you","lastModifiedDate":"2022-02-22"},{"lineNumber":389,"author":{"gitId":"alanlowzies"},"content":"\u003e```","lastModifiedDate":"2022-02-22"},{"lineNumber":390,"author":{"gitId":"alanlowzies"},"content":"\u003e------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":391,"author":{"gitId":"alanlowzies"},"content":"\u003eGotcha, I have found 1 task that matches your search","lastModifiedDate":"2022-02-22"},{"lineNumber":392,"author":{"gitId":"alanlowzies"},"content":"\u003ephrase:","lastModifiedDate":"2022-02-22"},{"lineNumber":393,"author":{"gitId":"alanlowzies"},"content":"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":394,"author":{"gitId":"alanlowzies"},"content":"\u003e\t5.[D][X] SEP application (due on: Mon, 28 Feb 2022, 11:59 PM)","lastModifiedDate":"2022-02-22"},{"lineNumber":395,"author":{"gitId":"alanlowzies"},"content":"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":396,"author":{"gitId":"alanlowzies"},"content":"\u003e------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":397,"author":{"gitId":"alanlowzies"},"content":"\u003e```","lastModifiedDate":"2022-02-22"},{"lineNumber":398,"author":{"gitId":"alanlowzies"},"content":"\u003ebut `find SeP` will not return any results:","lastModifiedDate":"2022-02-22"},{"lineNumber":399,"author":{"gitId":"alanlowzies"},"content":"\u003e```","lastModifiedDate":"2022-02-22"},{"lineNumber":400,"author":{"gitId":"alanlowzies"},"content":"\u003e------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":401,"author":{"gitId":"alanlowzies"},"content":"\u003eOops, there are no tasks that match your search phrase.","lastModifiedDate":"2022-02-22"},{"lineNumber":402,"author":{"gitId":"alanlowzies"},"content":"\u003ePerhaps you could refine your search parameters?","lastModifiedDate":"2022-02-22"},{"lineNumber":403,"author":{"gitId":"alanlowzies"},"content":"\u003e------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":404,"author":{"gitId":"alanlowzies"},"content":"\u003e```","lastModifiedDate":"2022-02-22"},{"lineNumber":405,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":406,"author":{"gitId":"alanlowzies"},"content":"### `bye` - Bid Sora farewell","lastModifiedDate":"2022-02-22"},{"lineNumber":407,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":408,"author":{"gitId":"alanlowzies"},"content":"Exits the application.","lastModifiedDate":"2022-02-22"},{"lineNumber":409,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":410,"author":{"gitId":"alanlowzies"},"content":"**Syntax**","lastModifiedDate":"2022-02-22"},{"lineNumber":411,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":412,"author":{"gitId":"alanlowzies"},"content":"bye","lastModifiedDate":"2022-02-22"},{"lineNumber":413,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":414,"author":{"gitId":"alanlowzies"},"content":"**Expected Outcome**","lastModifiedDate":"2022-02-22"},{"lineNumber":415,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":416,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":417,"author":{"gitId":"alanlowzies"},"content":"Good night, have a good rest...","lastModifiedDate":"2022-02-22"},{"lineNumber":418,"author":{"gitId":"alanlowzies"},"content":"See you again soon~","lastModifiedDate":"2022-02-22"},{"lineNumber":419,"author":{"gitId":"alanlowzies"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-02-22"},{"lineNumber":420,"author":{"gitId":"alanlowzies"},"content":"\u003cend of program\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":421,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-02-22"},{"lineNumber":422,"author":{"gitId":"alanlowzies"},"content":"Note that depending on the time or day, Sora will bid you farewell differently.","lastModifiedDate":"2022-02-22"},{"lineNumber":423,"author":{"gitId":"alanlowzies"},"content":"(She also greets you differently based on the time of the day!)","lastModifiedDate":"2022-02-22"},{"lineNumber":424,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":425,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":426,"author":{"gitId":"alanlowzies"},"content":"## File Storage Information","lastModifiedDate":"2022-02-22"},{"lineNumber":427,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":428,"author":{"gitId":"alanlowzies"},"content":"When you start Sora for the first time on a computer, the following are created:","lastModifiedDate":"2022-02-22"},{"lineNumber":429,"author":{"gitId":"alanlowzies"},"content":"- A directory named `CS2113T_iP_Sora_Resources`","lastModifiedDate":"2022-02-22"},{"lineNumber":430,"author":{"gitId":"alanlowzies"},"content":"- A text file named `data.txt` residing within the aforementioned directory.","lastModifiedDate":"2022-02-22"},{"lineNumber":431,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":432,"author":{"gitId":"alanlowzies"},"content":"On subsequent boot ups, Sora will automatically read the file to load the tasks created in previous","lastModifiedDate":"2022-02-22"},{"lineNumber":433,"author":{"gitId":"alanlowzies"},"content":"sessions onto the current one.","lastModifiedDate":"2022-02-22"},{"lineNumber":434,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":435,"author":{"gitId":"alanlowzies"},"content":"### Caution","lastModifiedDate":"2022-02-22"},{"lineNumber":436,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":437,"author":{"gitId":"alanlowzies"},"content":"The directory and text file will be created in your terminal\u0027s **current working directory**.","lastModifiedDate":"2022-02-22"},{"lineNumber":438,"author":{"gitId":"alanlowzies"},"content":"Thus, it is highly recommended that you **set your working directory to the directory where","lastModifiedDate":"2022-02-22"},{"lineNumber":439,"author":{"gitId":"alanlowzies"},"content":"`Sora.jar` is located in** before starting up Sora.","lastModifiedDate":"2022-02-22"},{"lineNumber":440,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":441,"author":{"gitId":"alanlowzies"},"content":"### Recommendation","lastModifiedDate":"2022-02-22"},{"lineNumber":442,"author":{"gitId":"alanlowzies"},"content":"1. Create an empty directory and place `Sora.jar` inside it.","lastModifiedDate":"2022-02-22"},{"lineNumber":443,"author":{"gitId":"alanlowzies"},"content":"2. Set your terminal\u0027s current working directory to the aforementioned directory.","lastModifiedDate":"2022-02-22"},{"lineNumber":444,"author":{"gitId":"alanlowzies"},"content":"3. Run `Sora.jar` from the directory.","lastModifiedDate":"2022-02-22"},{"lineNumber":445,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":446,"author":{"gitId":"alanlowzies"},"content":"This way, `Sora.jar` and your file data will be stored within the same directory.","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"alanlowzies":420,"-":26}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"import sora.Sora;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":" * Entry point for Sora chatbot program.","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"public class Main {","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"        // Start Sora","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"            Sora sora \u003d new Sora();","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"            sora.startContinuousUserPrompt();","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"            // Exit application","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"[Main class] An IOException has occurred and Sora needs to terminate.\" +","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"                    \"\\nSorry about that\");","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"            System.exit(-1);","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"alanlowzies":21}},{"path":"src/main/java/sora/IllegalCharacterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package sora;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * Thrown to indicate that the user\u0027s command input contains at least one character that is regarded","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" * as illegal due to design constraints.","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":" * For example, the pipe character (\"|\") is not allowed because this character is used as a delimiter","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":" * for data stored in Sora\u0027s storage file.","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"public class IllegalCharacterException extends Exception {","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    public static final String ILLEGAL_CHARACTER_MSG \u003d \"Input string contains an illegal character.\";","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an IllegalCharacterException with a specified error message.","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"     * @param errorMsg The error message written by the throwing method.","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    public IllegalCharacterException(String errorMsg) {","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"        super(errorMsg);","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"alanlowzies":21}},{"path":"src/main/java/sora/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package sora;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * Thrown to indicate that a command entered by the user has certain issues. In particular, this exception","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" * is thrown when the user...","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":" *     \u003cli\u003eenters a command that Sora does not understand, or\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":" *     \u003cli\u003eenters an invalid command when adding a task (todo/event/deadline)\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"     * List of pre-defined error messages","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public static final String NO_SUCH_COMMAND_MSG \u003d \"No such command\";","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    public static final String TODO_NO_DESCRIPTION \u003d \"No description for todo command was found\";","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    public static final String EVENT_NO_DESCRIPTION \u003d \"No description for event command was found\";","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    public static final String EVENT_MISSING_FLAG \u003d \"Required flag for event command was not found\";","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    public static final String EVENT_NO_PERIOD \u003d \"Ro period for event command was found\";","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    public static final String EVENT_INVALID_FLAGS \u003d \"Usage of flags in event command was invalid\";","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    public static final String DEADLINE_NO_DESCRIPTION \u003d \"No description for deadline command was found\";","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    public static final String DEADLINE_MISSING_FLAG \u003d \"Required flag for deadline command was not found\";","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"    public static final String DEADLINE_NO_DUE_DATE \u003d \"No due date for deadline command was found\";","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    public static final String DEADLINE_INVALID_FLAGS \u003d \"Usage of flags in deadline command was invalid\";","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    public static final String FIND_NO_SEARCH_STRING \u003d \"No search phrase provided\";","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an InvalidCommandException with a specified error message.","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"     * @param errorMsg The error message written by the throwing method.","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    public InvalidCommandException(String errorMsg) {","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"        super(errorMsg);","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"alanlowzies":39}},{"path":"src/main/java/sora/Sora.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package sora;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import tasks.EmptyListException;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":" * The main \u0027brains\u0027 of Sora. Focuses on passing the user\u0027s input to her relevant components.","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"public class Sora {","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"     * When IN_TESTING_MODE is set to true, certain features of Sora will be limited to","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"     * improve the reliability of automated text UI testing.","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    protected static final boolean IN_TESTING_MODE \u003d false;","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    private boolean isUserExiting \u003d false;","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    private SoraUI soraUI;","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    private SoraParser soraParser;","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    private SoraStorage soraStorage;","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"    private SoraExceptionHandler soraExceptionHandler;","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"     * Initialises the various components of Sora, greets the user, and loads the tasks from the storage","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"     * file (if the storage file exists).","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the user\u0027s command involves reading and/or writing to the storage file and","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     * Sora is unable to open the file.","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    public Sora() throws IOException {","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        // Instantiate components","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"        soraUI \u003d new SoraUI();","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"        soraParser \u003d new SoraParser();","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"        soraStorage \u003d new SoraStorage();","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        soraExceptionHandler \u003d new SoraExceptionHandler(soraUI);","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"        // Greet user","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"        soraUI.printGreetings();","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        // Load saved task list from file","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"            soraStorage.loadTaskListFromFile(getTasksManager());","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"            // Throw to caller method to handle to exit","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"            throw e;","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"     * Gets the isUserExiting field","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"     * @return The isUserExiting field","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    protected boolean doesUserWantsToExit() {","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"        return this.isUserExiting;","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"     * Sets the isUserExiting field\u0027s boolean value to be true.","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    protected void setUserExit() {","lastModifiedDate":"2022-02-08"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"        this.isUserExiting \u003d true;","lastModifiedDate":"2022-02-08"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"     * Returns the taskList field, which contains an instance of the taskList class.","lastModifiedDate":"2022-02-22"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"     * @return","lastModifiedDate":"2022-02-22"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"    protected TaskList getTasksManager() {","lastModifiedDate":"2022-02-21"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"        return this.taskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"     * Prompts the user for an input and passes it to executeCommand method for command execution.","lastModifiedDate":"2022-02-22"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the user\u0027s command involves writing to the storage file and Sora is unable","lastModifiedDate":"2022-02-22"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"     * to open the file.","lastModifiedDate":"2022-02-22"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"    public void startContinuousUserPrompt() throws IOException {","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"        boolean isFirstPrompt \u003d true;","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"        while (!doesUserWantsToExit()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"            // Get user input","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"            String userRawInput \u003d \"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printPrompter(isFirstPrompt);","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"            try {","lastModifiedDate":"2022-02-21"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"                userRawInput \u003d soraParser.getUserInput();","lastModifiedDate":"2022-02-21"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"            } catch (IllegalCharacterException e) {","lastModifiedDate":"2022-02-21"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"                soraUI.printLine();","lastModifiedDate":"2022-02-21"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"                soraExceptionHandler.handleIllegalCharacterException();","lastModifiedDate":"2022-02-21"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"                continue;","lastModifiedDate":"2022-02-21"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"            } finally {","lastModifiedDate":"2022-02-21"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"                isFirstPrompt \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"            // Execute command","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"            try {","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"                executeCommand(userRawInput);","lastModifiedDate":"2022-02-02"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"                // Throw it up to Main class for program termination","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"                throw e;","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"        // Bid farewell to user","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"        soraUI.printGoodbye();","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"     * Takes in the user\u0027s input, processes it with SoraParser class and determines the appropriate courses","lastModifiedDate":"2022-02-22"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"     * of actions to take on the command.","lastModifiedDate":"2022-02-22"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"     * @param userRawInput The user\u0027s input.","lastModifiedDate":"2022-02-22"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the user\u0027s command involves writing to the storage file and Sora is unable","lastModifiedDate":"2022-02-22"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"     * to open the file.","lastModifiedDate":"2022-02-22"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"    private void executeCommand(String userRawInput) throws IOException {","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"        String userCommand \u003d soraParser.extractCommand(userRawInput);","lastModifiedDate":"2022-02-21"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"            switch (userCommand) {","lastModifiedDate":"2022-02-03"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.EXIT_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-03"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"                setUserExit();","lastModifiedDate":"2022-02-08"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.LIST_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-03"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"                soraUI.printTaskList(getTasksManager());","lastModifiedDate":"2022-02-22"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.FIND_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-22"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"                String searchString \u003d soraParser.getSearchString(userRawInput);","lastModifiedDate":"2022-02-22"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"                ArrayList\u003cString\u003e searchResult \u003d taskList.searchTasks(searchString);","lastModifiedDate":"2022-02-22"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"                soraUI.printSearchResults(searchResult);","lastModifiedDate":"2022-02-22"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.MARK_TASK_AS_DONE_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-03"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"                int taskNum \u003d soraParser.getTaskNumberFromCommand(userRawInput);","lastModifiedDate":"2022-02-21"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"                boolean markSuccess \u003d getTasksManager().updateDoneStatus(taskNum, true);","lastModifiedDate":"2022-02-03"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"                // Update entire file","lastModifiedDate":"2022-02-15"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"                soraStorage.rewriteAllTasksToFile(getTasksManager());","lastModifiedDate":"2022-02-21"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"                // Print response","lastModifiedDate":"2022-02-15"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"                soraUI.printMarkTaskResponseMessage(markSuccess, getTasksManager(), taskNum);","lastModifiedDate":"2022-02-03"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.UNMARK_TASK_AS_DONE_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-03"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"                taskNum \u003d soraParser.getTaskNumberFromCommand(userRawInput);","lastModifiedDate":"2022-02-21"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"                boolean unmarkSuccess \u003d getTasksManager().updateDoneStatus(taskNum, false);","lastModifiedDate":"2022-02-03"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"                // Update entire file","lastModifiedDate":"2022-02-15"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"                soraStorage.rewriteAllTasksToFile(getTasksManager());","lastModifiedDate":"2022-02-21"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"                // Print response","lastModifiedDate":"2022-02-15"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"                soraUI.printUnmarkTaskResponseMessage(unmarkSuccess, getTasksManager(), taskNum);","lastModifiedDate":"2022-02-03"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.DELETE_TASK_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-14"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"                taskNum \u003d soraParser.getTaskNumberFromCommand(userRawInput);","lastModifiedDate":"2022-02-21"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"                Task taskRemoved \u003d getTasksManager().deleteTask(taskNum);","lastModifiedDate":"2022-02-14"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"                // Update entire file","lastModifiedDate":"2022-02-15"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"                soraStorage.rewriteAllTasksToFile(getTasksManager());","lastModifiedDate":"2022-02-21"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"                // Print response","lastModifiedDate":"2022-02-15"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"                soraUI.printDeleteTaskResponseMessage(taskRemoved, getTasksManager());","lastModifiedDate":"2022-02-14"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-14"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.ADD_TODO_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-03"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"                // Fallthrough","lastModifiedDate":"2022-02-03"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.ADD_EVENT_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-03"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"                // Fallthrough","lastModifiedDate":"2022-02-03"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.ADD_DEADLINE_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-03"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"                Task newTask \u003d getTasksManager().addTask(userRawInput);","lastModifiedDate":"2022-02-15"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"                // Update file","lastModifiedDate":"2022-02-15"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"                soraStorage.writeNewTaskToFile(newTask);","lastModifiedDate":"2022-02-21"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"                // Print response","lastModifiedDate":"2022-02-15"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"                soraUI.printAddTaskResponseMessage(newTask);","lastModifiedDate":"2022-02-15"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"            default:","lastModifiedDate":"2022-02-03"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"                throw new InvalidCommandException(InvalidCommandException.NO_SUCH_COMMAND_MSG);","lastModifiedDate":"2022-02-08"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"            soraExceptionHandler.handleInvalidCommandException(e);","lastModifiedDate":"2022-02-21"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-22"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"            soraExceptionHandler.handleInvalidDateTimeInputFormat();","lastModifiedDate":"2022-02-22"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"            // Throw it up to calling method for program termination","lastModifiedDate":"2022-02-15"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"            throw e;","lastModifiedDate":"2022-02-15"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"            soraExceptionHandler.handleOutOfRangeListReferences();","lastModifiedDate":"2022-02-21"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2022-02-21"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"            soraExceptionHandler.handleEmptyListException();","lastModifiedDate":"2022-02-21"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-22"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"            soraExceptionHandler.handleInvalidTaskNumber();","lastModifiedDate":"2022-02-22"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"alanlowzies":197}},{"path":"src/main/java/sora/SoraExceptionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package sora;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * This class handles the exceptions thrown by the various components in Sora.","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"public class SoraExceptionHandler {","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"    // Allows SoraExceptionHandler to provide UI outputs to the user","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    private SoraUI soraUI;","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a SoraExceptionHandler object with an instance of SoraUI.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"     * @param soraUIObj An instance of SoraUI.","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public SoraExceptionHandler(SoraUI soraUIObj) {","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"        this.soraUI \u003d soraUIObj;","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"     * Determines the type of InvalidCommandException that has been thrown and carries out the appropriate","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"     * actions.","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"     * @param e The InvalidCommandException that has been thrown.","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    public void handleInvalidCommandException(InvalidCommandException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        String errorMessage \u003d e.getMessage();","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"        switch (errorMessage) {","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.NO_SUCH_COMMAND_MSG:","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printCommandNotUnderstood();","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.TODO_NO_DESCRIPTION:","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printTodoMissingDescription();","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.EVENT_MISSING_FLAG:","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printEventMissingFlag();","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.EVENT_NO_DESCRIPTION:","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printEventMissingDescription();","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.EVENT_NO_PERIOD:","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printEventMissingPeriod();","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.EVENT_INVALID_FLAGS:","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printEventInvalidFlags();","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.DEADLINE_MISSING_FLAG:","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printDeadlineMissingFlag();","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.DEADLINE_NO_DESCRIPTION:","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printDeadlineMissingDescription();","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.DEADLINE_NO_DUE_DATE:","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printDeadlineNoDueDate();","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.DEADLINE_INVALID_FLAGS:","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printDeadlineInvalidFlags();","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"        case InvalidCommandException.FIND_NO_SEARCH_STRING:","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printMissingSearchStringResponse();","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"        // TODO: Add default branch?","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"     * Handles situations where the user tries to reference a task that does not exist in Sora\u0027s task list.","lastModifiedDate":"2022-02-22"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    public void handleOutOfRangeListReferences() {","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"        soraUI.printTaskNumOutOfListRange();","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"     * Handles situations where the user has entered an illegal character.","lastModifiedDate":"2022-02-22"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"    public void handleIllegalCharacterException() {","lastModifiedDate":"2022-02-21"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"        soraUI.printIllegalCharacterResponse();","lastModifiedDate":"2022-02-21"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"     * Handles situations where the user tries to interact with an empty list.","lastModifiedDate":"2022-02-22"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    public void handleEmptyListException() {","lastModifiedDate":"2022-02-21"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"        soraUI.printEmptyListExceptionResponse();","lastModifiedDate":"2022-02-21"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     * Handles situations where the user references an uninterpretable task number.","lastModifiedDate":"2022-02-22"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"    public void handleInvalidTaskNumber() {","lastModifiedDate":"2022-02-22"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"        soraUI.printInvalidTaskNumber();","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"     * Handles situations where the user enters an invalid date-time format.","lastModifiedDate":"2022-02-22"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"    public void handleInvalidDateTimeInputFormat() {","lastModifiedDate":"2022-02-22"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"        soraUI.printInvalidDateTimeInputFormatResponse();","lastModifiedDate":"2022-02-22"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"alanlowzies":100}},{"path":"src/main/java/sora/SoraParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package sora;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":" * This class manages the inputs entered by the user as well as parsing it to provide specific information","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":" * as required by Sora\u0027s components.","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"public class SoraParser {","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    // Specifies a set of characters that the user is not allowed to use in his/her input.","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    public static final String[] ILLEGAL_CHARACTERS \u003d {","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"            \"|\"","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    };","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    private Scanner reader \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"     * Reads in a user\u0027s input. Thereafter, leading and trailing whitespaces are removed for program stability.","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"     * In addition, the user\u0027s input is checked for illegal characters and if any are found, an","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"     * IllegalCharacterException is thrown.","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the user\u0027s sanitised input.","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"     * @throws IllegalCharacterException If the user\u0027s input contains an illegal character as specified in the","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"     * ILLEGAL_CHARACTERS string array.","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"    protected String getUserInput() throws IllegalCharacterException {","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"        String userInput \u003d reader.nextLine();","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"        String userInputTrimmed \u003d userInput.trim();","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"        boolean hasIllegalCharacters \u003d checkForIllegalCharacters(userInputTrimmed);","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"        if (hasIllegalCharacters) {","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"            throw new IllegalCharacterException(IllegalCharacterException.ILLEGAL_CHARACTER_MSG);","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        return userInputTrimmed;","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"     * Returns the command keyword the user has entered in his/her input and wants Sora to execute.","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The user\u0027s full input.","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the command keyword the user has entered.","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"    protected String extractCommand(String userInput) {","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        String userCommand \u003d userInput.toLowerCase().split(\" \", 2)[0];","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        return userCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"     * Returns the task number the user has entered in his/her input.","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The user\u0027s full input.","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"     * @return The task number that the user has entered in his/her input.","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"    protected int getTaskNumberFromCommand(String userInput) {","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"            int taskNum \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"            return taskNum;","lastModifiedDate":"2022-02-21"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"            // Re-throw it to calling method to handle","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"            throw e;","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the user\u0027s input contains at least one character that is specified in the","lastModifiedDate":"2022-02-22"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"     * ILLEGAL_CHARACTERS string array.","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput","lastModifiedDate":"2022-02-22"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"     * @return true if the user\u0027s input contains at least one illegal character. Otherwise, false is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"    private boolean checkForIllegalCharacters(String userInput) {","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"        for (String illegalChar : ILLEGAL_CHARACTERS) {","lastModifiedDate":"2022-02-21"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"            if (userInput.contains(illegalChar)) {","lastModifiedDate":"2022-02-22"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"                return true;","lastModifiedDate":"2022-02-21"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-02-21"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    public String getSearchString(String userRawInput) throws InvalidCommandException {","lastModifiedDate":"2022-02-22"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"        String[] commandAndSearchPhrase \u003d userRawInput.split(\" \", 2);","lastModifiedDate":"2022-02-22"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"        boolean hasTwoElements \u003d (commandAndSearchPhrase.length \u003d\u003d 2);","lastModifiedDate":"2022-02-22"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"        if (!hasTwoElements) {","lastModifiedDate":"2022-02-22"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(InvalidCommandException.FIND_NO_SEARCH_STRING);","lastModifiedDate":"2022-02-22"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"        return commandAndSearchPhrase[1];","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"alanlowzies":93}},{"path":"src/main/java/sora/SoraStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package sora;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import tasks.*;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import java.io.File;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":" * This class handles the reading and writing of Sora\u0027s task data from and to a designated file on the user\u0027s","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":" * system.","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":" * If the user does not have the specified file in the designated location on his/her system, it will be","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":" * automatically created when Sora is run.","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"public class SoraStorage {","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    // Default directory and file names for data storage","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    private static final String USER_HOME_PROPERTY \u003d \"user.dir\";","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    private static final String DATA_DIRECTORY \u003d \"CS2113T_iP_Sora_Resources\";","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    private static final String DATA_FILENAME \u003d \"data.txt\";","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    // Default delimiters for processing file data","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    private static final String FILE_DATA_SEPARATOR_REGEX \u003d \" \\\\| \";","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    private static final String FILE_DATA_SEPARATOR \u003d \" | \";","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    public static final String TODO_TYPE_FILE_ABBREVIATION \u003d \"T\";","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    public static final String EVENT_TYPE_FILE_ABBREVIATION \u003d \"E\";","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    public static final String DEADLINE_TYPE_FILE_ABBREVIATION \u003d \"D\";","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    private SoraUI soraUI;","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    private String homeDir;","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    private Path directoryPath;","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    private Path filePath;","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an instance of SoraStorage and setting the default directory and file paths.","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"    public SoraStorage() {","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"        this.soraUI \u003d new SoraUI();","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        // Get user system\u0027s home directory","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        this.homeDir \u003d System.getProperty(USER_HOME_PROPERTY);","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"        this.directoryPath \u003d Paths.get(this.homeDir, DATA_DIRECTORY);","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"        this.filePath \u003d Paths.get(this.homeDir, DATA_DIRECTORY, DATA_FILENAME);","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"     * Gets the directory path of the file storage. This does not include the filename","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"     * @return A Path object containing the directory path of the file storage.","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"    public Path getDirectoryPath() {","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"        return this.directoryPath;","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"     * Gets the full file path of the file storage.","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"     * @return A Path object containing the full file path of the file storage.","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    public Path getFilePath() {","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"        return this.filePath;","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"     * Reads the tasks\u0027 data that are stored in the designated file on the user\u0027s system and adds them to","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"     * this running instance of Sora\u0027s list.","lastModifiedDate":"2022-02-22"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"     * @param taskList An instance of taskList to add the file\u0027s task data to.","lastModifiedDate":"2022-02-22"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If this method fails to create a directory and/or file (whenever necessary).","lastModifiedDate":"2022-02-22"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"    protected void loadTaskListFromFile(TaskList taskList) throws IOException {","lastModifiedDate":"2022-02-21"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"        // Check if required directory and file exist","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"        boolean directoryAlreadyExists \u003d checkAndCreateDataDirectory(getDirectoryPath());","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"        boolean fileAlreadyExists \u003d checkAndCreateDataFile(getFilePath(), directoryAlreadyExists);","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"        if (!fileAlreadyExists) {","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"            // Since the file has just been created, there is no data to read. Exit method immediately.","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"            return;","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"        // Open the file for reading","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"        File dataFile \u003d new File(getFilePath().toUri());","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"        // Read file data line by line","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"        Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"        while (fileReader.hasNext()) {","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"            // Read and parse the line of text from the file","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"            String rawLineData \u003d fileReader.nextLine();","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"            String[] parsedLineData \u003d parseFileLineData(rawLineData);","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"            // Add this line of text data into Sora\u0027s task list","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"            taskList.addTaskFromFile(parsedLineData);","lastModifiedDate":"2022-02-22"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"        soraUI.printLoadedFileDataResponse();","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the specified file containing the stored task data already exists on the user\u0027s system before","lastModifiedDate":"2022-02-22"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"     * this running instance of Sora. If it does not exist, this method will create the file in the default location.","lastModifiedDate":"2022-02-22"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"     * @param filePath The path to the file that contains the stored tasks\u0027 data.","lastModifiedDate":"2022-02-22"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"     * @param directoryAlreadyExists Indicates if the directory has already existed before this running instance","lastModifiedDate":"2022-02-22"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"     *                               of Sora.","lastModifiedDate":"2022-02-22"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"     * @return true if the file already exists prior to this running instance of Sora. Otherwise, false is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If this method fails to create the file that is required to store the task list data.","lastModifiedDate":"2022-02-22"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"    private boolean checkAndCreateDataFile(Path filePath, boolean directoryAlreadyExists) throws IOException {","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(filePath)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"            // Data file already exists","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"            return true;","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"        // Parts of Sora\u0027s UI response will change depending on whether the directory already exists","lastModifiedDate":"2022-02-22"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"        soraUI.printFileNotFound(directoryAlreadyExists);","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"            soraUI.printFileCreatedResponse(filePath);","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"An error has occurred while trying to create a file.\\nHere are the details:\");","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"            // Pass it to caller method to exit","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"            throw e;","lastModifiedDate":"2022-02-15"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the specified directory that contains the stored task data already exists on the user\u0027s","lastModifiedDate":"2022-02-22"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"     * system before this running instance of Sora. If it does not exist, this method will create the directory","lastModifiedDate":"2022-02-22"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"     * in the default location.","lastModifiedDate":"2022-02-22"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"     * @param directoryPath The path to the directory that have the file that contains the stored tasks\u0027 data.","lastModifiedDate":"2022-02-22"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"     * @return true if the directory already exists prior to this running instance of Sora. Otherwise, false is","lastModifiedDate":"2022-02-22"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"     * returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If this method fails to create the directory that is required to contain the required file.","lastModifiedDate":"2022-02-22"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"    private boolean checkAndCreateDataDirectory(Path directoryPath) throws IOException {","lastModifiedDate":"2022-02-15"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(directoryPath)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"            // Directory already exists. Exit method","lastModifiedDate":"2022-02-15"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"            return true;","lastModifiedDate":"2022-02-15"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"        // Directory does not exist. Create new directory","lastModifiedDate":"2022-02-15"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"        soraUI.printDirectoryNotFound();","lastModifiedDate":"2022-02-15"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"            Files.createDirectory(directoryPath);","lastModifiedDate":"2022-02-15"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Error: Could not create directory. Here are the details:\");","lastModifiedDate":"2022-02-15"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-15"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"            throw e;","lastModifiedDate":"2022-02-15"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"     * Takes in a line read from the file containing the stored tasks\u0027 data and divides the line into the","lastModifiedDate":"2022-02-22"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"     * various task details based on the specified delimiter.","lastModifiedDate":"2022-02-22"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"     * @param rawLineData The line of data to be parsed.","lastModifiedDate":"2022-02-22"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"     * @return A string array containing the parsed line of data.","lastModifiedDate":"2022-02-22"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"    private String[] parseFileLineData(String rawLineData) {","lastModifiedDate":"2022-02-15"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"        String[] parsedLineData \u003d rawLineData.split(FILE_DATA_SEPARATOR_REGEX);","lastModifiedDate":"2022-02-15"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"        return parsedLineData;","lastModifiedDate":"2022-02-15"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"     * Takes in a newly-created Task instance, parses the task\u0027s data for exporting to the data file, and","lastModifiedDate":"2022-02-22"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"     * appends it to the end of the data file.","lastModifiedDate":"2022-02-22"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"     * Though this method is used to write a newly-created Task instance, it can take in any instance of Task.","lastModifiedDate":"2022-02-22"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"     * @param newTask The Task instance whose data will be written to the end of the data file.","lastModifiedDate":"2022-02-22"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If this method is unable to open the specified data file.","lastModifiedDate":"2022-02-22"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"    public void writeNewTaskToFile(Task newTask) throws IOException {","lastModifiedDate":"2022-02-15"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"        String taskInFileFormat \u003d buildTaskTextForFile(newTask);","lastModifiedDate":"2022-02-15"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"        // Add line of text to end of file","lastModifiedDate":"2022-02-15"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath.toString(), true);","lastModifiedDate":"2022-02-15"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(taskInFileFormat + System.lineSeparator());","lastModifiedDate":"2022-02-15"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.close();","lastModifiedDate":"2022-02-15"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Error opening data file for writing. Here are some details:\");","lastModifiedDate":"2022-02-15"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-15"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"            throw e;","lastModifiedDate":"2022-02-15"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"     * Parses the data in the Task instance to a format that will be written to the data file.","lastModifiedDate":"2022-02-22"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"     * @param newTask The Task instance whose data will be parsed.","lastModifiedDate":"2022-02-22"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"     * @return A string that is formatted for exporting to the data file.","lastModifiedDate":"2022-02-22"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"    private String buildTaskTextForFile(Task newTask) {","lastModifiedDate":"2022-02-15"},{"lineNumber":210,"author":{"gitId":"alanlowzies"},"content":"        // Build line of text","lastModifiedDate":"2022-02-15"},{"lineNumber":211,"author":{"gitId":"alanlowzies"},"content":"        StringBuilder taskInFileFormat \u003d new StringBuilder();","lastModifiedDate":"2022-02-15"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"        String taskType \u003d getTaskType(newTask);","lastModifiedDate":"2022-02-15"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"        taskInFileFormat.append(taskType);","lastModifiedDate":"2022-02-15"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"        taskInFileFormat.append(FILE_DATA_SEPARATOR);","lastModifiedDate":"2022-02-15"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"        String isDoneValue \u003d newTask.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2022-02-15"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"        taskInFileFormat.append(isDoneValue);","lastModifiedDate":"2022-02-15"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"        taskInFileFormat.append(FILE_DATA_SEPARATOR);","lastModifiedDate":"2022-02-15"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"        taskInFileFormat.append(newTask.getDescription());","lastModifiedDate":"2022-02-15"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"        if (!taskType.equals(TODO_TYPE_FILE_ABBREVIATION)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"            // Add date value into taskInFileFormat","lastModifiedDate":"2022-02-15"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"            taskInFileFormat.append(FILE_DATA_SEPARATOR);","lastModifiedDate":"2022-02-15"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"            taskInFileFormat.append(getDate(newTask));","lastModifiedDate":"2022-02-15"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"        return taskInFileFormat.toString();","lastModifiedDate":"2022-02-15"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":228,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":229,"author":{"gitId":"alanlowzies"},"content":"     * Returns the abbreviated letter of the task type.","lastModifiedDate":"2022-02-22"},{"lineNumber":230,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":231,"author":{"gitId":"alanlowzies"},"content":"     * @param task The Task instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":232,"author":{"gitId":"alanlowzies"},"content":"     * @return \"T\" if the Task instance is of Todo type, \"E\" if the Task instance is of Event type, or","lastModifiedDate":"2022-02-22"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"     * \"D\" if the Task instance is of Deadline type.","lastModifiedDate":"2022-02-22"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":235,"author":{"gitId":"alanlowzies"},"content":"    private String getTaskType(Task task) {","lastModifiedDate":"2022-02-15"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2022-02-15"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"            return TODO_TYPE_FILE_ABBREVIATION;","lastModifiedDate":"2022-02-15"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-02-15"},{"lineNumber":239,"author":{"gitId":"alanlowzies"},"content":"            return EVENT_TYPE_FILE_ABBREVIATION;","lastModifiedDate":"2022-02-15"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-02-15"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"            return DEADLINE_TYPE_FILE_ABBREVIATION;","lastModifiedDate":"2022-02-15"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":243,"author":{"gitId":"alanlowzies"},"content":"        return \"\";","lastModifiedDate":"2022-02-15"},{"lineNumber":244,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":245,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":246,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"     * Returns the date (and time) specified in the Task instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"     * @param task The task instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the date (and time) specified in the Task instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"    private String getDate(Task task) {","lastModifiedDate":"2022-02-15"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2022-02-15"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"            return ((Event) task).getEventPeriodForFileStorage();","lastModifiedDate":"2022-02-22"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-02-15"},{"lineNumber":256,"author":{"gitId":"alanlowzies"},"content":"            return ((Deadline) task).getDueDateForFileStorage();","lastModifiedDate":"2022-02-22"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":258,"author":{"gitId":"alanlowzies"},"content":"        return \"\";","lastModifiedDate":"2022-02-15"},{"lineNumber":259,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":260,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":261,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":262,"author":{"gitId":"alanlowzies"},"content":"     * Overwrites the data file with an updated task list. Currently, it is used when a task is marked","lastModifiedDate":"2022-02-22"},{"lineNumber":263,"author":{"gitId":"alanlowzies"},"content":"     * or unmarked as done, or when a task is deleted.","lastModifiedDate":"2022-02-15"},{"lineNumber":264,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":265,"author":{"gitId":"alanlowzies"},"content":"     * @param taskList An instance of TaskList that contains the updated task list.","lastModifiedDate":"2022-02-22"},{"lineNumber":266,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the required file for writing the tasks\u0027 data to cannot be opened.","lastModifiedDate":"2022-02-22"},{"lineNumber":267,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":268,"author":{"gitId":"alanlowzies"},"content":"    public void rewriteAllTasksToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2022-02-21"},{"lineNumber":269,"author":{"gitId":"alanlowzies"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d taskList.getList();","lastModifiedDate":"2022-02-21"},{"lineNumber":270,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":271,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":272,"author":{"gitId":"alanlowzies"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":273,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":274,"author":{"gitId":"alanlowzies"},"content":"            for (Task task  : tasksList) {","lastModifiedDate":"2022-02-15"},{"lineNumber":275,"author":{"gitId":"alanlowzies"},"content":"                String taskText \u003d buildTaskTextForFile(task);","lastModifiedDate":"2022-02-15"},{"lineNumber":276,"author":{"gitId":"alanlowzies"},"content":"                fileWriter.append(taskText + System.lineSeparator());","lastModifiedDate":"2022-02-15"},{"lineNumber":277,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":278,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":279,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.close();","lastModifiedDate":"2022-02-15"},{"lineNumber":280,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":281,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Error opening data file for writing. Here are the details:\");","lastModifiedDate":"2022-02-15"},{"lineNumber":282,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-15"},{"lineNumber":283,"author":{"gitId":"alanlowzies"},"content":"            throw e;","lastModifiedDate":"2022-02-15"},{"lineNumber":284,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":285,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"alanlowzies":286}},{"path":"src/main/java/sora/SoraUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package sora;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import tasks.EmptyListException;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import util.Helper;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import java.util.Random;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":" * This class handles the bulk of UI-related fields and methods that Sora uses. This includes","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":" * (but is not limited to):","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":" *     \u003cli\u003eaesthetics such as banner logo and lines,\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":" *     \u003cli\u003enormal response messages, and\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":" *     \u003cli\u003eresponse messages when an exception is encountered.\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"public class SoraUI {","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"     * Sora\u0027s banner logo design","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    protected static final String BANNER \u003d \"     _______.  ______   .______          ___      \\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"            + \"    /       | /  __  \\\\  |   _  \\\\        /   \\\\     \\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"            + \"   |   (----`|  |  |  | |  |_)  |      /  ^  \\\\    \\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"            + \"    \\\\   \\\\    |  |  |  | |      /      /  /_\\\\  \\\\   \\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"            + \".----)   |   |  `--\u0027  | |  |\\\\  \\\\----./  _____  \\\\  \\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"            + \"|_______/     \\\\______/  | _| `._____/__/     \\\\__\\\\\";","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     * Character used at the beginning of user input prompts","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    protected static final String PROMPT_SYMBOL \u003d \"\u003e\";","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"     * Different positive acknowledgement words for Sora\u0027s neutral replies","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    protected static final String[] POSITIVE_ACKNOWLEDGEMENT_WORDS \u003d {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"            \"Okay\",","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"            \"Alright\",","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"            \"Gotcha\",","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"            \"Got it\"","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"    };","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"     * Different negative acknowledgement words for Sora\u0027s replies on errors","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    protected static final String[] NEGATIVE_ACKNOWLEDGEMENT_WORDS \u003d {","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"            \"Hmm\",","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"            \"Oh no\",","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"            \"Ah\",","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"            \"Dang\",","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"            \"Oops\"","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"    };","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    // Default parameters for printing formatting lines","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    protected static final int DEFAULT_LINE_LENGTH \u003d 60;","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    protected static final String DEFAULT_LINE_CHAR \u003d \"-\";","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    // List of command and flag keywords","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    public static final String EXIT_COMMAND_KEYWORD \u003d \"bye\";","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    public static final String LIST_COMMAND_KEYWORD \u003d \"list\";","lastModifiedDate":"2022-02-08"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    public static final String FIND_COMMAND_KEYWORD \u003d \"find\";","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"    public static final String ADD_TODO_COMMAND_KEYWORD \u003d \"todo\";","lastModifiedDate":"2022-02-08"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    public static final String ADD_EVENT_COMMAND_KEYWORD \u003d \"event\";","lastModifiedDate":"2022-02-08"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"    public static final String ADD_EVENT_FLAG_KEYWORD \u003d \"/at\";","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"    public static final String ADD_DEADLINE_COMMAND_KEYWORD \u003d \"deadline\";","lastModifiedDate":"2022-02-08"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"    public static final String ADD_DEADLINE_FLAG_KEYWORD \u003d \"/by\";","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"    public static final String MARK_TASK_AS_DONE_COMMAND_KEYWORD \u003d \"mark\";","lastModifiedDate":"2022-02-08"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"    public static final String UNMARK_TASK_AS_DONE_COMMAND_KEYWORD \u003d \"unmark\";","lastModifiedDate":"2022-02-08"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"    public static final String DELETE_TASK_COMMAND_KEYWORD \u003d \"delete\";","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"     * List of flag keywords (for command validation)","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"    public static final String[] LIST_OF_FLAG_KEYWORDS \u003d {","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"            ADD_EVENT_FLAG_KEYWORD,","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"            ADD_DEADLINE_FLAG_KEYWORD","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"    };","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"    // Date and time format (for event and deadline tasks)","lastModifiedDate":"2022-02-22"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"    public static final String DATE_TIME_INPUT_FORMAT \u003d \"dd/MM/yyyy HHmm\";","lastModifiedDate":"2022-02-22"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"    public static final String DATE_TIME_OUTPUT_FORMAT \u003d \"E, d MMM yyyy, h:mm a\";","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"    // List of response messages","lastModifiedDate":"2022-02-22"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"    protected static final String LIST_PRE_EXECUTION_RESPONSE \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"            \"%s, here\u0027s a list of %d tasks that you have given to me:\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"    protected static final String EMPTY_LIST_RESPONSE \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"            \"%s, my list is empty at the moment...\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"    protected static final String TASK_NUMBER_OUT_OF_LIST_RANGE_RESPONSE \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"            \"%s, the task number you\u0027ve given me is out of the range\\nof the current list of tasks.\" +","lastModifiedDate":"2022-02-22"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"                    \" Could you re-enter a\\nvalid task number?\\n\";","lastModifiedDate":"2022-02-22"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"    protected static final String STANDARD_SEARCH_RESULT_RESPONSE \u003d","lastModifiedDate":"2022-02-22"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I have found %d %s that matches your search\\nphrase:\\n\";","lastModifiedDate":"2022-02-22"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"    protected static final String NO_RESULT_FOUND_RESPONSE \u003d","lastModifiedDate":"2022-02-22"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"            \"%s, there are no tasks that match your search phrase.\\n\" +","lastModifiedDate":"2022-02-22"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"                    \"Perhaps you could refine your search parameters?\\n\";","lastModifiedDate":"2022-02-22"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"    protected static final String MISSING_SEARCH_STRING_RESPONSE \u003d","lastModifiedDate":"2022-02-22"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"            \"%s, please provide me with a search string for me to find.\\n\";","lastModifiedDate":"2022-02-22"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"    protected static final String INVALID_DATE_TIME_INPUT_FORMAT_RESPONSE \u003d","lastModifiedDate":"2022-02-22"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"            \"%s, the formatting of the date and time you\u0027ve given me\\nis incorrect... \" +","lastModifiedDate":"2022-02-22"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"                    \"It should be DD/MM/YYYY HHmm, where \u0027HHmm\u0027\\nis the time in 24-hour format.\" +","lastModifiedDate":"2022-02-22"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"                    \"Please try again...\\n\";","lastModifiedDate":"2022-02-22"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"    protected static final String ADD_TASK_SUCCESS_RESPONSE \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I\u0027ve added your new task to my list:\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"    protected static final String ADD_TASK_FAILURE_RESPONSE \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"            \"%s, somehow I wasn\u0027t able to add your task to my list...\\nSorry about that!\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"    protected static final String MARK_TASK_DONE_SUCCESS_RESPONSE \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"    protected static final String MARK_TASK_DONE_FAILURE_RESPONSE \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I couldn\u0027t mark that task as done.\\nSorry about that...\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"    protected static final String UNMARK_TASK_DONE_SUCCESS_RESPONSE \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I\u0027ve marked this task as not done:\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"    protected static final String UNMARK_TASK_DONE_FAILURE_RESPONSE \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I couldn\u0027t mark that task as not done.\\nSorry about that...\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"    protected static final String INVALID_TASK_NUMBER_RESPONSE \u003d","lastModifiedDate":"2022-02-22"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I\u0027m not sure what that task number means.\\nCould you try re-entering the task number?\\n\";","lastModifiedDate":"2022-02-22"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"    protected static final String DELETE_TASK_SUCCESS_RESPONSE \u003d","lastModifiedDate":"2022-02-14"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I\u0027ve deleted this task:\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"    protected static final String DELETE_TASK_FAILURE_RESPONSE \u003d","lastModifiedDate":"2022-02-14"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I couldn\u0027t delete this task.\\nSorry about that...\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"    protected static final String COMMAND_NOT_UNDERSTOOD_RESPONSE \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I can\u0027t understand what you\u0027ve just typed...\\nCould you try again?\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"    protected static final String ILLEGAL_CHARACTER_RESPONSE \u003d","lastModifiedDate":"2022-02-21"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"            \"%s, it seems like you\u0027ve entered an illegal character\\nin your input... Could you try again?\\n\";","lastModifiedDate":"2022-02-21"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"    protected static final String TODO_MISSING_DESCRIPTION_RESPONSE \u003d","lastModifiedDate":"2022-02-08"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"            \"%s, seems like you didn\u0027t give me a description for your\\ntodo... Could you try again?\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"    protected static final String EVENT_MISSING_FLAG_RESPONSE \u003d","lastModifiedDate":"2022-02-09"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I couldn\u0027t find the proper flag required for the\\nevent command... Could you try again?\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"    protected static final String EVENT_NO_DESCRIPTION_RESPONSE \u003d","lastModifiedDate":"2022-02-09"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"            \"%s, seems like you didn\u0027t give me a description for your\\nevent... Could you try again?\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"    protected static final String EVENT_NO_PERIOD_RESPONSE \u003d","lastModifiedDate":"2022-02-09"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"            \"%s, seems like you didn\u0027t give me a date for your event...\\nCould you try again?\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"    protected static final String EVENT_INVALID_FLAGS \u003d","lastModifiedDate":"2022-02-09"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"            \"%s, the flags used in your event command is invalid...\\nCould you try again?\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"    protected static final String DEADLINE_MISSING_FLAG_RESPONSE \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I couldn\u0027t find the proper flag required for the\\ndeadline command... Could you try again?\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"    protected static final String DEADLINE_NO_DESCRIPTION_RESPONSE \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"            \"%s, seems like you didn\u0027t give me a description for your\\ndeadline... Could you try again?\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"    protected static final String DEADLINE_NO_DUE_DATE_RESPONSE \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"            \"%s, seems like you didn\u0027t give me a due date for your\\ndeadline... Could you try again?\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"    protected static final String DEADLINE_INVALID_FLAGS \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"            \"%s, the flags used in your deadline command is invalid...\\nCould you try again?\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"    protected static final String NO_DIRECTORY_FOUND_RESPONSE \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"            \"\\n%s, I couldn\u0027t find the directory that contains my data\\nfile. Let me go and create it...\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"    protected static final String NO_FILE_FOUND_RESPONSE \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"            \"\\n%s, I%s couldn\u0027t find my data file. I shall create\\nthat%s.\\n\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"    protected static final String FILE_CREATED_REPSONSE \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"            \"%s, I\u0027ve created my data file in the following\\nlocation:\\n\\t%s\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"    protected static final String LOADED_FILE_DATA_RESPONSE \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"            \"I\u0027ve loaded your tasks from our previous interactions!\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"     * Prints a line on the console based on the default parameters defined in this Java class.","lastModifiedDate":"2022-02-02"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"    protected void printLine() {","lastModifiedDate":"2022-02-02"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"        // Prints a line based on the default parameters","lastModifiedDate":"2022-02-02"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"        printLine(DEFAULT_LINE_LENGTH, DEFAULT_LINE_CHAR);","lastModifiedDate":"2022-02-02"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"     * Prints a line on the console based on the specified length and the character/symbol to use","lastModifiedDate":"2022-02-08"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"     * @param lineLen The length of the line (measured in \u0027number of characters\u0027).","lastModifiedDate":"2022-02-22"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"     * @param character The character that should be used to print the line.","lastModifiedDate":"2022-02-22"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"    protected void printLine(int lineLen, String character) {","lastModifiedDate":"2022-02-02"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"        // Generate a line of whitespaces","lastModifiedDate":"2022-02-08"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"        String lineOfWhitespaces \u003d String.format(\"%\" + lineLen + \"s\", \" \");","lastModifiedDate":"2022-02-08"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"        // Replace each whitespace with the specified character","lastModifiedDate":"2022-02-08"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"        String lineOfChars \u003d lineOfWhitespaces.replaceAll(\" \", character);","lastModifiedDate":"2022-02-08"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"        // Finally, print out the line of characters","lastModifiedDate":"2022-02-08"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(lineOfChars);","lastModifiedDate":"2022-02-08"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"     * Greets the user with appropriate messages based on the time of the day.","lastModifiedDate":"2022-02-02"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"    protected void printGreetings() {","lastModifiedDate":"2022-02-02"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"        // Print banner","lastModifiedDate":"2022-02-02"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"        printLine(DEFAULT_LINE_LENGTH, \"\u003d\");","lastModifiedDate":"2022-02-15"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(BANNER);","lastModifiedDate":"2022-02-02"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"        printLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"        // Print greetings","lastModifiedDate":"2022-02-02"},{"lineNumber":210,"author":{"gitId":"alanlowzies"},"content":"        if (Helper.getHourOfDay() \u003c 12) {","lastModifiedDate":"2022-02-02"},{"lineNumber":211,"author":{"gitId":"alanlowzies"},"content":"            System.out.print(\"Good morning! \");","lastModifiedDate":"2022-02-02"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"        } else if (Helper.getHourOfDay() \u003c 18) {","lastModifiedDate":"2022-02-02"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"            System.out.print(\"Good afternoon! \");","lastModifiedDate":"2022-02-02"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"            System.out.print(\"Good evening. \");","lastModifiedDate":"2022-02-02"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(\"I\u0027m Sora!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"     * Bids farewell to the user when the \"exit\" command is entered.","lastModifiedDate":"2022-02-02"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"    protected void printGoodbye() {","lastModifiedDate":"2022-02-02"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"        if (Helper.getHourOfDay() \u003e\u003d 6 \u0026\u0026 Helper.getHourOfDay() \u003c 18) {","lastModifiedDate":"2022-02-02"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Goodbye! Have a great day ahead!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"        } else if (Helper.getHourOfDay() \u003e\u003d 18 \u0026\u0026 Helper.getHourOfDay() \u003c 22) {","lastModifiedDate":"2022-02-02"},{"lineNumber":228,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Goodbye! Have a good evening.\");","lastModifiedDate":"2022-02-15"},{"lineNumber":229,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":230,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Good night, have a good rest...\");","lastModifiedDate":"2022-02-15"},{"lineNumber":231,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":232,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(\"See you again soon~\");","lastModifiedDate":"2022-02-02"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"        printLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":235,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"     * Prints a prompt on the terminal. The prompt text will differ depending on whether if this method is called","lastModifiedDate":"2022-02-22"},{"lineNumber":239,"author":{"gitId":"alanlowzies"},"content":"     * for the first time since this instance of Sora was started.","lastModifiedDate":"2022-02-22"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"     * @param isFirstPrompt Boolean value to determine if this method is called for the first time","lastModifiedDate":"2022-02-22"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"     *                      since this Sora instance was started.","lastModifiedDate":"2022-02-22"},{"lineNumber":243,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":244,"author":{"gitId":"alanlowzies"},"content":"    protected void printPrompter(boolean isFirstPrompt) {","lastModifiedDate":"2022-02-02"},{"lineNumber":245,"author":{"gitId":"alanlowzies"},"content":"        if (isFirstPrompt) {","lastModifiedDate":"2022-02-02"},{"lineNumber":246,"author":{"gitId":"alanlowzies"},"content":"            printLine();","lastModifiedDate":"2022-02-15"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Now then, what can I do for you?\");","lastModifiedDate":"2022-02-15"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"            printLine();","lastModifiedDate":"2022-02-15"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"            System.out.print(PROMPT_SYMBOL + \" \");","lastModifiedDate":"2022-02-02"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"            printLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"What\u0027s next?\");","lastModifiedDate":"2022-02-02"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"            printLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"            System.out.print(PROMPT_SYMBOL + \" \");","lastModifiedDate":"2022-02-02"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":256,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":258,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":259,"author":{"gitId":"alanlowzies"},"content":"     * Randomly chooses one of the positive acknowledgement words from the string array","lastModifiedDate":"2022-02-22"},{"lineNumber":260,"author":{"gitId":"alanlowzies"},"content":"     * POSITIVE_ACKNOWLEDGEMENT_WORDS and returns it.","lastModifiedDate":"2022-02-22"},{"lineNumber":261,"author":{"gitId":"alanlowzies"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":262,"author":{"gitId":"alanlowzies"},"content":"     * If Sora.IN_TESTING_MODE is set to true, the first element in the POSITIVE_ACKNOWLEDGEMENT_WORDS","lastModifiedDate":"2022-02-22"},{"lineNumber":263,"author":{"gitId":"alanlowzies"},"content":"     * is always chosen. No random choosing will be done in this case.","lastModifiedDate":"2022-02-22"},{"lineNumber":264,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":265,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing a (randomly) chosen positive acknowledgement word.","lastModifiedDate":"2022-02-22"},{"lineNumber":266,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":267,"author":{"gitId":"alanlowzies"},"content":"    protected String getRandomPositiveAcknowledgement() {","lastModifiedDate":"2022-02-09"},{"lineNumber":268,"author":{"gitId":"alanlowzies"},"content":"        if (Sora.IN_TESTING_MODE) {","lastModifiedDate":"2022-02-02"},{"lineNumber":269,"author":{"gitId":"alanlowzies"},"content":"            return POSITIVE_ACKNOWLEDGEMENT_WORDS[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":270,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":271,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":272,"author":{"gitId":"alanlowzies"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2022-02-02"},{"lineNumber":273,"author":{"gitId":"alanlowzies"},"content":"        int randNum \u003d rand.nextInt(POSITIVE_ACKNOWLEDGEMENT_WORDS.length);","lastModifiedDate":"2022-02-09"},{"lineNumber":274,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":275,"author":{"gitId":"alanlowzies"},"content":"        return POSITIVE_ACKNOWLEDGEMENT_WORDS[randNum];","lastModifiedDate":"2022-02-09"},{"lineNumber":276,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":277,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":278,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":279,"author":{"gitId":"alanlowzies"},"content":"     * Randomly chooses one of the negative acknowledgement words from the string array","lastModifiedDate":"2022-02-22"},{"lineNumber":280,"author":{"gitId":"alanlowzies"},"content":"     * NEGATIVE_ACKNOWLEDGEMENT_WORDS and returns it.","lastModifiedDate":"2022-02-22"},{"lineNumber":281,"author":{"gitId":"alanlowzies"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":282,"author":{"gitId":"alanlowzies"},"content":"     * If Sora.IN_TESTING_MODE is set to true, the first element in the NEGATIVE_ACKNOWLEDGEMENT_WORDS","lastModifiedDate":"2022-02-22"},{"lineNumber":283,"author":{"gitId":"alanlowzies"},"content":"     * is always chosen. No random choosing will be done in this case.","lastModifiedDate":"2022-02-22"},{"lineNumber":284,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":285,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing a (randomly) chosen negative acknowledgement word.","lastModifiedDate":"2022-02-22"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":287,"author":{"gitId":"alanlowzies"},"content":"    protected String getRandomNegativeAcknowledgement() {","lastModifiedDate":"2022-02-22"},{"lineNumber":288,"author":{"gitId":"alanlowzies"},"content":"        if (Sora.IN_TESTING_MODE) {","lastModifiedDate":"2022-02-09"},{"lineNumber":289,"author":{"gitId":"alanlowzies"},"content":"            return NEGATIVE_ACKNOWLEDGEMENT_WORDS[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":290,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":291,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":292,"author":{"gitId":"alanlowzies"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2022-02-09"},{"lineNumber":293,"author":{"gitId":"alanlowzies"},"content":"        int randNum \u003d rand.nextInt(NEGATIVE_ACKNOWLEDGEMENT_WORDS.length);","lastModifiedDate":"2022-02-09"},{"lineNumber":294,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":295,"author":{"gitId":"alanlowzies"},"content":"        return NEGATIVE_ACKNOWLEDGEMENT_WORDS[randNum];","lastModifiedDate":"2022-02-09"},{"lineNumber":296,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":297,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":299,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when an attempt to mark a task as done was made. The response printed depends","lastModifiedDate":"2022-02-22"},{"lineNumber":300,"author":{"gitId":"alanlowzies"},"content":"     * on the success or failure of the attempt made.","lastModifiedDate":"2022-02-22"},{"lineNumber":301,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":302,"author":{"gitId":"alanlowzies"},"content":"     * @param isSuccessful Indicates if the marking of the task was successful or not.","lastModifiedDate":"2022-02-22"},{"lineNumber":303,"author":{"gitId":"alanlowzies"},"content":"     * @param taskList An instance of TaskList.","lastModifiedDate":"2022-02-22"},{"lineNumber":304,"author":{"gitId":"alanlowzies"},"content":"     * @param taskNum The task number in taskList that was attempted to be marked as done.","lastModifiedDate":"2022-02-22"},{"lineNumber":305,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":306,"author":{"gitId":"alanlowzies"},"content":"    protected void printMarkTaskResponseMessage(boolean isSuccessful, TaskList taskList, int taskNum) {","lastModifiedDate":"2022-02-21"},{"lineNumber":307,"author":{"gitId":"alanlowzies"},"content":"        if (!isSuccessful) {","lastModifiedDate":"2022-02-22"},{"lineNumber":308,"author":{"gitId":"alanlowzies"},"content":"            System.out.printf(MARK_TASK_DONE_FAILURE_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":309,"author":{"gitId":"alanlowzies"},"content":"            return;","lastModifiedDate":"2022-02-22"},{"lineNumber":310,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":311,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":312,"author":{"gitId":"alanlowzies"},"content":"        // Mark task was successful","lastModifiedDate":"2022-02-22"},{"lineNumber":313,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(MARK_TASK_DONE_SUCCESS_RESPONSE, getRandomPositiveAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":314,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-03"},{"lineNumber":315,"author":{"gitId":"alanlowzies"},"content":"        taskList.displayTask(taskNum);","lastModifiedDate":"2022-02-21"},{"lineNumber":316,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-03"},{"lineNumber":317,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":318,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":319,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":320,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when an attempt to unmark a task as done was made. The response printed depends","lastModifiedDate":"2022-02-22"},{"lineNumber":321,"author":{"gitId":"alanlowzies"},"content":"     * on the success or failure of the attempt made.","lastModifiedDate":"2022-02-22"},{"lineNumber":322,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":323,"author":{"gitId":"alanlowzies"},"content":"     * @param isSuccessful Indicates if the unmarking of the task was unsuccessful or not.","lastModifiedDate":"2022-02-22"},{"lineNumber":324,"author":{"gitId":"alanlowzies"},"content":"     * @param taskList An instance of TaskList.","lastModifiedDate":"2022-02-22"},{"lineNumber":325,"author":{"gitId":"alanlowzies"},"content":"     * @param taskNum The task number in taskList that was attempted to be unmarked as done.","lastModifiedDate":"2022-02-22"},{"lineNumber":326,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"    protected void printUnmarkTaskResponseMessage(boolean isSuccessful, TaskList taskList, int taskNum) {","lastModifiedDate":"2022-02-22"},{"lineNumber":328,"author":{"gitId":"alanlowzies"},"content":"        if (!isSuccessful) {","lastModifiedDate":"2022-02-22"},{"lineNumber":329,"author":{"gitId":"alanlowzies"},"content":"            System.out.printf(UNMARK_TASK_DONE_FAILURE_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":330,"author":{"gitId":"alanlowzies"},"content":"            return;","lastModifiedDate":"2022-02-22"},{"lineNumber":331,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":332,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":333,"author":{"gitId":"alanlowzies"},"content":"        // Unmark task was successful","lastModifiedDate":"2022-02-22"},{"lineNumber":334,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(UNMARK_TASK_DONE_SUCCESS_RESPONSE, getRandomPositiveAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":335,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-03"},{"lineNumber":336,"author":{"gitId":"alanlowzies"},"content":"        taskList.displayTask(taskNum);","lastModifiedDate":"2022-02-21"},{"lineNumber":337,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-03"},{"lineNumber":338,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":339,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":340,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":341,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when a task has been successfully removed from an instance of TaskList.","lastModifiedDate":"2022-02-22"},{"lineNumber":342,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"     * @param taskRemoved The Task instance that was removed from taskList.","lastModifiedDate":"2022-02-22"},{"lineNumber":344,"author":{"gitId":"alanlowzies"},"content":"     * @param taskList The instance of TaskList that the task was removed from.","lastModifiedDate":"2022-02-22"},{"lineNumber":345,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":346,"author":{"gitId":"alanlowzies"},"content":"    protected void printDeleteTaskResponseMessage(Task taskRemoved, TaskList taskList) {","lastModifiedDate":"2022-02-21"},{"lineNumber":347,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(DELETE_TASK_SUCCESS_RESPONSE, getRandomPositiveAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":348,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-14"},{"lineNumber":349,"author":{"gitId":"alanlowzies"},"content":"        taskList.displayTask(taskRemoved);","lastModifiedDate":"2022-02-21"},{"lineNumber":350,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-14"},{"lineNumber":351,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":352,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":353,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":354,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when an attempt to add a task to the task list was made. The response printed","lastModifiedDate":"2022-02-22"},{"lineNumber":355,"author":{"gitId":"alanlowzies"},"content":"     * depends on the success or failure of the attempt made.","lastModifiedDate":"2022-02-22"},{"lineNumber":356,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":357,"author":{"gitId":"alanlowzies"},"content":"     * @param newTask The Task instance that was added to the task list. If this parameter is null, then","lastModifiedDate":"2022-02-22"},{"lineNumber":358,"author":{"gitId":"alanlowzies"},"content":"     *                it means that the task was not successfully added.","lastModifiedDate":"2022-02-22"},{"lineNumber":359,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":360,"author":{"gitId":"alanlowzies"},"content":"    protected void printAddTaskResponseMessage(Task newTask) {","lastModifiedDate":"2022-02-15"},{"lineNumber":361,"author":{"gitId":"alanlowzies"},"content":"        if (newTask \u003d\u003d null) {","lastModifiedDate":"2022-02-22"},{"lineNumber":362,"author":{"gitId":"alanlowzies"},"content":"            System.out.printf(ADD_TASK_FAILURE_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":363,"author":{"gitId":"alanlowzies"},"content":"            return;","lastModifiedDate":"2022-02-03"},{"lineNumber":364,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":365,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":366,"author":{"gitId":"alanlowzies"},"content":"        // Adding task was successful","lastModifiedDate":"2022-02-22"},{"lineNumber":367,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(ADD_TASK_SUCCESS_RESPONSE, getRandomPositiveAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":368,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-22"},{"lineNumber":369,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(\"\\t\" + newTask.toString());","lastModifiedDate":"2022-02-22"},{"lineNumber":370,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-22"},{"lineNumber":371,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":372,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":373,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":374,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response and displays the entire task list that is stored in the provided instance of TaskList.","lastModifiedDate":"2022-02-22"},{"lineNumber":375,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":376,"author":{"gitId":"alanlowzies"},"content":"     * @param taskList The instance of TaskList that contains the list of tasks to be printed.","lastModifiedDate":"2022-02-22"},{"lineNumber":377,"author":{"gitId":"alanlowzies"},"content":"     * @throws EmptyListException If the instance of TaskList does not contain any tasks (i.e. an empty list).","lastModifiedDate":"2022-02-22"},{"lineNumber":378,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":379,"author":{"gitId":"alanlowzies"},"content":"    protected void printTaskList(TaskList taskList) throws EmptyListException {","lastModifiedDate":"2022-02-22"},{"lineNumber":380,"author":{"gitId":"alanlowzies"},"content":"        // Check if the task list is empty","lastModifiedDate":"2022-02-02"},{"lineNumber":381,"author":{"gitId":"alanlowzies"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-02-21"},{"lineNumber":382,"author":{"gitId":"alanlowzies"},"content":"            throw new EmptyListException(EmptyListException.EMPTY_LIST_MSG);","lastModifiedDate":"2022-02-21"},{"lineNumber":383,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":384,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":385,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(LIST_PRE_EXECUTION_RESPONSE, getRandomPositiveAcknowledgement(),","lastModifiedDate":"2022-02-15"},{"lineNumber":386,"author":{"gitId":"alanlowzies"},"content":"                taskList.getNumberOfTasks());","lastModifiedDate":"2022-02-21"},{"lineNumber":387,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-02"},{"lineNumber":388,"author":{"gitId":"alanlowzies"},"content":"        taskList.displayAllTasks();","lastModifiedDate":"2022-02-21"},{"lineNumber":389,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-03"},{"lineNumber":390,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":391,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":392,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":393,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response and displays a list of the tasks in searchResults, which contains the","lastModifiedDate":"2022-02-22"},{"lineNumber":394,"author":{"gitId":"alanlowzies"},"content":"     * tasks that matches a certain search parameter.","lastModifiedDate":"2022-02-22"},{"lineNumber":395,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":396,"author":{"gitId":"alanlowzies"},"content":"     * @param searchResults The list of tasks that are part of the search results.","lastModifiedDate":"2022-02-22"},{"lineNumber":397,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":398,"author":{"gitId":"alanlowzies"},"content":"    public void printSearchResults(ArrayList\u003cString\u003e searchResults) {","lastModifiedDate":"2022-02-22"},{"lineNumber":399,"author":{"gitId":"alanlowzies"},"content":"        if (searchResults.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-22"},{"lineNumber":400,"author":{"gitId":"alanlowzies"},"content":"            System.out.printf(NO_RESULT_FOUND_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":401,"author":{"gitId":"alanlowzies"},"content":"            return;","lastModifiedDate":"2022-02-22"},{"lineNumber":402,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":403,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":404,"author":{"gitId":"alanlowzies"},"content":"        String taskOrTasks \u003d (searchResults.size() \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2022-02-22"},{"lineNumber":405,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":406,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(STANDARD_SEARCH_RESULT_RESPONSE, getRandomPositiveAcknowledgement(),","lastModifiedDate":"2022-02-22"},{"lineNumber":407,"author":{"gitId":"alanlowzies"},"content":"                searchResults.size(), taskOrTasks);","lastModifiedDate":"2022-02-22"},{"lineNumber":408,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-22"},{"lineNumber":409,"author":{"gitId":"alanlowzies"},"content":"        printSearchResultsArrayList(searchResults);","lastModifiedDate":"2022-02-22"},{"lineNumber":410,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-22"},{"lineNumber":411,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":412,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":413,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":414,"author":{"gitId":"alanlowzies"},"content":"     * Complements printSearchResults. Printing the tasks in searchResults","lastModifiedDate":"2022-02-22"},{"lineNumber":415,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":416,"author":{"gitId":"alanlowzies"},"content":"     * @param searchResults A list containing the tasks that are part of the search results.","lastModifiedDate":"2022-02-22"},{"lineNumber":417,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":418,"author":{"gitId":"alanlowzies"},"content":"    private void printSearchResultsArrayList(ArrayList\u003cString\u003e searchResults) {","lastModifiedDate":"2022-02-22"},{"lineNumber":419,"author":{"gitId":"alanlowzies"},"content":"        for (String result : searchResults) {","lastModifiedDate":"2022-02-22"},{"lineNumber":420,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"\\t\" + result);","lastModifiedDate":"2022-02-22"},{"lineNumber":421,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":422,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":423,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":424,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":425,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user has entered a command that Sora does not understand.","lastModifiedDate":"2022-02-22"},{"lineNumber":426,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":427,"author":{"gitId":"alanlowzies"},"content":"    protected void printCommandNotUnderstood() {","lastModifiedDate":"2022-02-08"},{"lineNumber":428,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(COMMAND_NOT_UNDERSTOOD_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":429,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":430,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":431,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":432,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters a todo command without a description of it.","lastModifiedDate":"2022-02-22"},{"lineNumber":433,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":434,"author":{"gitId":"alanlowzies"},"content":"    protected void printTodoMissingDescription() {","lastModifiedDate":"2022-02-08"},{"lineNumber":435,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(TODO_MISSING_DESCRIPTION_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":436,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":437,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":438,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":439,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters an event command without the appropriate flag.","lastModifiedDate":"2022-02-22"},{"lineNumber":440,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":441,"author":{"gitId":"alanlowzies"},"content":"    public void printEventMissingFlag() {","lastModifiedDate":"2022-02-09"},{"lineNumber":442,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(EVENT_MISSING_FLAG_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":443,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":444,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":445,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":446,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters an event command without the description.","lastModifiedDate":"2022-02-22"},{"lineNumber":447,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":448,"author":{"gitId":"alanlowzies"},"content":"    public void printEventMissingDescription() {","lastModifiedDate":"2022-02-09"},{"lineNumber":449,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(EVENT_NO_DESCRIPTION_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":450,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":451,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":452,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":453,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters an event command without a date (and time).","lastModifiedDate":"2022-02-22"},{"lineNumber":454,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":455,"author":{"gitId":"alanlowzies"},"content":"    public void printEventMissingPeriod() {","lastModifiedDate":"2022-02-09"},{"lineNumber":456,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(EVENT_NO_PERIOD_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":457,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":458,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":459,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":460,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters an event command with invalid flags.","lastModifiedDate":"2022-02-22"},{"lineNumber":461,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":462,"author":{"gitId":"alanlowzies"},"content":"    public void printEventInvalidFlags() {","lastModifiedDate":"2022-02-09"},{"lineNumber":463,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(EVENT_INVALID_FLAGS, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":464,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":465,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":466,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":467,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters a deadline command without the appropriate flag.","lastModifiedDate":"2022-02-22"},{"lineNumber":468,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":469,"author":{"gitId":"alanlowzies"},"content":"    public void printDeadlineMissingFlag() {","lastModifiedDate":"2022-02-15"},{"lineNumber":470,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(DEADLINE_MISSING_FLAG_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":471,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":472,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":473,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":474,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters a deadline command without the description.","lastModifiedDate":"2022-02-22"},{"lineNumber":475,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":476,"author":{"gitId":"alanlowzies"},"content":"    public void printDeadlineMissingDescription() {","lastModifiedDate":"2022-02-15"},{"lineNumber":477,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(DEADLINE_NO_DESCRIPTION_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":478,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":479,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":480,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":481,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters a deadline command without a date (and time).","lastModifiedDate":"2022-02-22"},{"lineNumber":482,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":483,"author":{"gitId":"alanlowzies"},"content":"    public void printDeadlineNoDueDate() {","lastModifiedDate":"2022-02-15"},{"lineNumber":484,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(DEADLINE_NO_DUE_DATE_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":485,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":486,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":487,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":488,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters a deadline command with invalid flags.","lastModifiedDate":"2022-02-22"},{"lineNumber":489,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":490,"author":{"gitId":"alanlowzies"},"content":"    public void printDeadlineInvalidFlags() {","lastModifiedDate":"2022-02-15"},{"lineNumber":491,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(DEADLINE_INVALID_FLAGS, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":492,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":493,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":494,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":495,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the directory that contains the required data file cannot be found.","lastModifiedDate":"2022-02-22"},{"lineNumber":496,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":497,"author":{"gitId":"alanlowzies"},"content":"    public void printDirectoryNotFound() {","lastModifiedDate":"2022-02-15"},{"lineNumber":498,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(NO_DIRECTORY_FOUND_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":499,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":500,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":501,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":502,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the file that contains the required tasks\u0027 data cannot be found. The response","lastModifiedDate":"2022-02-22"},{"lineNumber":503,"author":{"gitId":"alanlowzies"},"content":"     * will differ depending on whether the required directory already exists prior to the current running","lastModifiedDate":"2022-02-22"},{"lineNumber":504,"author":{"gitId":"alanlowzies"},"content":"     * instance of Sora.","lastModifiedDate":"2022-02-22"},{"lineNumber":505,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":506,"author":{"gitId":"alanlowzies"},"content":"     * @param directoryAlreadyExists Indicates if the required directory already exists prior to the current","lastModifiedDate":"2022-02-22"},{"lineNumber":507,"author":{"gitId":"alanlowzies"},"content":"     *                               running instance of Sora.","lastModifiedDate":"2022-02-22"},{"lineNumber":508,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":509,"author":{"gitId":"alanlowzies"},"content":"    public void printFileNotFound(boolean directoryAlreadyExists) {","lastModifiedDate":"2022-02-15"},{"lineNumber":510,"author":{"gitId":"alanlowzies"},"content":"        if (!directoryAlreadyExists) {","lastModifiedDate":"2022-02-15"},{"lineNumber":511,"author":{"gitId":"alanlowzies"},"content":"            System.out.printf(NO_FILE_FOUND_RESPONSE, getRandomNegativeAcknowledgement(), \" also\",","lastModifiedDate":"2022-02-22"},{"lineNumber":512,"author":{"gitId":"alanlowzies"},"content":"                    \" too\");","lastModifiedDate":"2022-02-15"},{"lineNumber":513,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":514,"author":{"gitId":"alanlowzies"},"content":"            System.out.printf(NO_FILE_FOUND_RESPONSE, getRandomNegativeAcknowledgement(), \"\", \"\");","lastModifiedDate":"2022-02-22"},{"lineNumber":515,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":516,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":517,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":518,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":519,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when an empty file that is required for storing tasks\u0027 data has been successfully","lastModifiedDate":"2022-02-22"},{"lineNumber":520,"author":{"gitId":"alanlowzies"},"content":"     * added.","lastModifiedDate":"2022-02-22"},{"lineNumber":521,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":522,"author":{"gitId":"alanlowzies"},"content":"     * @param filePathName The path to the newly-created file that will store tasks\u0027 data.","lastModifiedDate":"2022-02-22"},{"lineNumber":523,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":524,"author":{"gitId":"alanlowzies"},"content":"    public void printFileCreatedResponse(Path filePathName) {","lastModifiedDate":"2022-02-15"},{"lineNumber":525,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(FILE_CREATED_REPSONSE, getRandomPositiveAcknowledgement(), filePathName);","lastModifiedDate":"2022-02-22"},{"lineNumber":526,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":527,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":528,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":529,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the tasks stored in the file have been successfully loaded into the current","lastModifiedDate":"2022-02-22"},{"lineNumber":530,"author":{"gitId":"alanlowzies"},"content":"     * running instance of Sora.","lastModifiedDate":"2022-02-22"},{"lineNumber":531,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":532,"author":{"gitId":"alanlowzies"},"content":"    public void printLoadedFileDataResponse() {","lastModifiedDate":"2022-02-15"},{"lineNumber":533,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-02-15"},{"lineNumber":534,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(LOADED_FILE_DATA_RESPONSE);","lastModifiedDate":"2022-02-22"},{"lineNumber":535,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":536,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":537,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":538,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters a task number that is not within the quantity range of Sora\u0027s","lastModifiedDate":"2022-02-22"},{"lineNumber":539,"author":{"gitId":"alanlowzies"},"content":"     * task list.","lastModifiedDate":"2022-02-22"},{"lineNumber":540,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":541,"author":{"gitId":"alanlowzies"},"content":"    public void printTaskNumOutOfListRange() {","lastModifiedDate":"2022-02-15"},{"lineNumber":542,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(TASK_NUMBER_OUT_OF_LIST_RANGE_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":543,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":544,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":545,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":546,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters an input that contains at least one character that is deemed","lastModifiedDate":"2022-02-22"},{"lineNumber":547,"author":{"gitId":"alanlowzies"},"content":"     * as an illegal character.","lastModifiedDate":"2022-02-22"},{"lineNumber":548,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":549,"author":{"gitId":"alanlowzies"},"content":"    public void printIllegalCharacterResponse() {","lastModifiedDate":"2022-02-21"},{"lineNumber":550,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(ILLEGAL_CHARACTER_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":551,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":552,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":553,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":554,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user tries to interact with an empty list.","lastModifiedDate":"2022-02-22"},{"lineNumber":555,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":556,"author":{"gitId":"alanlowzies"},"content":"    public void printEmptyListExceptionResponse() {","lastModifiedDate":"2022-02-21"},{"lineNumber":557,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(EMPTY_LIST_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":558,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":559,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":560,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":561,"author":{"gitId":"alanlowzies"},"content":"     * Prints a response when the user enters an uninterpretable task number.","lastModifiedDate":"2022-02-22"},{"lineNumber":562,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":563,"author":{"gitId":"alanlowzies"},"content":"    public void printInvalidTaskNumber() {","lastModifiedDate":"2022-02-22"},{"lineNumber":564,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(INVALID_TASK_NUMBER_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":565,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":566,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":567,"author":{"gitId":"alanlowzies"},"content":"    public void printMissingSearchStringResponse() {","lastModifiedDate":"2022-02-22"},{"lineNumber":568,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(SoraUI.MISSING_SEARCH_STRING_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":569,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":570,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":571,"author":{"gitId":"alanlowzies"},"content":"    public void printInvalidDateTimeInputFormatResponse() {","lastModifiedDate":"2022-02-22"},{"lineNumber":572,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(SoraUI.INVALID_DATE_TIME_INPUT_FORMAT_RESPONSE, getRandomNegativeAcknowledgement());","lastModifiedDate":"2022-02-22"},{"lineNumber":573,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":574,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":575,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"alanlowzies":575}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package tasks;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import sora.SoraUI;","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":" * Represents a Task of type Deadline. Deadline tasks contain a description of the task","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":" * and a date and time that represents the due date of the task.","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    private static final String DEADLINE_CHECKBOX \u003d \"[D]\";","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a Deadline task with the specified description and due date.","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"     * @param deadlineDescription The description of the Deadline task.","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"     * @param dateAndTime The due date of the deadline task.","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    public Deadline(String deadlineDescription, LocalDateTime dateAndTime) {","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"        super(deadlineDescription);","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"        this.dueDate \u003d dateAndTime;","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"     * Returns a string representation of the due date in a format that is meant for displaying","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"     * to the user.","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"     * @return The due date of the instance in a format for displaying to the user.","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"    public String getDueDate() {","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        DateTimeFormatter dateTimeFormat\u003d DateTimeFormatter.ofPattern(SoraUI.DATE_TIME_OUTPUT_FORMAT);","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        return dueDate.format(dateTimeFormat);","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"     * Returns a string representation of the due date in a format that is meant for exporting","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"     * to the file storage.","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"     * @return The due date of the instance in a format for exporting to the file storage.","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"    public String getDueDateForFileStorage() {","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        DateTimeFormatter dateTimeFormat\u003d DateTimeFormatter.ofPattern(SoraUI.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        return dueDate.format(dateTimeFormat);","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"     * Returns a string representation of the Deadline instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"     * @return A string representation of the Deadline instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        String checkbox \u003d getCheckbox();","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"        return String.format(\"%s%s %s (due on: %s)\", DEADLINE_CHECKBOX, checkbox, getDescription(), getDueDate());","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"alanlowzies":59}},{"path":"src/main/java/tasks/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package tasks;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * Thrown to indicate that the TaskList instance that is trying to be interacted with is empty,","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" * that is, there are no tasks in the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"public class EmptyListException extends Exception {","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public static final String EMPTY_LIST_MSG \u003d \"List is empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an EmptyListException with the specified error message.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"     * @param errorMsg The error message written by the throwing method.","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public EmptyListException(String errorMsg) {","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"        super(errorMsg);","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"alanlowzies":18}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package tasks;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import sora.SoraUI;","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":" * Represents a Task of type Event. Event tasks contain a description of the task as well as a date and time","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":" * that represents the date and time that the event will occur.","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    private static final String EVENT_CHECKBOX \u003d \"[E]\";","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    private LocalDateTime eventPeriod;","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an Event task with the specified description and event period.","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"     * @param eventDescription The description of the Event task.","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"     * @param dateAndTime The date and time that the Event task is expected to take place.","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    public Event(String eventDescription, LocalDateTime dateAndTime) {","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"        super(eventDescription);","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"        this.eventPeriod \u003d dateAndTime;","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"     * Returns a string representation of the event period in a format that is meant for displaying","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"     * to the user.","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"     * @return The event period of the instance in a format for displaying to the user.","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"    public String getEventPeriod() {","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        DateTimeFormatter dateTimeFormat\u003d DateTimeFormatter.ofPattern(SoraUI.DATE_TIME_OUTPUT_FORMAT);","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        return eventPeriod.format(dateTimeFormat);","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"     * Returns a string representation of the event period in a format that is meant for exporting","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"     * to the file storage.","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"     * @return The event period of the instance in a format for exporting to the file storage.","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"    public String getEventPeriodForFileStorage() {","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(SoraUI.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        return eventPeriod.format(dateTimeFormat);","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"     * Returns a string representation of the Event instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"     * @return A string representation of the Event instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        String checkbox \u003d getCheckbox();","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"        return String.format(\"%s%s %s (scheduled for: %s)\", EVENT_CHECKBOX, checkbox, getDescription(), getEventPeriod());","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"alanlowzies":59}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package tasks;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * An abstract representation of a task. This class should not be instantiated.","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" * Instead, use the specific Task subclasses: Deadline, Event, or Todo.","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    protected String description;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    protected static final String BLANK_CHECKBOX \u003d \"[ ]\";","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    protected static final String DONE_CHECKBOX \u003d \"[X]\";","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a Task instance with a specified description.","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"     * Gets the description of the Task instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"     * @return The description of the Task instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"        return this.description;","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     * Gets the status of the Task instance. That is, whether the task is marked as done or not.","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"     * @return true if the Task instance is marked as done. Otherwise, false is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"     * Sets the status of the Task instance. That is, whether the task is marked as done or not.","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"     * @param done Indicates whether the task is marked as done or not.","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"     * Gets a string representation of a checkbox to indicate if the task is marked as done or not.","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"     * @return A string representation of a checkbox of the Task instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    protected String getCheckbox() {","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        return isDone() ? DONE_CHECKBOX : BLANK_CHECKBOX;","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"     * Returns a string representation of the Task instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"     * @return A string representation of the Task instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"        String checkbox \u003d getCheckbox();","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"        return String.format(\"%s %s\", checkbox, getDescription());","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"alanlowzies":69}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package tasks;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import sora.SoraStorage;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import sora.SoraUI;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import sora.InvalidCommandException;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import util.Helper;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":" * This class is an implementation for a way for Sora to store tasks in a centralised data structure.","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"public class TaskList {","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    private static final int EVENT_DEADLINE_TASK_NUMBER_OF_PARAMETERS \u003d 2;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    private static final int EVENT_DEADLINE_TASK_DESCRIPTION_INDEX_NUM \u003d 0;","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    private static final int EVENT_DEADLINE_TASK_DATE_INDEX_NUM \u003d 1;","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    public static final int FILE_DATA_TASK_TYPE_INDEX_NUM \u003d 0;","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    public static final int FILE_DATA_DESCRIPTION_INDEX_NUM \u003d 2;","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    public static final int FILE_DATA_FLAG_VALUE_INDEX_NUM \u003d 3;","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"    private int numberOfTasks;","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    SoraStorage soraStorage;","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a TaskList instance, and instantiates an empty ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"        this.numberOfTasks \u003d 0;","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"     * Gets the ArrayList list containing the tasks added to Sora.","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"     * @return The ArrayList list.","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"        return this.list;","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"     * Determines if the list is empty. That is, there are no tasks in it.","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"     * @return true if the list is empty. Otherwise, false is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"        return list.isEmpty();","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"     * Gets the variable that stores the number of tasks currently stored in the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"     * @return The number of tasks currently stored in the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"        return this.numberOfTasks;","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"     * Sets the variable that stores the number of tasks stored in the list to a specified number.","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"     * @param numberOfTasks The new number of tasks that the list has.","lastModifiedDate":"2022-02-22"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    public void setNumberOfTasks(int numberOfTasks) {","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"        this.numberOfTasks \u003d numberOfTasks;","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"     * Increases the number stored in the variable that stores the number of tasks in the list by 1.","lastModifiedDate":"2022-02-22"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"    public void incrementNumberOfTasks() {","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"        this.numberOfTasks +\u003d 1;","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"     * Reduces the number stored in the variable that stores the number of tasks in the list by 1.","lastModifiedDate":"2022-02-22"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    public void decrementNumberOfTasks() {","lastModifiedDate":"2022-02-22"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"        this.numberOfTasks -\u003d 1;","lastModifiedDate":"2022-02-22"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     * Adds a new task to the task list. Depending on the type of task the user has entered, different checks","lastModifiedDate":"2022-02-22"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     * and procedures will be carried out to ensure that the user\u0027s input follows the correct formatting rules","lastModifiedDate":"2022-02-22"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"     * before it is added to the task list.","lastModifiedDate":"2022-02-22"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The user\u0027s input containing the new task information to be added.","lastModifiedDate":"2022-02-22"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"     * @return A new Task instance that contains the information that the user has provided. However, if an error","lastModifiedDate":"2022-02-22"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"     * has occurred (e.g. due to failing formatting checks), null will be returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If userInput fails the formatting checks.","lastModifiedDate":"2022-02-22"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"     * @throws DateTimeParseException If the date and time formatting in the user\u0027s input is incorrect.","lastModifiedDate":"2022-02-22"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"    public Task addTask(String userInput) throws InvalidCommandException, DateTimeParseException {","lastModifiedDate":"2022-02-22"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"        // Create new Task object with text","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"        String taskType \u003d extractTaskType(userInput);","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"            switch (taskType) {","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.ADD_TODO_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-03"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"                checkTodoCommand(userInput);","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"                String todoDescription \u003d removeCommandKeyword(userInput);","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"                newTask \u003d new Todo(todoDescription);","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"                list.add(newTask);","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.ADD_EVENT_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-03"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"                checkEventDeadlineCommand(userInput);","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"                String[] eventDescriptionAndDate \u003d extractDescriptionAndDate(userInput,","lastModifiedDate":"2022-02-22"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"                        SoraUI.ADD_EVENT_FLAG_KEYWORD);","lastModifiedDate":"2022-02-22"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"                LocalDateTime eventDateTime \u003d","lastModifiedDate":"2022-02-22"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"                        getDateTimeObject(eventDescriptionAndDate[EVENT_DEADLINE_TASK_DATE_INDEX_NUM]);","lastModifiedDate":"2022-02-22"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"                newTask \u003d new Event(eventDescriptionAndDate[EVENT_DEADLINE_TASK_DESCRIPTION_INDEX_NUM],","lastModifiedDate":"2022-02-22"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"                        eventDateTime);","lastModifiedDate":"2022-02-22"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"                list.add(newTask);","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"            case SoraUI.ADD_DEADLINE_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-03"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"                checkEventDeadlineCommand(userInput);","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"                String[] deadlineDescriptionAndDate \u003d extractDescriptionAndDate(userInput,","lastModifiedDate":"2022-02-22"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"                        SoraUI.ADD_DEADLINE_FLAG_KEYWORD);","lastModifiedDate":"2022-02-22"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"                LocalDateTime deadlineDateTime \u003d","lastModifiedDate":"2022-02-22"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"                        getDateTimeObject(deadlineDescriptionAndDate[EVENT_DEADLINE_TASK_DATE_INDEX_NUM]);","lastModifiedDate":"2022-02-22"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"                newTask \u003d new Deadline(deadlineDescriptionAndDate[EVENT_DEADLINE_TASK_DESCRIPTION_INDEX_NUM],","lastModifiedDate":"2022-02-22"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"                        deadlineDateTime);","lastModifiedDate":"2022-02-22"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"                list.add(newTask);","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"            default:","lastModifiedDate":"2022-02-03"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"                throw new InvalidCommandException(InvalidCommandException.NO_SUCH_COMMAND_MSG);","lastModifiedDate":"2022-02-22"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"            // Re-throw it to caller method","lastModifiedDate":"2022-02-22"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"            throw e;","lastModifiedDate":"2022-02-22"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-22"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"            // Re-throw it to caller method","lastModifiedDate":"2022-02-22"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"            throw e;","lastModifiedDate":"2022-02-08"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"        incrementNumberOfTasks();","lastModifiedDate":"2022-02-02"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"        return newTask;","lastModifiedDate":"2022-02-15"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"     * Adds a new task that was read from a file in the user\u0027s system storage.","lastModifiedDate":"2022-02-22"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"     * @param taskDataFromFile A string array containing the information for the new task.","lastModifiedDate":"2022-02-22"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"    public void addTaskFromFile(String[] taskDataFromFile) {","lastModifiedDate":"2022-02-22"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"        String type;","lastModifiedDate":"2022-02-15"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"        String description;","lastModifiedDate":"2022-02-15"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"        String flag;","lastModifiedDate":"2022-02-15"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"        String flagValue;","lastModifiedDate":"2022-02-15"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"        String isDoneValue \u003d taskDataFromFile[1];","lastModifiedDate":"2022-02-15"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"        boolean isDone \u003d (isDoneValue.equals(\"1\")) ? true : false;","lastModifiedDate":"2022-02-15"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"        // Get details of task","lastModifiedDate":"2022-02-15"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"        type \u003d getTaskType(taskDataFromFile[FILE_DATA_TASK_TYPE_INDEX_NUM]);","lastModifiedDate":"2022-02-15"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"        description \u003d taskDataFromFile[FILE_DATA_DESCRIPTION_INDEX_NUM];","lastModifiedDate":"2022-02-15"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"        if (!type.equalsIgnoreCase(SoraUI.ADD_TODO_COMMAND_KEYWORD)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"            flag \u003d getFlag(type);","lastModifiedDate":"2022-02-15"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"            flagValue \u003d taskDataFromFile[FILE_DATA_FLAG_VALUE_INDEX_NUM];","lastModifiedDate":"2022-02-15"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"            flag \u003d \"\";","lastModifiedDate":"2022-02-15"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"            flagValue \u003d \"\";","lastModifiedDate":"2022-02-15"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"        // Craft the command to add task to list","lastModifiedDate":"2022-02-15"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"        StringBuilder commandBuilder \u003d new StringBuilder(type + \" \" + description);","lastModifiedDate":"2022-02-15"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"        if (!type.equalsIgnoreCase(SoraUI.ADD_TODO_COMMAND_KEYWORD)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"            // Include flag and flag value","lastModifiedDate":"2022-02-15"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"            commandBuilder.append(flag + \" \" + flagValue);","lastModifiedDate":"2022-02-15"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"        String newTaskCommand \u003d commandBuilder.toString();","lastModifiedDate":"2022-02-15"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"        // Add the task to the list","lastModifiedDate":"2022-02-15"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"            addTask(newTaskCommand);","lastModifiedDate":"2022-02-15"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Oh no! I failed to add a task from the saved data file to my task list.\");","lastModifiedDate":"2022-02-15"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Here\u0027s some details about the error: \");","lastModifiedDate":"2022-02-15"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"\\t\" + e.getMessage());","lastModifiedDate":"2022-02-15"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"            // TODO: Refine exception handling","lastModifiedDate":"2022-02-15"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"        // If task is marked as done in the file, reflect it in Sora\u0027s task list","lastModifiedDate":"2022-02-15"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-15"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"            updateDoneStatus(getNumberOfTasks(), true);","lastModifiedDate":"2022-02-15"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"     * Returns the command keyword based on the provided abbreviation.","lastModifiedDate":"2022-02-22"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"     *     \u003cli\u003e\"D\" \u003d \"deadline\"\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"     *     \u003cli\u003e\"E\" \u003d \"event\"\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"     *     \u003cli\u003e\"T\" \u003d \"todo\"\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"     * @param abbreviation The abbreviated task type.","lastModifiedDate":"2022-02-22"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"     * @return The command keyword based on the specified task type abbreviation.","lastModifiedDate":"2022-02-22"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":210,"author":{"gitId":"alanlowzies"},"content":"    private String getTaskType(String abbreviation) {","lastModifiedDate":"2022-02-15"},{"lineNumber":211,"author":{"gitId":"alanlowzies"},"content":"        switch (abbreviation) {","lastModifiedDate":"2022-02-15"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"        case SoraStorage.TODO_TYPE_FILE_ABBREVIATION:","lastModifiedDate":"2022-02-21"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"            return SoraUI.ADD_TODO_COMMAND_KEYWORD;","lastModifiedDate":"2022-02-15"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"        case SoraStorage.EVENT_TYPE_FILE_ABBREVIATION:","lastModifiedDate":"2022-02-21"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"            return SoraUI.ADD_EVENT_COMMAND_KEYWORD;","lastModifiedDate":"2022-02-15"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"        case SoraStorage.DEADLINE_TYPE_FILE_ABBREVIATION:","lastModifiedDate":"2022-02-21"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"            return SoraUI.ADD_DEADLINE_COMMAND_KEYWORD;","lastModifiedDate":"2022-02-15"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"        default:","lastModifiedDate":"2022-02-15"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"            // TODO: Implement exception?","lastModifiedDate":"2022-02-15"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"            return \"\";","lastModifiedDate":"2022-02-15"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"     * Returns the flags required by the command based on the specified type of task.","lastModifiedDate":"2022-02-22"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"     * @param taskType The type of task (i.e. \"deadline\", \"event\", or \"todo\").","lastModifiedDate":"2022-02-22"},{"lineNumber":228,"author":{"gitId":"alanlowzies"},"content":"     * @return The flags corresponding to the task type specified.","lastModifiedDate":"2022-02-22"},{"lineNumber":229,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":230,"author":{"gitId":"alanlowzies"},"content":"    private String getFlag(String taskType) {","lastModifiedDate":"2022-02-15"},{"lineNumber":231,"author":{"gitId":"alanlowzies"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-15"},{"lineNumber":232,"author":{"gitId":"alanlowzies"},"content":"        case SoraUI.ADD_EVENT_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-15"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"            return SoraUI.ADD_EVENT_FLAG_KEYWORD;","lastModifiedDate":"2022-02-15"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"        case SoraUI.ADD_DEADLINE_COMMAND_KEYWORD:","lastModifiedDate":"2022-02-15"},{"lineNumber":235,"author":{"gitId":"alanlowzies"},"content":"            return SoraUI.ADD_DEADLINE_FLAG_KEYWORD;","lastModifiedDate":"2022-02-15"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"        default:","lastModifiedDate":"2022-02-15"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"            // TODO: Implement exception?","lastModifiedDate":"2022-02-15"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"            return \"\";","lastModifiedDate":"2022-02-15"},{"lineNumber":239,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":243,"author":{"gitId":"alanlowzies"},"content":"     * Conducts checks on a todo command that the user has entered to ensure that it complies","lastModifiedDate":"2022-02-22"},{"lineNumber":244,"author":{"gitId":"alanlowzies"},"content":"     * with the following formatting rules:","lastModifiedDate":"2022-02-22"},{"lineNumber":245,"author":{"gitId":"alanlowzies"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":246,"author":{"gitId":"alanlowzies"},"content":"     *     \u003cli\u003eHas a description\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"     * @param todoUserInput The todo command that the user has entered.","lastModifiedDate":"2022-02-22"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If the todo command given fails the checks.","lastModifiedDate":"2022-02-22"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"    private void checkTodoCommand(String todoUserInput) throws InvalidCommandException {","lastModifiedDate":"2022-02-09"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"        // Check if user command has a description","lastModifiedDate":"2022-02-09"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"        String[] commandAndDescription \u003d todoUserInput.split(\" \", 2);","lastModifiedDate":"2022-02-09"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":256,"author":{"gitId":"alanlowzies"},"content":"        if (commandAndDescription.length \u003c 2) {","lastModifiedDate":"2022-02-08"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"            // User input has no description","lastModifiedDate":"2022-02-09"},{"lineNumber":258,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(InvalidCommandException.TODO_NO_DESCRIPTION);","lastModifiedDate":"2022-02-08"},{"lineNumber":259,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":260,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":261,"author":{"gitId":"alanlowzies"},"content":"        // Checks are complete, the command is okay. Method will return to caller.","lastModifiedDate":"2022-02-08"},{"lineNumber":262,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":263,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":264,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":265,"author":{"gitId":"alanlowzies"},"content":"     * Conducts checks on a deadline or event command that the user has entered to ensure that it","lastModifiedDate":"2022-02-22"},{"lineNumber":266,"author":{"gitId":"alanlowzies"},"content":"     * complies with the following formatting rules:","lastModifiedDate":"2022-02-22"},{"lineNumber":267,"author":{"gitId":"alanlowzies"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":268,"author":{"gitId":"alanlowzies"},"content":"     *     \u003cli\u003eHas a description\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":269,"author":{"gitId":"alanlowzies"},"content":"     *     \u003cli\u003eHas a date that follows the date-time format\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":270,"author":{"gitId":"alanlowzies"},"content":"     *     \u003cli\u003eCorrect flag is used\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":271,"author":{"gitId":"alanlowzies"},"content":"     *     \u003cli\u003eDoes not have unnecessary or extra flags\u003c/li\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":272,"author":{"gitId":"alanlowzies"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":273,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":274,"author":{"gitId":"alanlowzies"},"content":"     * @param eventDeadlineUserInput The deadline or event command that the user has entered.","lastModifiedDate":"2022-02-22"},{"lineNumber":275,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If the deadline or todo command given fails the checks.","lastModifiedDate":"2022-02-22"},{"lineNumber":276,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":277,"author":{"gitId":"alanlowzies"},"content":"    private void checkEventDeadlineCommand(String eventDeadlineUserInput) throws InvalidCommandException {","lastModifiedDate":"2022-02-15"},{"lineNumber":278,"author":{"gitId":"alanlowzies"},"content":"        // Check if user input has a description","lastModifiedDate":"2022-02-09"},{"lineNumber":279,"author":{"gitId":"alanlowzies"},"content":"        String taskType \u003d eventDeadlineUserInput.split(\" \")[0];","lastModifiedDate":"2022-02-15"},{"lineNumber":280,"author":{"gitId":"alanlowzies"},"content":"        String commandFlagKeyword \u003d getDeadlineOrEventFlag(taskType);","lastModifiedDate":"2022-02-15"},{"lineNumber":281,"author":{"gitId":"alanlowzies"},"content":"        String[] splitByFlag \u003d eventDeadlineUserInput.split(commandFlagKeyword);","lastModifiedDate":"2022-02-15"},{"lineNumber":282,"author":{"gitId":"alanlowzies"},"content":"        String[] commandAndDescription \u003d splitByFlag[0].split(\" \", 2);","lastModifiedDate":"2022-02-09"},{"lineNumber":283,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":284,"author":{"gitId":"alanlowzies"},"content":"        // Check if user input has no description","lastModifiedDate":"2022-02-22"},{"lineNumber":285,"author":{"gitId":"alanlowzies"},"content":"        boolean hasLessThanTwoElements \u003d commandAndDescription.length \u003c 2;","lastModifiedDate":"2022-02-22"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"        /**","lastModifiedDate":"2022-02-22"},{"lineNumber":287,"author":{"gitId":"alanlowzies"},"content":"         *  This factor has to be checked first before hasEmptySecondElement to avoid an unexpected","lastModifiedDate":"2022-02-22"},{"lineNumber":288,"author":{"gitId":"alanlowzies"},"content":"         *  ArrayIndexOutOfBoundsException, which can disrupt the intended flow of the exception handling.","lastModifiedDate":"2022-02-22"},{"lineNumber":289,"author":{"gitId":"alanlowzies"},"content":"         */","lastModifiedDate":"2022-02-22"},{"lineNumber":290,"author":{"gitId":"alanlowzies"},"content":"        if (hasLessThanTwoElements) {","lastModifiedDate":"2022-02-22"},{"lineNumber":291,"author":{"gitId":"alanlowzies"},"content":"            String noDescriptionExceptionMsg \u003d getDeadlineOrEventNoDescriptionExceptionMsg(taskType);","lastModifiedDate":"2022-02-22"},{"lineNumber":292,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(noDescriptionExceptionMsg);","lastModifiedDate":"2022-02-22"},{"lineNumber":293,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":294,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":295,"author":{"gitId":"alanlowzies"},"content":"        boolean hasEmptySecondElement \u003d commandAndDescription[1].equals(\"\");","lastModifiedDate":"2022-02-22"},{"lineNumber":296,"author":{"gitId":"alanlowzies"},"content":"        if (hasEmptySecondElement) {","lastModifiedDate":"2022-02-22"},{"lineNumber":297,"author":{"gitId":"alanlowzies"},"content":"            String noDescriptionExceptionMsg \u003d getDeadlineOrEventNoDescriptionExceptionMsg(taskType);","lastModifiedDate":"2022-02-15"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(noDescriptionExceptionMsg);","lastModifiedDate":"2022-02-15"},{"lineNumber":299,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":300,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":301,"author":{"gitId":"alanlowzies"},"content":"        // Check if user input has the correct flag","lastModifiedDate":"2022-02-09"},{"lineNumber":302,"author":{"gitId":"alanlowzies"},"content":"        if (!eventDeadlineUserInput.contains(commandFlagKeyword)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":303,"author":{"gitId":"alanlowzies"},"content":"            String missingFlagExceptionMsg \u003d getDeadlineOrEventNoFlagExceptionMsg(taskType);","lastModifiedDate":"2022-02-15"},{"lineNumber":304,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(missingFlagExceptionMsg);","lastModifiedDate":"2022-02-15"},{"lineNumber":305,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":306,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":307,"author":{"gitId":"alanlowzies"},"content":"        // Check if user input has a date period","lastModifiedDate":"2022-02-09"},{"lineNumber":308,"author":{"gitId":"alanlowzies"},"content":"        if (splitByFlag.length \u003c 2) {","lastModifiedDate":"2022-02-09"},{"lineNumber":309,"author":{"gitId":"alanlowzies"},"content":"            // User input has no date period","lastModifiedDate":"2022-02-09"},{"lineNumber":310,"author":{"gitId":"alanlowzies"},"content":"            String noDateExceptionMsg \u003d getDeadlineOrEventNoDateExceptionMsg(taskType);","lastModifiedDate":"2022-02-15"},{"lineNumber":311,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(noDateExceptionMsg);","lastModifiedDate":"2022-02-15"},{"lineNumber":312,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":313,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":314,"author":{"gitId":"alanlowzies"},"content":"        // Check if user input has multiple \u0027/at\u0027 flags","lastModifiedDate":"2022-02-09"},{"lineNumber":315,"author":{"gitId":"alanlowzies"},"content":"        boolean multipleAtFlagOccurrences \u003d Helper.checkMultipleOccurrences(eventDeadlineUserInput, commandFlagKeyword);","lastModifiedDate":"2022-02-15"},{"lineNumber":316,"author":{"gitId":"alanlowzies"},"content":"        String invalidFlagsExceptionMsg \u003d getDeadlineOrEventInvalidFlagExceptionMsg(taskType);","lastModifiedDate":"2022-02-15"},{"lineNumber":317,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":318,"author":{"gitId":"alanlowzies"},"content":"        if (multipleAtFlagOccurrences) {","lastModifiedDate":"2022-02-09"},{"lineNumber":319,"author":{"gitId":"alanlowzies"},"content":"            // User input has too many \u0027at\u0027 flags","lastModifiedDate":"2022-02-09"},{"lineNumber":320,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(invalidFlagsExceptionMsg);","lastModifiedDate":"2022-02-15"},{"lineNumber":321,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":322,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":323,"author":{"gitId":"alanlowzies"},"content":"        // Check if user input has extraneous flags","lastModifiedDate":"2022-02-09"},{"lineNumber":324,"author":{"gitId":"alanlowzies"},"content":"        if (checkForExtraneousFlags(eventDeadlineUserInput, commandFlagKeyword)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":325,"author":{"gitId":"alanlowzies"},"content":"            // User input contains extraneous flags","lastModifiedDate":"2022-02-09"},{"lineNumber":326,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(invalidFlagsExceptionMsg);","lastModifiedDate":"2022-02-15"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":328,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":329,"author":{"gitId":"alanlowzies"},"content":"        // Checks are complete, the command is okay. Method will return to caller.","lastModifiedDate":"2022-02-15"},{"lineNumber":330,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":331,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":332,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":333,"author":{"gitId":"alanlowzies"},"content":"     * Returns either the event or deadline flag keyword based on the specified type of task.","lastModifiedDate":"2022-02-22"},{"lineNumber":334,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":335,"author":{"gitId":"alanlowzies"},"content":"     * @param taskType The type of task. Must only be either \"event\" or \"deadline\".","lastModifiedDate":"2022-02-22"},{"lineNumber":336,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns the event flag keyword if the task type is \"event\", otherwise the deadline flag","lastModifiedDate":"2022-02-22"},{"lineNumber":337,"author":{"gitId":"alanlowzies"},"content":"     * keyword is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":338,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":339,"author":{"gitId":"alanlowzies"},"content":"    private String getDeadlineOrEventFlag(String taskType) {","lastModifiedDate":"2022-02-15"},{"lineNumber":340,"author":{"gitId":"alanlowzies"},"content":"        if (taskType.equalsIgnoreCase(SoraUI.ADD_EVENT_COMMAND_KEYWORD)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":341,"author":{"gitId":"alanlowzies"},"content":"            return SoraUI.ADD_EVENT_FLAG_KEYWORD;","lastModifiedDate":"2022-02-15"},{"lineNumber":342,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"            return SoraUI.ADD_DEADLINE_FLAG_KEYWORD;","lastModifiedDate":"2022-02-15"},{"lineNumber":344,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":345,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":346,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":347,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":348,"author":{"gitId":"alanlowzies"},"content":"     * Returns either the event or deadline \u0027no description\u0027 exception message depending on the","lastModifiedDate":"2022-02-22"},{"lineNumber":349,"author":{"gitId":"alanlowzies"},"content":"     * type of task.","lastModifiedDate":"2022-02-22"},{"lineNumber":350,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":351,"author":{"gitId":"alanlowzies"},"content":"     * @param taskType The type of task. Must only be either \"event\" or \"deadline\".","lastModifiedDate":"2022-02-22"},{"lineNumber":352,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns the event exception message if the task type is \"event\", otherwise the deadline","lastModifiedDate":"2022-02-22"},{"lineNumber":353,"author":{"gitId":"alanlowzies"},"content":"     * exception message is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":354,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":355,"author":{"gitId":"alanlowzies"},"content":"    private String getDeadlineOrEventNoDescriptionExceptionMsg(String taskType) {","lastModifiedDate":"2022-02-15"},{"lineNumber":356,"author":{"gitId":"alanlowzies"},"content":"        if (taskType.equalsIgnoreCase(SoraUI.ADD_EVENT_COMMAND_KEYWORD)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":357,"author":{"gitId":"alanlowzies"},"content":"            return InvalidCommandException.EVENT_NO_DESCRIPTION;","lastModifiedDate":"2022-02-15"},{"lineNumber":358,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":359,"author":{"gitId":"alanlowzies"},"content":"            return InvalidCommandException.DEADLINE_NO_DESCRIPTION;","lastModifiedDate":"2022-02-15"},{"lineNumber":360,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":361,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":362,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":363,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":364,"author":{"gitId":"alanlowzies"},"content":"     * Returns either the event or deadline \u0027missing flag\u0027 exception message depending on the","lastModifiedDate":"2022-02-22"},{"lineNumber":365,"author":{"gitId":"alanlowzies"},"content":"     * type of task.","lastModifiedDate":"2022-02-22"},{"lineNumber":366,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":367,"author":{"gitId":"alanlowzies"},"content":"     * @param taskType The type of task. Must only be either \"event\" or \"deadline\".","lastModifiedDate":"2022-02-22"},{"lineNumber":368,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns the event exception message if the task type is \"event\", otherwise the deadline","lastModifiedDate":"2022-02-22"},{"lineNumber":369,"author":{"gitId":"alanlowzies"},"content":"     * exception message is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":370,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":371,"author":{"gitId":"alanlowzies"},"content":"    private String getDeadlineOrEventNoFlagExceptionMsg(String taskType) {","lastModifiedDate":"2022-02-15"},{"lineNumber":372,"author":{"gitId":"alanlowzies"},"content":"        if (taskType.equalsIgnoreCase(SoraUI.ADD_EVENT_COMMAND_KEYWORD)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":373,"author":{"gitId":"alanlowzies"},"content":"            return InvalidCommandException.EVENT_MISSING_FLAG;","lastModifiedDate":"2022-02-15"},{"lineNumber":374,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":375,"author":{"gitId":"alanlowzies"},"content":"            return InvalidCommandException.DEADLINE_MISSING_FLAG;","lastModifiedDate":"2022-02-15"},{"lineNumber":376,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":377,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":378,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":379,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":380,"author":{"gitId":"alanlowzies"},"content":"     * Returns either the event or deadline \u0027no date-time\u0027 exception message depending on the","lastModifiedDate":"2022-02-22"},{"lineNumber":381,"author":{"gitId":"alanlowzies"},"content":"     * type of task.","lastModifiedDate":"2022-02-22"},{"lineNumber":382,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":383,"author":{"gitId":"alanlowzies"},"content":"     * @param taskType The type of task. Must only be either \"event\" or \"deadline\"","lastModifiedDate":"2022-02-22"},{"lineNumber":384,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns the event exception message if the task type is \"event\", otherwise the deadline","lastModifiedDate":"2022-02-22"},{"lineNumber":385,"author":{"gitId":"alanlowzies"},"content":"     * exception message is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":386,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":387,"author":{"gitId":"alanlowzies"},"content":"    private String getDeadlineOrEventNoDateExceptionMsg(String taskType) {","lastModifiedDate":"2022-02-15"},{"lineNumber":388,"author":{"gitId":"alanlowzies"},"content":"        if (taskType.equalsIgnoreCase(SoraUI.ADD_EVENT_COMMAND_KEYWORD)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":389,"author":{"gitId":"alanlowzies"},"content":"            return InvalidCommandException.EVENT_NO_PERIOD;","lastModifiedDate":"2022-02-15"},{"lineNumber":390,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":391,"author":{"gitId":"alanlowzies"},"content":"            return InvalidCommandException.DEADLINE_NO_DUE_DATE;","lastModifiedDate":"2022-02-15"},{"lineNumber":392,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":393,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":394,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":395,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":396,"author":{"gitId":"alanlowzies"},"content":"     * Returns either the event or deadline \u0027invalid flags\u0027 exception message depending on the","lastModifiedDate":"2022-02-22"},{"lineNumber":397,"author":{"gitId":"alanlowzies"},"content":"     * type of task.","lastModifiedDate":"2022-02-22"},{"lineNumber":398,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":399,"author":{"gitId":"alanlowzies"},"content":"     * @param taskType The type of task. Must only be either \"event\" or \"deadline\".","lastModifiedDate":"2022-02-22"},{"lineNumber":400,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns the event exception message if the task type is \"event\", otherwise the deadline","lastModifiedDate":"2022-02-22"},{"lineNumber":401,"author":{"gitId":"alanlowzies"},"content":"     * exception message is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":402,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":403,"author":{"gitId":"alanlowzies"},"content":"    private String getDeadlineOrEventInvalidFlagExceptionMsg(String taskType) {","lastModifiedDate":"2022-02-15"},{"lineNumber":404,"author":{"gitId":"alanlowzies"},"content":"        if (taskType.equalsIgnoreCase(SoraUI.ADD_EVENT_COMMAND_KEYWORD)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":405,"author":{"gitId":"alanlowzies"},"content":"            return InvalidCommandException.EVENT_INVALID_FLAGS;","lastModifiedDate":"2022-02-15"},{"lineNumber":406,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":407,"author":{"gitId":"alanlowzies"},"content":"            return InvalidCommandException.DEADLINE_INVALID_FLAGS;","lastModifiedDate":"2022-02-15"},{"lineNumber":408,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":409,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":410,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":411,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":412,"author":{"gitId":"alanlowzies"},"content":"     * Checks against a list of flags (SoraUI.LIST_OF_FLAG_KEYWORDS) to check if the user\u0027s input","lastModifiedDate":"2022-02-22"},{"lineNumber":413,"author":{"gitId":"alanlowzies"},"content":"     * contains at least one incorrect flag.","lastModifiedDate":"2022-02-22"},{"lineNumber":414,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":415,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The string that the user has entered.","lastModifiedDate":"2022-02-22"},{"lineNumber":416,"author":{"gitId":"alanlowzies"},"content":"     * @param correctFlag The flag that should be paired with the command that the user has entered.","lastModifiedDate":"2022-02-22"},{"lineNumber":417,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if there is at least one flag that is invalid. Returns false otherwise.","lastModifiedDate":"2022-02-09"},{"lineNumber":418,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":419,"author":{"gitId":"alanlowzies"},"content":"    private boolean checkForExtraneousFlags(String userInput, String correctFlag) {","lastModifiedDate":"2022-02-09"},{"lineNumber":420,"author":{"gitId":"alanlowzies"},"content":"        String[] arrayOfWords \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-09"},{"lineNumber":421,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":422,"author":{"gitId":"alanlowzies"},"content":"        // Go through all possible flags","lastModifiedDate":"2022-02-09"},{"lineNumber":423,"author":{"gitId":"alanlowzies"},"content":"        for (String flag : SoraUI.LIST_OF_FLAG_KEYWORDS) {","lastModifiedDate":"2022-02-09"},{"lineNumber":424,"author":{"gitId":"alanlowzies"},"content":"            if (flag.equals(correctFlag)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":425,"author":{"gitId":"alanlowzies"},"content":"                // Ignore the flag that is marked as the correct flag","lastModifiedDate":"2022-02-09"},{"lineNumber":426,"author":{"gitId":"alanlowzies"},"content":"                continue;","lastModifiedDate":"2022-02-09"},{"lineNumber":427,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":428,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":429,"author":{"gitId":"alanlowzies"},"content":"            for (String word : arrayOfWords) {","lastModifiedDate":"2022-02-09"},{"lineNumber":430,"author":{"gitId":"alanlowzies"},"content":"                if (word.contains(flag)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":431,"author":{"gitId":"alanlowzies"},"content":"                    // userInput contains an invalid flag","lastModifiedDate":"2022-02-09"},{"lineNumber":432,"author":{"gitId":"alanlowzies"},"content":"                    return true;","lastModifiedDate":"2022-02-09"},{"lineNumber":433,"author":{"gitId":"alanlowzies"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":434,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":435,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":436,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":437,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":438,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":439,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":440,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":441,"author":{"gitId":"alanlowzies"},"content":"     * Extracts the task type (deadline, event, or todo), in particular the first word","lastModifiedDate":"2022-02-22"},{"lineNumber":442,"author":{"gitId":"alanlowzies"},"content":"     * of the specified text, and returns it.","lastModifiedDate":"2022-02-22"},{"lineNumber":443,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":444,"author":{"gitId":"alanlowzies"},"content":"     * @param text The string with the task type to be extracted.","lastModifiedDate":"2022-02-22"},{"lineNumber":445,"author":{"gitId":"alanlowzies"},"content":"     * @return The extracted task type.","lastModifiedDate":"2022-02-22"},{"lineNumber":446,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":447,"author":{"gitId":"alanlowzies"},"content":"    private String extractTaskType(String text) {","lastModifiedDate":"2022-02-03"},{"lineNumber":448,"author":{"gitId":"alanlowzies"},"content":"        String taskType \u003d text.toLowerCase().split(\" \", 2)[0];","lastModifiedDate":"2022-02-03"},{"lineNumber":449,"author":{"gitId":"alanlowzies"},"content":"        return taskType;","lastModifiedDate":"2022-02-03"},{"lineNumber":450,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":451,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":452,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":453,"author":{"gitId":"alanlowzies"},"content":"     * Removes the command keyword (deadline, event, or todo), in particular the first","lastModifiedDate":"2022-02-22"},{"lineNumber":454,"author":{"gitId":"alanlowzies"},"content":"     * word of the specified text, and returns the remaining text.","lastModifiedDate":"2022-02-22"},{"lineNumber":455,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":456,"author":{"gitId":"alanlowzies"},"content":"     * @param text The string with the command to be removed.","lastModifiedDate":"2022-02-22"},{"lineNumber":457,"author":{"gitId":"alanlowzies"},"content":"     * @return The string with the command removed.","lastModifiedDate":"2022-02-22"},{"lineNumber":458,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":459,"author":{"gitId":"alanlowzies"},"content":"    private String removeCommandKeyword(String text) {","lastModifiedDate":"2022-02-03"},{"lineNumber":460,"author":{"gitId":"alanlowzies"},"content":"        String description \u003d text.split(\" \", 2)[1];","lastModifiedDate":"2022-02-03"},{"lineNumber":461,"author":{"gitId":"alanlowzies"},"content":"        return description;","lastModifiedDate":"2022-02-03"},{"lineNumber":462,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":463,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":464,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":465,"author":{"gitId":"alanlowzies"},"content":"     * Extracts the task description and date from the specified text and returns them","lastModifiedDate":"2022-02-22"},{"lineNumber":466,"author":{"gitId":"alanlowzies"},"content":"     * in the form of an array. This method should only be used with event/deadline commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":467,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":468,"author":{"gitId":"alanlowzies"},"content":"     * @param text The string with the description and date to be extracted","lastModifiedDate":"2022-02-22"},{"lineNumber":469,"author":{"gitId":"alanlowzies"},"content":"     * @param flagKeyword The flag that will be used to separate the description and date.","lastModifiedDate":"2022-02-22"},{"lineNumber":470,"author":{"gitId":"alanlowzies"},"content":"     * @return A string array containing the extracted description and date.","lastModifiedDate":"2022-02-22"},{"lineNumber":471,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":472,"author":{"gitId":"alanlowzies"},"content":"    private String[] extractDescriptionAndDate(String text, String flagKeyword) {","lastModifiedDate":"2022-02-09"},{"lineNumber":473,"author":{"gitId":"alanlowzies"},"content":"        String taskDescriptionAndDateString \u003d removeCommandKeyword(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":474,"author":{"gitId":"alanlowzies"},"content":"        String[] taskDescriptionAndDate \u003d new String[EVENT_DEADLINE_TASK_NUMBER_OF_PARAMETERS];","lastModifiedDate":"2022-02-03"},{"lineNumber":475,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":476,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c taskDescriptionAndDate.length; i +\u003d 1) {","lastModifiedDate":"2022-02-03"},{"lineNumber":477,"author":{"gitId":"alanlowzies"},"content":"            taskDescriptionAndDate[i] \u003d taskDescriptionAndDateString.split(flagKeyword)[i].trim();","lastModifiedDate":"2022-02-09"},{"lineNumber":478,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":479,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":480,"author":{"gitId":"alanlowzies"},"content":"        return taskDescriptionAndDate;","lastModifiedDate":"2022-02-03"},{"lineNumber":481,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":482,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":483,"author":{"gitId":"alanlowzies"},"content":"    private LocalDateTime getDateTimeObject(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2022-02-22"},{"lineNumber":484,"author":{"gitId":"alanlowzies"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(SoraUI.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-02-22"},{"lineNumber":485,"author":{"gitId":"alanlowzies"},"content":"        LocalDateTime dateTimeObject \u003d null;","lastModifiedDate":"2022-02-22"},{"lineNumber":486,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":487,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-02-22"},{"lineNumber":488,"author":{"gitId":"alanlowzies"},"content":"            dateTimeObject \u003d LocalDateTime.parse(dateTimeString, dateTimeFormatter);","lastModifiedDate":"2022-02-22"},{"lineNumber":489,"author":{"gitId":"alanlowzies"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-22"},{"lineNumber":490,"author":{"gitId":"alanlowzies"},"content":"            // Re-throw it to calling method to handle","lastModifiedDate":"2022-02-22"},{"lineNumber":491,"author":{"gitId":"alanlowzies"},"content":"            throw e;","lastModifiedDate":"2022-02-22"},{"lineNumber":492,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":493,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":494,"author":{"gitId":"alanlowzies"},"content":"        return dateTimeObject;","lastModifiedDate":"2022-02-22"},{"lineNumber":495,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":496,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":497,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":498,"author":{"gitId":"alanlowzies"},"content":"     * Marks a task as either done or not done.","lastModifiedDate":"2022-02-22"},{"lineNumber":499,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":500,"author":{"gitId":"alanlowzies"},"content":"     * @param taskNum The task number that represents the task that will be updated.","lastModifiedDate":"2022-02-22"},{"lineNumber":501,"author":{"gitId":"alanlowzies"},"content":"     * @param status true to mark the task as done; false to mark the task as not done.","lastModifiedDate":"2022-02-22"},{"lineNumber":502,"author":{"gitId":"alanlowzies"},"content":"     * @return true to indicate that the update process is successful.","lastModifiedDate":"2022-02-22"},{"lineNumber":503,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":504,"author":{"gitId":"alanlowzies"},"content":"    public boolean updateDoneStatus(int taskNum, boolean status) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-02-15"},{"lineNumber":505,"author":{"gitId":"alanlowzies"},"content":"        // Check if task number is within the range of the list","lastModifiedDate":"2022-02-15"},{"lineNumber":506,"author":{"gitId":"alanlowzies"},"content":"        boolean taskNumWithinRange \u003d checkTaskNumberWithinRange(taskNum);","lastModifiedDate":"2022-02-15"},{"lineNumber":507,"author":{"gitId":"alanlowzies"},"content":"        if (!taskNumWithinRange) {","lastModifiedDate":"2022-02-15"},{"lineNumber":508,"author":{"gitId":"alanlowzies"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Task number is out of permitted range of list.\");","lastModifiedDate":"2022-02-15"},{"lineNumber":509,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":510,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":511,"author":{"gitId":"alanlowzies"},"content":"        // Calculate index number of task in the ArrayList","lastModifiedDate":"2022-02-08"},{"lineNumber":512,"author":{"gitId":"alanlowzies"},"content":"        int indexNum \u003d taskNum - 1;","lastModifiedDate":"2022-02-08"},{"lineNumber":513,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":514,"author":{"gitId":"alanlowzies"},"content":"        // Update the task status","lastModifiedDate":"2022-02-08"},{"lineNumber":515,"author":{"gitId":"alanlowzies"},"content":"        getList().get(indexNum).setDone(status);","lastModifiedDate":"2022-02-08"},{"lineNumber":516,"author":{"gitId":"alanlowzies"},"content":"        return true;","lastModifiedDate":"2022-02-08"},{"lineNumber":517,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":518,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":519,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":520,"author":{"gitId":"alanlowzies"},"content":"     * Deletes a task from Sora\u0027s list.","lastModifiedDate":"2022-02-22"},{"lineNumber":521,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":522,"author":{"gitId":"alanlowzies"},"content":"     * @param taskNum The task number that represents the task that will be deleted.","lastModifiedDate":"2022-02-22"},{"lineNumber":523,"author":{"gitId":"alanlowzies"},"content":"     * @return The Task instance that has been removed from the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":524,"author":{"gitId":"alanlowzies"},"content":"     * @throws EmptyListException If the list is empty.","lastModifiedDate":"2022-02-22"},{"lineNumber":525,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":526,"author":{"gitId":"alanlowzies"},"content":"    public Task deleteTask(int taskNum) throws EmptyListException {","lastModifiedDate":"2022-02-21"},{"lineNumber":527,"author":{"gitId":"alanlowzies"},"content":"        if (isEmpty()) {","lastModifiedDate":"2022-02-14"},{"lineNumber":528,"author":{"gitId":"alanlowzies"},"content":"            throw new EmptyListException(EmptyListException.EMPTY_LIST_MSG);","lastModifiedDate":"2022-02-21"},{"lineNumber":529,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":530,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":531,"author":{"gitId":"alanlowzies"},"content":"        // Check if task number is within the range of the list","lastModifiedDate":"2022-02-15"},{"lineNumber":532,"author":{"gitId":"alanlowzies"},"content":"        boolean taskNumWithinRange \u003d checkTaskNumberWithinRange(taskNum);","lastModifiedDate":"2022-02-15"},{"lineNumber":533,"author":{"gitId":"alanlowzies"},"content":"        if (!taskNumWithinRange) {","lastModifiedDate":"2022-02-15"},{"lineNumber":534,"author":{"gitId":"alanlowzies"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Task number is out of permitted range of list.\");","lastModifiedDate":"2022-02-15"},{"lineNumber":535,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":536,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":537,"author":{"gitId":"alanlowzies"},"content":"        // Calculate index number of task in the ArrayList","lastModifiedDate":"2022-02-14"},{"lineNumber":538,"author":{"gitId":"alanlowzies"},"content":"        int indexNum \u003d taskNum - 1;","lastModifiedDate":"2022-02-14"},{"lineNumber":539,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":540,"author":{"gitId":"alanlowzies"},"content":"        // Remove the task from the list","lastModifiedDate":"2022-02-14"},{"lineNumber":541,"author":{"gitId":"alanlowzies"},"content":"        Task taskRemoved \u003d getList().remove(indexNum);","lastModifiedDate":"2022-02-14"},{"lineNumber":542,"author":{"gitId":"alanlowzies"},"content":"        decrementNumberOfTasks();","lastModifiedDate":"2022-02-22"},{"lineNumber":543,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":544,"author":{"gitId":"alanlowzies"},"content":"        return taskRemoved;","lastModifiedDate":"2022-02-14"},{"lineNumber":545,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":546,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":547,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":548,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the specified task number is within the quantity range of the current number of tasks","lastModifiedDate":"2022-02-22"},{"lineNumber":549,"author":{"gitId":"alanlowzies"},"content":"     * in the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":550,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":551,"author":{"gitId":"alanlowzies"},"content":"     * @param taskNum The task number that will be used to reference a potential task on the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":552,"author":{"gitId":"alanlowzies"},"content":"     * @return true if the task number is referencing a valid task item. Otherwise, false is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":553,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":554,"author":{"gitId":"alanlowzies"},"content":"    public boolean checkTaskNumberWithinRange(int taskNum) {","lastModifiedDate":"2022-02-15"},{"lineNumber":555,"author":{"gitId":"alanlowzies"},"content":"        if (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d getNumberOfTasks()) {","lastModifiedDate":"2022-02-15"},{"lineNumber":556,"author":{"gitId":"alanlowzies"},"content":"            return true;","lastModifiedDate":"2022-02-15"},{"lineNumber":557,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":558,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":559,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":560,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":561,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":562,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":563,"author":{"gitId":"alanlowzies"},"content":"     * Displays to the user a Task instance that is represented by a specified task number.","lastModifiedDate":"2022-02-22"},{"lineNumber":564,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":565,"author":{"gitId":"alanlowzies"},"content":"     * @param taskNum The task number that will be displayed to the user.","lastModifiedDate":"2022-02-22"},{"lineNumber":566,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":567,"author":{"gitId":"alanlowzies"},"content":"    public void displayTask(int taskNum) {","lastModifiedDate":"2022-02-02"},{"lineNumber":568,"author":{"gitId":"alanlowzies"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2022-02-02"},{"lineNumber":569,"author":{"gitId":"alanlowzies"},"content":"        Task taskToDisplay \u003d getList().get(taskIndex);","lastModifiedDate":"2022-02-02"},{"lineNumber":570,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(\"\\t\" + taskToDisplay.toString());","lastModifiedDate":"2022-02-03"},{"lineNumber":571,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":572,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":573,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":574,"author":{"gitId":"alanlowzies"},"content":"     * Displays a representation of the specified Task instance to the user.","lastModifiedDate":"2022-02-22"},{"lineNumber":575,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":576,"author":{"gitId":"alanlowzies"},"content":"     * @param taskObject The Task instance that will be displayed to the user.","lastModifiedDate":"2022-02-22"},{"lineNumber":577,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":578,"author":{"gitId":"alanlowzies"},"content":"    public void displayTask(Task taskObject) {","lastModifiedDate":"2022-02-14"},{"lineNumber":579,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(\"\\t\" + taskObject.toString());","lastModifiedDate":"2022-02-14"},{"lineNumber":580,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":581,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":582,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":583,"author":{"gitId":"alanlowzies"},"content":"     * Displays all the tasks that can be found in the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":584,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":585,"author":{"gitId":"alanlowzies"},"content":"    public void displayAllTasks() {","lastModifiedDate":"2022-02-02"},{"lineNumber":586,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c getList().size(); i +\u003d 1) {","lastModifiedDate":"2022-02-02"},{"lineNumber":587,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + getList().get(i).toString());","lastModifiedDate":"2022-02-02"},{"lineNumber":588,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":589,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":590,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":591,"author":{"gitId":"alanlowzies"},"content":"    public ArrayList\u003cString\u003e searchTasks(String searchPhrase) throws EmptyListException {","lastModifiedDate":"2022-02-22"},{"lineNumber":592,"author":{"gitId":"alanlowzies"},"content":"        if (isEmpty()) {","lastModifiedDate":"2022-02-22"},{"lineNumber":593,"author":{"gitId":"alanlowzies"},"content":"            throw new EmptyListException(EmptyListException.EMPTY_LIST_MSG);","lastModifiedDate":"2022-02-22"},{"lineNumber":594,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":595,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":596,"author":{"gitId":"alanlowzies"},"content":"        ArrayList\u003cString\u003e searchResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-22"},{"lineNumber":597,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":598,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c getList().size(); i +\u003d 1) {","lastModifiedDate":"2022-02-22"},{"lineNumber":599,"author":{"gitId":"alanlowzies"},"content":"            int taskNum \u003d i + 1;","lastModifiedDate":"2022-02-22"},{"lineNumber":600,"author":{"gitId":"alanlowzies"},"content":"            String taskAsShownToUser \u003d taskNum + \".\" + getList().get(i).toString();","lastModifiedDate":"2022-02-22"},{"lineNumber":601,"author":{"gitId":"alanlowzies"},"content":"            if (taskAsShownToUser.contains(searchPhrase)) {","lastModifiedDate":"2022-02-22"},{"lineNumber":602,"author":{"gitId":"alanlowzies"},"content":"                searchResult.add(taskAsShownToUser);","lastModifiedDate":"2022-02-22"},{"lineNumber":603,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":604,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":605,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":606,"author":{"gitId":"alanlowzies"},"content":"        return searchResult;","lastModifiedDate":"2022-02-22"},{"lineNumber":607,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":608,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"alanlowzies":608}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package tasks;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * Represents a Task of type Todo. Unlike Deadline and Event tasks, Todo tasks only contains","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" * a description of the task (no date and time is stored).","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    private static final String TODO_CHECKBOX \u003d \"[T]\";","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"        super(description);","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"     * Returns a string representation of the Todo instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"     * @return A string representation of the Todo instance.","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"        String checkbox \u003d getCheckbox();","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        return String.format(\"%s%s %s\", TODO_CHECKBOX, checkbox, getDescription());","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"alanlowzies":28}},{"path":"src/main/java/util/Helper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package util;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import java.util.Calendar;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import java.util.TimeZone;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":" * A static class that contains helper methods that cannot be properly categorised.","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"public class Helper {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"     * Returns the hour of the day in 24-hour format. Uses the GMT+8 timezone.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"     * @return The hour of the day in 24-hour format.","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public static int getHourOfDay() {","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"        Calendar cal \u003d Calendar.getInstance(TimeZone.getTimeZone(\"GMT+8\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"        return cal.get(Calendar.HOUR_OF_DAY);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the specified string of text contains more than one of the specified keyword.","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"     * @param stringText The string of text to be searched.","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"     * @param keyword The keyword that will be searched for in stringText.","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"     * @return true if more than one occurrence of keyword is found in stringText. Otherwise,","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"     * false is returned.","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    public static boolean checkMultipleOccurrences(String stringText, String keyword) {","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"        int lastIndexOfString \u003d stringText.length() - 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"        int currentCursorIndex \u003d 0;","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"        int occurrencesFound \u003d 0;","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"        while (currentCursorIndex \u003c\u003d lastIndexOfString) {","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"            int indexOfNextOccurrence \u003d stringText.indexOf(keyword, currentCursorIndex);","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"            if (indexOfNextOccurrence !\u003d -1) {","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"                String substring \u003d stringText.substring(indexOfNextOccurrence, indexOfNextOccurrence + keyword.length());","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"                if (substring.equals(keyword)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"                    // Occurrence of keyword found","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"                    occurrencesFound +\u003d 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"            } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"            if (occurrencesFound \u003e 1) {","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"                // More than one occurrence of the keyword found","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"                return true;","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"            currentCursorIndex \u003d indexOfNextOccurrence + keyword.length();","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"alanlowzies":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"read book","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"todo read book","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"deadline return book /by 27/2/2022 2100","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"deadline return book /by 27/02/2022 2100","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"mark 1","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"event project meeting /at 19/9/2022 1400","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"event project meeting /at 19/09/2022 1400","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"mark 3","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"mark 2","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"unmark 2","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"unmark 1","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"bloop bloop","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"todo","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"event","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"event test","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"event test /at","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"event test /at","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"event test /at now","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"event test /at now /at","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"event test /at now /by","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"event test /at /by now","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"event test /at/at/at now","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"event test /at/at/at/by/at now","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"deadline","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"deadline test","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"deadline test /by","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"deadline test /by","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"deadline test / by","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"deadline test /by now","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"deadline test /by now /by","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"deadline test /by now /at","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"deadline test /at now","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"deadline test /by /at now","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"deadline test /by/by/by now","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"deadline test /by/by/by/at/by now","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"todo test|test","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"deadline project submission /by 12/04/2022 2359","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"event trip to Japan /at 10/10/2019 0800","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"find","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"find pancakes","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"find read","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"find project","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"find return book","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"find 10 Oct","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"find E","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"mark huh","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"delete 3","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"list","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"bye","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"alanlowzies":61}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"javac  -cp ..\\src\\main\\java -encoding UTF-8 -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\sora\\*.java ..\\src\\main\\java\\tasks\\*.java ..\\src\\main\\java\\util\\*.java","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alanlowzies":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"java -classpath ../bin Sora \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alanlowzies":1,"-":37}}]
