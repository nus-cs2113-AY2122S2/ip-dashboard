[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"    protected String by;","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"                by + \")\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Nnythingy":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"import java.io.File;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    public static void userInterface() throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"        ArrayList\u003cTask\u003e userLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"        //Task[] userLists \u003d new Task[]{};","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"        String userInput \u003d input.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"        //main handler for receiving input","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"            String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"            try {","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"                Tokenise userInputTokens \u003d new Tokenise(userInput);","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"                //change user input into an array of tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"                switch (userInputTokens.getTokens()[0]) {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"                case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"                    String allTasks \u003d \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"                            listTask(userLists);","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"                    allTasks \u003d wrapMessage(allTasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Nnythingy"},"content":"                    System.out.println(allTasks);","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"Nnythingy"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"Nnythingy"},"content":"                    Todo newTodo \u003d new Todo(userInputTokens.getDescription());","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"Nnythingy"},"content":"                    addTask(newTodo, userLists);","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Nnythingy"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Nnythingy"},"content":"                    Deadline newDeadline \u003d new Deadline(","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"Nnythingy"},"content":"                            userInputTokens.getDescription(),","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"Nnythingy"},"content":"                            userInputTokens.getTime());","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"Nnythingy"},"content":"                    addTask(newDeadline, userLists);","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"Nnythingy"},"content":"                case \"event\":","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"Nnythingy"},"content":"                    //find index in user input tokens which contains the time separator","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"Nnythingy"},"content":"                    Event newEvent \u003d new Event(","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"Nnythingy"},"content":"                            userInputTokens.getDescription(),","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"Nnythingy"},"content":"                            userInputTokens.getTime());","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"Nnythingy"},"content":"                    addTask(newEvent, userLists);","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Nnythingy"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"Nnythingy"},"content":"                    int markIndex \u003d userInputTokens.getMarkIndex();","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"Nnythingy"},"content":"                    if (markIndex \u003e userLists.size()) {","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"Nnythingy"},"content":"                        throw new DukeExceptionMarkBounds();","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"Nnythingy"},"content":"                    }","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"Nnythingy"},"content":"                    userLists.get(markIndex).setMark();","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"Nnythingy"},"content":"                    System.out.println(","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Nnythingy"},"content":"                            wrapMessage(\"Nice! I\u0027ve marked this task as done:\\n \" +","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"Nnythingy"},"content":"                                    userLists.get(userInputTokens.getMarkIndex()).toString()","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"Nnythingy"},"content":"                            ));","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"Nnythingy"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"Nnythingy"},"content":"                    markIndex \u003d userInputTokens.getMarkIndex();","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"Nnythingy"},"content":"                    if (markIndex \u003e userLists.size()) {","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"Nnythingy"},"content":"                        throw new DukeExceptionMarkBounds();","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"Nnythingy"},"content":"                    }","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"Nnythingy"},"content":"                    userLists.get(userInputTokens.getMarkIndex()).unMark();","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"Nnythingy"},"content":"                    System.out.println(","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"Nnythingy"},"content":"                            wrapMessage(\"OK, I\u0027ve marked this task as not done yet:\\n \" +","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"Nnythingy"},"content":"                                    userLists.get(userInputTokens.getMarkIndex()).toString()","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"Nnythingy"},"content":"                            ));","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"Nnythingy"},"content":"                case \"delete\":","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"Nnythingy"},"content":"                    int deleteIndex \u003d userInputTokens.getMarkIndex();","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"Nnythingy"},"content":"                    deleteTask(userLists, deleteIndex);","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"Nnythingy"},"content":"                    break;","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"Nnythingy"},"content":"                default:","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"Nnythingy"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionCommand e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"Nnythingy"},"content":"                System.out.println(wrapMessage(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionDescription e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"Nnythingy"},"content":"                System.out.printf(wrapMessage(\"OOPS!!! The description of a %s cannot be empty!\\n\"),","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"Nnythingy"},"content":"                        tokens[0]);","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionTiming e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"Nnythingy"},"content":"                System.out.printf(wrapMessage(\"OOPS!!! The time of this %s cannot be empty!\\n\"),","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"Nnythingy"},"content":"                        tokens[0]);","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionList e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"Nnythingy"},"content":"                System.out.println(wrapMessage(\"OOPS!!! List should not have any other text after!\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionMark e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"Nnythingy"},"content":"                System.out.printf(wrapMessage(\"%s needs a number as an input\\n\"), tokens[0]);","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"Nnythingy"},"content":"            } catch (DukeExceptionMarkBounds e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"Nnythingy"},"content":"                System.out.println(wrapMessage(\"Number provided is not in the list\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"Nnythingy"},"content":"            userInput \u003d input.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"Nnythingy"},"content":"     * add a new task to the existing","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"Nnythingy"},"content":"     * array of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"Nnythingy"},"content":"     * @param task","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"Nnythingy"},"content":"     * @param userLists","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"Nnythingy"},"content":"    public static void addTask (Task task, ArrayList\u003cTask\u003e userLists) {","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"Nnythingy"},"content":"        userLists.add(task);","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"Nnythingy"},"content":"        String userInput \u003d wrapMessage(","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"Nnythingy"},"content":"                String.format(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"Nnythingy"},"content":"                                \"  %s\" +","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"Nnythingy"},"content":"                                \" Now you have %d tasks in the list\\n\",","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"Nnythingy"},"content":"                        task.toString(), userLists.size()));","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"Nnythingy"},"content":"        System.out.println(userInput);","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"Nnythingy"},"content":"        saveList(userLists);","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":110,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"Nnythingy"},"content":"     * Deletes a task from the list of tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"Nnythingy"},"content":"     * @param userLists","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"Nnythingy"},"content":"     * @param index","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"Nnythingy"},"content":"    public static void deleteTask (ArrayList\u003cTask\u003e userLists, int index) throws","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"Nnythingy"},"content":"            DukeExceptionMarkBounds {","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"Nnythingy"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"Nnythingy"},"content":"            Task removedTask \u003d userLists.remove(index);","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"Nnythingy"},"content":"            String userInput \u003d wrapMessage(","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"Nnythingy"},"content":"                    String.format(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"Nnythingy"},"content":"                                    \"  %s\" +","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"Nnythingy"},"content":"                                    \" Now you have %d tasks in the list\\n\",","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"Nnythingy"},"content":"                            removedTask, userLists.size()));","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"Nnythingy"},"content":"            System.out.println(userInput);","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"Nnythingy"},"content":"            saveList(userLists);","lastModifiedDate":"2022-02-16"},{"lineNumber":127,"author":{"gitId":"Nnythingy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"Nnythingy"},"content":"            throw new DukeExceptionMarkBounds();","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"Nnythingy"},"content":"     * Saves the list of Tasks to hard drive","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"Nnythingy"},"content":"     * Will be called whenever a task is added or deleted","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"Nnythingy"},"content":"    public static void saveList(ArrayList\u003cTask\u003e userLists) {","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"Nnythingy"},"content":"        String pathName \u003d \"./data/duke.txt\";","lastModifiedDate":"2022-02-16"},{"lineNumber":138,"author":{"gitId":"Nnythingy"},"content":"        File file \u003d new File(pathName);","lastModifiedDate":"2022-02-16"},{"lineNumber":139,"author":{"gitId":"Nnythingy"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"Nnythingy"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2022-02-16"},{"lineNumber":141,"author":{"gitId":"Nnythingy"},"content":"                //file has already been created","lastModifiedDate":"2022-02-16"},{"lineNumber":142,"author":{"gitId":"Nnythingy"},"content":"                writeToFile(pathName, userLists);","lastModifiedDate":"2022-02-16"},{"lineNumber":143,"author":{"gitId":"Nnythingy"},"content":"            } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":144,"author":{"gitId":"Nnythingy"},"content":"                //new file created","lastModifiedDate":"2022-02-16"},{"lineNumber":145,"author":{"gitId":"Nnythingy"},"content":"                writeToFile(pathName, userLists);","lastModifiedDate":"2022-02-16"},{"lineNumber":146,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":147,"author":{"gitId":"Nnythingy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":148,"author":{"gitId":"Nnythingy"},"content":"            File directory \u003d new File(\"./data/\");","lastModifiedDate":"2022-02-17"},{"lineNumber":149,"author":{"gitId":"Nnythingy"},"content":"            boolean isDirCreated \u003d directory.mkdir();","lastModifiedDate":"2022-02-17"},{"lineNumber":150,"author":{"gitId":"Nnythingy"},"content":"            if (isDirCreated) {","lastModifiedDate":"2022-02-17"},{"lineNumber":151,"author":{"gitId":"Nnythingy"},"content":"                saveList(userLists);","lastModifiedDate":"2022-02-16"},{"lineNumber":152,"author":{"gitId":"Nnythingy"},"content":"            } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":153,"author":{"gitId":"Nnythingy"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":154,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":155,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":156,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":157,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":158,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":159,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":160,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":161,"author":{"gitId":"Nnythingy"},"content":"    public static void writeToFile(String pathName, ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"Nnythingy"},"content":"        FileWriter fileWriter \u003d new FileWriter(pathName);","lastModifiedDate":"2022-02-16"},{"lineNumber":163,"author":{"gitId":"Nnythingy"},"content":"        fileWriter.write(listTask(list));","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"Nnythingy"},"content":"        fileWriter.close();","lastModifiedDate":"2022-02-16"},{"lineNumber":165,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":166,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":167,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":168,"author":{"gitId":"Nnythingy"},"content":"     * Change tasks into a printable list","lastModifiedDate":"2022-01-28"},{"lineNumber":169,"author":{"gitId":"Nnythingy"},"content":"     * of current tasks the user have","lastModifiedDate":"2022-01-28"},{"lineNumber":170,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":171,"author":{"gitId":"Nnythingy"},"content":"     * @param tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":172,"author":{"gitId":"Nnythingy"},"content":"     * @return String of all the tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":173,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":174,"author":{"gitId":"Nnythingy"},"content":"    public static String listTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-15"},{"lineNumber":175,"author":{"gitId":"Nnythingy"},"content":"        String allTasks \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"Nnythingy"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-02-15"},{"lineNumber":177,"author":{"gitId":"Nnythingy"},"content":"            allTasks \u003d allTasks + \" \" + i + \".\" + tasks.get(i - 1).toString();","lastModifiedDate":"2022-02-15"},{"lineNumber":178,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"Nnythingy"},"content":"        return allTasks;","lastModifiedDate":"2022-02-16"},{"lineNumber":180,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"Nnythingy"},"content":"    public static String wrapMessage(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"Nnythingy"},"content":"        String divider \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-02-07"},{"lineNumber":184,"author":{"gitId":"Nnythingy"},"content":"        message \u003d String.format(\"%s %s%s\", divider, message, divider);","lastModifiedDate":"2022-02-07"},{"lineNumber":185,"author":{"gitId":"Nnythingy"},"content":"        return message;","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"Nnythingy"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"Nnythingy"},"content":"        String welcome\u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":190,"author":{"gitId":"Nnythingy"},"content":"                \" Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"Nnythingy"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":192,"author":{"gitId":"Nnythingy"},"content":"                \"____________________________________________________________\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":193,"author":{"gitId":"Nnythingy"},"content":"        System.out.println(welcome);","lastModifiedDate":"2022-01-19"},{"lineNumber":194,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":196,"author":{"gitId":"Nnythingy"},"content":"    public static void byeMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"Nnythingy"},"content":"        String goodBye \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":198,"author":{"gitId":"Nnythingy"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":199,"author":{"gitId":"Nnythingy"},"content":"                \"____________________________________________________________\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":200,"author":{"gitId":"Nnythingy"},"content":"        System.out.println(goodBye);","lastModifiedDate":"2022-01-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":202,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":203,"author":{"gitId":"Nnythingy"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":204,"author":{"gitId":"Nnythingy"},"content":"        welcomeMessage();","lastModifiedDate":"2022-02-07"},{"lineNumber":205,"author":{"gitId":"Nnythingy"},"content":"        userInterface();","lastModifiedDate":"2022-02-07"},{"lineNumber":206,"author":{"gitId":"Nnythingy"},"content":"        byeMessage();","lastModifiedDate":"2022-02-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Nnythingy":204,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionList extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionTiming extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionDescription extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionCommand extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionMark extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"class DukeExceptionMarkBounds extends DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"Nnythingy":21}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"    protected String at;","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"    public Event (String taskName, String at) {","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"        super(taskName);","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"                at + \")\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Nnythingy":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"public class Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"    private Boolean isMarked \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"    private String taskName;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    public void setMark() {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"        isMarked \u003d true;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"    public void unMark() {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"        isMarked \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskName;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"        if (isMarked) {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"            return \"X\";","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"            return \" \";","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Nnythingy":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"        super(taskName);","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"        return \"[T]\" + super.toString() + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Nnythingy":10}},{"path":"src/main/java/Tokenise.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":" * Tokenise is to help split user input","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":" * into individual strings for sanitisation","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":" * and other checks","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"public class Tokenise {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"    private String[] tokens \u003d new String[]{};","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"    private int markIndex;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"    private String description;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"    private String time;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Nnythingy"},"content":"    public Tokenise(String userInput) throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"Nnythingy"},"content":"        tokens \u003d userInput.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Nnythingy"},"content":"        switch (tokens[0]) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"        case \"list\":","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length !\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionList();","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"Nnythingy"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionDescription();","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"Nnythingy"},"content":"            int deadlineBy \u003d findIndex(tokens, \"/by\");","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"Nnythingy"},"content":"            if (deadlineBy \u003e 0) {","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"Nnythingy"},"content":"                //remove keyword deadline and deadline time from raw user input","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"Nnythingy"},"content":"                this.description \u003d combineToken(tokens, 1, deadlineBy);","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"Nnythingy"},"content":"                this.time \u003d combineToken(tokens, deadlineBy + 1);","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"Nnythingy"},"content":"            } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionTiming();","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"Nnythingy"},"content":"        case \"event\":","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionDescription();","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"Nnythingy"},"content":"            int eventAt \u003d findIndex(tokens, \"/at\");","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"Nnythingy"},"content":"            if (eventAt \u003e 0) {","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"Nnythingy"},"content":"                //remove keyword deadline and deadline time from raw user input","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"Nnythingy"},"content":"                this.description \u003d combineToken(tokens, 1, eventAt);","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"Nnythingy"},"content":"                this.time \u003d combineToken(tokens, eventAt + 1);","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"Nnythingy"},"content":"            } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionTiming();","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"Nnythingy"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionDescription();","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"Nnythingy"},"content":"            this.description \u003d combineToken(tokens, 1);","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"Nnythingy"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"Nnythingy"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"Nnythingy"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"Nnythingy"},"content":"            //checking if value after mark or unmark is a number","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"Nnythingy"},"content":"            if (tokens.length !\u003d 2) {","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionMark();","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"Nnythingy"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"Nnythingy"},"content":"                markIndex \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"Nnythingy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"Nnythingy"},"content":"                throw new DukeExceptionMark();","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"Nnythingy"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"Nnythingy"},"content":"        default:","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"Nnythingy"},"content":"            throw new DukeExceptionCommand();","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"Nnythingy"},"content":"    public int getMarkIndex() {","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"Nnythingy"},"content":"        return markIndex;","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"Nnythingy"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"Nnythingy"},"content":"        return description;","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"Nnythingy"},"content":"    public String getTime() {","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"Nnythingy"},"content":"        return time;","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"Nnythingy"},"content":"    public String[] getTokens() {","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"Nnythingy"},"content":"        return tokens;","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"Nnythingy"},"content":"     * Finds the index of word in the string array","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"Nnythingy"},"content":"     * mimicking the use of an array list","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"Nnythingy"},"content":"     * @param tokens string to search of in tokens array","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"Nnythingy"},"content":"     * @param word string to search of in tokens array","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"Nnythingy"},"content":"     * @return index of word in tokens array, or -1 if word is not found","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":94,"author":{"gitId":"Nnythingy"},"content":"    private int findIndex(String[] tokens, String word) {","lastModifiedDate":"2022-02-07"},{"lineNumber":95,"author":{"gitId":"Nnythingy"},"content":"        for (int i \u003d 0; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-02-07"},{"lineNumber":96,"author":{"gitId":"Nnythingy"},"content":"            if (tokens[i].equals(word)) {","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"Nnythingy"},"content":"                return i;","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"Nnythingy"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"Nnythingy"},"content":"        return -1;","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"Nnythingy"},"content":"     * This will combine the Token into a String for the actual Task","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"Nnythingy"},"content":"     * @param tokens User input token","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"Nnythingy"},"content":"     * @param startIndex Where to start copying the tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"Nnythingy"},"content":"     * @return combinedToken String of the combined tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":110,"author":{"gitId":"Nnythingy"},"content":"    private String combineToken(String[] tokens, int startIndex) {","lastModifiedDate":"2022-02-07"},{"lineNumber":111,"author":{"gitId":"Nnythingy"},"content":"        String combinedToken \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"Nnythingy"},"content":"        for (int i \u003d startIndex; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-02-07"},{"lineNumber":113,"author":{"gitId":"Nnythingy"},"content":"            combinedToken \u003d combinedToken + tokens[i] + \" \";","lastModifiedDate":"2022-02-07"},{"lineNumber":114,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":115,"author":{"gitId":"Nnythingy"},"content":"        return combinedToken.trim();","lastModifiedDate":"2022-02-07"},{"lineNumber":116,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"Nnythingy"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"Nnythingy"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":119,"author":{"gitId":"Nnythingy"},"content":"     * This will combine the Token into a String for the actual Task","lastModifiedDate":"2022-02-07"},{"lineNumber":120,"author":{"gitId":"Nnythingy"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":121,"author":{"gitId":"Nnythingy"},"content":"     * @param tokens User input token","lastModifiedDate":"2022-02-07"},{"lineNumber":122,"author":{"gitId":"Nnythingy"},"content":"     * @param startIndex Where to start copying the tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":123,"author":{"gitId":"Nnythingy"},"content":"     * @param endIndex Where to end copying the tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":124,"author":{"gitId":"Nnythingy"},"content":"     * @return combinedToken String of the combined tokens","lastModifiedDate":"2022-02-07"},{"lineNumber":125,"author":{"gitId":"Nnythingy"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":126,"author":{"gitId":"Nnythingy"},"content":"    private String combineToken(String[] tokens, int startIndex, int endIndex) {","lastModifiedDate":"2022-02-07"},{"lineNumber":127,"author":{"gitId":"Nnythingy"},"content":"        String combinedToken \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":128,"author":{"gitId":"Nnythingy"},"content":"        for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"Nnythingy"},"content":"            combinedToken \u003d combinedToken + tokens[i] + \" \";","lastModifiedDate":"2022-02-07"},{"lineNumber":130,"author":{"gitId":"Nnythingy"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":131,"author":{"gitId":"Nnythingy"},"content":"        return combinedToken.trim();","lastModifiedDate":"2022-02-07"},{"lineNumber":132,"author":{"gitId":"Nnythingy"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"Nnythingy"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Nnythingy":133}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nnythingy"},"content":"todo borrow book","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Nnythingy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Nnythingy"},"content":"event meeting /at Monday 2 - 5 pm","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Nnythingy"},"content":"todo join sports club","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"Nnythingy"},"content":"todo read book","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"Nnythingy"},"content":"mark 1","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"Nnythingy"},"content":"mark 2","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"Nnythingy"},"content":"mark 4","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"Nnythingy"},"content":"list","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"delete 3","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"Nnythingy"},"content":"bye","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Nnythingy":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Nnythingy"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nnythingy":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Nnythingy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nnythingy":1,"-":37}}]
