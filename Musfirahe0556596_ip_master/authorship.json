[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"public class Duke {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Storage storage;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"    private static TaskList tasks;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Ui ui;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"     * Where the Duke program is launched. The user interface for user","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"     * interaction, storage manager for saving data and task list for","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"     * managing task operations are initialized here. Program will","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"     * attempt to load the data/duke.txt file upon launch and execute","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"     * all user command.","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void run() {","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"        ui.printGreeting();","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"            storage.loadDukeDataFile(tasks);","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Initializing: Duke file loaded successfully...\");","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Unable to load duke file.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"        ui.executeCommand(tasks);","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"        ui.printExit();","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"        Duke.run();","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Musfirahe0556596":36,"-":1}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.exception.DukeEmptyDescriptionException;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.exception.DukeMissingTimeSeparator;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.exception.DukeTaskOutOfRangeException;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"public class Parser {","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"    public Parser() {","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"     * Performs add operation for tasks with type Todo.","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"     * Also saves the newly added task to storage and","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"     * handles the exception for empty task description.","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void performTodo(TaskList taskManager, String userInput) {","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"            Task newTask \u003d taskManager.addTask(userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"            Storage.saveDataAddToListOperation(taskManager, newTask);","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (DukeEmptyDescriptionException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"OOPS! The description of a todo cannot be empty!\");","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"     * Performs add operation for tasks with type Deadline and Event.","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"     * Also saves the newly added task to storage and","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"     * handles the exception for empty task description, missing time separator","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"     * (e.g. \u0027/at\u0027 for event tasks) and exception for wrong datetime format supplied.","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param stringSeparator such as \u0027/at\u0027 or \u0027/by\u0027 to identify different type of tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskType holds the task child classes, for instance, deadline.","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void performTaskWithTimeConstraints(TaskList taskManager, String userInput, String stringSeparator, String taskType) {","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"            Task newTask \u003d taskManager.addTaskWithTime(userInput, stringSeparator);","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"            Storage.saveDataAddToListOperation(taskManager, newTask);","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (DukeEmptyDescriptionException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"OOPS! The description of a \" + taskType + \" cannot be empty!\");","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (DukeMissingTimeSeparator e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"OOPS! You did not include \u0027\" + stringSeparator + \"\u0027 in your command!\");","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Incorrect date time format supplied. Use \u0027yyyy-mm-dd [01-23]\u0027\\n\" +","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"                    \"Example: event party /at 2021-10-09 05\");","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"     * Performs mark operations for tasks to be marked or unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"     * Also saves the modified mark status of that task to storage and","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"     * handles the exception for empty description, number format","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"     * and task input that is not within the range of the task list.","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param isMarked true if task is to be marked, false if it is to be unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param markType either \u0027mark\u0027 or \u0027unmark\u0027","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void performMarking(TaskList taskManager, String userInput, boolean isMarked, String markType) {","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"            //Gets task number which corresponds to line number in storage save data.","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"            int taskNumberMarked \u003d taskManager.markTask(isMarked, userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"            Storage.saveDataChangeMarkStatusOperation(taskManager, taskNumberMarked, isMarked);","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (DukeEmptyDescriptionException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"OOPS! Please add the list number you want to \" + markType +\"!\");","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"OOPS! Specify a number for the list to \" + markType +\"!\");","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (DukeTaskOutOfRangeException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Task does not exist!\");","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"     * Performs delete operation for tasks to be deleted.","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"     * Also modifies storage to remove the task that was deleted and","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"     * handles the exception for empty description, number format","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"     * and task input that is not within the range of the task list.","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void performDeletion(TaskList taskManager, String userInput) {","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"            int taskNumberToDelete \u003d taskManager.deleteTask(userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"            Storage.saveDataDeleteFromListOperation(taskManager, taskNumberToDelete);","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (DukeEmptyDescriptionException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"OOPS! Please add the list number you want to delete!\");","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"OOPS! Specify a number for the list to delete!\");","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (DukeTaskOutOfRangeException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Task does not exist!\");","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"     * Returns the task description that is extracted from the original full","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"     * user input supplied in the terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"     * Also checks that the task description is not empty.","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return only the task description from original command.","lastModifiedDate":"2022-02-28"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeEmptyDescriptionException If description of task is empty.","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"    public static String validateAndExtractTaskDescription(String userInput) throws DukeEmptyDescriptionException {","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"        String[] arrayOfTaskStrings \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"        if (arrayOfTaskStrings.length \u003c\u003d 1) {","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new DukeEmptyDescriptionException();","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"        String extractTaskDescription \u003d \"\";","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 1; i \u003c arrayOfTaskStrings.length; i++) {","lastModifiedDate":"2022-02-28"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"            extractTaskDescription +\u003d arrayOfTaskStrings[i] + \" \";","lastModifiedDate":"2022-02-28"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"        return extractTaskDescription;","lastModifiedDate":"2022-02-28"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"     * Returns the integer or task number that operations such as","lastModifiedDate":"2022-02-28"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"     * mark, unmark or delete intends to perform on. This method","lastModifiedDate":"2022-02-28"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"     * also checks that the task number to be performed on by","lastModifiedDate":"2022-02-28"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"     * operations is within the range of the task list.","lastModifiedDate":"2022-02-28"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return the task number for operations to perform on.","lastModifiedDate":"2022-02-28"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeTaskOutOfRangeException If the task number supplied is less or more than the current task list.","lastModifiedDate":"2022-02-28"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"    public static int fetchTaskNumber(String userInput) throws DukeTaskOutOfRangeException {","lastModifiedDate":"2022-02-28"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"        int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"        if (!isWithinTaskRange(taskNumber)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new DukeTaskOutOfRangeException();","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"        return taskNumber;","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"     * Returns false if the task number for operations to perform on","lastModifiedDate":"2022-02-28"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"     * is out of range from the current number of tasks in the task list.","lastModifiedDate":"2022-02-28"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"     * Returns true if task is within the range of task list.","lastModifiedDate":"2022-02-28"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskNumber the task number or integer to check.","lastModifiedDate":"2022-02-28"},{"lineNumber":154,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return different boolean value depending on checks.","lastModifiedDate":"2022-02-28"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":156,"author":{"gitId":"Musfirahe0556596"},"content":"    public static boolean isWithinTaskRange(int taskNumber) {","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"        if (taskNumber \u003e Task.getNumberOfTasks() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"Musfirahe0556596"},"content":"            return false;","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"        return true;","lastModifiedDate":"2022-02-28"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":163,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"     * Performs search operation to find a task by searching","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"     * for a keyword and handles the exception for empty description.","lastModifiedDate":"2022-02-28"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":168,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void performFindTask(TaskList taskManager, String userInput) {","lastModifiedDate":"2022-02-28"},{"lineNumber":171,"author":{"gitId":"Musfirahe0556596"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":172,"author":{"gitId":"Musfirahe0556596"},"content":"            taskManager.findTask(userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":173,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (DukeEmptyDescriptionException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":174,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.print(\"OOPS! The keyword to find cannot be empty!\\n\");","lastModifiedDate":"2022-02-28"},{"lineNumber":175,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":176,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":178,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":179,"author":{"gitId":"Musfirahe0556596"},"content":"     * Returns converted deadline date as LocalDateTime data type from String originally.","lastModifiedDate":"2022-02-28"},{"lineNumber":180,"author":{"gitId":"Musfirahe0556596"},"content":"     * The deadline format accepted from the user input is \u0027yyyy-MM-dd kk\u0027.","lastModifiedDate":"2022-02-28"},{"lineNumber":181,"author":{"gitId":"Musfirahe0556596"},"content":"     * The converted format or format to be stored in the save file is as follows:\u0027MMM d yyyy kka\u0027.","lastModifiedDate":"2022-02-28"},{"lineNumber":182,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":183,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param dateTimeToConvert the deadline extracted from user input as String data type.","lastModifiedDate":"2022-02-28"},{"lineNumber":184,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return the converted deadline as LocalDateTime data type.","lastModifiedDate":"2022-02-28"},{"lineNumber":185,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"    public static LocalDateTime parseDateTime(String dateTimeToConvert) {","lastModifiedDate":"2022-02-28"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"        String correctDatePattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s\\\\d{2}\";","lastModifiedDate":"2022-02-28"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"        if(!dateTimeToConvert.trim().matches(correctDatePattern)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":189,"author":{"gitId":"Musfirahe0556596"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy kka\");","lastModifiedDate":"2022-02-28"},{"lineNumber":190,"author":{"gitId":"Musfirahe0556596"},"content":"            dateTimeToConvert \u003d LocalDateTime.parse(dateTimeToConvert.trim(), formatter)","lastModifiedDate":"2022-02-28"},{"lineNumber":191,"author":{"gitId":"Musfirahe0556596"},"content":"                    .toString().replace(\"T\",\" \").replace(\":00\",\"\");","lastModifiedDate":"2022-02-28"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":193,"author":{"gitId":"Musfirahe0556596"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd kk\");","lastModifiedDate":"2022-02-28"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"        LocalDateTime convertToLocalDate \u003d LocalDateTime.parse(dateTimeToConvert.trim(), formatter);","lastModifiedDate":"2022-02-28"},{"lineNumber":195,"author":{"gitId":"Musfirahe0556596"},"content":"        return convertToLocalDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":196,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":197,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Musfirahe0556596":197}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.exception.DukeInvalidFileContentException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.List;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"public class Storage {","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"    protected static final Path FILE_PATH \u003d Path.of(\"data/duke.txt\");","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"    protected static boolean isLoadFile;","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"    public Storage() {","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"     * Checks whether the data directory exists and whether the duke.txt","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"     * file exists. If not, create the directory/file appropriately.","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws IOException If file operation failed.","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void checkFileExists() throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"        Path dataDirectory \u003d FILE_PATH.getParent();","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"        if (!Files.isDirectory(dataDirectory)) {","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"            Files.createDirectories(dataDirectory);","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"        if (Files.notExists(FILE_PATH)) {","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"            Files.createFile(FILE_PATH);","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"     * Loads or populate the data file into the Duke program","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"     * and handles exception such as IOException and","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"     * also invalid format content for the data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws IOException If file operation failed.","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void loadDukeDataFile(TaskList taskManager) throws IOException {","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"        isLoadFile \u003d true;","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"        checkFileExists();","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"            populateDukeFromDataFile(taskManager);","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Unable to populate data...\");","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (DukeInvalidFileContentException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Invalid file content...\");","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"        isLoadFile \u003d false;","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method reads all the contents of the data file line by line.","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"     * and extracts the task type, task mark status and task description.","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"     * It then converts/builds that data file line into an appropriate command to be supplied","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"     * to the terminal and modifies the mark status of the task appropriately.","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws IOException If file operation failed.","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeInvalidFileContentException If data file is of invalid format.","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws NumberFormatException If task number could not be parsed into an integer.","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException For any operations which involves index checking.","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void populateDukeFromDataFile(TaskList taskManager) throws IOException, DukeInvalidFileContentException, NumberFormatException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"        List\u003cString\u003e fileContentLines \u003d Files.readAllLines(FILE_PATH);","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"        for (String lines:fileContentLines) {","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"            String[] arrayOfContentsInALine \u003d lines.split(\"\\\\|\");","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"            if (arrayOfContentsInALine.length \u003c 1) {","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new DukeInvalidFileContentException();","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"            String taskType \u003d arrayOfContentsInALine[0].trim();","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"            int taskMarkStatus \u003d Integer.parseInt(arrayOfContentsInALine[1].trim());","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"            try {","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"                //Converts task in data file format to a task in command line format.","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"                String command \u003d buildTaskCommand(taskType, arrayOfContentsInALine);","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"                switch (taskType) {","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"                case \"T\":","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"                    Parser.performTodo(taskManager, command);","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"                    break;","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"                case \"D\":","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"                    Parser.performTaskWithTimeConstraints(taskManager, command, \"/by \", \"deadline\");","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"                    break;","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"                case \"E\":","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"                    Parser.performTaskWithTimeConstraints(taskManager, command, \"/at \", \"event\");","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"                    break;","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"                default:","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"                    throw new DukeInvalidFileContentException();","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"                }","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"                //Modifies the mark status of each task appropriately","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"                populateDukeTaskMarkStatus(taskManager, taskMarkStatus);","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (DukeInvalidFileContentException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"Invalid file content...\");","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"     * Modifies the mark status of the task appropriately by calling","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"     * the performMarking method.","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskMarkStatus either \u00271\u0027 or \u00270\u0027. \u00271\u0027 indicates the task is marked and \u00270\u0027 is unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void populateDukeTaskMarkStatus(TaskList taskManager, int taskMarkStatus) {","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"        if (taskMarkStatus \u003d\u003d 1) {","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"            String buildMarkCommand \u003d \"mark \" + Task.getNumberOfTasks();","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"            Parser.performMarking(taskManager, buildMarkCommand, true, \"mark\");","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method builds or converts the task in data file format to task","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"     * in command line format that is to be supplied to the terminal of the program.","lastModifiedDate":"2022-02-28"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskType the task type from data file in \u0027T\u0027, \u0027D\u0027 or \u0027E\u0027.","lastModifiedDate":"2022-02-28"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param arrayOfContentsInALine stores task description with its deadline time if any.","lastModifiedDate":"2022-02-28"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return the finalized command line to be supplied to terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException For any operations which involves index checking.","lastModifiedDate":"2022-02-28"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeInvalidFileContentException If data file is of invalid format.","lastModifiedDate":"2022-02-28"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"    public static String buildTaskCommand(String taskType, String[] arrayOfContentsInALine) throws ArrayIndexOutOfBoundsException, DukeInvalidFileContentException {","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"        String finalizedCommand \u003d \"\";","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-16"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"        case \"T\":","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"            String todoDescription \u003d arrayOfContentsInALine[2];","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"            finalizedCommand \u003d \"todo\" + todoDescription;","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"        case \"D\":","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"            String deadlineDescription \u003d arrayOfContentsInALine[2];","lastModifiedDate":"2022-02-16"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"            String deadlineTime \u003d arrayOfContentsInALine[3];","lastModifiedDate":"2022-02-16"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"            finalizedCommand \u003d \"deadline\" + deadlineDescription + \"/by\" + deadlineTime;","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"        case \"E\":","lastModifiedDate":"2022-02-16"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"            String eventDescription \u003d arrayOfContentsInALine[2];","lastModifiedDate":"2022-02-16"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"            String eventTime \u003d arrayOfContentsInALine[3];","lastModifiedDate":"2022-02-16"},{"lineNumber":144,"author":{"gitId":"Musfirahe0556596"},"content":"            finalizedCommand \u003d \"event\" + eventDescription + \"/at\" + eventTime;","lastModifiedDate":"2022-02-16"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"        default:","lastModifiedDate":"2022-02-16"},{"lineNumber":147,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new DukeInvalidFileContentException();","lastModifiedDate":"2022-02-16"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"        return finalizedCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"     * Saves new task added from terminal into the duke data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":154,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method converts the task command line format to the task","lastModifiedDate":"2022-02-28"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"     * data file format so that it could be stored in the duke data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":156,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param newTask the new task to be added to the duke data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws IOException If file operation failed.","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException For any operations which involves index checking.","lastModifiedDate":"2022-02-28"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void appendDukeDataFile(String newTask) throws IOException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"        String contentToAppend \u003d \"\";","lastModifiedDate":"2022-02-16"},{"lineNumber":163,"author":{"gitId":"Musfirahe0556596"},"content":"        String fetchTaskType \u003d newTask.split(\"]\")[0].replaceAll(\"[^a-zA-Z0-9]\", \"\");","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"        String fetchTaskDescription \u003d newTask.split(\"]\")[2].trim();","lastModifiedDate":"2022-02-16"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"        if (fetchTaskDescription.contains(\"(by:\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"            String formattedTaskDescription \u003d fetchTaskDescription.split(\"\\\\(by:\")[0].trim();","lastModifiedDate":"2022-02-16"},{"lineNumber":168,"author":{"gitId":"Musfirahe0556596"},"content":"            String fetchTime \u003d fetchTaskDescription.split(\"\\\\(by:\")[1].replaceAll(\"[^a-zA-Z0-9\\\\s\\\\s]\", \"\");","lastModifiedDate":"2022-02-16"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"            contentToAppend +\u003d (fetchTaskType + \" | 0 | \" + formattedTaskDescription + \" |\" + fetchTime + \"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":171,"author":{"gitId":"Musfirahe0556596"},"content":"        } else if (fetchTaskDescription.contains(\"(at:\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":172,"author":{"gitId":"Musfirahe0556596"},"content":"            String formattedTaskDescription \u003d fetchTaskDescription.split(\"\\\\(at:\")[0].trim();","lastModifiedDate":"2022-02-16"},{"lineNumber":173,"author":{"gitId":"Musfirahe0556596"},"content":"            String fetchTime \u003d fetchTaskDescription.split(\"\\\\(at:\")[1].replaceAll(\"[^a-zA-Z0-9\\\\s\\\\s]\", \"\");","lastModifiedDate":"2022-02-16"},{"lineNumber":174,"author":{"gitId":"Musfirahe0556596"},"content":"            contentToAppend +\u003d (fetchTaskType + \" | 0 | \" + formattedTaskDescription + \" |\" + fetchTime + \"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":175,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":176,"author":{"gitId":"Musfirahe0556596"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"            contentToAppend +\u003d (fetchTaskType + \" | 0 | \" + fetchTaskDescription + \"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":178,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":179,"author":{"gitId":"Musfirahe0556596"},"content":"        Files.write(FILE_PATH, contentToAppend.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2022-02-16"},{"lineNumber":180,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":181,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":182,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":183,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method modifies the mark status in the duke data file","lastModifiedDate":"2022-02-28"},{"lineNumber":184,"author":{"gitId":"Musfirahe0556596"},"content":"     * by following the task number supplied. The task number supplied","lastModifiedDate":"2022-02-28"},{"lineNumber":185,"author":{"gitId":"Musfirahe0556596"},"content":"     * relates to the line number in the duke data file to be modified.","lastModifiedDate":"2022-02-28"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"     * Makes use of the modifyMarkedLine method to aid it.","lastModifiedDate":"2022-02-28"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskNumber the task number or integer to check.","lastModifiedDate":"2022-02-28"},{"lineNumber":189,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param isMarked true if task is to be marked, false if it is to be unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":190,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws IOException If file operation failed.","lastModifiedDate":"2022-02-28"},{"lineNumber":191,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException For any operations which involves index checking.","lastModifiedDate":"2022-02-28"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":193,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void modifyMarkStatusDataFile(int taskNumber, boolean isMarked) throws IOException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-02-16"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"        List\u003cString\u003e fileContentLines \u003d Files.readAllLines(FILE_PATH);","lastModifiedDate":"2022-02-16"},{"lineNumber":195,"author":{"gitId":"Musfirahe0556596"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2022-02-16"},{"lineNumber":196,"author":{"gitId":"Musfirahe0556596"},"content":"        String replacedFileContents \u003d \"\";","lastModifiedDate":"2022-02-16"},{"lineNumber":197,"author":{"gitId":"Musfirahe0556596"},"content":"        for (String lines:fileContentLines) {","lastModifiedDate":"2022-02-16"},{"lineNumber":198,"author":{"gitId":"Musfirahe0556596"},"content":"            if (taskNumber \u003d\u003d lineNumber) {","lastModifiedDate":"2022-02-16"},{"lineNumber":199,"author":{"gitId":"Musfirahe0556596"},"content":"                String newChangedLine \u003d modifyMarkedLine(lines, isMarked);","lastModifiedDate":"2022-02-16"},{"lineNumber":200,"author":{"gitId":"Musfirahe0556596"},"content":"                replacedFileContents +\u003d (newChangedLine + \"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":201,"author":{"gitId":"Musfirahe0556596"},"content":"            } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":202,"author":{"gitId":"Musfirahe0556596"},"content":"                replacedFileContents +\u003d (lines + \"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":203,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":204,"author":{"gitId":"Musfirahe0556596"},"content":"            lineNumber +\u003d 1;","lastModifiedDate":"2022-02-16"},{"lineNumber":205,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":206,"author":{"gitId":"Musfirahe0556596"},"content":"        Files.write(FILE_PATH, replacedFileContents.getBytes());","lastModifiedDate":"2022-02-16"},{"lineNumber":207,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":208,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":209,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":210,"author":{"gitId":"Musfirahe0556596"},"content":"     * This methods changes the mark status of the task by modifying","lastModifiedDate":"2022-02-28"},{"lineNumber":211,"author":{"gitId":"Musfirahe0556596"},"content":"     * its mark status in the data file to either \u00271\u0027 as marked, and","lastModifiedDate":"2022-02-28"},{"lineNumber":212,"author":{"gitId":"Musfirahe0556596"},"content":"     * \u00270\u0027 as unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":213,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":214,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param lineToModify modifies the mark status of the task line.","lastModifiedDate":"2022-02-28"},{"lineNumber":215,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param isMarked true if task is to be marked, false if it is to be unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":216,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return the finalized modified line to be placed into the duke data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":217,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException For any operations which involves index checking.","lastModifiedDate":"2022-02-28"},{"lineNumber":218,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":219,"author":{"gitId":"Musfirahe0556596"},"content":"    public static String modifyMarkedLine(String lineToModify, boolean isMarked) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-02-16"},{"lineNumber":220,"author":{"gitId":"Musfirahe0556596"},"content":"        String finalLine \u003d \"\";","lastModifiedDate":"2022-02-16"},{"lineNumber":221,"author":{"gitId":"Musfirahe0556596"},"content":"        String[] arrayOfLineToBeModified \u003d lineToModify.split(\"\\\\|\");","lastModifiedDate":"2022-02-16"},{"lineNumber":222,"author":{"gitId":"Musfirahe0556596"},"content":"        if (isMarked) {","lastModifiedDate":"2022-02-16"},{"lineNumber":223,"author":{"gitId":"Musfirahe0556596"},"content":"            arrayOfLineToBeModified[1] \u003d \" 1 \";","lastModifiedDate":"2022-02-16"},{"lineNumber":224,"author":{"gitId":"Musfirahe0556596"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":225,"author":{"gitId":"Musfirahe0556596"},"content":"            arrayOfLineToBeModified[1] \u003d \" 0 \";","lastModifiedDate":"2022-02-16"},{"lineNumber":226,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":227,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":228,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c arrayOfLineToBeModified.length; i +\u003d 1) {","lastModifiedDate":"2022-02-16"},{"lineNumber":229,"author":{"gitId":"Musfirahe0556596"},"content":"            if (i \u003d\u003d (arrayOfLineToBeModified.length - 1)) {","lastModifiedDate":"2022-02-16"},{"lineNumber":230,"author":{"gitId":"Musfirahe0556596"},"content":"                finalLine +\u003d (arrayOfLineToBeModified[i]);","lastModifiedDate":"2022-02-16"},{"lineNumber":231,"author":{"gitId":"Musfirahe0556596"},"content":"            } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":232,"author":{"gitId":"Musfirahe0556596"},"content":"                finalLine +\u003d (arrayOfLineToBeModified[i] + \"|\");","lastModifiedDate":"2022-02-16"},{"lineNumber":233,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":234,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":235,"author":{"gitId":"Musfirahe0556596"},"content":"        return finalLine;","lastModifiedDate":"2022-02-16"},{"lineNumber":236,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":237,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":238,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":239,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method removes the line of the task to be deleted","lastModifiedDate":"2022-02-28"},{"lineNumber":240,"author":{"gitId":"Musfirahe0556596"},"content":"     * from the duke data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":241,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":242,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskNumberToDelete the task number (in integer) to delete from task list.","lastModifiedDate":"2022-02-28"},{"lineNumber":243,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws IOException If file operation failed.","lastModifiedDate":"2022-02-28"},{"lineNumber":244,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":245,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void deleteTaskFromDataFile(int taskNumberToDelete) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":246,"author":{"gitId":"Musfirahe0556596"},"content":"        List\u003cString\u003e fileContentLines \u003d Files.readAllLines(FILE_PATH);","lastModifiedDate":"2022-02-16"},{"lineNumber":247,"author":{"gitId":"Musfirahe0556596"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2022-02-16"},{"lineNumber":248,"author":{"gitId":"Musfirahe0556596"},"content":"        String replacedFileContents \u003d \"\";","lastModifiedDate":"2022-02-16"},{"lineNumber":249,"author":{"gitId":"Musfirahe0556596"},"content":"        for (String lines:fileContentLines) {","lastModifiedDate":"2022-02-16"},{"lineNumber":250,"author":{"gitId":"Musfirahe0556596"},"content":"            if (taskNumberToDelete !\u003d lineNumber) {","lastModifiedDate":"2022-02-16"},{"lineNumber":251,"author":{"gitId":"Musfirahe0556596"},"content":"                replacedFileContents +\u003d (lines + \"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":252,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":253,"author":{"gitId":"Musfirahe0556596"},"content":"            lineNumber +\u003d 1;","lastModifiedDate":"2022-02-16"},{"lineNumber":254,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":255,"author":{"gitId":"Musfirahe0556596"},"content":"        Files.write(FILE_PATH, replacedFileContents.getBytes());","lastModifiedDate":"2022-02-16"},{"lineNumber":256,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":257,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":258,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":259,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method checks whether it is initially a load file or not.","lastModifiedDate":"2022-02-28"},{"lineNumber":260,"author":{"gitId":"Musfirahe0556596"},"content":"     * If it is not a load file, the task messages are printed normally","lastModifiedDate":"2022-02-28"},{"lineNumber":261,"author":{"gitId":"Musfirahe0556596"},"content":"     * to terminal and saves the task added into the duke data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":262,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":263,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":264,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param newTask the new task to be added to the duke data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":265,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":266,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void saveDataAddToListOperation(TaskList taskManager, Task newTask) {","lastModifiedDate":"2022-02-28"},{"lineNumber":267,"author":{"gitId":"Musfirahe0556596"},"content":"        if (!isLoadFile) {","lastModifiedDate":"2022-02-16"},{"lineNumber":268,"author":{"gitId":"Musfirahe0556596"},"content":"            taskManager.addTaskPrintMessage(newTask);","lastModifiedDate":"2022-02-16"},{"lineNumber":269,"author":{"gitId":"Musfirahe0556596"},"content":"            try {","lastModifiedDate":"2022-02-16"},{"lineNumber":270,"author":{"gitId":"Musfirahe0556596"},"content":"                appendDukeDataFile(newTask.toString());","lastModifiedDate":"2022-02-16"},{"lineNumber":271,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":272,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"Unable to update duke file.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":273,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":274,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":275,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":276,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":277,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":278,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method checks whether it is initially a load file or not.","lastModifiedDate":"2022-02-28"},{"lineNumber":279,"author":{"gitId":"Musfirahe0556596"},"content":"     * If it is not a load file, the mark task messages are printed normally","lastModifiedDate":"2022-02-28"},{"lineNumber":280,"author":{"gitId":"Musfirahe0556596"},"content":"     * to terminal and modifies the task mark status of the duke data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":281,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":282,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":283,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskNumberMarked the task number to be marked or unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":284,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param isMarked true if task is to be marked, false if it is to be unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":285,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":286,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void saveDataChangeMarkStatusOperation(TaskList taskManager, int taskNumberMarked, boolean isMarked) {","lastModifiedDate":"2022-02-28"},{"lineNumber":287,"author":{"gitId":"Musfirahe0556596"},"content":"        if (!isLoadFile) {","lastModifiedDate":"2022-02-16"},{"lineNumber":288,"author":{"gitId":"Musfirahe0556596"},"content":"            taskManager.markStatusPrintMessage(taskNumberMarked, isMarked);","lastModifiedDate":"2022-02-16"},{"lineNumber":289,"author":{"gitId":"Musfirahe0556596"},"content":"            try {","lastModifiedDate":"2022-02-16"},{"lineNumber":290,"author":{"gitId":"Musfirahe0556596"},"content":"                modifyMarkStatusDataFile(taskNumberMarked, isMarked);","lastModifiedDate":"2022-02-16"},{"lineNumber":291,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":292,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"Unable to update file.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":293,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":294,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":295,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":296,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":297,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":298,"author":{"gitId":"Musfirahe0556596"},"content":"     * For aiding, this method simply performs the deleteTaskFromDataFile function","lastModifiedDate":"2022-02-28"},{"lineNumber":299,"author":{"gitId":"Musfirahe0556596"},"content":"     * and handles the exception in case the task could not be deleted from the file.","lastModifiedDate":"2022-02-28"},{"lineNumber":300,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":301,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":302,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskNumberToDelete the task number to be deleted.","lastModifiedDate":"2022-02-28"},{"lineNumber":303,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":304,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void saveDataDeleteFromListOperation(TaskList taskManager, int taskNumberToDelete) {","lastModifiedDate":"2022-02-28"},{"lineNumber":305,"author":{"gitId":"Musfirahe0556596"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":306,"author":{"gitId":"Musfirahe0556596"},"content":"            deleteTaskFromDataFile(taskNumberToDelete);","lastModifiedDate":"2022-02-16"},{"lineNumber":307,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":308,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Unable to delete from file.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":309,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":310,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":311,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":312,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"Musfirahe0556596":312}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"public class Ui {","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"    protected static final String BORDER_DECORATION \u003d \"_____________________________________________________\";","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"    public Ui() {","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method prints the program greeting message when the","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"     * user first launches the program.","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void printGreeting() {","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"Hello from\\n\" + logo +\"\\n\" + BORDER_DECORATION);","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"Hello! I\u0027m Duke.\\nWhat can I do for you?\\n\" + BORDER_DECORATION);","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method prints the program exit message when the","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"     * user exits the program.","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void printExit() {","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(BORDER_DECORATION);","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(BORDER_DECORATION);","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method continuously (until \u0027bye\u0027 is typed) takes in user input","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"     * from the terminal and detects the command type. After detecting the command type,","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"     * it calls the task methods appropriately.","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskManager the object that manages task operations on tasks.","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void executeCommand(TaskList taskManager) {","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"        String userInput;","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"        while (!userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(BORDER_DECORATION);","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"            String command \u003d userInput.split(\" \")[0];","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"            switch (command) {","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"            case \"list\":","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"                taskManager.printList();","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"                parser.performTodo(taskManager, userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"                parser.performTaskWithTimeConstraints(taskManager, userInput, \"/by \", command);","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"            case \"event\":","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"                parser.performTaskWithTimeConstraints(taskManager, userInput, \"/at \", command);","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"            case \"unmark\":","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"                parser.performMarking(taskManager, userInput, false, command);","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"            case \"mark\":","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"                parser.performMarking(taskManager, userInput, true, command);","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"            case \"delete\":","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"                parser.performDeletion(taskManager, userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"            case \"find\":","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"                parser.performFindTask(taskManager, userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"            default:","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(BORDER_DECORATION);","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Musfirahe0556596":84}},{"path":"src/main/java/duke/exception/DukeEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke.exception;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"public class DukeEmptyDescriptionException extends Exception {","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"Musfirahe0556596":4}},{"path":"src/main/java/duke/exception/DukeInvalidFileContentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke.exception;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"public class DukeInvalidFileContentException extends Exception {","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"Musfirahe0556596":4}},{"path":"src/main/java/duke/exception/DukeMissingTimeSeparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke.exception;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"public class DukeMissingTimeSeparator extends Exception {","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"Musfirahe0556596":4}},{"path":"src/main/java/duke/exception/DukeTaskOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke.exception;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"public class DukeTaskOutOfRangeException extends Exception {","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"Musfirahe0556596":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke.task;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"    protected static final String DEADLINE_SYMBOL \u003d \"D\";","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"        return \"[\"+DEADLINE_SYMBOL+\"]\" + super.toString() +","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"                \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy kka\")) + \")\";","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"Musfirahe0556596":21}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke.task;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"    protected LocalDateTime timing;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"    protected static final String EVENT_SYMBOL \u003d \"E\";","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"    public Event(String description, LocalDateTime timing) {","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"        return \"[\"+EVENT_SYMBOL+\"]\" + super.toString() +","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"                \" (at: \" + timing.format(DateTimeFormatter.ofPattern(\"MMM d yyyy kka\")) + \")\";","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"Musfirahe0556596":21}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke.task;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"public class Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"    protected String taskDescription;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"    protected static final String MARKED_TASK_SYMBOL \u003d \"X\";","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"    protected static final String UNMARKED_TASK_SYMBOL \u003d \" \";","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"    private static int numberOfTasks \u003d 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"        numberOfTasks +\u003d 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"        return taskDescription;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"    public void setTaskDescription(String taskDescription) {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"    public static int getNumberOfTasks() {","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"        return numberOfTasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"            return \"[\"+MARKED_TASK_SYMBOL+\"] \" + taskDescription;","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"            return \"[\"+UNMARKED_TASK_SYMBOL+\"] \" + taskDescription;","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void reduceNumberOfTask() {","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"        numberOfTasks -\u003d 1;","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Musfirahe0556596":49}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke.task;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.Parser;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.exception.DukeEmptyDescriptionException;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.exception.DukeMissingTimeSeparator;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import duke.exception.DukeTaskOutOfRangeException;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"public class TaskList {","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"    private static ArrayList\u003cTask\u003e taskLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method prints all the tasks in the taskLists array.","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void printList() {","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c Task.getNumberOfTasks(); i++) {","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println((i + 1) + \".\"+ taskLists.get(i).toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method add the task without deadline (Todo) into the taskLists array.","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return the new task added into the taskLists array.","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeEmptyDescriptionException If description of task is empty.","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"    public static Task addTask(String userInput) throws DukeEmptyDescriptionException {","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"        String extractedTaskDescription \u003d parser.validateAndExtractTaskDescription(userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"        Task newTask \u003d new Todo(extractedTaskDescription);","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"        taskLists.add(newTask);","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"        return newTask;","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method add the task with deadlines (Event, Deadlines) into the taskLists array.","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"     * Also converts string deadline time to LocalDateTime time.","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param stringSeparator","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return the new task added into the taskLists array.","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeEmptyDescriptionException If description of task is empty.","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeMissingTimeSeparator If time separators (e.g. \u0027/at\u0027) for each task type is missing.","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DateTimeParseException If time could not be parsed properly.","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"    public static Task addTaskWithTime(String userInput, String stringSeparator) throws DukeEmptyDescriptionException, DukeMissingTimeSeparator, DateTimeParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"        String extractedStringsWithoutCommandType \u003d parser.validateAndExtractTaskDescription(userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"        if ((extractedStringsWithoutCommandType.split(stringSeparator).length) \u003c\u003d 1) {","lastModifiedDate":"2022-02-08"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new DukeMissingTimeSeparator();","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"        String extractedTaskDescription \u003d extractedStringsWithoutCommandType.split(stringSeparator)[0];","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"        String extractedTaskDeadlineTime \u003d extractedStringsWithoutCommandType.split(stringSeparator)[1];","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"        LocalDateTime convertToLocalDateTime \u003d parser.parseDateTime(extractedTaskDeadlineTime);","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"        Task newTask;","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"        if (stringSeparator.equals(\"/by \")) {","lastModifiedDate":"2022-02-08"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"            newTask \u003d new Deadline(extractedTaskDescription, convertToLocalDateTime);","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"        } else if (stringSeparator.equals(\"/at \")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"            newTask \u003d new Event(extractedTaskDescription, convertToLocalDateTime);","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new DukeMissingTimeSeparator();","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"        taskLists.add(newTask);","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"        return newTask;","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method changes the mark status of the task to be marked/unmarked in the taskLists array.","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param isMarked true if task is to be marked, false if it is to be unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return the task number to be marked.","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeEmptyDescriptionException If description of task is empty.","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws NumberFormatException If task number could not be parsed into an integer.","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeTaskOutOfRangeException If the task number supplied is less or more than the current task list.","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"    public static int markTask(boolean isMarked, String userInput) throws DukeEmptyDescriptionException, NumberFormatException, DukeTaskOutOfRangeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"        if ((userInput.split(\" \")).length \u003c\u003d 1) {","lastModifiedDate":"2022-02-08"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new DukeEmptyDescriptionException();","lastModifiedDate":"2022-02-08"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"        int taskNumber \u003d parser.fetchTaskNumber(userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"        if (isMarked) {","lastModifiedDate":"2022-02-08"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"            taskLists.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"        } else {","lastModifiedDate":"2022-02-08"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"            taskLists.get(taskNumber - 1).markAsUndone();","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"        return taskNumber;","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method removes the task to be deleted in the taskLists array.","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return the task number to be deleted.","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeEmptyDescriptionException If description of task is empty.","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeTaskOutOfRangeException If the task number supplied is less or more than the current task list.","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"    public static int deleteTask(String userInput) throws DukeEmptyDescriptionException, DukeTaskOutOfRangeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"        if ((userInput.split(\" \")).length \u003c\u003d 1) {","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new DukeEmptyDescriptionException();","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"        int taskNumber \u003d parser.fetchTaskNumber(userInput);","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"Noted. Task removed:\\n\" + taskLists.get(taskNumber - 1).toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"        taskLists.remove(taskNumber - 1);","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"        Task.reduceNumberOfTask();","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"Now you have \" + Task.getNumberOfTasks() + \" tasks in your list!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"        return taskNumber;","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method prints the message of tasks added to the taskLists array.","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param newTask the new task to be added.","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void addTaskPrintMessage(Task newTask) {","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"Task added:\\n\\t\" + newTask.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"Now you have \" + Task.getNumberOfTasks() + \" tasks in your list!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method prints the message of tasks marked/unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param taskNumberMarked the task number to be marked/unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param isMarked true if task is to be marked, false if it is to be unmarked.","lastModifiedDate":"2022-02-28"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void markStatusPrintMessage(int taskNumberMarked, boolean isMarked) {","lastModifiedDate":"2022-02-15"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"        if (isMarked) {","lastModifiedDate":"2022-02-15"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Fantastic! This task is done:\\n\" + taskLists.get(taskNumberMarked - 1).toString());","lastModifiedDate":"2022-02-16"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Uh oh! This task is undone:\\n\" + taskLists.get(taskNumberMarked - 1).toString());","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method finds the task that contains the search keyword supplied","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"     * by the user in the taskLists array.","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput the input entered by user on terminal.","lastModifiedDate":"2022-02-28"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws DukeEmptyDescriptionException If description of task is empty.","lastModifiedDate":"2022-02-28"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"    public static void findTask(String userInput) throws DukeEmptyDescriptionException {","lastModifiedDate":"2022-02-28"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"        String extractedFindKeyword \u003d parser.validateAndExtractTaskDescription(userInput).toLowerCase();","lastModifiedDate":"2022-02-28"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"Here are the matching task(s) in your list:\");","lastModifiedDate":"2022-02-28"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"        int countNumberOfTasks \u003d 0;","lastModifiedDate":"2022-02-28"},{"lineNumber":154,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c Task.getNumberOfTasks(); i++) {","lastModifiedDate":"2022-02-28"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"            if (taskLists.get(i).toString().toLowerCase().contains(extractedFindKeyword)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":156,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println((i + 1) + \".\"+ taskLists.get(i).toString());","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"                countNumberOfTasks +\u003d 1;","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"        if (countNumberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2022-02-28"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"No task(s) found from keyword...:(\");","lastModifiedDate":"2022-02-28"},{"lineNumber":163,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"Musfirahe0556596":165}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package duke.task;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"    protected static final String TODO_SYMBOL \u003d \"T\";","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"        return \"[\"+TODO_SYMBOL+\"]\" + super.toString();","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"Musfirahe0556596":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"todo read book","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"deadline return book /by 2022-06-06 01","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"event project meeting /at 2022-08-06 14","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"list","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"todo join sports club","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"list","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"mark 1","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"list","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"unmark 1","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"list","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"mark 6","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"unmark 6","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"todo","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"deadline","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"event","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"deadline tryout","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"event tryout","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"delete 5","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"delete","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"delete 1","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"mark 3","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"delete 4","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"delete 3","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"list","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"find book","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"find","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"bye","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"Musfirahe0556596":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Musfirahe0556596":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Musfirahe0556596":2,"-":36}}]
