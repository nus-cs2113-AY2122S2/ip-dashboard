[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"# main project template","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wang1351"},"content":"3. After that, locate the `src/main/java/main.java` file, right-click it, and choose `Run main.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"wang1351":2}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"[T][ ] read book","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"wang1351"},"content":"[D][X] borrow book (by: today))","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"wang1351"},"content":"[E][ ] make presentation (at: Mondays))","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"wang1351":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"# User Guide: Duke","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"wang1351"},"content":"Duke application aims to help users manage their tasks and store them in a local","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"wang1351"},"content":" text file via a Command Line Interface.","lastModifiedDate":"2022-02-19"},{"lineNumber":4,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":5,"author":{"gitId":"wang1351"},"content":"## Quick start","lastModifiedDate":"2022-02-19"},{"lineNumber":6,"author":{"gitId":"wang1351"},"content":"1. Ensure you have Java `11` installed in your computer.","lastModifiedDate":"2022-02-19"},{"lineNumber":7,"author":{"gitId":"wang1351"},"content":"2. Download the latest release file from [.jar](https://github.com/wang1351/ip/releases/download/A-Jar/ip.jar) or [.tar.gz](https://github.com/wang1351/ip/archive/refs/tags/A-Jar.tar.gz) or [.zip](https://github.com/wang1351/ip/archive/refs/tags/A-Jar.zip).","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"wang1351"},"content":"3. Click","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"wang1351"},"content":"Refer to the [Features]() below for all provided features.","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"wang1351"},"content":"Duke application supports a variety of features which facilitate the management of user tasks. User tasks are categorized","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"wang1351"},"content":"into todo, deadline and event.","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"wang1351"},"content":"1. Add a todo","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"wang1351"},"content":"2. Add a deadline","lastModifiedDate":"2022-02-19"},{"lineNumber":16,"author":{"gitId":"wang1351"},"content":"3. Add an event","lastModifiedDate":"2022-02-19"},{"lineNumber":17,"author":{"gitId":"wang1351"},"content":"4. Mark a task as done","lastModifiedDate":"2022-02-19"},{"lineNumber":18,"author":{"gitId":"wang1351"},"content":"5. Mark a task as undone","lastModifiedDate":"2022-02-19"},{"lineNumber":19,"author":{"gitId":"wang1351"},"content":"6. Display current task list","lastModifiedDate":"2022-02-19"},{"lineNumber":20,"author":{"gitId":"wang1351"},"content":"7. Delete a task from task list","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"wang1351"},"content":"8. Find all tasks which contain a specified string","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"wang1351"},"content":"9. Quit","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"wang1351"},"content":"10. Error handling","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"wang1351"},"content":"11. Duke application automatically saves all the tasks into [duke.txt](../data/duke.txt) in the `data` folder.","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"wang1351"},"content":"After adding a task (feature [1](), [2](), [3]()), the status of the task is set to undone by default.","lastModifiedDate":"2022-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"wang1351"},"content":"Please view the [Usage]() below for details of each command.","lastModifiedDate":"2022-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"wang1351"},"content":"## Usage","lastModifiedDate":"2022-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"wang1351"},"content":"### Adding a todo: `todo` ","lastModifiedDate":"2022-02-19"},{"lineNumber":33,"author":{"gitId":"wang1351"},"content":"Add a todo to the task list.","lastModifiedDate":"2022-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"wang1351"},"content":"Format: `todo description`","lastModifiedDate":"2022-02-19"},{"lineNumber":36,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":37,"author":{"gitId":"wang1351"},"content":"- `description` refers to the description of the todo ","lastModifiedDate":"2022-02-19"},{"lineNumber":38,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":39,"author":{"gitId":"wang1351"},"content":"Example: `todo read book`","lastModifiedDate":"2022-02-19"},{"lineNumber":40,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":41,"author":{"gitId":"wang1351"},"content":"Expected outcome:","lastModifiedDate":"2022-02-19"},{"lineNumber":42,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":43,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":44,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":45,"author":{"gitId":"wang1351"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-02-19"},{"lineNumber":46,"author":{"gitId":"wang1351"},"content":"[T][ ] read book","lastModifiedDate":"2022-02-19"},{"lineNumber":47,"author":{"gitId":"wang1351"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-19"},{"lineNumber":48,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"wang1351"},"content":"### Adding a deadline: `deadline` ","lastModifiedDate":"2022-02-19"},{"lineNumber":51,"author":{"gitId":"wang1351"},"content":"Add a deadline to the task list.","lastModifiedDate":"2022-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"wang1351"},"content":"Format: `deadline description /by time`","lastModifiedDate":"2022-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"wang1351"},"content":"- `time` refers to the time of the deadline ","lastModifiedDate":"2022-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"wang1351"},"content":"Example: `deadline borrow book /by today`","lastModifiedDate":"2022-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"wang1351"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-02-19"},{"lineNumber":64,"author":{"gitId":"wang1351"},"content":"[D][ ] borrow book by: today","lastModifiedDate":"2022-02-19"},{"lineNumber":65,"author":{"gitId":"wang1351"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":67,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":68,"author":{"gitId":"wang1351"},"content":"### Adding an event: `event` ","lastModifiedDate":"2022-02-19"},{"lineNumber":69,"author":{"gitId":"wang1351"},"content":"Add an event to the task list.","lastModifiedDate":"2022-02-19"},{"lineNumber":70,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":71,"author":{"gitId":"wang1351"},"content":"Format: `event description /at time`","lastModifiedDate":"2022-02-19"},{"lineNumber":72,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":73,"author":{"gitId":"wang1351"},"content":"Example: `event make presentation /at Mondays`","lastModifiedDate":"2022-02-19"},{"lineNumber":74,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":75,"author":{"gitId":"wang1351"},"content":"Expected outcome:","lastModifiedDate":"2022-02-19"},{"lineNumber":76,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":77,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":78,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":79,"author":{"gitId":"wang1351"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-02-19"},{"lineNumber":80,"author":{"gitId":"wang1351"},"content":"[E][ ] make presentation at: Mondays","lastModifiedDate":"2022-02-19"},{"lineNumber":81,"author":{"gitId":"wang1351"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-02-19"},{"lineNumber":82,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":83,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":84,"author":{"gitId":"wang1351"},"content":"### Displaying the task list: `list` ","lastModifiedDate":"2022-02-19"},{"lineNumber":85,"author":{"gitId":"wang1351"},"content":"Displaying all the tasks added to the list.","lastModifiedDate":"2022-02-19"},{"lineNumber":86,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":87,"author":{"gitId":"wang1351"},"content":"Example: `list`","lastModifiedDate":"2022-02-19"},{"lineNumber":88,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":89,"author":{"gitId":"wang1351"},"content":"Expected outcome:","lastModifiedDate":"2022-02-19"},{"lineNumber":90,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":91,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":92,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":93,"author":{"gitId":"wang1351"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-02-19"},{"lineNumber":94,"author":{"gitId":"wang1351"},"content":"1. [T][ ] read book","lastModifiedDate":"2022-02-19"},{"lineNumber":95,"author":{"gitId":"wang1351"},"content":"2. [D][ ] borrow book by: today","lastModifiedDate":"2022-02-19"},{"lineNumber":96,"author":{"gitId":"wang1351"},"content":"3. [E][ ] make presentation at: Mondays","lastModifiedDate":"2022-02-19"},{"lineNumber":97,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":98,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":99,"author":{"gitId":"wang1351"},"content":"### Finding all tasks containing a keyword: `find` ","lastModifiedDate":"2022-02-19"},{"lineNumber":100,"author":{"gitId":"wang1351"},"content":"Displaying all the tasks in the list which contain a specified string.","lastModifiedDate":"2022-02-19"},{"lineNumber":101,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":102,"author":{"gitId":"wang1351"},"content":"Format: `find keyword`","lastModifiedDate":"2022-02-19"},{"lineNumber":103,"author":{"gitId":"wang1351"},"content":" ","lastModifiedDate":"2022-02-19"},{"lineNumber":104,"author":{"gitId":"wang1351"},"content":"Example: `find book`","lastModifiedDate":"2022-02-19"},{"lineNumber":105,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":106,"author":{"gitId":"wang1351"},"content":"Expected outcome:","lastModifiedDate":"2022-02-19"},{"lineNumber":107,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":108,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":110,"author":{"gitId":"wang1351"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-02-19"},{"lineNumber":111,"author":{"gitId":"wang1351"},"content":"1. [T][ ] read book","lastModifiedDate":"2022-02-19"},{"lineNumber":112,"author":{"gitId":"wang1351"},"content":"2. [D][ ] borrow book by: today","lastModifiedDate":"2022-02-19"},{"lineNumber":113,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":114,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":115,"author":{"gitId":"wang1351"},"content":"### Marking a task as done: `mark` ","lastModifiedDate":"2022-02-19"},{"lineNumber":116,"author":{"gitId":"wang1351"},"content":"Set status of a task as done.","lastModifiedDate":"2022-02-19"},{"lineNumber":117,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":118,"author":{"gitId":"wang1351"},"content":"Format: `mark index`","lastModifiedDate":"2022-02-19"},{"lineNumber":119,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":120,"author":{"gitId":"wang1351"},"content":"- `index` refers to the index of the task (as shown in the displayed list) to be marked as done, positive integer from `1` to task list size","lastModifiedDate":"2022-02-19"},{"lineNumber":121,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":122,"author":{"gitId":"wang1351"},"content":"Example: `mark 1`","lastModifiedDate":"2022-02-19"},{"lineNumber":123,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":124,"author":{"gitId":"wang1351"},"content":"Expected outcome:","lastModifiedDate":"2022-02-19"},{"lineNumber":125,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":126,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":127,"author":{"gitId":"wang1351"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-19"},{"lineNumber":128,"author":{"gitId":"wang1351"},"content":"[T][X] read book","lastModifiedDate":"2022-02-19"},{"lineNumber":129,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":130,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":131,"author":{"gitId":"wang1351"},"content":"### Marking a task as undone: `unmark` ","lastModifiedDate":"2022-02-19"},{"lineNumber":132,"author":{"gitId":"wang1351"},"content":"Set status of a task as undone.","lastModifiedDate":"2022-02-19"},{"lineNumber":133,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":134,"author":{"gitId":"wang1351"},"content":"Format: `unmark index`","lastModifiedDate":"2022-02-19"},{"lineNumber":135,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":136,"author":{"gitId":"wang1351"},"content":"Example: `unmark 1`","lastModifiedDate":"2022-02-19"},{"lineNumber":137,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":138,"author":{"gitId":"wang1351"},"content":"Expected outcome:","lastModifiedDate":"2022-02-19"},{"lineNumber":139,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":140,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":141,"author":{"gitId":"wang1351"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-02-19"},{"lineNumber":142,"author":{"gitId":"wang1351"},"content":"[T][ ] read book","lastModifiedDate":"2022-02-19"},{"lineNumber":143,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":144,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":145,"author":{"gitId":"wang1351"},"content":"### Deleting a task: `delete` ","lastModifiedDate":"2022-02-19"},{"lineNumber":146,"author":{"gitId":"wang1351"},"content":"Remove a task from the list.","lastModifiedDate":"2022-02-19"},{"lineNumber":147,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":148,"author":{"gitId":"wang1351"},"content":"Format: `delete index`","lastModifiedDate":"2022-02-19"},{"lineNumber":149,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":150,"author":{"gitId":"wang1351"},"content":"Example: `delete 1`","lastModifiedDate":"2022-02-19"},{"lineNumber":151,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":152,"author":{"gitId":"wang1351"},"content":"Expected outcome:","lastModifiedDate":"2022-02-19"},{"lineNumber":153,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":154,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":155,"author":{"gitId":"wang1351"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-02-19"},{"lineNumber":156,"author":{"gitId":"wang1351"},"content":"[T][ ] read book","lastModifiedDate":"2022-02-19"},{"lineNumber":157,"author":{"gitId":"wang1351"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-02-19"},{"lineNumber":158,"author":{"gitId":"wang1351"},"content":"``` ","lastModifiedDate":"2022-02-19"},{"lineNumber":159,"author":{"gitId":"wang1351"},"content":"### Quitting: `bye` ","lastModifiedDate":"2022-02-19"},{"lineNumber":160,"author":{"gitId":"wang1351"},"content":"Terminate the application and automatically update the text file.","lastModifiedDate":"2022-02-19"},{"lineNumber":161,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":162,"author":{"gitId":"wang1351"},"content":"Example: `bye`","lastModifiedDate":"2022-02-19"},{"lineNumber":163,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":164,"author":{"gitId":"wang1351"},"content":"Expected outcome:","lastModifiedDate":"2022-02-19"},{"lineNumber":165,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":166,"author":{"gitId":"wang1351"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-02-19"},{"lineNumber":167,"author":{"gitId":"wang1351"},"content":"```","lastModifiedDate":"2022-02-19"},{"lineNumber":168,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":169,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":170,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":171,"author":{"gitId":"wang1351"},"content":"## FAQ","lastModifiedDate":"2022-02-19"},{"lineNumber":172,"author":{"gitId":"wang1351"},"content":"**Q**: What if my input is in wrong format?","lastModifiedDate":"2022-02-19"},{"lineNumber":173,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":174,"author":{"gitId":"wang1351"},"content":"**A**: When encountering unfamiliar format of input, Duke application provides a warm notice to the user","lastModifiedDate":"2022-02-19"},{"lineNumber":175,"author":{"gitId":"wang1351"},"content":"and allows user to key in again.","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"-":18,"wang1351":157}},{"path":"final_ip_jar/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"[T][ ] 1","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"wang1351":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"import tasks.*;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"wang1351"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"wang1351"},"content":"import java.util.*;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"wang1351"},"content":"import java.io.*;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"wang1351"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"wang1351"},"content":"    private ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"wang1351"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-19"},{"lineNumber":11,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"wang1351"},"content":"     * @param filePath","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":16,"author":{"gitId":"wang1351"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-19"},{"lineNumber":17,"author":{"gitId":"wang1351"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-19"},{"lineNumber":18,"author":{"gitId":"wang1351"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-19"},{"lineNumber":19,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"wang1351"},"content":"        try {","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"wang1351"},"content":"            File dataDir \u003d new File(\"./data\");","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"wang1351"},"content":"            File dataText \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"wang1351"},"content":"            if (!dataDir.exists()){","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"wang1351"},"content":"                dataDir.mkdirs();","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"wang1351"},"content":"            }","lastModifiedDate":"2022-02-19"},{"lineNumber":26,"author":{"gitId":"wang1351"},"content":"            if (!dataText.exists()){","lastModifiedDate":"2022-02-19"},{"lineNumber":27,"author":{"gitId":"wang1351"},"content":"                dataText.createNewFile();","lastModifiedDate":"2022-02-19"},{"lineNumber":28,"author":{"gitId":"wang1351"},"content":"            }","lastModifiedDate":"2022-02-19"},{"lineNumber":29,"author":{"gitId":"wang1351"},"content":"            allTasks \u003d new ArrayList\u003cTask\u003e(storage.load());","lastModifiedDate":"2022-02-19"},{"lineNumber":30,"author":{"gitId":"wang1351"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-19"},{"lineNumber":31,"author":{"gitId":"wang1351"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-19"},{"lineNumber":32,"author":{"gitId":"wang1351"},"content":"            allTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-19"},{"lineNumber":33,"author":{"gitId":"wang1351"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"wang1351"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-02-19"},{"lineNumber":37,"author":{"gitId":"wang1351"},"content":"        boolean notQuit \u003d true;","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"wang1351"},"content":"        int index;","lastModifiedDate":"2022-02-19"},{"lineNumber":39,"author":{"gitId":"wang1351"},"content":"        String description, detail, by, at;","lastModifiedDate":"2022-02-19"},{"lineNumber":40,"author":{"gitId":"wang1351"},"content":"        Task t;","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"wang1351"},"content":"        ui.greeting();","lastModifiedDate":"2022-02-19"},{"lineNumber":43,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"wang1351"},"content":"        while (notQuit) {","lastModifiedDate":"2022-02-19"},{"lineNumber":45,"author":{"gitId":"wang1351"},"content":"            String command \u003d ui.readCommand().replaceAll(\"( )+\", \" \");","lastModifiedDate":"2022-02-19"},{"lineNumber":46,"author":{"gitId":"wang1351"},"content":"            switch (command.split(\" \")[0]) {","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"wang1351"},"content":"                case \"bye\":","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"wang1351"},"content":"                    ui.sayGoobye();","lastModifiedDate":"2022-02-19"},{"lineNumber":49,"author":{"gitId":"wang1351"},"content":"                    storage.writeToDukeFile(allTasks);","lastModifiedDate":"2022-02-19"},{"lineNumber":50,"author":{"gitId":"wang1351"},"content":"                    notQuit \u003d false;","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"wang1351"},"content":"                case \"mark\":","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"wang1351"},"content":"                    index \u003d Integer.parseInt(command.split(\" \")[1].trim()) - 1;","lastModifiedDate":"2022-02-19"},{"lineNumber":55,"author":{"gitId":"wang1351"},"content":"                    t \u003d allTasks.get(index);","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"wang1351"},"content":"                    ui.markAndDisplayTask(t);","lastModifiedDate":"2022-02-19"},{"lineNumber":57,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"wang1351"},"content":"                case \"unmark\":","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"wang1351"},"content":"                    index \u003d Integer.parseInt(command.split(\" \")[1].trim()) - 1;","lastModifiedDate":"2022-02-19"},{"lineNumber":61,"author":{"gitId":"wang1351"},"content":"                    t \u003d allTasks.get(index);","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"wang1351"},"content":"                    ui.unmarkAndDisplayTask(t);","lastModifiedDate":"2022-02-19"},{"lineNumber":63,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"wang1351"},"content":"                case \"list\":","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"wang1351"},"content":"                    ui.displayListWithStatus(allTasks, allTasks.size());","lastModifiedDate":"2022-02-19"},{"lineNumber":67,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"wang1351"},"content":"                case \"find\":","lastModifiedDate":"2022-02-19"},{"lineNumber":70,"author":{"gitId":"wang1351"},"content":"                    ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-19"},{"lineNumber":71,"author":{"gitId":"wang1351"},"content":"                    String keyword \u003d command.split(\" \")[1].trim();","lastModifiedDate":"2022-02-19"},{"lineNumber":72,"author":{"gitId":"wang1351"},"content":"                    for (int i \u003d 0; i \u003c allTasks.size(); i++){","lastModifiedDate":"2022-02-19"},{"lineNumber":73,"author":{"gitId":"wang1351"},"content":"                        Task task \u003d allTasks.get(i);","lastModifiedDate":"2022-02-19"},{"lineNumber":74,"author":{"gitId":"wang1351"},"content":"                        if(task.description.contains(keyword)){","lastModifiedDate":"2022-02-19"},{"lineNumber":75,"author":{"gitId":"wang1351"},"content":"                            foundTasks.add(task);","lastModifiedDate":"2022-02-19"},{"lineNumber":76,"author":{"gitId":"wang1351"},"content":"                        }","lastModifiedDate":"2022-02-19"},{"lineNumber":77,"author":{"gitId":"wang1351"},"content":"                    }","lastModifiedDate":"2022-02-19"},{"lineNumber":78,"author":{"gitId":"wang1351"},"content":"                    ui.displayFoundTasks(foundTasks);","lastModifiedDate":"2022-02-19"},{"lineNumber":79,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-19"},{"lineNumber":80,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":81,"author":{"gitId":"wang1351"},"content":"                case \"delete\":","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"wang1351"},"content":"                    index \u003d Integer.parseInt(command.split(\" \")[1].trim()) - 1;","lastModifiedDate":"2022-02-19"},{"lineNumber":83,"author":{"gitId":"wang1351"},"content":"                    ui.deleteAndDisplayTask(allTasks.get(index), allTasks.size() - 1);","lastModifiedDate":"2022-02-19"},{"lineNumber":84,"author":{"gitId":"wang1351"},"content":"                    allTasks.remove(index);","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"wang1351"},"content":"                case \"todo\":","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"wang1351"},"content":"                    try {","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"wang1351"},"content":"                        String[] str \u003d command.split(\" \");","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"wang1351"},"content":"                        if (str.length \u003c 2) {","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"wang1351"},"content":"                            throw new DukeException();","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"wang1351"},"content":"                        }","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"wang1351"},"content":"                        description \u003d command.replace(\"todo \", \"\");","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"wang1351"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"wang1351"},"content":"                        ui.raiseExceptionInTodo();","lastModifiedDate":"2022-02-19"},{"lineNumber":96,"author":{"gitId":"wang1351"},"content":"                        break;","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"wang1351"},"content":"                    }","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"wang1351"},"content":"                    t \u003d new Todo(description);","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"wang1351"},"content":"                    allTasks.add(allTasks.size(), t);","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"wang1351"},"content":"                    ui.displayTask(t, allTasks.size());","lastModifiedDate":"2022-02-19"},{"lineNumber":102,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"wang1351"},"content":"                case \"deadline\":","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"wang1351"},"content":"                    try {","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"wang1351"},"content":"                        String[] str \u003d command.split(\" \");","lastModifiedDate":"2022-02-11"},{"lineNumber":107,"author":{"gitId":"wang1351"},"content":"                        if (str.length \u003c 2) {","lastModifiedDate":"2022-02-11"},{"lineNumber":108,"author":{"gitId":"wang1351"},"content":"                            throw new DukeException();","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"wang1351"},"content":"                        }","lastModifiedDate":"2022-02-11"},{"lineNumber":110,"author":{"gitId":"wang1351"},"content":"                        detail \u003d command.replace(\"deadline \", \"\");","lastModifiedDate":"2022-02-11"},{"lineNumber":111,"author":{"gitId":"wang1351"},"content":"                        description \u003d detail.split(\"/by\")[0];","lastModifiedDate":"2022-02-11"},{"lineNumber":112,"author":{"gitId":"wang1351"},"content":"                        by \u003d detail.split(\"/by\")[1];","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"wang1351"},"content":"                        /**","lastModifiedDate":"2022-02-11"},{"lineNumber":114,"author":{"gitId":"wang1351"},"content":"                         * To avoid content with only spacing.","lastModifiedDate":"2022-02-11"},{"lineNumber":115,"author":{"gitId":"wang1351"},"content":"                         */","lastModifiedDate":"2022-02-11"},{"lineNumber":116,"author":{"gitId":"wang1351"},"content":"                        if (by.replace(\" \", \"\") \u003d\u003d \"\") {","lastModifiedDate":"2022-02-11"},{"lineNumber":117,"author":{"gitId":"wang1351"},"content":"                            throw new DukeException();","lastModifiedDate":"2022-02-11"},{"lineNumber":118,"author":{"gitId":"wang1351"},"content":"                        }","lastModifiedDate":"2022-02-11"},{"lineNumber":119,"author":{"gitId":"wang1351"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":120,"author":{"gitId":"wang1351"},"content":"                        ui.raiseExceptionInDeadline();","lastModifiedDate":"2022-02-19"},{"lineNumber":121,"author":{"gitId":"wang1351"},"content":"                        break;","lastModifiedDate":"2022-02-11"},{"lineNumber":122,"author":{"gitId":"wang1351"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":123,"author":{"gitId":"wang1351"},"content":"                        ui.raiseExceptionInDeadline();","lastModifiedDate":"2022-02-19"},{"lineNumber":124,"author":{"gitId":"wang1351"},"content":"                        break;","lastModifiedDate":"2022-02-11"},{"lineNumber":125,"author":{"gitId":"wang1351"},"content":"                    }","lastModifiedDate":"2022-02-11"},{"lineNumber":126,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":127,"author":{"gitId":"wang1351"},"content":"                    t \u003d new Deadline(description, by);","lastModifiedDate":"2022-02-11"},{"lineNumber":128,"author":{"gitId":"wang1351"},"content":"                    allTasks.add(t);","lastModifiedDate":"2022-02-13"},{"lineNumber":129,"author":{"gitId":"wang1351"},"content":"                    ui.displayTask(t, allTasks.size());","lastModifiedDate":"2022-02-19"},{"lineNumber":130,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":131,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":132,"author":{"gitId":"wang1351"},"content":"                case \"event\":","lastModifiedDate":"2022-02-11"},{"lineNumber":133,"author":{"gitId":"wang1351"},"content":"                    try {","lastModifiedDate":"2022-02-11"},{"lineNumber":134,"author":{"gitId":"wang1351"},"content":"                        String[] str \u003d command.split(\" \");","lastModifiedDate":"2022-02-11"},{"lineNumber":135,"author":{"gitId":"wang1351"},"content":"                        if (str.length \u003c 2) {","lastModifiedDate":"2022-02-11"},{"lineNumber":136,"author":{"gitId":"wang1351"},"content":"                            throw new DukeException();","lastModifiedDate":"2022-02-11"},{"lineNumber":137,"author":{"gitId":"wang1351"},"content":"                        }","lastModifiedDate":"2022-02-11"},{"lineNumber":138,"author":{"gitId":"wang1351"},"content":"                        detail \u003d command.replace(\"event \", \"\");","lastModifiedDate":"2022-02-11"},{"lineNumber":139,"author":{"gitId":"wang1351"},"content":"                        description \u003d detail.split(\"/at\")[0];","lastModifiedDate":"2022-02-11"},{"lineNumber":140,"author":{"gitId":"wang1351"},"content":"                        at \u003d detail.split(\"/at\")[1];","lastModifiedDate":"2022-02-11"},{"lineNumber":141,"author":{"gitId":"wang1351"},"content":"                        /**","lastModifiedDate":"2022-02-11"},{"lineNumber":142,"author":{"gitId":"wang1351"},"content":"                         * To avoid content with only spacing.","lastModifiedDate":"2022-02-11"},{"lineNumber":143,"author":{"gitId":"wang1351"},"content":"                         */","lastModifiedDate":"2022-02-11"},{"lineNumber":144,"author":{"gitId":"wang1351"},"content":"                        if (at.replace(\" \", \"\") \u003d\u003d \"\") {","lastModifiedDate":"2022-02-11"},{"lineNumber":145,"author":{"gitId":"wang1351"},"content":"                            throw new DukeException();","lastModifiedDate":"2022-02-11"},{"lineNumber":146,"author":{"gitId":"wang1351"},"content":"                        }","lastModifiedDate":"2022-02-11"},{"lineNumber":147,"author":{"gitId":"wang1351"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":148,"author":{"gitId":"wang1351"},"content":"                        ui.raiseExceptionInEvent();","lastModifiedDate":"2022-02-19"},{"lineNumber":149,"author":{"gitId":"wang1351"},"content":"                        break;","lastModifiedDate":"2022-02-11"},{"lineNumber":150,"author":{"gitId":"wang1351"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":151,"author":{"gitId":"wang1351"},"content":"                        ui.raiseExceptionInEvent();","lastModifiedDate":"2022-02-19"},{"lineNumber":152,"author":{"gitId":"wang1351"},"content":"                        break;","lastModifiedDate":"2022-02-11"},{"lineNumber":153,"author":{"gitId":"wang1351"},"content":"                    }","lastModifiedDate":"2022-02-11"},{"lineNumber":154,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":155,"author":{"gitId":"wang1351"},"content":"                    t \u003d new Event(description, at);","lastModifiedDate":"2022-02-11"},{"lineNumber":156,"author":{"gitId":"wang1351"},"content":"                    allTasks.add(t);","lastModifiedDate":"2022-02-13"},{"lineNumber":157,"author":{"gitId":"wang1351"},"content":"                    ui.displayTask(t, allTasks.size());","lastModifiedDate":"2022-02-19"},{"lineNumber":158,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":159,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":160,"author":{"gitId":"wang1351"},"content":"                default:","lastModifiedDate":"2022-02-11"},{"lineNumber":161,"author":{"gitId":"wang1351"},"content":"                    try {","lastModifiedDate":"2022-02-11"},{"lineNumber":162,"author":{"gitId":"wang1351"},"content":"                        throw new DukeException();","lastModifiedDate":"2022-02-11"},{"lineNumber":163,"author":{"gitId":"wang1351"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":164,"author":{"gitId":"wang1351"},"content":"                        ui.raiseExceptionInCommand();","lastModifiedDate":"2022-02-19"},{"lineNumber":165,"author":{"gitId":"wang1351"},"content":"                    }","lastModifiedDate":"2022-02-11"},{"lineNumber":166,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-11"},{"lineNumber":167,"author":{"gitId":"wang1351"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":168,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":169,"author":{"gitId":"wang1351"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":170,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":171,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":172,"author":{"gitId":"wang1351"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2022-02-19"},{"lineNumber":173,"author":{"gitId":"wang1351"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2022-02-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"-":3,"wang1351":172}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"wang1351"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"wang1351"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"wang1351":5}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"import tasks.Deadline;","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"wang1351"},"content":"import tasks.Event;","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"wang1351"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-19"},{"lineNumber":4,"author":{"gitId":"wang1351"},"content":"import tasks.Todo;","lastModifiedDate":"2022-02-19"},{"lineNumber":5,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":6,"author":{"gitId":"wang1351"},"content":"import java.io.*;","lastModifiedDate":"2022-02-19"},{"lineNumber":7,"author":{"gitId":"wang1351"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"wang1351"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"wang1351"},"content":"public class Storage {","lastModifiedDate":"2022-02-19"},{"lineNumber":11,"author":{"gitId":"wang1351"},"content":"    protected String filePath;","lastModifiedDate":"2022-02-19"},{"lineNumber":12,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"wang1351"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"wang1351"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":16,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":17,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":18,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":19,"author":{"gitId":"wang1351"},"content":"     * @param allTasks","lastModifiedDate":"2022-02-19"},{"lineNumber":20,"author":{"gitId":"wang1351"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"wang1351"},"content":"    public void writeToDukeFile(ArrayList\u003cTask\u003e allTasks) throws IOException {","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"wang1351"},"content":"        FileWriter fw \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"wang1351"},"content":"        for(Task t:allTasks){","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"wang1351"},"content":"            fw.write(t.toString()+\"\\n\");","lastModifiedDate":"2022-02-19"},{"lineNumber":26,"author":{"gitId":"wang1351"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":27,"author":{"gitId":"wang1351"},"content":"        fw.close();","lastModifiedDate":"2022-02-19"},{"lineNumber":28,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":29,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":30,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":31,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":32,"author":{"gitId":"wang1351"},"content":"     * @return","lastModifiedDate":"2022-02-19"},{"lineNumber":33,"author":{"gitId":"wang1351"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-19"},{"lineNumber":34,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":35,"author":{"gitId":"wang1351"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-02-19"},{"lineNumber":36,"author":{"gitId":"wang1351"},"content":"        Task t;","lastModifiedDate":"2022-02-19"},{"lineNumber":37,"author":{"gitId":"wang1351"},"content":"        BufferedReader bufReader \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2022-02-19"},{"lineNumber":38,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":39,"author":{"gitId":"wang1351"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-19"},{"lineNumber":40,"author":{"gitId":"wang1351"},"content":"        String line \u003d bufReader.readLine();","lastModifiedDate":"2022-02-19"},{"lineNumber":41,"author":{"gitId":"wang1351"},"content":"        char taskType, taskMarked;","lastModifiedDate":"2022-02-19"},{"lineNumber":42,"author":{"gitId":"wang1351"},"content":"        String taskDetail;","lastModifiedDate":"2022-02-19"},{"lineNumber":43,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":44,"author":{"gitId":"wang1351"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2022-02-19"},{"lineNumber":45,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":46,"author":{"gitId":"wang1351"},"content":"            taskType \u003d line.charAt(1);","lastModifiedDate":"2022-02-19"},{"lineNumber":47,"author":{"gitId":"wang1351"},"content":"            taskMarked \u003d line.charAt(4);","lastModifiedDate":"2022-02-19"},{"lineNumber":48,"author":{"gitId":"wang1351"},"content":"            taskDetail \u003d line.substring(6);","lastModifiedDate":"2022-02-19"},{"lineNumber":49,"author":{"gitId":"wang1351"},"content":"            switch (taskType){","lastModifiedDate":"2022-02-19"},{"lineNumber":50,"author":{"gitId":"wang1351"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2022-02-19"},{"lineNumber":51,"author":{"gitId":"wang1351"},"content":"                    t \u003d convertTodo(taskDetail);","lastModifiedDate":"2022-02-19"},{"lineNumber":52,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-19"},{"lineNumber":53,"author":{"gitId":"wang1351"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2022-02-19"},{"lineNumber":54,"author":{"gitId":"wang1351"},"content":"                    t \u003d convertDeadline(taskDetail);","lastModifiedDate":"2022-02-19"},{"lineNumber":55,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-19"},{"lineNumber":56,"author":{"gitId":"wang1351"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2022-02-19"},{"lineNumber":57,"author":{"gitId":"wang1351"},"content":"                    t \u003d convertEvent(taskDetail);","lastModifiedDate":"2022-02-19"},{"lineNumber":58,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-19"},{"lineNumber":59,"author":{"gitId":"wang1351"},"content":"                default:","lastModifiedDate":"2022-02-19"},{"lineNumber":60,"author":{"gitId":"wang1351"},"content":"                    t \u003d null;","lastModifiedDate":"2022-02-19"},{"lineNumber":61,"author":{"gitId":"wang1351"},"content":"                    break;","lastModifiedDate":"2022-02-19"},{"lineNumber":62,"author":{"gitId":"wang1351"},"content":"            }","lastModifiedDate":"2022-02-19"},{"lineNumber":63,"author":{"gitId":"wang1351"},"content":"            if(taskMarked\u003d\u003d\u0027X\u0027){","lastModifiedDate":"2022-02-19"},{"lineNumber":64,"author":{"gitId":"wang1351"},"content":"                t.markAsDone();","lastModifiedDate":"2022-02-19"},{"lineNumber":65,"author":{"gitId":"wang1351"},"content":"            }","lastModifiedDate":"2022-02-19"},{"lineNumber":66,"author":{"gitId":"wang1351"},"content":"            else{","lastModifiedDate":"2022-02-19"},{"lineNumber":67,"author":{"gitId":"wang1351"},"content":"                t.markAsUnDone();","lastModifiedDate":"2022-02-19"},{"lineNumber":68,"author":{"gitId":"wang1351"},"content":"            }","lastModifiedDate":"2022-02-19"},{"lineNumber":69,"author":{"gitId":"wang1351"},"content":"            line \u003d bufReader.readLine();","lastModifiedDate":"2022-02-19"},{"lineNumber":70,"author":{"gitId":"wang1351"},"content":"            allTasks.add(t);","lastModifiedDate":"2022-02-19"},{"lineNumber":71,"author":{"gitId":"wang1351"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":72,"author":{"gitId":"wang1351"},"content":"        bufReader.close();","lastModifiedDate":"2022-02-19"},{"lineNumber":73,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":74,"author":{"gitId":"wang1351"},"content":"        return allTasks;","lastModifiedDate":"2022-02-19"},{"lineNumber":75,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":76,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":77,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":78,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":79,"author":{"gitId":"wang1351"},"content":"     * @param taskDetail","lastModifiedDate":"2022-02-19"},{"lineNumber":80,"author":{"gitId":"wang1351"},"content":"     * @return","lastModifiedDate":"2022-02-19"},{"lineNumber":81,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":82,"author":{"gitId":"wang1351"},"content":"    private Todo convertTodo(String taskDetail){","lastModifiedDate":"2022-02-19"},{"lineNumber":83,"author":{"gitId":"wang1351"},"content":"        Todo todo \u003d new Todo(taskDetail);","lastModifiedDate":"2022-02-19"},{"lineNumber":84,"author":{"gitId":"wang1351"},"content":"        return todo;","lastModifiedDate":"2022-02-19"},{"lineNumber":85,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":86,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":87,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":88,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":89,"author":{"gitId":"wang1351"},"content":"     * @param taskDetail","lastModifiedDate":"2022-02-19"},{"lineNumber":90,"author":{"gitId":"wang1351"},"content":"     * @return","lastModifiedDate":"2022-02-19"},{"lineNumber":91,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":92,"author":{"gitId":"wang1351"},"content":"    private Deadline convertDeadline(String taskDetail){","lastModifiedDate":"2022-02-19"},{"lineNumber":93,"author":{"gitId":"wang1351"},"content":"        String description, by;","lastModifiedDate":"2022-02-19"},{"lineNumber":94,"author":{"gitId":"wang1351"},"content":"        description \u003d taskDetail.split(\"by:\")[0].replace(\"(\", \"\").trim();","lastModifiedDate":"2022-02-19"},{"lineNumber":95,"author":{"gitId":"wang1351"},"content":"        by \u003d taskDetail.split(\"by:\")[1].trim();","lastModifiedDate":"2022-02-19"},{"lineNumber":96,"author":{"gitId":"wang1351"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2022-02-19"},{"lineNumber":97,"author":{"gitId":"wang1351"},"content":"        return deadline;","lastModifiedDate":"2022-02-19"},{"lineNumber":98,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":99,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":100,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":101,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":102,"author":{"gitId":"wang1351"},"content":"     * @param taskDetail","lastModifiedDate":"2022-02-19"},{"lineNumber":103,"author":{"gitId":"wang1351"},"content":"     * @return","lastModifiedDate":"2022-02-19"},{"lineNumber":104,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":105,"author":{"gitId":"wang1351"},"content":"    private Event convertEvent(String taskDetail){","lastModifiedDate":"2022-02-19"},{"lineNumber":106,"author":{"gitId":"wang1351"},"content":"        String description, at;","lastModifiedDate":"2022-02-19"},{"lineNumber":107,"author":{"gitId":"wang1351"},"content":"        description \u003d taskDetail.split(\"at:\")[0].replace(\"(\", \"\").trim();","lastModifiedDate":"2022-02-19"},{"lineNumber":108,"author":{"gitId":"wang1351"},"content":"        at \u003d taskDetail.split(\"at:\")[1].trim();","lastModifiedDate":"2022-02-19"},{"lineNumber":109,"author":{"gitId":"wang1351"},"content":"        Event event \u003d new Event(description, at);","lastModifiedDate":"2022-02-19"},{"lineNumber":110,"author":{"gitId":"wang1351"},"content":"        return event;","lastModifiedDate":"2022-02-19"},{"lineNumber":111,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":112,"author":{"gitId":"wang1351"},"content":"}","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"wang1351":112}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"wang1351"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"wang1351"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"wang1351"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-19"},{"lineNumber":7,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"wang1351"},"content":"public class Ui {","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"wang1351"},"content":"    public void printLine() {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"wang1351"},"content":"    public void greeting() {","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"wang1351"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"wang1351"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-19"},{"lineNumber":16,"author":{"gitId":"wang1351"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-19"},{"lineNumber":17,"author":{"gitId":"wang1351"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-19"},{"lineNumber":18,"author":{"gitId":"wang1351"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-19"},{"lineNumber":19,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"\"+logo);","lastModifiedDate":"2022-02-19"},{"lineNumber":20,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"Hello I\u0027m Duke.\");","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"wang1351"},"content":"        System.out.println();","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":26,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":27,"author":{"gitId":"wang1351"},"content":"    public String readCommand(){","lastModifiedDate":"2022-02-19"},{"lineNumber":28,"author":{"gitId":"wang1351"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-19"},{"lineNumber":29,"author":{"gitId":"wang1351"},"content":"        String command \u003d in.nextLine();","lastModifiedDate":"2022-02-19"},{"lineNumber":30,"author":{"gitId":"wang1351"},"content":"        return command;","lastModifiedDate":"2022-02-19"},{"lineNumber":31,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":32,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":33,"author":{"gitId":"wang1351"},"content":"    public void sayGoobye() {","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":40,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":41,"author":{"gitId":"wang1351"},"content":"     * @param t","lastModifiedDate":"2022-02-19"},{"lineNumber":42,"author":{"gitId":"wang1351"},"content":"     * @param taskCount","lastModifiedDate":"2022-02-19"},{"lineNumber":43,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":44,"author":{"gitId":"wang1351"},"content":"    public void displayTask(Task t, int taskCount) {","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"wang1351"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"wang1351"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", taskCount);","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":53,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":54,"author":{"gitId":"wang1351"},"content":"     * @param allTasks","lastModifiedDate":"2022-02-19"},{"lineNumber":55,"author":{"gitId":"wang1351"},"content":"     * @param taskCount","lastModifiedDate":"2022-02-19"},{"lineNumber":56,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":57,"author":{"gitId":"wang1351"},"content":"    public void displayListWithStatus(ArrayList\u003cTask\u003e allTasks, int taskCount) {","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"wang1351"},"content":"        for(int i \u003d 1; i \u003c\u003d taskCount; i++){","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"wang1351"},"content":"            System.out.println(i + \". \" + allTasks.get(i - 1));","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"wang1351"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":67,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":68,"author":{"gitId":"wang1351"},"content":"     * @param foundTasks","lastModifiedDate":"2022-02-19"},{"lineNumber":69,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":70,"author":{"gitId":"wang1351"},"content":"    public void displayFoundTasks(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2022-02-19"},{"lineNumber":71,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-19"},{"lineNumber":72,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-19"},{"lineNumber":73,"author":{"gitId":"wang1351"},"content":"        for(int i \u003d 1; i \u003c\u003d foundTasks.size(); i++){","lastModifiedDate":"2022-02-19"},{"lineNumber":74,"author":{"gitId":"wang1351"},"content":"            System.out.println(i + \". \" + foundTasks.get(i - 1));","lastModifiedDate":"2022-02-19"},{"lineNumber":75,"author":{"gitId":"wang1351"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":76,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-19"},{"lineNumber":77,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":78,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":79,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":80,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":81,"author":{"gitId":"wang1351"},"content":"     * @param t","lastModifiedDate":"2022-02-19"},{"lineNumber":82,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":83,"author":{"gitId":"wang1351"},"content":"    public void markAndDisplayTask(Task t) {","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"wang1351"},"content":"        t.markAsDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"wang1351"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":92,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":93,"author":{"gitId":"wang1351"},"content":"     * @param t","lastModifiedDate":"2022-02-19"},{"lineNumber":94,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":95,"author":{"gitId":"wang1351"},"content":"    public void unmarkAndDisplayTask(Task t) {","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"wang1351"},"content":"        t.markAsUnDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"wang1351"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"wang1351"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":104,"author":{"gitId":"wang1351"},"content":"     *","lastModifiedDate":"2022-02-19"},{"lineNumber":105,"author":{"gitId":"wang1351"},"content":"     * @param t","lastModifiedDate":"2022-02-19"},{"lineNumber":106,"author":{"gitId":"wang1351"},"content":"     * @param taskCount","lastModifiedDate":"2022-02-19"},{"lineNumber":107,"author":{"gitId":"wang1351"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":108,"author":{"gitId":"wang1351"},"content":"    public void deleteAndDisplayTask(Task t, int taskCount) {","lastModifiedDate":"2022-02-13"},{"lineNumber":109,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-13"},{"lineNumber":110,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-02-13"},{"lineNumber":111,"author":{"gitId":"wang1351"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-13"},{"lineNumber":112,"author":{"gitId":"wang1351"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", taskCount);","lastModifiedDate":"2022-02-13"},{"lineNumber":113,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-13"},{"lineNumber":114,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":115,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":116,"author":{"gitId":"wang1351"},"content":"    public void raiseExceptionInDeadline(){","lastModifiedDate":"2022-02-11"},{"lineNumber":117,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-11"},{"lineNumber":118,"author":{"gitId":"wang1351"},"content":"        System.out.println(\" ☹ OOPS!!! The description or by of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-11"},{"lineNumber":119,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-11"},{"lineNumber":120,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":121,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":122,"author":{"gitId":"wang1351"},"content":"    public void raiseExceptionInEvent(){","lastModifiedDate":"2022-02-11"},{"lineNumber":123,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-11"},{"lineNumber":124,"author":{"gitId":"wang1351"},"content":"        System.out.println(\" ☹ OOPS!!! The description or at of an event cannot be empty.\");","lastModifiedDate":"2022-02-11"},{"lineNumber":125,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-11"},{"lineNumber":126,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":127,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":128,"author":{"gitId":"wang1351"},"content":"    public void raiseExceptionInTodo(){","lastModifiedDate":"2022-02-11"},{"lineNumber":129,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-11"},{"lineNumber":130,"author":{"gitId":"wang1351"},"content":"        System.out.println(\" ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-02-11"},{"lineNumber":131,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-11"},{"lineNumber":132,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":133,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":134,"author":{"gitId":"wang1351"},"content":"    public void raiseExceptionInCommand(){","lastModifiedDate":"2022-02-11"},{"lineNumber":135,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-11"},{"lineNumber":136,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-()\");","lastModifiedDate":"2022-02-11"},{"lineNumber":137,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-11"},{"lineNumber":138,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":139,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":140,"author":{"gitId":"wang1351"},"content":"    public void showLoadingError(){","lastModifiedDate":"2022-02-19"},{"lineNumber":141,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-19"},{"lineNumber":142,"author":{"gitId":"wang1351"},"content":"        System.out.println(\"NO file found.\");","lastModifiedDate":"2022-02-19"},{"lineNumber":143,"author":{"gitId":"wang1351"},"content":"        this.printLine();","lastModifiedDate":"2022-02-19"},{"lineNumber":144,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":145,"author":{"gitId":"wang1351"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"wang1351":145}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"package tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"wang1351"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"wang1351"},"content":"    protected String by;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wang1351"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wang1351"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wang1351"},"content":"        this.by \u003d by.trim();","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wang1351"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wang1351"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"wang1351"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wang1351"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wang1351":16}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"package tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"wang1351"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"wang1351"},"content":"    protected String at;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wang1351"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wang1351"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wang1351"},"content":"        this.at \u003d at.trim();","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wang1351"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wang1351"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"wang1351"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wang1351"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wang1351":16}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"package tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"wang1351"},"content":"public class Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"wang1351"},"content":"    public String description;","lastModifiedDate":"2022-02-19"},{"lineNumber":5,"author":{"gitId":"wang1351"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"wang1351"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"wang1351"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"wang1351"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"wang1351"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"wang1351"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"wang1351"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"wang1351"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"wang1351"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"wang1351"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"wang1351"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"wang1351"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"wang1351"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"wang1351"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"wang1351":28}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wang1351"},"content":"package tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"wang1351"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"wang1351"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wang1351"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wang1351"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wang1351"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wang1351"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wang1351"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wang1351"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"wang1351"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"wang1351"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wang1351":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wang1351"},"content":"java -classpath ..\\bin main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wang1351":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"wang1351"},"content":"java -classpath ../bin main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"wang1351":1}}]
