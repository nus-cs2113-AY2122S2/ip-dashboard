[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"## Table of Contents","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"* [Features and Usage](#feature-and-usage)","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"    * [Adding a task](#adding-a-task)","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"        * [Todo: `todo`](#todo-task-todo)","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"        * [Deadline: `deadline`](#deadline-task-deadline)","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"        * [Event: `event`](#event-task-event)","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"    * [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"    * [Marking a task as done: `mark`](#marking-a-task-as-done-mark)","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"    * [Marking a task as not done: `unmark`](#marking-a-task-as-not-done-unmark)","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"    * [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"    * [Finding tasks by keyword: `find`](#finding-tasks-by-keyword-find)","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"    * [Exiting the app: `bye`](#exiting-the-app-bye)","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"    * [Automatic saving of data](#automatic-saving-of-data)","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"## Quick start","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"1. Ensure you have **Java `11` or above** installed in your Computer.","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"2. Download the latest `Duke.jar` from [here](https://github.com/TianaiYan/ip/).","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Duke.","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"4. Open a terminal window and type `java -jar Duke.jar`.","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"5. Type the command below the greeting and press \u003ckbd\u003eEnter\u003c/kbd\u003e to execute it. Some example commands you can try:","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"6. Refer to the [Usage](#Usage) below for details of each command.","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"## Feature and Usage","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"❗️**Notes:**","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"* Commands are case-sensitive. For example, `mark` and `Mark` are not equal. ","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"* A space is required after each command. For exmaple, `mark1` is not a correct command format. Instead, `mark 1\u0027 is correct command format.","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"### Adding a task","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"* ### Todo Task: `todo`","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"  Adds a todo task to the task list.","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"  A todo task contains only a description.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"  **Format:** `todo \u003cdescription\u003e` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"  **Example with expected outcomes:**","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"  ```","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"  todo read book","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"  -----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"   Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"      [T][ ] read book","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"   Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"  -----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"  ```","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"* ### Deadline Task: `deadline`","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"  Adds a deadline task to the task list. \u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"  A deadline task contains a description and a time that the task need to be done before that.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"  **Format:** `deadline \u003cdescription\u003e /by \u003ctime/date\u003e` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"  **Example with expected outcomes:**","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"  ```","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"  deadline return book /by Saturday","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"  -----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"   Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"      [D][ ] return book (by: Saturday)","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"TianaiYan"},"content":"   Now you have 2 tasks in the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"TianaiYan"},"content":"  -----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"TianaiYan"},"content":"  ```","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"TianaiYan"},"content":"* ### Event Task: `event`","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"TianaiYan"},"content":"  Adds a event task to the task list. \u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"TianaiYan"},"content":"  A event task contains a description and a time of when the task begins and ends.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"TianaiYan"},"content":"  **Format:** `event \u003cdescription\u003e /at \u003ctime\u003e` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"TianaiYan"},"content":"  **Example with expected outcomes:**","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"TianaiYan"},"content":"  ```","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"TianaiYan"},"content":"  event watch Anya\u0027s interview /at Feb 25 5pm","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"TianaiYan"},"content":"  -----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"TianaiYan"},"content":"   Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"TianaiYan"},"content":"      [E][ ] watch Anya\u0027s interview (at: Feb 25 5pm)","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"TianaiYan"},"content":"   Now you have 3 tasks in the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"TianaiYan"},"content":"  -----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"TianaiYan"},"content":"  ```","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"TianaiYan"},"content":"  ","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"TianaiYan"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"TianaiYan"},"content":"List down all the tasks that you have added.","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"TianaiYan"},"content":"**Format:** `list` ","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"TianaiYan"},"content":"**Example with expected outcomes:**","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"TianaiYan"},"content":"list","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"TianaiYan"},"content":" Here are the tasks in your list:","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"TianaiYan"},"content":" 1.[T][ ] read book","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"TianaiYan"},"content":" 2.[D][ ] return book (by: Saturday)","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"TianaiYan"},"content":" 3.[E][ ] watch Anya\u0027s interview (at: Feb 25 5pm)","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"TianaiYan"},"content":"| Examples       | Attribute Name   | Description                                                    |","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"TianaiYan"},"content":"|----------------|------------------|----------------------------------------------------------------|","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"TianaiYan"},"content":"| 1.             | task index       | The task index in the task list                                |","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"TianaiYan"},"content":"| [T]            | task type        | [T] for Todo Task; [D] for Deadline Task; [E] for Event Task   |","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"TianaiYan"},"content":"| read book      | task description | the content of the task                                        |","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"TianaiYan"},"content":"| (by: Saturday) | task date/time   | (for deadline and event task only) date/time given to the task |","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"TianaiYan"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"TianaiYan"},"content":"Mark a task as finished.","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"TianaiYan"},"content":"**Format:** `mark \u003ctask index\u003e`","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"TianaiYan"},"content":"**Example with expected outcomes:**","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"TianaiYan"},"content":"mark 2","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"TianaiYan"},"content":" Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"TianaiYan"},"content":"\t[D][X] return book (by: Saturday)","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"TianaiYan"},"content":"### Marking a task as not done: `unmark`","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"TianaiYan"},"content":"Mark a task as not finished yet.","lastModifiedDate":"2022-02-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"TianaiYan"},"content":"**Format:** `unmark \u003ctask index\u003e`","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"TianaiYan"},"content":"**Example with expected outcomes:**","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"TianaiYan"},"content":"unmark 2","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"TianaiYan"},"content":" OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-02-28"},{"lineNumber":122,"author":{"gitId":"TianaiYan"},"content":"\t[D][ ] return book (by: Saturday)","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":125,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":126,"author":{"gitId":"TianaiYan"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-02-28"},{"lineNumber":127,"author":{"gitId":"TianaiYan"},"content":"Delete a task from list.","lastModifiedDate":"2022-02-28"},{"lineNumber":128,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"TianaiYan"},"content":"**Format:** `delete \u003ctask index\u003e`","lastModifiedDate":"2022-02-28"},{"lineNumber":130,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":131,"author":{"gitId":"TianaiYan"},"content":"**Example with expected outcomes:**","lastModifiedDate":"2022-02-28"},{"lineNumber":132,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":133,"author":{"gitId":"TianaiYan"},"content":"delete 2","lastModifiedDate":"2022-02-28"},{"lineNumber":134,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":135,"author":{"gitId":"TianaiYan"},"content":" Noted. I\u0027ve removed this task: ","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"TianaiYan"},"content":"\t[D][ ] return book (by: Saturday)","lastModifiedDate":"2022-02-28"},{"lineNumber":137,"author":{"gitId":"TianaiYan"},"content":" Now you have 2 tasks in the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":138,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":139,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":140,"author":{"gitId":"TianaiYan"},"content":"Now if you run \u0027list\u0027 again, it will shows:","lastModifiedDate":"2022-02-28"},{"lineNumber":141,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":143,"author":{"gitId":"TianaiYan"},"content":" Here are the tasks in your list:","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"TianaiYan"},"content":" 1.[T][ ] read book","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"TianaiYan"},"content":" 2.[E][ ] watch Anya\u0027s interview (at: Feb 25 5pm)","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"TianaiYan"},"content":"### Finding tasks by keyword: `find`","lastModifiedDate":"2022-02-28"},{"lineNumber":150,"author":{"gitId":"TianaiYan"},"content":"Search tasks in the list which contains the keyword.","lastModifiedDate":"2022-02-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"TianaiYan"},"content":"**Format:** `find \u003ckeyword\u003e`","lastModifiedDate":"2022-02-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"TianaiYan"},"content":"**Example with expected outcomes:**","lastModifiedDate":"2022-02-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":156,"author":{"gitId":"TianaiYan"},"content":"Now we have the following tasks:","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"TianaiYan"},"content":"list","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":160,"author":{"gitId":"TianaiYan"},"content":" Here are the tasks in your list:","lastModifiedDate":"2022-02-28"},{"lineNumber":161,"author":{"gitId":"TianaiYan"},"content":" 1.[T][ ] read book","lastModifiedDate":"2022-02-28"},{"lineNumber":162,"author":{"gitId":"TianaiYan"},"content":" 2.[E][ ] watch Anya\u0027s interview (at: Feb 25 5pm)","lastModifiedDate":"2022-02-28"},{"lineNumber":163,"author":{"gitId":"TianaiYan"},"content":" 3.[D][X] return book (by: Saturday)","lastModifiedDate":"2022-02-28"},{"lineNumber":164,"author":{"gitId":"TianaiYan"},"content":" 4.[T][ ] buy book","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":167,"author":{"gitId":"TianaiYan"},"content":"If you would like to find task with the word \u0027book\u0027:","lastModifiedDate":"2022-02-28"},{"lineNumber":168,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":169,"author":{"gitId":"TianaiYan"},"content":"find book","lastModifiedDate":"2022-02-28"},{"lineNumber":170,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":171,"author":{"gitId":"TianaiYan"},"content":" Here are the matching tasks in your list:","lastModifiedDate":"2022-02-28"},{"lineNumber":172,"author":{"gitId":"TianaiYan"},"content":" 1.[T][ ] read book","lastModifiedDate":"2022-02-28"},{"lineNumber":173,"author":{"gitId":"TianaiYan"},"content":" 3.[D][X] return book (by: Saturday)","lastModifiedDate":"2022-02-28"},{"lineNumber":174,"author":{"gitId":"TianaiYan"},"content":" 4.[T][ ] buy books","lastModifiedDate":"2022-02-28"},{"lineNumber":175,"author":{"gitId":"TianaiYan"},"content":" You have 3 tasks contains \"book\" in the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":176,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":177,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":178,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":179,"author":{"gitId":"TianaiYan"},"content":"### Exiting the app: `bye`","lastModifiedDate":"2022-02-28"},{"lineNumber":180,"author":{"gitId":"TianaiYan"},"content":"Exit the program.","lastModifiedDate":"2022-02-28"},{"lineNumber":181,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":182,"author":{"gitId":"TianaiYan"},"content":"**Format:** `bye`","lastModifiedDate":"2022-02-28"},{"lineNumber":183,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":184,"author":{"gitId":"TianaiYan"},"content":"**Example with expected outcomes:**","lastModifiedDate":"2022-02-28"},{"lineNumber":185,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":186,"author":{"gitId":"TianaiYan"},"content":"bye","lastModifiedDate":"2022-02-28"},{"lineNumber":187,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":188,"author":{"gitId":"TianaiYan"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2022-02-28"},{"lineNumber":189,"author":{"gitId":"TianaiYan"},"content":"-----------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":190,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-02-28"},{"lineNumber":191,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":192,"author":{"gitId":"TianaiYan"},"content":"### Automatic saving of data","lastModifiedDate":"2022-02-28"},{"lineNumber":193,"author":{"gitId":"TianaiYan"},"content":"When you start Duke for the first time, a txt file named `data.txt` will be created to save your task.","lastModifiedDate":"2022-02-28"},{"lineNumber":194,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":195,"author":{"gitId":"TianaiYan"},"content":"When you say `bye` to the program, Duke will automatically save any changes you made to the txt file.","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"TianaiYan":172,"-":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"import java.io.*;","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"    public static void printLine() {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"-----------------------------------------\");","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"        ui.greeting();","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"        storage.checkFileExists(taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"        Ui.checkCommand(taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"TianaiYan":27,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"        super(message);","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"    public String toString() {","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"        return \" \" + super.toString();","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"TianaiYan":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"package duke;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"public class Parser {","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"    public static void printLine() {","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"-----------------------------------------\");","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"     * Check whether the todo type task detail is valid.","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"     * Add todo type task to the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"     * @param taskDetail the description of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"    private static void addTodo(String taskDetail, TaskList taskList) {","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"            checkTaskDetailEmpty(taskDetail);","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"            Task newTask \u003d new Todo(taskDetail);","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"            Ui.printGuide();","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"     * Check whether the deadline type task detail is valid.","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"     * Add deadline type task to the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"     * @param taskDetail the description of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"    private static void addDeadline(String taskDetail, TaskList taskList) {","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"TianaiYan"},"content":"            checkTaskDetailEmpty(taskDetail);","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"TianaiYan"},"content":"            int separatorIndex \u003d taskDetail.indexOf(\"/by\");","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"TianaiYan"},"content":"            checkKeyword(separatorIndex, taskDetail);","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"TianaiYan"},"content":"            Task newTask \u003d new Deadline(taskDetail.substring(0, separatorIndex - 1), taskDetail.substring(separatorIndex + 4));","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"TianaiYan"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"TianaiYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"TianaiYan"},"content":"            Ui.printGuide();","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"TianaiYan"},"content":"     * Check whether the event type task detail is valid.","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"TianaiYan"},"content":"     * Add event type task to the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"TianaiYan"},"content":"     * @param taskDetail the description of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"TianaiYan"},"content":"    private static void addEvent(String taskDetail, TaskList taskList) {","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"TianaiYan"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"TianaiYan"},"content":"            checkTaskDetailEmpty(taskDetail);","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"TianaiYan"},"content":"            int separatorIndex \u003d taskDetail.indexOf(\"/at\");","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"TianaiYan"},"content":"            checkKeyword(separatorIndex, taskDetail);","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"TianaiYan"},"content":"            Task newTask \u003d new Event(taskDetail.substring(0, separatorIndex - 1), taskDetail.substring(separatorIndex + 4));","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"TianaiYan"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"TianaiYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"TianaiYan"},"content":"            Ui.printGuide();","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"TianaiYan"},"content":"     * Check whether the task detail for deadline type and event type has","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"TianaiYan"},"content":"     * keyword for date.","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"TianaiYan"},"content":"     * Check whether the date exist.","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"TianaiYan"},"content":"     * @param indexOfKeyword the index of /by or /at.","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"TianaiYan"},"content":"     * @param taskDetail the description of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"TianaiYan"},"content":"     * @throws DukeException If task detail is not valid.","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"TianaiYan"},"content":"    private static void checkKeyword(int indexOfKeyword, String taskDetail) throws DukeException {","lastModifiedDate":"2022-02-27"},{"lineNumber":101,"author":{"gitId":"TianaiYan"},"content":"        if (indexOfKeyword \u003d\u003d -1) {","lastModifiedDate":"2022-02-27"},{"lineNumber":102,"author":{"gitId":"TianaiYan"},"content":"            throw new DukeException(\"You should give a time. Please refer to the command guide below.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":103,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":104,"author":{"gitId":"TianaiYan"},"content":"        if (taskDetail.length() \u003c indexOfKeyword + 5) {","lastModifiedDate":"2022-02-27"},{"lineNumber":105,"author":{"gitId":"TianaiYan"},"content":"            throw new DukeException(\"You should give a time. Please refer to the command guide below.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":106,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":107,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":108,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":109,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"TianaiYan"},"content":"     * Check whether the command detail is empty","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"TianaiYan"},"content":"     * @param taskDetail the description of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":113,"author":{"gitId":"TianaiYan"},"content":"     * @throws DukeException If there is not command detail.","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"TianaiYan"},"content":"    public static void checkTaskDetailEmpty(String taskDetail) throws DukeException {","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"TianaiYan"},"content":"        if (taskDetail.isEmpty()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"TianaiYan"},"content":"            throw new DukeException(\"Command detail cannot be empty.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":118,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":119,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":120,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":121,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":122,"author":{"gitId":"TianaiYan"},"content":"     * Check whether the input index can convert from string into integer.","lastModifiedDate":"2022-02-27"},{"lineNumber":123,"author":{"gitId":"TianaiYan"},"content":"     * Check whether the input index is in the range of total task number.","lastModifiedDate":"2022-02-27"},{"lineNumber":124,"author":{"gitId":"TianaiYan"},"content":"     * @param description the description of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":125,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"TianaiYan"},"content":"     * @return whether the index is valid.","lastModifiedDate":"2022-02-27"},{"lineNumber":127,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":128,"author":{"gitId":"TianaiYan"},"content":"    public static boolean formatIndex(String description, TaskList taskList) {","lastModifiedDate":"2022-02-27"},{"lineNumber":129,"author":{"gitId":"TianaiYan"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"TianaiYan"},"content":"            int taskId \u003d Integer.parseInt(description);","lastModifiedDate":"2022-02-27"},{"lineNumber":131,"author":{"gitId":"TianaiYan"},"content":"            checkIndexRange(taskId, taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":132,"author":{"gitId":"TianaiYan"},"content":"            return true;","lastModifiedDate":"2022-02-27"},{"lineNumber":133,"author":{"gitId":"TianaiYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":134,"author":{"gitId":"TianaiYan"},"content":"            printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":135,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-27"},{"lineNumber":136,"author":{"gitId":"TianaiYan"},"content":"            Ui.printGuide();","lastModifiedDate":"2022-02-27"},{"lineNumber":137,"author":{"gitId":"TianaiYan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":138,"author":{"gitId":"TianaiYan"},"content":"            printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":139,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\" Cannot convert it to a number\");","lastModifiedDate":"2022-02-27"},{"lineNumber":140,"author":{"gitId":"TianaiYan"},"content":"            Ui.printGuide();","lastModifiedDate":"2022-02-27"},{"lineNumber":141,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":142,"author":{"gitId":"TianaiYan"},"content":"        return false;","lastModifiedDate":"2022-02-27"},{"lineNumber":143,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":144,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":145,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":146,"author":{"gitId":"TianaiYan"},"content":"     * Check whether the input index is in the range of total task number.","lastModifiedDate":"2022-02-27"},{"lineNumber":147,"author":{"gitId":"TianaiYan"},"content":"     * @param index the input index.","lastModifiedDate":"2022-02-27"},{"lineNumber":148,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":149,"author":{"gitId":"TianaiYan"},"content":"     * @throws DukeException If index is smaller than 1 or greater than total number of tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":150,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":151,"author":{"gitId":"TianaiYan"},"content":"    public static void checkIndexRange(int index, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-27"},{"lineNumber":152,"author":{"gitId":"TianaiYan"},"content":"        if (index \u003e taskList.getSize() || index \u003c 1) {","lastModifiedDate":"2022-02-27"},{"lineNumber":153,"author":{"gitId":"TianaiYan"},"content":"            throw new DukeException(\"This index is invalid\");","lastModifiedDate":"2022-02-27"},{"lineNumber":154,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":155,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":156,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":157,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":158,"author":{"gitId":"TianaiYan"},"content":"     * Check whether the command detail is empty.","lastModifiedDate":"2022-02-27"},{"lineNumber":159,"author":{"gitId":"TianaiYan"},"content":"     * Find the task which contains keyword in the taskList","lastModifiedDate":"2022-02-27"},{"lineNumber":160,"author":{"gitId":"TianaiYan"},"content":"     * @param taskDetail the keyword to search.","lastModifiedDate":"2022-02-27"},{"lineNumber":161,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":162,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":163,"author":{"gitId":"TianaiYan"},"content":"    public static void findKeywords(String taskDetail, TaskList taskList) {","lastModifiedDate":"2022-02-27"},{"lineNumber":164,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":165,"author":{"gitId":"TianaiYan"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":166,"author":{"gitId":"TianaiYan"},"content":"            checkTaskDetailEmpty(taskDetail);","lastModifiedDate":"2022-02-27"},{"lineNumber":167,"author":{"gitId":"TianaiYan"},"content":"            taskList.findTask(taskDetail);","lastModifiedDate":"2022-02-27"},{"lineNumber":168,"author":{"gitId":"TianaiYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":169,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-27"},{"lineNumber":170,"author":{"gitId":"TianaiYan"},"content":"            Ui.printGuide();","lastModifiedDate":"2022-02-27"},{"lineNumber":171,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":172,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":173,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":174,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":175,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":176,"author":{"gitId":"TianaiYan"},"content":"     * Ask user to type in commands.","lastModifiedDate":"2022-02-27"},{"lineNumber":177,"author":{"gitId":"TianaiYan"},"content":"     * Check which command is going to handle.","lastModifiedDate":"2022-02-27"},{"lineNumber":178,"author":{"gitId":"TianaiYan"},"content":"     * Extract the command/task details according to the command.","lastModifiedDate":"2022-02-27"},{"lineNumber":179,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":180,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":181,"author":{"gitId":"TianaiYan"},"content":"     * @return whether the index is valid.","lastModifiedDate":"2022-02-27"},{"lineNumber":182,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":183,"author":{"gitId":"TianaiYan"},"content":"    public static void handleCommand(TaskList taskList) {","lastModifiedDate":"2022-02-27"},{"lineNumber":184,"author":{"gitId":"TianaiYan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-27"},{"lineNumber":185,"author":{"gitId":"TianaiYan"},"content":"        String textIn \u003d in.nextLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":186,"author":{"gitId":"TianaiYan"},"content":"        String taskDetail;","lastModifiedDate":"2022-02-27"},{"lineNumber":187,"author":{"gitId":"TianaiYan"},"content":"        String command;","lastModifiedDate":"2022-02-27"},{"lineNumber":188,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":189,"author":{"gitId":"TianaiYan"},"content":"        while (!textIn.toLowerCase().equals(BYE_COMMAND)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":190,"author":{"gitId":"TianaiYan"},"content":"            if (textIn.trim().equals(LIST_COMMAND)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":191,"author":{"gitId":"TianaiYan"},"content":"                taskList.printTaskList();","lastModifiedDate":"2022-02-27"},{"lineNumber":192,"author":{"gitId":"TianaiYan"},"content":"            } else if (textIn.startsWith(MARK_COMMAND)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":193,"author":{"gitId":"TianaiYan"},"content":"                if (formatIndex(textIn.substring(4).trim(), taskList)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":194,"author":{"gitId":"TianaiYan"},"content":"                    taskList.markDone(Integer.parseInt(textIn.substring(4).trim()));","lastModifiedDate":"2022-02-27"},{"lineNumber":195,"author":{"gitId":"TianaiYan"},"content":"                }","lastModifiedDate":"2022-02-27"},{"lineNumber":196,"author":{"gitId":"TianaiYan"},"content":"            } else if (textIn.startsWith(UNMARK_COMMAND)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":197,"author":{"gitId":"TianaiYan"},"content":"                if (formatIndex(textIn.substring(6).trim(), taskList)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":198,"author":{"gitId":"TianaiYan"},"content":"                    taskList.unmark(Integer.parseInt(textIn.substring(6).trim()));","lastModifiedDate":"2022-02-27"},{"lineNumber":199,"author":{"gitId":"TianaiYan"},"content":"                }","lastModifiedDate":"2022-02-27"},{"lineNumber":200,"author":{"gitId":"TianaiYan"},"content":"            } else if (textIn.startsWith(TODO_COMMAND)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":201,"author":{"gitId":"TianaiYan"},"content":"                taskDetail \u003d textIn.substring(4).trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":202,"author":{"gitId":"TianaiYan"},"content":"                addTodo(taskDetail, taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":203,"author":{"gitId":"TianaiYan"},"content":"            } else if (textIn.startsWith(DEADLINE_COMMAND)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":204,"author":{"gitId":"TianaiYan"},"content":"                taskDetail \u003d textIn.substring(8).trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":205,"author":{"gitId":"TianaiYan"},"content":"                addDeadline(taskDetail, taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":206,"author":{"gitId":"TianaiYan"},"content":"            } else if (textIn.startsWith(EVENT_COMMAND)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":207,"author":{"gitId":"TianaiYan"},"content":"                taskDetail \u003d textIn.substring(5).trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":208,"author":{"gitId":"TianaiYan"},"content":"                addEvent(taskDetail, taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":209,"author":{"gitId":"TianaiYan"},"content":"            } else if (textIn.startsWith(DELETE_COMMAND)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":210,"author":{"gitId":"TianaiYan"},"content":"                if (formatIndex(textIn.substring(6).trim(), taskList)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":211,"author":{"gitId":"TianaiYan"},"content":"                    taskList.deleteTask(Integer.parseInt(textIn.substring(6).trim()));","lastModifiedDate":"2022-02-27"},{"lineNumber":212,"author":{"gitId":"TianaiYan"},"content":"                }","lastModifiedDate":"2022-02-27"},{"lineNumber":213,"author":{"gitId":"TianaiYan"},"content":"            } else if (textIn.startsWith(FIND_COMMAND)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":214,"author":{"gitId":"TianaiYan"},"content":"                taskDetail \u003d textIn.substring(4).trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":215,"author":{"gitId":"TianaiYan"},"content":"                findKeywords(taskDetail, taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":216,"author":{"gitId":"TianaiYan"},"content":"            } else {","lastModifiedDate":"2022-02-27"},{"lineNumber":217,"author":{"gitId":"TianaiYan"},"content":"                printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":218,"author":{"gitId":"TianaiYan"},"content":"                System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-27"},{"lineNumber":219,"author":{"gitId":"TianaiYan"},"content":"                System.out.println(\" Please refer to the command guide below.\\n\");","lastModifiedDate":"2022-02-27"},{"lineNumber":220,"author":{"gitId":"TianaiYan"},"content":"                Ui.printGuide();","lastModifiedDate":"2022-02-27"},{"lineNumber":221,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":222,"author":{"gitId":"TianaiYan"},"content":"            Storage.writeToFile(taskList);","lastModifiedDate":"2022-03-02"},{"lineNumber":223,"author":{"gitId":"TianaiYan"},"content":"            in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-27"},{"lineNumber":224,"author":{"gitId":"TianaiYan"},"content":"            textIn \u003d in.nextLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":225,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":226,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":227,"author":{"gitId":"TianaiYan"},"content":"        Ui.bye();","lastModifiedDate":"2022-02-27"},{"lineNumber":228,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":229,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"TianaiYan":229}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"package duke;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"import java.io.*;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"public class Storage {","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"    private static final String TASKLIST_FILE_PATH \u003d \"data.txt\";","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"    public static void printLine() {","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"-----------------------------------------\");","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"     * Create a file in local if it does not exist.","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"     * Read the data stored in the file.","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"     * @throws IOException           If input and/or output file has an error.","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"     * @throws FileNotFoundException If new file cannot be created.","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"    public static void checkFileExists(TaskList taskList) throws IOException {","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"            File f \u003d new File(TASKLIST_FILE_PATH);","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"            if (!f.exists()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"                FileOutputStream newFile \u003d new FileOutputStream(TASKLIST_FILE_PATH);","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"Cannot create a new file.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"            printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"        readFile(TASKLIST_FILE_PATH, taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"     * Populate all the task details in the local file when the program start to","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"     * restore the data saved in the file.","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"     * Iterate each line. Convert the data in file to correct format,","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"     * and add to the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"     * @param filePath path of the local file.","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"     * @throws FileNotFoundException If file does not exist.","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"    public static void readFile(String filePath, TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"        int separatorIndex;","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"            String[] taskInfo \u003d s.nextLine().split(\",\");","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"            String taskDetail \u003d null;","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"            switch (taskInfo[0]) {","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"TianaiYan"},"content":"            case \"T\":","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"TianaiYan"},"content":"                taskDetail \u003d taskInfo[2];","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"TianaiYan"},"content":"                taskList.readTask(new Todo(taskDetail));","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"TianaiYan"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"TianaiYan"},"content":"            case \"D\":","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"TianaiYan"},"content":"                taskDetail \u003d taskInfo[2] + \" /by \" + taskInfo[3];","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"TianaiYan"},"content":"                separatorIndex \u003d taskDetail.indexOf(\"/by\");","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"TianaiYan"},"content":"                taskList.readTask(new Deadline(taskDetail.substring(0, separatorIndex - 1), taskDetail.substring(separatorIndex + 4)));","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"TianaiYan"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"TianaiYan"},"content":"            case \"E\":","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"TianaiYan"},"content":"                taskDetail \u003d taskInfo[2] + \" /at \" + taskInfo[3];","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"TianaiYan"},"content":"                separatorIndex \u003d taskDetail.indexOf(\"/at\");","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"TianaiYan"},"content":"                taskList.readTask(new Event(taskDetail.substring(0, separatorIndex - 1), taskDetail.substring(separatorIndex + 4)));","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"TianaiYan"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"TianaiYan"},"content":"            if (taskInfo[1].equals(\"1\")) {","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"TianaiYan"},"content":"                taskList.readStatus(taskList.getSize());","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"TianaiYan"},"content":"     * Convert the task to correct format in order the save in the file.","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"TianaiYan"},"content":"     * @param task path of the local file.","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"TianaiYan"},"content":"     * @return the text in correct format to save in the file.","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"TianaiYan"},"content":"    public static String formatTask(Task task) {","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"TianaiYan"},"content":"        String taskType \u003d task.getType();","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"TianaiYan"},"content":"        int status \u003d task.getStatus() ? 1 : 0;","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"TianaiYan"},"content":"        String taskDescription \u003d task.getDescription();","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"TianaiYan"},"content":"        String taskDate \u003d task.getDate();","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"TianaiYan"},"content":"        String textToWrite \u003d null;","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"TianaiYan"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"TianaiYan"},"content":"        case \"T\":","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"TianaiYan"},"content":"            textToWrite \u003d \"T,\" + status + \",\" + taskDescription;","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"TianaiYan"},"content":"            break;","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"TianaiYan"},"content":"        case \"D\":","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"TianaiYan"},"content":"            textToWrite \u003d \"D,\" + status + \",\" + taskDescription + \",\" + taskDate;","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"TianaiYan"},"content":"            break;","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"TianaiYan"},"content":"        case \"E\":","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"TianaiYan"},"content":"            textToWrite \u003d \"E,\" + status + \",\" + taskDescription + \",\" + taskDate;","lastModifiedDate":"2022-02-27"},{"lineNumber":101,"author":{"gitId":"TianaiYan"},"content":"            break;","lastModifiedDate":"2022-02-27"},{"lineNumber":102,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":103,"author":{"gitId":"TianaiYan"},"content":"        return textToWrite;","lastModifiedDate":"2022-02-27"},{"lineNumber":104,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":105,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":106,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":107,"author":{"gitId":"TianaiYan"},"content":"     * Write tasks to the file after a bye command is inputted.","lastModifiedDate":"2022-02-27"},{"lineNumber":108,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":109,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"TianaiYan"},"content":"    public static void writeToFile(TaskList taskList) {","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"TianaiYan"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":113,"author":{"gitId":"TianaiYan"},"content":"            FileWriter fw \u003d new FileWriter(TASKLIST_FILE_PATH);","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"TianaiYan"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"TianaiYan"},"content":"                fw.write(formatTask(taskList.getTask(i)) + System.lineSeparator());","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":118,"author":{"gitId":"TianaiYan"},"content":"            fw.close();","lastModifiedDate":"2022-02-27"},{"lineNumber":119,"author":{"gitId":"TianaiYan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":120,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"Cannot find the file.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":121,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":122,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":123,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":124,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":125,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"TianaiYan":125}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"package duke;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"public class Ui {","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"    public static void printLine() {","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"-----------------------------------------\");","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"    /** Displays Duke logo and say hi to user. */","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"    public static void greeting() {","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"        String logo \u003d \"  ____        _        \\n\"","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"                + \" |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"                + \" | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"                + \" | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"                + \" |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" Hello from\\n\" + logo);","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" Hi! This is Duke!\");","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" I\u0027m glad to be at your service.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" What can I help you with?\");","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"    /** Say goodbye to user. */","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"    public static void bye() {","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"    /** Displays a short guide to user to show how to type command. */","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"    public static void printGuide() {","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" use \\\"list\\\" to show the task list\");","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" use \\\"todo task\\\" to add a task without any date/time attached to it\\\"\");","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" use \\\"deadline task /by time\\\" to add a task that need to be done before a specific time/date\");","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" use \\\"event task /at time\\\" to add a task that tasks that start at a specific time and ends at a specific time\");","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" use \\\"mark taskIndex\\\" to mark that task as done\");","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" use \\\"unmark taskIndex\\\" to mark that task as not done\");","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" use \\\"delete taskIndex\\\" to delete a task\");","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" use \\\"find keywords\\\" to find tasks\");","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" use \\\"bye\\\" to exit the chatbot\");","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"     * Checking input and command.","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"     * @param taskList the list to store all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"     * @throws IOException If file does not exist.","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"    public static void checkCommand(TaskList taskList) throws IOException {","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"        Parser.handleCommand(taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"TianaiYan":61}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"    protected String by;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"    protected final String type \u003d \"D\";","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"        super(description.trim());","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"    public String getDate(){","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"        return by;","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"    public String getType() {","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"        return type;","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"TianaiYan":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"public class Event extends Task{","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"    protected String at;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"    protected final String type \u003d \"E\";","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"        super(description.trim());","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"    public String getDate(){","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"        return at;","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"    public String getType() {","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"        return type;","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"TianaiYan":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"public class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"    protected String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"    protected String type;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"        return description;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"    public void setNotDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"    public String getType() {","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"        return type;","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"    public String getDate() {","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"        return \"\";","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"        return isDone;","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"TianaiYan":45}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"package duke.task;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"    public void printLine() {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"-----------------------------------------\");","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"     * Read task from the file and add to the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"     * @param newTask task in the file.","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"    public void readTask(Task newTask) {","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"     * Add the task that user inputs to the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"     * Show the confirmation message of the task is added successfully.","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"     * Show the total number of task in the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"     * @param newTask new task which user inputted.","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"\\t\" + newTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"     * Print all the task in the taskList in the order of adding time.","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"     * If the task is empty, print that there is no task.","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"    public void printTaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\" List is empty! No task is here!\");","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"        } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"     * Return the total number of task added in the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"     * @return total number of the task in the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"    public int getSize() {","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"TianaiYan"},"content":"        return taskList.size();","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"TianaiYan"},"content":"     * Return the task at that index.","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"TianaiYan"},"content":"     * @param index index of the task in the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"TianaiYan"},"content":"     * @return the task at that index.","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"TianaiYan"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"TianaiYan"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"TianaiYan"},"content":"     * Mark the task at that index to Done.","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"TianaiYan"},"content":"     * Show that the task has mark as Done.","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"TianaiYan"},"content":"     * @param taskId index of the task in the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"TianaiYan"},"content":"    public void markDone(int taskId) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"TianaiYan"},"content":"        taskList.get(taskId - 1).setDone();","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"\\t\" + taskList.get(taskId - 1));","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"TianaiYan"},"content":"     * Read the status of the task from the file.","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"TianaiYan"},"content":"     * Update the status of the task to the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"TianaiYan"},"content":"     * @param taskId index of the task in the file.","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"TianaiYan"},"content":"    public void readStatus(int taskId) {","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"TianaiYan"},"content":"        taskList.get(taskId - 1).setDone();","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"TianaiYan"},"content":"     * Mark the task at that index to Not Done.","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"TianaiYan"},"content":"     * Show that the task has mark as Not Done.","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"TianaiYan"},"content":"     * @param taskId index of the task in the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":101,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":102,"author":{"gitId":"TianaiYan"},"content":"    public void unmark(int taskId) {","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"TianaiYan"},"content":"        taskList.get(taskId - 1).setNotDone();","lastModifiedDate":"2022-02-17"},{"lineNumber":104,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":106,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"\\t\" + taskList.get(taskId - 1));","lastModifiedDate":"2022-02-27"},{"lineNumber":107,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":110,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"TianaiYan"},"content":"     * Delete the task at that index.","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"TianaiYan"},"content":"     * Show that the task has deleted and the new total number","lastModifiedDate":"2022-02-27"},{"lineNumber":113,"author":{"gitId":"TianaiYan"},"content":"     * of task in the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"TianaiYan"},"content":"     * @param taskId index of the task in the taskList.","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"TianaiYan"},"content":"    public void deleteTask(int taskId) {","lastModifiedDate":"2022-02-17"},{"lineNumber":118,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-17"},{"lineNumber":119,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-02-27"},{"lineNumber":120,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"\\t\" + taskList.get(taskId - 1));","lastModifiedDate":"2022-02-27"},{"lineNumber":121,"author":{"gitId":"TianaiYan"},"content":"        taskList.remove(taskId - 1);","lastModifiedDate":"2022-02-17"},{"lineNumber":122,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\" Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":123,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":127,"author":{"gitId":"TianaiYan"},"content":"     * Iterate through all the tasks and find and","lastModifiedDate":"2022-02-27"},{"lineNumber":128,"author":{"gitId":"TianaiYan"},"content":"     * print the task contains the keyword.","lastModifiedDate":"2022-02-27"},{"lineNumber":129,"author":{"gitId":"TianaiYan"},"content":"     * If no task is found, print no task found.","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":131,"author":{"gitId":"TianaiYan"},"content":"     * @param keywords keyword which the user want to search.","lastModifiedDate":"2022-02-27"},{"lineNumber":132,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":133,"author":{"gitId":"TianaiYan"},"content":"    public void findTask(String keywords) {","lastModifiedDate":"2022-02-27"},{"lineNumber":134,"author":{"gitId":"TianaiYan"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2022-02-27"},{"lineNumber":135,"author":{"gitId":"TianaiYan"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-27"},{"lineNumber":137,"author":{"gitId":"TianaiYan"},"content":"            if (taskList.get(i).getDescription().contains(keywords) || taskList.get(i).getDate().contains(keywords)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":138,"author":{"gitId":"TianaiYan"},"content":"                if (!isFound) {","lastModifiedDate":"2022-02-27"},{"lineNumber":139,"author":{"gitId":"TianaiYan"},"content":"                    System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":140,"author":{"gitId":"TianaiYan"},"content":"                }","lastModifiedDate":"2022-02-27"},{"lineNumber":141,"author":{"gitId":"TianaiYan"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"TianaiYan"},"content":"                count++;","lastModifiedDate":"2022-02-27"},{"lineNumber":143,"author":{"gitId":"TianaiYan"},"content":"                isFound \u003d true;","lastModifiedDate":"2022-02-27"},{"lineNumber":144,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":145,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":146,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"TianaiYan"},"content":"        if (isFound) {","lastModifiedDate":"2022-02-28"},{"lineNumber":148,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\" You have \" + count + \" tasks contains \\\"\" + keywords + \"\\\" in the list.\");","lastModifiedDate":"2022-02-28"},{"lineNumber":149,"author":{"gitId":"TianaiYan"},"content":"        } else {","lastModifiedDate":"2022-02-28"},{"lineNumber":150,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\" No task is found.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":151,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":152,"author":{"gitId":"TianaiYan"},"content":"        printLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":153,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":154,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":155,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"TianaiYan":155}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"    protected final String type \u003d \"T\";","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"        super(description.trim());","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"    public String getType() {","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"        return type;","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"TianaiYan":20}}]
