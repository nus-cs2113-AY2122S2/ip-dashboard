[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"# Duke.Duke project template","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limjierui":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"T | 0 | work","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"T | 0 | work","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"T | 0 | work book","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"limjierui":3}},{"path":"src/main/java/Duke/Commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":" * Represents the command to exit the program.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"     * Indicates whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"     * @return Indication on whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"        return true;","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"     * Executes the command.","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"     * @param tasks Tasklist containing of the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"     * @param ui    User interface of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"     * @param storage   Storage of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"        Ui.exit(storage,tasks);","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":33}},{"path":"src/main/java/Duke/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" * Represents an abstraction of the different command classes.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"    public abstract void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":14}},{"path":"src/main/java/Duke/Commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" * Represents the command to add a deadline task.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"    public DeadlineCommand(String description, boolean isDone, String date) {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"        deadline \u003d new Deadline(description, isDone, date);","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"     * Indicates whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     * @return Indication on whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"        return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     * Executes the command.","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"     * @param tasks Tasklist containing of  the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     * @param ui    User interface of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"     * @param storage   Storage of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"        System.out.println(Ui.DISPLAY_LINE  + System.lineSeparator() + \"Okay! I\u0027ve added this task:\");","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"        System.out.println(deadline);","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\" + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":43}},{"path":"src/main/java/Duke/Commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.*;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" * Represents the command to delete tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"    private int index;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"     * Indicates whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     * @return Indication on whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"        return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     * Executes the command.","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"     * @param tasks Tasklist containing of  the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     * @param ui    User interface of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"     * @param storage   Storage of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"        System.out.println(Ui.DISPLAY_LINE + System.lineSeparator()","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"                    + \"Okay! I have removed this task from the list!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"        System.out.println(tasks.get(index));","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"        tasks.delete(index);","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"        System.out.println(\"You have \" + tasks.size() + \" items left in the list:)\");","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"        System.out.println(Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":45}},{"path":"src/main/java/Duke/Commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" * Represents the command to add an event task.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"    private Event event;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"    public EventCommand(String description, boolean isDone, String date) {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"        event \u003d new Event(description, isDone, date);","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"     * Indicates whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     * @return Indication on whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"        return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"     * Executes the command.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"     * @param tasks Tasklist containing of  the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"     * @param ui    User interface of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     * @param storage   Storage of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"        tasks.add(event);","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"        System.out.println(Ui.DISPLAY_LINE + System.lineSeparator() + \"Okay! I\u0027ve added this task:\");","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"        System.out.println(event);","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\" + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":42}},{"path":"src/main/java/Duke/Commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"    private String description;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"        return false;","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"        Ui.listItems(tasks.findItem(description));","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"limjierui":24}},{"path":"src/main/java/Duke/Commands/ListItemCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.*;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" * Represents the command to list items.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"public class ListItemCommand  extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"     * Indicates whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"     * @return Indication on whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"        return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"     * Executes the command.","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"     * @param tasks Tasklist containing of  the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"     * @param ui    User interface of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"     * @param storage   Storage of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"        Ui.listItems(tasks);","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":34}},{"path":"src/main/java/Duke/Commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":" * Represents the command to mark a task.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"    private int index;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"     * Indicates whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"     * @return Indication on whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"        return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"     * Executes the command.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"     * @param tasks Tasklist containing of  the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"     * @param ui    User interface of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     * @param storage   Storage of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"        tasks.markItem(index);","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"        System.out.println(Ui.DISPLAY_LINE + System.lineSeparator() + \"Nice! I\u0027ve marked this as done:\");","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"        System.out.println(tasks.get(index));","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"        System.out.println(Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":42}},{"path":"src/main/java/Duke/Commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" * Represents the command to add a todo task.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"    private Todo toDo;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"    public ToDoCommand(String description, boolean isDone) {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"        toDo \u003d new Todo(description, isDone);","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"     * Indicates whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     * @return Indication on whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"        return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     * Executes the command.","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"     * @param tasks Tasklist containing of  the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     * @param ui    User interface of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"     * @param storage   Storage of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"        tasks.add(toDo);","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"        System.out.println(Ui.DISPLAY_LINE + System.lineSeparator() + \"Okay! I\u0027ve added this task:\");","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"        System.out.println(toDo);","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\" + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":43}},{"path":"src/main/java/Duke/Commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":" * Represents the command to unmark a task.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"    private int index;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"     * Indicates whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"     * @return Indication on whether the program should exit.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"        return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"     * Executes the command.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"     * @param tasks Tasklist containing of  the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"     * @param ui    User interface of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     * @param storage   Storage of Duke.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"        tasks.unMarkItem(index);","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"        System.out.println(Ui.DISPLAY_LINE + System.lineSeparator() + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"        System.out.println(tasks.get(index));","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"        System.out.println(Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":42}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.Commands.Command;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Parser.Parser;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":" * Represents the entry point of Duke program. The program is initialized and starts to interact with the user.","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"    private final Storage storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"    private final Ui ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"     * Constructs the Duke program.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"     * @param filepath The file path to where the tasks are saved in.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"        try {","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"            Ui.displayInvalidLoadmessage();","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"     * Starts the Duke program, takes in and parses the input command. Commands are executed and program runs till","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"     * termination.","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"    public void run() {","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"        ui.displayGreetMessage();","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"        while (!isExit) {","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"            try {","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"limjierui"},"content":"                String message \u003d ui.readCommand();","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"limjierui"},"content":"                String messageLowerCase \u003d message.toLowerCase();","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"limjierui"},"content":"                Command c \u003d Parser.parse(messageLowerCase, tasks);","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"limjierui"},"content":"                c.executeCommand(tasks, ui, storage);","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"limjierui"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"limjierui"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"limjierui"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"limjierui"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"limjierui"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"limjierui":54,"-":3}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":" * Represents exceptions that are exclusive to Duke program.","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"        super(errorMessage);","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"limjierui":10}},{"path":"src/main/java/Duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Parser;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.Commands.ByeCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Commands.Command;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Commands.ListItemCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":" * Represents the parser for input commands.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"public class Parser {","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"     * Parses the input command into a command for execution. Checks whether the command is a valid command.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"     * @param message The input command.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"     * @param taskList TaskList that contains the task.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"     * @return Commands that executes.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     * @throws DukeException When the command is invalid.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    public static Command parse(String message, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"        if (message.equals(\"bye\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"        } else if (message.equals(\"list\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"            return new ListItemCommand();","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"            if (message.contains(\"unmark\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"                return ParserUtil.parseUnmarkCommand(message, taskList);","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"            } else if (message.contains(\"mark\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"                return ParserUtil.parseMarkCommand(message, taskList);","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"            } else if (message.contains(\"delete\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"                return ParserUtil.parseDeleteCommand(message, taskList);","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"            } else if (message.contains(\"todo\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"                return ParserUtil.parseTodoCommand(message,isDone);","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"            } else if (message.contains(\"deadline\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"                return ParserUtil.parseDeadlineCommand(message, isDone);","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"            } else if (message.contains(\"event\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"                return ParserUtil.parseEventCommand(message, isDone);","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"            } else if (message.contains(\"find\")) {","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"limjierui"},"content":"                return ParserUtil.parseFindCommand(message,taskList);","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"limjierui"},"content":"            } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"limjierui"},"content":"                throw new DukeException(Ui.displayInvalidInputMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":49}},{"path":"src/main/java/Duke/Parser/ParserUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Parser;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.Commands.*;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" * Handles the exceptions to each command.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"public class ParserUtil {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"     * Parses the mark command and check if command is valid. If valid, proceed to execute command.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"     * @param message Message to be separated.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"     * @param taskList List of task.","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"     * @return Execution of command.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"     * @throws DukeException When there is no number given.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"    public static Command parseMarkCommand(String message, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.DISPLAY_LINE + System.lineSeparator() + \"Please add something to the list first:)\"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"                    + System.lineSeparator() + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"            String[] splitMessage \u003d message.split(\" \");","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"            if (splitMessage.length !\u003d 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"                throw new DukeException(Ui.DISPLAY_LINE + System.lineSeparator() + \"Please input a number\\n\" +","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"                        \"For eg. \u0027mark 2\u0027\\n\" + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"            String getNumber \u003d splitMessage[1];","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"            int positionToMark \u003d Integer.parseInt(getNumber) - 1;","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"            if (positionToMark + 1 \u003d\u003d 0 | positionToMark + 1 \u003e taskList.size()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"                throw new DukeException(Ui.displayMarkMessage(taskList));","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"            } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"                return new MarkCommand(positionToMark);","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"     * Parses the unmark command and check if command is valid. If valid, proceed to execute command.","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"limjierui"},"content":"     * @param message Message to be separated.","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"limjierui"},"content":"     * @param taskList List of task.","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"limjierui"},"content":"     * @return Execution of command.","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"limjierui"},"content":"     * @throws DukeException When there is no number given.","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"limjierui"},"content":"    public static Command parseUnmarkCommand(String message, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"limjierui"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.DISPLAY_LINE + System.lineSeparator() + \"Please add something to the list first:)\"","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"limjierui"},"content":"                    + System.lineSeparator() + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"limjierui"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"limjierui"},"content":"            String[] splitMessage \u003d message.split(\" \");","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"limjierui"},"content":"            if (splitMessage.length !\u003d 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"limjierui"},"content":"                throw new DukeException(Ui.DISPLAY_LINE + System.lineSeparator() + \"Please input a number\\n\" +","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"limjierui"},"content":"                        \"For eg. \u0027unmark 2\u0027\\n\" + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"limjierui"},"content":"            String getNumber \u003d splitMessage[1];","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"limjierui"},"content":"            int positionToUnMark \u003d Integer.parseInt(getNumber) - 1;","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"limjierui"},"content":"            if (positionToUnMark + 1 \u003d\u003d 0 | positionToUnMark + 1 \u003e taskList.size()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"limjierui"},"content":"                throw new DukeException(Ui.displayUnmarkMessage(taskList));","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"limjierui"},"content":"            } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"limjierui"},"content":"                return new UnmarkCommand(positionToUnMark);","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"limjierui"},"content":"    public static Command parseFindCommand (String message, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"limjierui"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.DISPLAY_LINE + System.lineSeparator() + \"Please add something to the list first:)\"","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"limjierui"},"content":"                    + System.lineSeparator() + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"limjierui"},"content":"        } else {","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"limjierui"},"content":"            String[] splitMessage \u003d message.split(\" \");","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"limjierui"},"content":"            if (splitMessage.length !\u003d 2) {","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"limjierui"},"content":"                throw new DukeException(Ui.DISPLAY_LINE + System.lineSeparator() + \"Please input a description\\n\" +","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"limjierui"},"content":"                        \"For eg. \u0027find book\u0027\\n\" + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"limjierui"},"content":"            String getDescription \u003d splitMessage[1];","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"limjierui"},"content":"            return new FindCommand(getDescription);","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"limjierui"},"content":"     * Parses the delete command and check if command is valid. If valid, proceed to execute command.","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"limjierui"},"content":"     * @param message Message to be separated.","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"limjierui"},"content":"     * @param taskList List of task.","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"limjierui"},"content":"     * @return Execution of command.","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"limjierui"},"content":"     * @throws DukeException When there is no number given.","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"limjierui"},"content":"    public static Command parseDeleteCommand (String message, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"limjierui"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.DISPLAY_LINE + System.lineSeparator() + \"Please add something to the list first:)\"","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"limjierui"},"content":"                    + System.lineSeparator() + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"limjierui"},"content":"        String[] splitMessage \u003d message.split(\" \");","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"limjierui"},"content":"        if (splitMessage.length !\u003d 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.DISPLAY_LINE + System.lineSeparator() + \"Please input a number\\n\" +","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"limjierui"},"content":"                    \"For eg. \u0027delete 2\u0027\\n\" + Ui.DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"limjierui"},"content":"        String getNumber \u003d splitMessage[1];","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"limjierui"},"content":"        int positionToDelete \u003d Integer.parseInt(getNumber) - 1;","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"limjierui"},"content":"        if (positionToDelete + 1 \u003d\u003d 0 | positionToDelete + 1 \u003e taskList.size()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.displayDeleteMessage(taskList));","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"limjierui"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"limjierui"},"content":"            return new DeleteCommand(positionToDelete);","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":110,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":113,"author":{"gitId":"limjierui"},"content":"     * Parses the todo command and check if command is valid. If valid, proceed to execute command.","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":115,"author":{"gitId":"limjierui"},"content":"     * @param message Message to be separated.","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"limjierui"},"content":"     * @param isDone If task is marked as done.","lastModifiedDate":"2022-03-03"},{"lineNumber":117,"author":{"gitId":"limjierui"},"content":"     * @return Execution of command.","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"limjierui"},"content":"     * @throws DukeException When the description is not given.","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"limjierui"},"content":"    public static Command parseTodoCommand (String message, boolean isDone) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"limjierui"},"content":"        String[] splitMessage \u003d message.split(\" \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"limjierui"},"content":"        if (splitMessage.length !\u003d 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.displayTodoMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"limjierui"},"content":"        String getDescription \u003d splitMessage[1];","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"limjierui"},"content":"        if (getDescription.equals(\"\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.displayTodoMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"limjierui"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"limjierui"},"content":"            return new ToDoCommand(getDescription, isDone);","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":131,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":134,"author":{"gitId":"limjierui"},"content":"     * Splits Event and Deadline commands into smaller messages.","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"limjierui"},"content":"     * @param message The message to be separated.","lastModifiedDate":"2022-03-03"},{"lineNumber":137,"author":{"gitId":"limjierui"},"content":"     * @param regex The position to separate the message.","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"limjierui"},"content":"     * @param type The type of command.","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"limjierui"},"content":"     * @return A String array of the second part of the message.","lastModifiedDate":"2022-03-03"},{"lineNumber":140,"author":{"gitId":"limjierui"},"content":"     * @throws DukeException","lastModifiedDate":"2022-03-03"},{"lineNumber":141,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":142,"author":{"gitId":"limjierui"},"content":"    public static String[] splitLongMessage (String message, String regex, String type) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"limjierui"},"content":"        String[] splitMessage \u003d message.split(\" \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"limjierui"},"content":"        if (splitMessage.length !\u003d 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":145,"author":{"gitId":"limjierui"},"content":"            if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"limjierui"},"content":"                throw new DukeException(Ui.displayDeadlineMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":147,"author":{"gitId":"limjierui"},"content":"            } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":148,"author":{"gitId":"limjierui"},"content":"                throw new DukeException(Ui.displayEventMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":149,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":150,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":151,"author":{"gitId":"limjierui"},"content":"        String getSecondPart \u003d splitMessage[1];","lastModifiedDate":"2022-03-02"},{"lineNumber":152,"author":{"gitId":"limjierui"},"content":"        return getSecondPart.split(regex, 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":153,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":154,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":155,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":156,"author":{"gitId":"limjierui"},"content":"     * Parses the deadline command and check if command is valid. If valid, proceed to execute command.","lastModifiedDate":"2022-03-03"},{"lineNumber":157,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":158,"author":{"gitId":"limjierui"},"content":"     * @param message The message to be separated.","lastModifiedDate":"2022-03-03"},{"lineNumber":159,"author":{"gitId":"limjierui"},"content":"     * @param isDone If task is marked as done.","lastModifiedDate":"2022-03-03"},{"lineNumber":160,"author":{"gitId":"limjierui"},"content":"     * @return Execution of command.","lastModifiedDate":"2022-03-03"},{"lineNumber":161,"author":{"gitId":"limjierui"},"content":"     * @throws DukeException When the description is not given.","lastModifiedDate":"2022-03-03"},{"lineNumber":162,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":163,"author":{"gitId":"limjierui"},"content":"    public static Command parseDeadlineCommand (String message, boolean isDone) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"limjierui"},"content":"        String[] splitSecondPart \u003d splitLongMessage(message, \" /by \", \"deadline\");","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"limjierui"},"content":"        if (splitSecondPart.length !\u003d 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":166,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.displayDeadlineMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":167,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":168,"author":{"gitId":"limjierui"},"content":"        String getDescription \u003d splitSecondPart[0];","lastModifiedDate":"2022-03-02"},{"lineNumber":169,"author":{"gitId":"limjierui"},"content":"        String getDate \u003d splitSecondPart[1];","lastModifiedDate":"2022-03-02"},{"lineNumber":170,"author":{"gitId":"limjierui"},"content":"        if (getDescription.equals(\"\") | getDate.equals(\"\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":171,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.displayDeadlineMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":172,"author":{"gitId":"limjierui"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":173,"author":{"gitId":"limjierui"},"content":"            return new DeadlineCommand(getDescription, isDone, getDate);","lastModifiedDate":"2022-03-02"},{"lineNumber":174,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":175,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":176,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":177,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":178,"author":{"gitId":"limjierui"},"content":"     * Parses the deadline command and check if command is valid. If valid, proceed to execute command.","lastModifiedDate":"2022-03-03"},{"lineNumber":179,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":180,"author":{"gitId":"limjierui"},"content":"     * @param message The message to be separated.","lastModifiedDate":"2022-03-03"},{"lineNumber":181,"author":{"gitId":"limjierui"},"content":"     * @param isDone If task is marked as done.","lastModifiedDate":"2022-03-03"},{"lineNumber":182,"author":{"gitId":"limjierui"},"content":"     * @return Execution of command.","lastModifiedDate":"2022-03-03"},{"lineNumber":183,"author":{"gitId":"limjierui"},"content":"     * @throws DukeException When the description is not given.","lastModifiedDate":"2022-03-03"},{"lineNumber":184,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":185,"author":{"gitId":"limjierui"},"content":"    public static Command parseEventCommand (String message, boolean isDone) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":186,"author":{"gitId":"limjierui"},"content":"        String[] splitSecondPart \u003d splitLongMessage(message, \" /at \",\"event\");","lastModifiedDate":"2022-03-02"},{"lineNumber":187,"author":{"gitId":"limjierui"},"content":"        if (splitSecondPart.length !\u003d 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":188,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.displayEventMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":189,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":190,"author":{"gitId":"limjierui"},"content":"        String getDescription \u003d splitSecondPart[0];","lastModifiedDate":"2022-03-02"},{"lineNumber":191,"author":{"gitId":"limjierui"},"content":"        String getDate \u003d splitSecondPart[1];","lastModifiedDate":"2022-03-02"},{"lineNumber":192,"author":{"gitId":"limjierui"},"content":"        if (getDescription.equals(\"\") | getDate.equals(\"\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":193,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.displayEventMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":194,"author":{"gitId":"limjierui"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":195,"author":{"gitId":"limjierui"},"content":"            return new EventCommand(getDescription, isDone,getDate);","lastModifiedDate":"2022-03-02"},{"lineNumber":196,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":197,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":198,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":199,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":199}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.*;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"import java.io.File;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"public class Storage {","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    protected static final char TODO \u003d \u0027T\u0027;","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"    protected static final char EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    protected static final char DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"    private String filepath;","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"     * Loads contents from the file and adds it to an array.","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"     * @return A list of tasks to be restored.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     * @throws DukeException When there is an IOException.","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"            File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"            f.createNewFile();","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"            ArrayList\u003cTask\u003e listArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"                boolean isDone \u003d true;","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"                String message \u003d s.nextLine();","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"                String[] splitMessage \u003d message.split(\" \\\\| \");","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"                char type \u003d splitMessage[0].charAt(0);","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"limjierui"},"content":"                int status \u003d Integer.parseInt(splitMessage[1]) ;","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"limjierui"},"content":"                if (status \u003d\u003d 0) {","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"limjierui"},"content":"                    isDone \u003d false;","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"limjierui"},"content":"                }","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"limjierui"},"content":"                String description \u003d splitMessage[2];","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"limjierui"},"content":"                switch (type) {","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"limjierui"},"content":"                case TODO:","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"limjierui"},"content":"                    listArray.add(new Todo(description, isDone));","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"limjierui"},"content":"                    break;","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"limjierui"},"content":"                case EVENT:","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"limjierui"},"content":"                    String at \u003d splitMessage[3];","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"limjierui"},"content":"                    listArray.add(new Event(description, isDone, at));","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"limjierui"},"content":"                    break;","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"limjierui"},"content":"                case DEADLINE:","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"limjierui"},"content":"                    String by \u003d splitMessage[3];","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"limjierui"},"content":"                    listArray.add(new Deadline(description, isDone, by));","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"limjierui"},"content":"                    break;","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"limjierui"},"content":"                default:","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"limjierui"},"content":"                    break;","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"limjierui"},"content":"                }","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"limjierui"},"content":"            s.close();","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"limjierui"},"content":"            return listArray;","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"limjierui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"limjierui"},"content":"     * Saves the tasks in the file.","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"limjierui"},"content":"     * @param task A list of tasks to be saved.","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"limjierui"},"content":"     * @throws IOException When there is issue writing to file.","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"limjierui"},"content":"    public void saveFile(TaskList task) throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"limjierui"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"limjierui"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"limjierui"},"content":"            StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"limjierui"},"content":"            for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"limjierui"},"content":"                sb.append(task.get(i).saveTasks());","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"limjierui"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"limjierui"},"content":"            fw.close();","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"limjierui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"limjierui"},"content":"            System.out.println(\"IO exception\");","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"limjierui":90}},{"path":"src/main/java/Duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Tasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"    protected String date;","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"     * Constructs a deadline object.","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"     * @param description The description of deadline to be done.","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"     * @param isDone Whether the task has been done.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"     * @param date deadline of the task to be done.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    public Deadline(String description,boolean isDone, String date) {","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"        super(description,isDone);","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"     * Returns deadline as a readable string.","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"     * @return deadline as a readable string.","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"    public String toString () {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date + \")\";","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     * Saves the tasks in the list as a certain format.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"     * @return String to be saved.","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"    public String saveTasks() {","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"        return \"D \" + super.saveTasks() + \" | \" + this.date + System.lineSeparator();","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"limjierui":40}},{"path":"src/main/java/Duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Tasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":" * Represents an event task.","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"    protected String date;","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"     * Constructs a event object.","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"     * @param description The description of event to be done.","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"     * @param isDone Whether the task has been done.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"     * @param date deadline of the task to be done.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    public Event(String description,boolean isDone, String date) {","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"     * Returns event as a readable string.","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"     * @return event as a readable string.","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"    public String toString () {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date + \")\";","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     * Saves the tasks in the list as a certain format.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"     * @return String to be saved.","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"    public String saveTasks() {","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"        return \"E \" + super.saveTasks() + \" | \" + this.date + System.lineSeparator();","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"limjierui":41}},{"path":"src/main/java/Duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Tasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":" * Represents a task.","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"public class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"    public String description;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"     * Constructs a task object.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"     * @param isDone Whether the task has been done.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"        } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"     * Assigns a character if the task is done.","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"     * @return \"X\" if the task is done, and \" \" if it is not.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"        return description;","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"     * Represent that the task is done.","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"     * @return true as task is marked as done.","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"limjierui"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"limjierui"},"content":"        return isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"limjierui"},"content":"     * Represent that the task is not done.","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"limjierui"},"content":"     * @return false as task is marked as not done.","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"limjierui"},"content":"    public boolean unMark() {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"limjierui"},"content":"        return isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"limjierui"},"content":"    public String saveTasks() {","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"limjierui"},"content":"        int isMarked \u003d 0;","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"limjierui"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"limjierui"},"content":"            isMarked \u003d 1;","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"limjierui"},"content":"        return \"| \" + isMarked + \" | \" + this.description ;","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"limjierui"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"limjierui"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"limjierui":69}},{"path":"src/main/java/Duke/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Tasks;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":" * Represents the list of tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"public class TaskList {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"    public TaskList(ArrayList\u003cTask\u003e listArray) {","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"        this.tasks \u003d listArray;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    public TaskList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"        tasks.add(task);","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     * Represents the size of the task list.","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"     * @return size of the task list.","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"    public int size() {","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"        return tasks.size();","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"    public void markItem(int index) {","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"limjierui"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"limjierui"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"limjierui"},"content":"     * @param index Index of the task to be unmarked.","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"limjierui"},"content":"    public void unMarkItem(int index) {","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"limjierui"},"content":"        tasks.get(index).unMark();","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"limjierui"},"content":"     * Represents the task.","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"limjierui"},"content":"     * @param index Index of the task.","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"limjierui"},"content":"     * @return The task.","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"limjierui"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"limjierui"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"limjierui"},"content":"     * Deletes the task from the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"limjierui"},"content":"     * @param index Index of the task to delete.","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"limjierui"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"limjierui"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"limjierui"},"content":"     * Checks if the list is empty.","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"limjierui"},"content":"     * @return true if list is empty, false otherwise","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"limjierui"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"limjierui"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"limjierui"},"content":"    public TaskList findItem (String description) {","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"limjierui"},"content":"        ArrayList\u003cTask\u003e filteredTask \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"limjierui"},"content":"                .filter((t) -\u003e t.getDescription().contains(description))","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"limjierui"},"content":"                .collect(toList());","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"limjierui"},"content":"        TaskList newTaskList \u003d new TaskList(filteredTask);","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"limjierui"},"content":"        return newTaskList;","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":90}},{"path":"src/main/java/Duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Tasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":" * Represents a todo task.","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"     * Constructs a todo object.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"     * @param description The description of event to be done.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"     * @param isDone Whether the task has been done","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"     * Returns todo as a readable string.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     * @return todo as a readable string.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"    public String toString () {","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     * Saves the tasks in the list as a certain format.","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"     * @return String to be saved.","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"    public String saveTasks() {","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"        return \"T \" + super.saveTasks() + System.lineSeparator();","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"limjierui":37}},{"path":"src/main/java/Duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"package Duke.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"public class Ui {","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"    private static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"    private static final String ANSI_BLUE \u003d \"\\u001B[34m\";","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"    public static final String DISPLAY_LINE \u003d \"----------------------------------------------------\";","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"    private static Scanner in;","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"    protected static final int LISTSIZE \u003d 1;","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"limjierui"},"content":"     * Constructs a user interface object.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"    public Ui () {","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"limjierui"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"limjierui"},"content":"     * Displays an example of the correct \u0027mark\u0027 command to users.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"limjierui"},"content":"     * @param taskList The task object that contains the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"limjierui"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"limjierui"},"content":"    public static String displayMarkMessage(TaskList taskList) {","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"limjierui"},"content":"        String checkGrammer \u003d \"items\";","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"limjierui"},"content":"        if (taskList.size() \u003d\u003d LISTSIZE) {","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"limjierui"},"content":"            checkGrammer \u003d \"item\";","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"limjierui"},"content":"        return DISPLAY_LINE + System.lineSeparator() + \"There are \" + taskList.size() + \" \"","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"limjierui"},"content":"                + checkGrammer + \" in the list\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"limjierui"},"content":"                + \"Please input which item you would like to mark.\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"limjierui"},"content":"                + \"For eg. \u0027mark 2\u0027 \\n\"+ DISPLAY_LINE;","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"limjierui"},"content":"     * Displays an example of the correct \u0027unmark\u0027 command to users.","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"limjierui"},"content":"     * @param taskList The task object that contains the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"limjierui"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"limjierui"},"content":"    public static String displayUnmarkMessage(TaskList taskList) {","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"limjierui"},"content":"        String checkGrammer \u003d \"items\";","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"limjierui"},"content":"        if (taskList.size() \u003d\u003d LISTSIZE) {","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"limjierui"},"content":"            checkGrammer \u003d \"item\";","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"limjierui"},"content":"        return DISPLAY_LINE + System.lineSeparator() + \"There are \" + taskList.size() + \" \"","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"limjierui"},"content":"                + checkGrammer + \" in the list\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"limjierui"},"content":"                + \"Please input which item you would like to unmark.\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"limjierui"},"content":"                + \"For eg. \u0027unmark 2\u0027 \\n\"+ DISPLAY_LINE;","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"limjierui"},"content":"     * Displays an example of the correct \u0027delete\u0027 command to users.","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"limjierui"},"content":"     * @param taskList The task object that contains the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"limjierui"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"limjierui"},"content":"    public static String displayDeleteMessage(TaskList taskList) {","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"limjierui"},"content":"        String checkGrammer \u003d \"items\";","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"limjierui"},"content":"        if (taskList.size() \u003d\u003d LISTSIZE) {","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"limjierui"},"content":"            checkGrammer \u003d \"item\";","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"limjierui"},"content":"        return DISPLAY_LINE + System.lineSeparator()+ \"There are \" + taskList.size() + \" \"","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"limjierui"},"content":"                + checkGrammer + \" in the list\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"limjierui"},"content":"                + \"Please input which item you would like to delete.\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"limjierui"},"content":"                + \"For eg. \u0027delete 2\u0027 \\n\"+ DISPLAY_LINE;","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"limjierui"},"content":"     * Informs the user that the list is empty.","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"limjierui"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"limjierui"},"content":"    public static String displayListMessage() {","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"limjierui"},"content":"        return DISPLAY_LINE + System.lineSeparator() + \"There are no items in the list, please add something!:)\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"limjierui"},"content":"                + DISPLAY_LINE;","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"limjierui"},"content":"     * Displays an example of the correct \u0027todo\u0027 command to users.","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"limjierui"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"limjierui"},"content":"    public static String displayTodoMessage() {","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"limjierui"},"content":"        return DISPLAY_LINE + System.lineSeparator() + \"Please input a description\\n\" +","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"limjierui"},"content":"                \"For eg. \u0027todo borrow book\u0027\\n\" + DISPLAY_LINE;","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"limjierui"},"content":"     * Displays an example of the correct \u0027deadline\u0027 command to users.","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"limjierui"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"limjierui"},"content":"    public static String displayDeadlineMessage() {","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"limjierui"},"content":"        return DISPLAY_LINE + System.lineSeparator() + \"Please input a description, \u0027/by\u0027, date\\n\" +","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"limjierui"},"content":"                \"For eg. \u0027deadline work /by Sunday\u0027\\n\" + DISPLAY_LINE;","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":109,"author":{"gitId":"limjierui"},"content":"     * Displays an example of the correct \u0027event\u0027 command to users.","lastModifiedDate":"2022-03-03"},{"lineNumber":110,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"limjierui"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":113,"author":{"gitId":"limjierui"},"content":"    public static String displayEventMessage() {","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"limjierui"},"content":"        return DISPLAY_LINE + System.lineSeparator() + \"Please input a description, \u0027/at\u0027, date\\n\" +","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"limjierui"},"content":"                \"For eg. \u0027event meeting /at Mon 2-4pm\u0027\\n\" + DISPLAY_LINE;","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"limjierui"},"content":"     * Informs the user that the command is an invalid command.","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"limjierui"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"limjierui"},"content":"    public static String displayInvalidInputMessage() {","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"limjierui"},"content":"        return (\"Please input a valid command:)\\n\" + DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"limjierui"},"content":"     * Informs the user that the saved file cannot be loaded.","lastModifiedDate":"2022-03-03"},{"lineNumber":129,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":130,"author":{"gitId":"limjierui"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"limjierui"},"content":"    public static String displayInvalidLoadmessage() {","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"limjierui"},"content":"        return(\"There was an error in loading the file\" + DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":135,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":137,"author":{"gitId":"limjierui"},"content":"     * Displays a greeting message when the program is initialized.","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"limjierui"},"content":"    public void displayGreetMessage() {","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"limjierui"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"limjierui"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"limjierui"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"limjierui"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"limjierui"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-03-02"},{"lineNumber":145,"author":{"gitId":"limjierui"},"content":"        System.out.println(ANSI_BLUE + DISPLAY_LINE + System.lineSeparator() + logo);","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"limjierui"},"content":"        System.out.println(\"Hello! Duke here!:)\");","lastModifiedDate":"2022-03-02"},{"lineNumber":147,"author":{"gitId":"limjierui"},"content":"        System.out.print(\"Is there anything I can do for you?\\n\" + DISPLAY_LINE + System.lineSeparator()","lastModifiedDate":"2022-03-02"},{"lineNumber":148,"author":{"gitId":"limjierui"},"content":"                + ANSI_RESET);","lastModifiedDate":"2022-03-02"},{"lineNumber":149,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":150,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":151,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":152,"author":{"gitId":"limjierui"},"content":"     * Displays the items in the task list.","lastModifiedDate":"2022-03-03"},{"lineNumber":153,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":154,"author":{"gitId":"limjierui"},"content":"     * @param taskList The TaskList object that contains the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":155,"author":{"gitId":"limjierui"},"content":"     * @throws DukeException Exception that is thrown when list is empty.","lastModifiedDate":"2022-03-03"},{"lineNumber":156,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":157,"author":{"gitId":"limjierui"},"content":"    public static void listItems (TaskList taskList) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":158,"author":{"gitId":"limjierui"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-02"},{"lineNumber":159,"author":{"gitId":"limjierui"},"content":"            throw new DukeException(Ui.displayListMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":160,"author":{"gitId":"limjierui"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"limjierui"},"content":"            System.out.println(DISPLAY_LINE  + System.lineSeparator() + \"Here are the tasks in your list: \");","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"limjierui"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"limjierui"},"content":"                System.out.print(i + 1 + \". \");","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"limjierui"},"content":"                System.out.println(taskList.get(i));","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"limjierui"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":166,"author":{"gitId":"limjierui"},"content":"            System.out.println(DISPLAY_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":167,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":168,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":169,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":170,"author":{"gitId":"limjierui"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":171,"author":{"gitId":"limjierui"},"content":"     * Saves the current list and bids the user goodbye.","lastModifiedDate":"2022-03-03"},{"lineNumber":172,"author":{"gitId":"limjierui"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":173,"author":{"gitId":"limjierui"},"content":"     * @param storage Storage object that contains the saveFile method.","lastModifiedDate":"2022-03-03"},{"lineNumber":174,"author":{"gitId":"limjierui"},"content":"     * @param taskList The TaskList object that contains the tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":175,"author":{"gitId":"limjierui"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":176,"author":{"gitId":"limjierui"},"content":"    public static void exit(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-03-02"},{"lineNumber":177,"author":{"gitId":"limjierui"},"content":"        try {","lastModifiedDate":"2022-03-02"},{"lineNumber":178,"author":{"gitId":"limjierui"},"content":"            storage.saveFile(taskList);","lastModifiedDate":"2022-03-02"},{"lineNumber":179,"author":{"gitId":"limjierui"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":180,"author":{"gitId":"limjierui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-02"},{"lineNumber":181,"author":{"gitId":"limjierui"},"content":"            System.out.println(\"IO error\");","lastModifiedDate":"2022-03-02"},{"lineNumber":182,"author":{"gitId":"limjierui"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":183,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":184,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":185,"author":{"gitId":"limjierui"},"content":"    public String readCommand() {","lastModifiedDate":"2022-03-02"},{"lineNumber":186,"author":{"gitId":"limjierui"},"content":"        return in.nextLine();","lastModifiedDate":"2022-03-02"},{"lineNumber":187,"author":{"gitId":"limjierui"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":188,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":189,"author":{"gitId":"limjierui"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":189}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"E | 0 | project meeting | mon 2-4pm","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"limjierui":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limjierui"},"content":"todo borrow book","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"limjierui"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"limjierui"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"limjierui"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"limjierui"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"limjierui"},"content":"mark 1","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"limjierui"},"content":"unmark 1","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"limjierui"},"content":"mark 5","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"limjierui"},"content":"deadline work by","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"list","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"find book","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"limjierui"},"content":"find","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"limjierui"},"content":"todo","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"limjierui"},"content":"delete 2","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"limjierui"},"content":"list","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"delete","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"limjierui"},"content":"delete 1","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"limjierui"},"content":"anyhowcommand","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"bye","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"limjierui":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"limjierui"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\*.java ..\\src\\main\\java\\Duke\\Commands\\*.java ..\\src\\main\\java\\Duke\\Tasks\\*.java ..\\src\\main\\java\\Duke\\Storage\\*.java ..\\src\\main\\java\\Duke\\Parser\\*.java ..\\src\\main\\java\\Duke\\Ui\\*.java","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"limjierui"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"limjierui"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limjierui":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"limjierui"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke/*.java ../src/main/java/Duke/Commands/*.java ../src/main/java/Duke/Tasks/*.java ../src/main/java/Duke/Parser/*.java ../src/main/java/Duke/Storage/*.java ../src/main/java/Duke/Ui/*.java","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"limjierui"},"content":"java -classpath ../bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limjierui":2,"-":36}}]
