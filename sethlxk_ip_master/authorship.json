[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"# duke.application.Duke project template","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sethlxk"},"content":"3. After that, locate the `src/main/java/duke.application.Duke.java` file, right-click it, and choose `Run duke.application.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sethlxk":2,"-":22}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"[T][ ] booj","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"[E][ ] dinz (at: 8)","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sethlxk":2}},{"path":"src/main/java/duke/application/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.application;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"//java imports","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"sethlxk"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"sethlxk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"sethlxk"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"sethlxk"},"content":"import java.io.File;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"sethlxk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sethlxk"},"content":"//entity classes imports","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"sethlxk"},"content":"import duke.entity.Deadline;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"sethlxk"},"content":"import duke.entity.Event;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"sethlxk"},"content":"import duke.entity.Task;","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"sethlxk"},"content":"import duke.entity.Todo;","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"sethlxk"},"content":"//exception classes imports","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"sethlxk"},"content":"import duke.exception.*;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"sethlxk"},"content":"        dukeIntro();","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"sethlxk"},"content":"        File f \u003d loadFile();","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"sethlxk"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sethlxk"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sethlxk"},"content":"        String userInput \u003d null;","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"sethlxk"},"content":"        do {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sethlxk"},"content":"            try {","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"sethlxk"},"content":"                userInput \u003d sc.nextLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"sethlxk"},"content":"                checkInputValidity(userInput);","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"sethlxk"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"sethlxk"},"content":"                    break;","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sethlxk"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"sethlxk"},"content":"                    displayList(taskArray);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"sethlxk"},"content":"                } else if (userInput.contains(\"unmark\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"sethlxk"},"content":"                    try{","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"sethlxk"},"content":"                        unmarkTask(taskArray, userInput);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"sethlxk"},"content":"                        displayUnmarkedTask(taskArray, userInput);","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"sethlxk"},"content":"                    catch (IllegalUnmarkException e){","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"sethlxk"},"content":"                        displayUnmarkErrorMessage();","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"sethlxk"},"content":"                } else if (userInput.contains(\"mark\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"sethlxk"},"content":"                    try {","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"sethlxk"},"content":"                        markTask(taskArray, userInput);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"sethlxk"},"content":"                        displayMarkedTask(taskArray, userInput);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"sethlxk"},"content":"                    catch (IllegalMarkException e){","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"sethlxk"},"content":"                        displayMarkErrorMessage();","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"sethlxk"},"content":"                } else if (userInput.contains(\"deadline\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"sethlxk"},"content":"                    try {","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"sethlxk"},"content":"                        addDeadline(taskArray, userInput);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"sethlxk"},"content":"                        displayTask(taskArray);","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"sethlxk"},"content":"                    catch (IllegalDeadlineException e){","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"sethlxk"},"content":"                        displayDeadLineErrorMessage();","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"sethlxk"},"content":"                } else if (userInput.contains(\"event\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"sethlxk"},"content":"                    try {","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"sethlxk"},"content":"                        addEvent(taskArray, userInput);","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"sethlxk"},"content":"                        displayTask(taskArray);","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"sethlxk"},"content":"                    catch (IllegalEventException e){","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"sethlxk"},"content":"                        displayEventErrorMessage();","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"sethlxk"},"content":"                } else if (userInput.contains(\"todo\")){","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"sethlxk"},"content":"                    try {","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"sethlxk"},"content":"                        addTodo(taskArray, userInput);","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"sethlxk"},"content":"                        displayTask(taskArray);","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"sethlxk"},"content":"                    catch (IllegalTodoException e){","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"sethlxk"},"content":"                        displayTodoErrorMessage();","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"sethlxk"},"content":"                } else if (userInput.contains(\"delete\")){","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"sethlxk"},"content":"                    try {","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"sethlxk"},"content":"                        displayDeletedTask(taskArray, userInput);","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"sethlxk"},"content":"                    catch (IllegalDeleteException e){","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"sethlxk"},"content":"                        displayDeleteErrorMessage();","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"sethlxk"},"content":"                } else if (userInput.contains(\"find\")){","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"sethlxk"},"content":"                    try {","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"sethlxk"},"content":"                        displayFoundTasks(taskArray, userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":87,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"sethlxk"},"content":"                    catch (IllegalFindException e){","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"sethlxk"},"content":"                        displayFindErrorMessage();","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"sethlxk"},"content":"                    }","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"sethlxk"},"content":"                }","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"sethlxk"},"content":"                try {","lastModifiedDate":"2022-02-14"},{"lineNumber":93,"author":{"gitId":"sethlxk"},"content":"                    saveFile(f, taskArray);","lastModifiedDate":"2022-02-14"},{"lineNumber":94,"author":{"gitId":"sethlxk"},"content":"                }catch (IOException e){","lastModifiedDate":"2022-02-14"},{"lineNumber":95,"author":{"gitId":"sethlxk"},"content":"                    displayFileErrorMessage();","lastModifiedDate":"2022-02-14"},{"lineNumber":96,"author":{"gitId":"sethlxk"},"content":"                }","lastModifiedDate":"2022-02-14"},{"lineNumber":97,"author":{"gitId":"sethlxk"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":98,"author":{"gitId":"sethlxk"},"content":"            catch (DukeException e){","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"sethlxk"},"content":"                displayMainErrorMessage();","lastModifiedDate":"2022-02-10"},{"lineNumber":100,"author":{"gitId":"sethlxk"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"sethlxk"},"content":"        }while (!userInput.equals(\"bye\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"sethlxk"},"content":"        dukeExit();","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"sethlxk"},"content":"    //main duke methods","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":109,"author":{"gitId":"sethlxk"},"content":"     * Prints a welcome message from Duke","lastModifiedDate":"2022-02-25"},{"lineNumber":110,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"sethlxk"},"content":"    public static void dukeIntro(){","lastModifiedDate":"2022-02-03"},{"lineNumber":112,"author":{"gitId":"sethlxk"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"sethlxk"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":114,"author":{"gitId":"sethlxk"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":115,"author":{"gitId":"sethlxk"},"content":"                + \"| |_| | |_| |   \u003c  /\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":116,"author":{"gitId":"sethlxk"},"content":"                + \"|____/ \\\\,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Hey! What\u0027s up\\n\" + logo);","lastModifiedDate":"2022-02-10"},{"lineNumber":118,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-02-03"},{"lineNumber":119,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Ayo my name\u0027s duke!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":120,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"What\u0027s up?\");","lastModifiedDate":"2022-02-03"},{"lineNumber":121,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-02-03"},{"lineNumber":122,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":125,"author":{"gitId":"sethlxk"},"content":"     * parses through the user input and checks if it is a valid command","lastModifiedDate":"2022-02-25"},{"lineNumber":126,"author":{"gitId":"sethlxk"},"content":"     * @param userInput String input command","lastModifiedDate":"2022-02-25"},{"lineNumber":127,"author":{"gitId":"sethlxk"},"content":"     * @throws DukeException If command is not valid","lastModifiedDate":"2022-02-25"},{"lineNumber":128,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":129,"author":{"gitId":"sethlxk"},"content":"    public static void checkInputValidity(String userInput) throws DukeException {","lastModifiedDate":"2022-02-10"},{"lineNumber":130,"author":{"gitId":"sethlxk"},"content":"        String[] validInputs \u003d {\"list\",\"unmark\",\"mark\",\"deadline\",\"event\",\"todo\",\"delete\",\"find\"};","lastModifiedDate":"2022-02-25"},{"lineNumber":131,"author":{"gitId":"sethlxk"},"content":"        if (userInput.length() \u003d\u003d 0){","lastModifiedDate":"2022-02-10"},{"lineNumber":132,"author":{"gitId":"sethlxk"},"content":"            throw new DukeException();","lastModifiedDate":"2022-02-10"},{"lineNumber":133,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":134,"author":{"gitId":"sethlxk"},"content":"        boolean isValidCommand \u003d Arrays.stream(validInputs).anyMatch(userInput::contains);","lastModifiedDate":"2022-02-10"},{"lineNumber":135,"author":{"gitId":"sethlxk"},"content":"        if (!isValidCommand){","lastModifiedDate":"2022-02-10"},{"lineNumber":136,"author":{"gitId":"sethlxk"},"content":"            throw new DukeException();","lastModifiedDate":"2022-02-10"},{"lineNumber":137,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":138,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":139,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":140,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":141,"author":{"gitId":"sethlxk"},"content":"     * prints out the error message and tells user what to input","lastModifiedDate":"2022-02-25"},{"lineNumber":142,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":143,"author":{"gitId":"sethlxk"},"content":"    public static void displayMainErrorMessage(){","lastModifiedDate":"2022-02-10"},{"lineNumber":144,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Hey man you got to give me something to work with!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":145,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Start your command with todo, event, deadline, mark, unmark, list, delete, find or bye! Bye Bye!\");","lastModifiedDate":"2022-02-25"},{"lineNumber":146,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":147,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":148,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":149,"author":{"gitId":"sethlxk"},"content":"     * prints the exit message","lastModifiedDate":"2022-02-25"},{"lineNumber":150,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":151,"author":{"gitId":"sethlxk"},"content":"    public static void dukeExit(){","lastModifiedDate":"2022-02-10"},{"lineNumber":152,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-02-10"},{"lineNumber":153,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Cheers! See you!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":154,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-02-10"},{"lineNumber":155,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":156,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":157,"author":{"gitId":"sethlxk"},"content":"    //file methods","lastModifiedDate":"2022-02-14"},{"lineNumber":158,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":159,"author":{"gitId":"sethlxk"},"content":"    public static File loadFile(){","lastModifiedDate":"2022-02-14"},{"lineNumber":160,"author":{"gitId":"sethlxk"},"content":"        return new File(\"duke.txt\");","lastModifiedDate":"2022-02-26"},{"lineNumber":161,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":162,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":163,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":164,"author":{"gitId":"sethlxk"},"content":"     * saves the changes to the task array to the file","lastModifiedDate":"2022-02-25"},{"lineNumber":165,"author":{"gitId":"sethlxk"},"content":"     * @param f File containing the array of tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":166,"author":{"gitId":"sethlxk"},"content":"     * @param taskArray array of tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":167,"author":{"gitId":"sethlxk"},"content":"     * @throws IOException if the file path is invalid","lastModifiedDate":"2022-02-25"},{"lineNumber":168,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":169,"author":{"gitId":"sethlxk"},"content":"    public static void saveFile(File f, ArrayList\u003cTask\u003e taskArray) throws IOException {","lastModifiedDate":"2022-02-14"},{"lineNumber":170,"author":{"gitId":"sethlxk"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2022-02-14"},{"lineNumber":171,"author":{"gitId":"sethlxk"},"content":"        for (Task t : taskArray) {","lastModifiedDate":"2022-02-14"},{"lineNumber":172,"author":{"gitId":"sethlxk"},"content":"            fw.write(t.toString() + \"\\n\");","lastModifiedDate":"2022-02-14"},{"lineNumber":173,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":174,"author":{"gitId":"sethlxk"},"content":"        fw.close();","lastModifiedDate":"2022-02-14"},{"lineNumber":175,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":176,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":177,"author":{"gitId":"sethlxk"},"content":"    public static void displayFileErrorMessage(){","lastModifiedDate":"2022-02-14"},{"lineNumber":178,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Oopsies! Something went wrong while saving\");","lastModifiedDate":"2022-02-14"},{"lineNumber":179,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":180,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":181,"author":{"gitId":"sethlxk"},"content":"    //list methods","lastModifiedDate":"2022-02-10"},{"lineNumber":182,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":183,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":184,"author":{"gitId":"sethlxk"},"content":"     * displays the list of tasks in the task array","lastModifiedDate":"2022-02-25"},{"lineNumber":185,"author":{"gitId":"sethlxk"},"content":"     * @param taskArray containing the array of tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":186,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":187,"author":{"gitId":"sethlxk"},"content":"    public static void displayList(ArrayList\u003cTask\u003e taskArray){","lastModifiedDate":"2022-02-04"},{"lineNumber":188,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-02-04"},{"lineNumber":189,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Here\u0027s what you got to do! Seize the day!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":190,"author":{"gitId":"sethlxk"},"content":"        for (int j \u003d 0; j \u003c taskArray.size(); j++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":191,"author":{"gitId":"sethlxk"},"content":"            System.out.println(j + 1 + \". \" + taskArray.get(j).toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":192,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":193,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-02-04"},{"lineNumber":194,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":195,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":196,"author":{"gitId":"sethlxk"},"content":"    //task methods","lastModifiedDate":"2022-02-10"},{"lineNumber":197,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":198,"author":{"gitId":"sethlxk"},"content":"    public static void addTask(ArrayList\u003cTask\u003e taskArray, Task t){","lastModifiedDate":"2022-02-10"},{"lineNumber":199,"author":{"gitId":"sethlxk"},"content":"        taskArray.add(t);","lastModifiedDate":"2022-02-10"},{"lineNumber":200,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":201,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":202,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":203,"author":{"gitId":"sethlxk"},"content":"     * displays the latest task added to the task array","lastModifiedDate":"2022-02-25"},{"lineNumber":204,"author":{"gitId":"sethlxk"},"content":"     * @param taskArray","lastModifiedDate":"2022-02-25"},{"lineNumber":205,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":206,"author":{"gitId":"sethlxk"},"content":"    public static void displayTask(ArrayList\u003cTask\u003e taskArray){","lastModifiedDate":"2022-02-10"},{"lineNumber":207,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Gotcha. Here\u0027s what you have to do\");","lastModifiedDate":"2022-02-10"},{"lineNumber":208,"author":{"gitId":"sethlxk"},"content":"        System.out.println(taskArray.get(taskArray.size()-1).toString());","lastModifiedDate":"2022-02-10"},{"lineNumber":209,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"There are \" + taskArray.size() + \" tasks in the list\");","lastModifiedDate":"2022-02-10"},{"lineNumber":210,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":211,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":212,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":213,"author":{"gitId":"sethlxk"},"content":"     * obtains the index of the task in the task array","lastModifiedDate":"2022-02-25"},{"lineNumber":214,"author":{"gitId":"sethlxk"},"content":"     * @param userInput String input command","lastModifiedDate":"2022-02-25"},{"lineNumber":215,"author":{"gitId":"sethlxk"},"content":"     * @return returns the index of the task in the task array","lastModifiedDate":"2022-02-25"},{"lineNumber":216,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":217,"author":{"gitId":"sethlxk"},"content":"    public static int getTaskIndex(String userInput){","lastModifiedDate":"2022-02-14"},{"lineNumber":218,"author":{"gitId":"sethlxk"},"content":"        String[] temp \u003d new String[100];","lastModifiedDate":"2022-02-04"},{"lineNumber":219,"author":{"gitId":"sethlxk"},"content":"        temp \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-04"},{"lineNumber":220,"author":{"gitId":"sethlxk"},"content":"        int num \u003d Integer.parseInt(temp[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":221,"author":{"gitId":"sethlxk"},"content":"        return num;","lastModifiedDate":"2022-02-04"},{"lineNumber":222,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":223,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":224,"author":{"gitId":"sethlxk"},"content":"    public static String findTask(String userInput) throws IllegalFindException{","lastModifiedDate":"2022-03-20"},{"lineNumber":225,"author":{"gitId":"sethlxk"},"content":"        if (userInput.length() \u003c\u003d 4){","lastModifiedDate":"2022-03-20"},{"lineNumber":226,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalFindException();","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":228,"author":{"gitId":"sethlxk"},"content":"        String temp \u003d userInput.split(\" \")[1];","lastModifiedDate":"2022-02-25"},{"lineNumber":229,"author":{"gitId":"sethlxk"},"content":"        return temp;","lastModifiedDate":"2022-02-25"},{"lineNumber":230,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":231,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":232,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":233,"author":{"gitId":"sethlxk"},"content":"     * displays the tasks in the task array that correspond to the find keyword","lastModifiedDate":"2022-02-25"},{"lineNumber":234,"author":{"gitId":"sethlxk"},"content":"     * @param taskArray array of tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":235,"author":{"gitId":"sethlxk"},"content":"     * @param userInput String input command with the find keyword","lastModifiedDate":"2022-02-25"},{"lineNumber":236,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":237,"author":{"gitId":"sethlxk"},"content":"    public static void displayFoundTasks(ArrayList\u003cTask\u003e taskArray, String userInput) throws IllegalFindException{","lastModifiedDate":"2022-03-20"},{"lineNumber":238,"author":{"gitId":"sethlxk"},"content":"        String temp \u003d findTask(userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":239,"author":{"gitId":"sethlxk"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-02-25"},{"lineNumber":240,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Here are the matching tasks found!\");","lastModifiedDate":"2022-02-25"},{"lineNumber":241,"author":{"gitId":"sethlxk"},"content":"        for (Task t : taskArray){","lastModifiedDate":"2022-02-25"},{"lineNumber":242,"author":{"gitId":"sethlxk"},"content":"            if (t.getDescription().equals(temp)){","lastModifiedDate":"2022-03-20"},{"lineNumber":243,"author":{"gitId":"sethlxk"},"content":"                System.out.println(++count + \".\" + t.toString());","lastModifiedDate":"2022-02-25"},{"lineNumber":244,"author":{"gitId":"sethlxk"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":245,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":246,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":247,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":248,"author":{"gitId":"sethlxk"},"content":"    public static void displayFindErrorMessage(){","lastModifiedDate":"2022-03-20"},{"lineNumber":249,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Hey! Please enter a valid find keyword\");","lastModifiedDate":"2022-03-20"},{"lineNumber":250,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":251,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":252,"author":{"gitId":"sethlxk"},"content":"    //delete methods","lastModifiedDate":"2022-02-14"},{"lineNumber":253,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":254,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":255,"author":{"gitId":"sethlxk"},"content":"     * removes the specific task from the task array","lastModifiedDate":"2022-02-25"},{"lineNumber":256,"author":{"gitId":"sethlxk"},"content":"     * @param taskArray array of tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":257,"author":{"gitId":"sethlxk"},"content":"     * @param userInput String input command","lastModifiedDate":"2022-02-25"},{"lineNumber":258,"author":{"gitId":"sethlxk"},"content":"     * @return returns the deleted task","lastModifiedDate":"2022-02-25"},{"lineNumber":259,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":260,"author":{"gitId":"sethlxk"},"content":"    public static Task deleteTask(ArrayList\u003cTask\u003e taskArray, String userInput) throws IllegalDeleteException{","lastModifiedDate":"2022-03-20"},{"lineNumber":261,"author":{"gitId":"sethlxk"},"content":"        int num \u003d getTaskIndex(userInput);","lastModifiedDate":"2022-02-14"},{"lineNumber":262,"author":{"gitId":"sethlxk"},"content":"        if (num \u003c\u003d 0 || num \u003e taskArray.size()){","lastModifiedDate":"2022-03-20"},{"lineNumber":263,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalDeleteException();","lastModifiedDate":"2022-03-20"},{"lineNumber":264,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":265,"author":{"gitId":"sethlxk"},"content":"        Task t \u003d taskArray.get(num-1);","lastModifiedDate":"2022-02-14"},{"lineNumber":266,"author":{"gitId":"sethlxk"},"content":"        taskArray.remove(num-1);","lastModifiedDate":"2022-02-14"},{"lineNumber":267,"author":{"gitId":"sethlxk"},"content":"        return t;","lastModifiedDate":"2022-02-14"},{"lineNumber":268,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":269,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":270,"author":{"gitId":"sethlxk"},"content":"    public static void displayDeletedTask(ArrayList\u003cTask\u003e taskArray, String userInput) throws IllegalDeleteException{","lastModifiedDate":"2022-03-20"},{"lineNumber":271,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-02-14"},{"lineNumber":272,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Hey, I\u0027ve removed this task for you. Focus on the others ahead!\");","lastModifiedDate":"2022-02-14"},{"lineNumber":273,"author":{"gitId":"sethlxk"},"content":"        System.out.println(deleteTask(taskArray, userInput).toString());","lastModifiedDate":"2022-02-14"},{"lineNumber":274,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"There are still \" + taskArray.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":275,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":276,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":277,"author":{"gitId":"sethlxk"},"content":"    public static void displayDeleteErrorMessage(){","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Hey! Please enter a valid index to delete\");","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"sethlxk"},"content":"    //unmark methods","lastModifiedDate":"2022-02-10"},{"lineNumber":282,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":283,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":284,"author":{"gitId":"sethlxk"},"content":"     * set the task to unmarked","lastModifiedDate":"2022-02-25"},{"lineNumber":285,"author":{"gitId":"sethlxk"},"content":"     * @param taskArray array of tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":286,"author":{"gitId":"sethlxk"},"content":"     * @param userInput String input command","lastModifiedDate":"2022-02-25"},{"lineNumber":287,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":288,"author":{"gitId":"sethlxk"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e taskArray, String userInput) throws IllegalUnmarkException{","lastModifiedDate":"2022-03-20"},{"lineNumber":289,"author":{"gitId":"sethlxk"},"content":"        int num \u003d getTaskIndex(userInput);","lastModifiedDate":"2022-02-14"},{"lineNumber":290,"author":{"gitId":"sethlxk"},"content":"        if (num \u003c\u003d 0 || num \u003e taskArray.size()){","lastModifiedDate":"2022-03-20"},{"lineNumber":291,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalUnmarkException();","lastModifiedDate":"2022-03-20"},{"lineNumber":292,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":293,"author":{"gitId":"sethlxk"},"content":"        taskArray.get(num-1).markAsUndone();","lastModifiedDate":"2022-02-10"},{"lineNumber":294,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":295,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":296,"author":{"gitId":"sethlxk"},"content":"    public static void displayUnmarkedTask(ArrayList\u003cTask\u003e taskArray, String userInput){","lastModifiedDate":"2022-02-04"},{"lineNumber":297,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-02-04"},{"lineNumber":298,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"What are you waiting for? Just do it!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":299,"author":{"gitId":"sethlxk"},"content":"        System.out.println(taskArray.get(getTaskIndex(userInput)-1).toString());","lastModifiedDate":"2022-02-14"},{"lineNumber":300,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":301,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":302,"author":{"gitId":"sethlxk"},"content":"    public static void displayUnmarkErrorMessage(){","lastModifiedDate":"2022-03-20"},{"lineNumber":303,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Hey, please enter a valid index!\");","lastModifiedDate":"2022-03-20"},{"lineNumber":304,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":305,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":306,"author":{"gitId":"sethlxk"},"content":"    //mark methods","lastModifiedDate":"2022-02-10"},{"lineNumber":307,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":308,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":309,"author":{"gitId":"sethlxk"},"content":"     * set the task to marked","lastModifiedDate":"2022-02-25"},{"lineNumber":310,"author":{"gitId":"sethlxk"},"content":"     * @param taskArray array of tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":311,"author":{"gitId":"sethlxk"},"content":"     * @param userInput String input command","lastModifiedDate":"2022-02-25"},{"lineNumber":312,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":313,"author":{"gitId":"sethlxk"},"content":"    public static void markTask(ArrayList\u003cTask\u003e taskArray, String userInput) throws IllegalMarkException{","lastModifiedDate":"2022-03-20"},{"lineNumber":314,"author":{"gitId":"sethlxk"},"content":"        int num \u003d getTaskIndex(userInput);","lastModifiedDate":"2022-02-14"},{"lineNumber":315,"author":{"gitId":"sethlxk"},"content":"        if (num \u003c\u003d 0 || num \u003e taskArray.size()){","lastModifiedDate":"2022-03-20"},{"lineNumber":316,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalMarkException();","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":318,"author":{"gitId":"sethlxk"},"content":"        taskArray.get(num-1).markAsDone();","lastModifiedDate":"2022-02-10"},{"lineNumber":319,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":320,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":321,"author":{"gitId":"sethlxk"},"content":"    public static void displayMarkedTask(ArrayList\u003cTask\u003e taskArray, String userInput){","lastModifiedDate":"2022-02-04"},{"lineNumber":322,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-02-04"},{"lineNumber":323,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Go get it king, well done!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":324,"author":{"gitId":"sethlxk"},"content":"        System.out.println(taskArray.get(getTaskIndex(userInput)-1).toString());","lastModifiedDate":"2022-02-14"},{"lineNumber":325,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":326,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":327,"author":{"gitId":"sethlxk"},"content":"    public static void displayMarkErrorMessage(){","lastModifiedDate":"2022-03-20"},{"lineNumber":328,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Hey, please enter a valid index!\");","lastModifiedDate":"2022-03-20"},{"lineNumber":329,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":330,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":331,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":332,"author":{"gitId":"sethlxk"},"content":"    //deadline methods","lastModifiedDate":"2022-02-10"},{"lineNumber":333,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":334,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":335,"author":{"gitId":"sethlxk"},"content":"     * adds the deadline to the task array","lastModifiedDate":"2022-02-25"},{"lineNumber":336,"author":{"gitId":"sethlxk"},"content":"     * @param taskArray array of tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":337,"author":{"gitId":"sethlxk"},"content":"     * @param userInput String input command","lastModifiedDate":"2022-02-25"},{"lineNumber":338,"author":{"gitId":"sethlxk"},"content":"     * @throws IllegalDeadlineException if the user fails to include the specific task/date or excludes the keyword \u0027/by\u0027","lastModifiedDate":"2022-02-25"},{"lineNumber":339,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":340,"author":{"gitId":"sethlxk"},"content":"    public static void addDeadline(ArrayList\u003cTask\u003e taskArray, String userInput) throws IllegalDeadlineException {","lastModifiedDate":"2022-02-10"},{"lineNumber":341,"author":{"gitId":"sethlxk"},"content":"        if (userInput.length() \u003c\u003d 8 ||!userInput.contains(\"/by\")){","lastModifiedDate":"2022-02-10"},{"lineNumber":342,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalDeadlineException();","lastModifiedDate":"2022-02-10"},{"lineNumber":343,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":344,"author":{"gitId":"sethlxk"},"content":"        String[] temp \u003d new String[100];","lastModifiedDate":"2022-02-04"},{"lineNumber":345,"author":{"gitId":"sethlxk"},"content":"        temp \u003d userInput.split(\"/by\");","lastModifiedDate":"2022-02-04"},{"lineNumber":346,"author":{"gitId":"sethlxk"},"content":"        if (temp.length \u003c\u003d 1){","lastModifiedDate":"2022-02-10"},{"lineNumber":347,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalDeadlineException();","lastModifiedDate":"2022-02-10"},{"lineNumber":348,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":349,"author":{"gitId":"sethlxk"},"content":"        String description \u003d temp[0].split(\"deadline\")[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":350,"author":{"gitId":"sethlxk"},"content":"        String by \u003d temp[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":351,"author":{"gitId":"sethlxk"},"content":"        if (description.length() \u003d\u003d 0){","lastModifiedDate":"2022-02-10"},{"lineNumber":352,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalDeadlineException();","lastModifiedDate":"2022-02-10"},{"lineNumber":353,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":354,"author":{"gitId":"sethlxk"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2022-02-04"},{"lineNumber":355,"author":{"gitId":"sethlxk"},"content":"        addTask(taskArray,deadline);","lastModifiedDate":"2022-02-04"},{"lineNumber":356,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":357,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":358,"author":{"gitId":"sethlxk"},"content":"    public static void displayDeadLineErrorMessage(){","lastModifiedDate":"2022-02-10"},{"lineNumber":359,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Hey! What do you have to do before your deadline? Enter the valid task and date\");","lastModifiedDate":"2022-02-10"},{"lineNumber":360,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":361,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":362,"author":{"gitId":"sethlxk"},"content":"    //event methods","lastModifiedDate":"2022-02-10"},{"lineNumber":363,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":364,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":365,"author":{"gitId":"sethlxk"},"content":"     * adds the event to the task array","lastModifiedDate":"2022-02-25"},{"lineNumber":366,"author":{"gitId":"sethlxk"},"content":"     * @param taskArray array of tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":367,"author":{"gitId":"sethlxk"},"content":"     * @param userInput String input command","lastModifiedDate":"2022-02-25"},{"lineNumber":368,"author":{"gitId":"sethlxk"},"content":"     * @throws IllegalEventException if the user fails to include the specific task/date or excludes the keyword \u0027/at\u0027","lastModifiedDate":"2022-02-25"},{"lineNumber":369,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":370,"author":{"gitId":"sethlxk"},"content":"    public static void addEvent(ArrayList\u003cTask\u003e taskArray, String userInput) throws IllegalEventException {","lastModifiedDate":"2022-02-10"},{"lineNumber":371,"author":{"gitId":"sethlxk"},"content":"        if (userInput.length() \u003c\u003d 5 ||!userInput.contains(\"/at\")){","lastModifiedDate":"2022-02-10"},{"lineNumber":372,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalEventException();","lastModifiedDate":"2022-02-10"},{"lineNumber":373,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":374,"author":{"gitId":"sethlxk"},"content":"        String[] temp \u003d new String[100];","lastModifiedDate":"2022-02-04"},{"lineNumber":375,"author":{"gitId":"sethlxk"},"content":"        temp \u003d userInput.split(\"/at\");","lastModifiedDate":"2022-02-04"},{"lineNumber":376,"author":{"gitId":"sethlxk"},"content":"        if (temp.length \u003c\u003d 1){","lastModifiedDate":"2022-02-10"},{"lineNumber":377,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalEventException();","lastModifiedDate":"2022-02-10"},{"lineNumber":378,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":379,"author":{"gitId":"sethlxk"},"content":"        String description \u003d temp[0].split(\"event\")[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":380,"author":{"gitId":"sethlxk"},"content":"        String at \u003d temp[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":381,"author":{"gitId":"sethlxk"},"content":"        if (description.length() \u003d\u003d 0){","lastModifiedDate":"2022-02-10"},{"lineNumber":382,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalEventException();","lastModifiedDate":"2022-02-10"},{"lineNumber":383,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":384,"author":{"gitId":"sethlxk"},"content":"        Event event \u003d new Event(description, at);","lastModifiedDate":"2022-02-04"},{"lineNumber":385,"author":{"gitId":"sethlxk"},"content":"        addTask(taskArray,event);","lastModifiedDate":"2022-02-04"},{"lineNumber":386,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":387,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":388,"author":{"gitId":"sethlxk"},"content":"    public static void displayEventErrorMessage(){","lastModifiedDate":"2022-02-10"},{"lineNumber":389,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Hey! What event do you have coming up? Enter the valid task and date\");","lastModifiedDate":"2022-02-10"},{"lineNumber":390,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":391,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":392,"author":{"gitId":"sethlxk"},"content":"    //todo methods","lastModifiedDate":"2022-02-10"},{"lineNumber":393,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":394,"author":{"gitId":"sethlxk"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":395,"author":{"gitId":"sethlxk"},"content":"     * adds the task to the task array","lastModifiedDate":"2022-02-25"},{"lineNumber":396,"author":{"gitId":"sethlxk"},"content":"     * @param taskArray array of tasks","lastModifiedDate":"2022-02-25"},{"lineNumber":397,"author":{"gitId":"sethlxk"},"content":"     * @param userInput String input command","lastModifiedDate":"2022-02-25"},{"lineNumber":398,"author":{"gitId":"sethlxk"},"content":"     * @throws IllegalTodoException if the user fails to include the specific task","lastModifiedDate":"2022-02-25"},{"lineNumber":399,"author":{"gitId":"sethlxk"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":400,"author":{"gitId":"sethlxk"},"content":"    public static void addTodo(ArrayList\u003cTask\u003e taskArray, String userInput) throws IllegalTodoException {","lastModifiedDate":"2022-02-10"},{"lineNumber":401,"author":{"gitId":"sethlxk"},"content":"        if (userInput.length() \u003c\u003d 4){","lastModifiedDate":"2022-02-10"},{"lineNumber":402,"author":{"gitId":"sethlxk"},"content":"            throw new IllegalTodoException();","lastModifiedDate":"2022-02-10"},{"lineNumber":403,"author":{"gitId":"sethlxk"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":404,"author":{"gitId":"sethlxk"},"content":"        String[] temp \u003d new String[100];","lastModifiedDate":"2022-02-10"},{"lineNumber":405,"author":{"gitId":"sethlxk"},"content":"        temp \u003d userInput.split(\"todo\");","lastModifiedDate":"2022-02-25"},{"lineNumber":406,"author":{"gitId":"sethlxk"},"content":"        String description \u003d temp[1].trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":407,"author":{"gitId":"sethlxk"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2022-02-10"},{"lineNumber":408,"author":{"gitId":"sethlxk"},"content":"        addTask(taskArray,todo);","lastModifiedDate":"2022-02-10"},{"lineNumber":409,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":410,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":411,"author":{"gitId":"sethlxk"},"content":"    public static void displayTodoErrorMessage(){","lastModifiedDate":"2022-02-10"},{"lineNumber":412,"author":{"gitId":"sethlxk"},"content":"        System.out.println(\"Hey! What do you have to do? Enter a valid task\");","lastModifiedDate":"2022-02-10"},{"lineNumber":413,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":414,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sethlxk":412,"-":3}},{"path":"src/main/java/duke/entity/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.entity;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"sethlxk"},"content":"    protected String by;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"sethlxk"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"sethlxk"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"sethlxk"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"sethlxk"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"sethlxk"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"sethlxk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"sethlxk":16}},{"path":"src/main/java/duke/entity/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.entity;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"    protected String at;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"sethlxk"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"sethlxk"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"sethlxk"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"sethlxk"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"sethlxk"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"sethlxk":12}},{"path":"src/main/java/duke/entity/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.entity;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"    protected String description;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sethlxk"},"content":"    protected boolean isTaskDone;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sethlxk"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sethlxk"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sethlxk"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sethlxk"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sethlxk"},"content":"        this.isTaskDone \u003d true;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sethlxk"},"content":"    public void markAsUndone() {this.isTaskDone \u003d false; }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sethlxk"},"content":"    public String getDescription(){","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sethlxk"},"content":"        return description;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"sethlxk"},"content":"    public String toString(){","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"sethlxk"},"content":"        return (isTaskDone ? \"[X] \" : \"[ ] \") + getDescription();","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sethlxk":25}},{"path":"src/main/java/duke/entity/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"package duke.entity;","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"sethlxk"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"sethlxk"},"content":"    public Todo(String description){","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"sethlxk"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"sethlxk"},"content":"    public String toString(){","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"sethlxk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"sethlxk"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"sethlxk":13}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.exception;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"sethlxk":4}},{"path":"src/main/java/duke/exception/IllegalDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.exception;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class IllegalDeadlineException extends Exception{","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"sethlxk":4}},{"path":"src/main/java/duke/exception/IllegalDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.exception;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class IllegalDeleteException extends Exception{","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sethlxk":4}},{"path":"src/main/java/duke/exception/IllegalEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.exception;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class IllegalEventException extends Exception{","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"sethlxk":4}},{"path":"src/main/java/duke/exception/IllegalFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.exception;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class IllegalFindException extends Exception{","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sethlxk":4}},{"path":"src/main/java/duke/exception/IllegalMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.exception;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class IllegalMarkException extends Exception{","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sethlxk":4}},{"path":"src/main/java/duke/exception/IllegalTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.exception;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class IllegalTodoException extends Exception{","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"sethlxk":4}},{"path":"src/main/java/duke/exception/IllegalUnmarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethlxk"},"content":"package duke.exception;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sethlxk"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sethlxk"},"content":"public class IllegalUnmarkException extends Exception{","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sethlxk"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sethlxk":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sethlxk"},"content":"java -classpath ..\\bin duke.application.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sethlxk":1,"-":20}}]
