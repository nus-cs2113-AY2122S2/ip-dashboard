[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbawj"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"bbawj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"bbawj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"bbawj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"bbawj"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"bbawj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"bbawj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"bbawj"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"bbawj"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"bbawj"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"bbawj"},"content":"        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"bbawj"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"bbawj"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"bbawj"},"content":"                if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"bbawj"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"bbawj"},"content":"                    for (int i \u003d 0; i \u003c store.size(); i++) {","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"bbawj"},"content":"                        System.out.println(i + 1 + \". \" + store.get(i).getTask());","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"bbawj"},"content":"                    }","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"bbawj"},"content":"                } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"bbawj"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"bbawj"},"content":"                    Task currentTask \u003d store.get(taskIndex - 1);","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"bbawj"},"content":"                    currentTask.setDone(true);","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"bbawj"},"content":"                    System.out.println(currentTask.getTask());","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"bbawj"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"bbawj"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"bbawj"},"content":"                    Task currentTask \u003d store.get(taskIndex - 1);","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"bbawj"},"content":"                    currentTask.setDone(false);","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"bbawj"},"content":"                    System.out.println(currentTask.getTask());","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"bbawj"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"bbawj"},"content":"                    try {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"bbawj"},"content":"                        if (userInput.split(\"todo\").length \u003c\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"bbawj"},"content":"                            throw new DukeException();","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"bbawj"},"content":"                        }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"bbawj"},"content":"                        String task \u003d userInput.split(\"todo\")[1].trim();","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"bbawj"},"content":"                        ToDo newTask \u003d new ToDo(task);","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"bbawj"},"content":"                        store.add(newTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"bbawj"},"content":"                        printTask(newTask, store.size());","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"bbawj"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"bbawj"},"content":"                        System.out.println(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"bbawj"},"content":"                    }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"bbawj"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"bbawj"},"content":"                    String[] processedString \u003d userInput.split(\"/by\");","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"bbawj"},"content":"                    String by \u003d processedString[1].trim();","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"bbawj"},"content":"                    String task \u003d processedString[0].split(\"deadline\")[1].trim();","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"bbawj"},"content":"                    Deadline newTask \u003d new Deadline(task, by);","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"bbawj"},"content":"                    store.add(newTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"bbawj"},"content":"                    printTask(newTask, store.size());","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"bbawj"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"bbawj"},"content":"                    String[] processedString \u003d userInput.split(\"/at\");","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"bbawj"},"content":"                    String at \u003d processedString[1].trim();","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"bbawj"},"content":"                    String task \u003d processedString[0].split(\"event\")[1].trim();","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"bbawj"},"content":"                    Event newTask \u003d new Event(task, at);","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"bbawj"},"content":"                    store.add(newTask);","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"bbawj"},"content":"                    printTask(newTask, store.size());","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"bbawj"},"content":"                } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":68,"author":{"gitId":"bbawj"},"content":"                    throw new DukeException();","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"bbawj"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"bbawj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"bbawj"},"content":"                System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"bbawj"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"bbawj"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-17"},{"lineNumber":74,"author":{"gitId":"bbawj"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"bbawj"},"content":"        sc.close();","lastModifiedDate":"2022-01-17"},{"lineNumber":76,"author":{"gitId":"bbawj"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"bbawj"},"content":"    public static void printTask(Task newTask, int length) {","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"bbawj"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"bbawj"},"content":"        System.out.println(newTask.getTask());","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"bbawj"},"content":"        System.out.println(\"Now you have \" + length + \" tasks in the list\");","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bbawj":74,"-":10}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbawj"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"bbawj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"bbawj"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"bbawj":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbawj"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"bbawj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"bbawj"},"content":"    protected String by;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"bbawj"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"bbawj"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"bbawj"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"bbawj"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"bbawj"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"bbawj"},"content":"        return \"[D]\" + super.getTask() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"bbawj"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"bbawj":15}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbawj"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"bbawj"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"bbawj"},"content":"    protected String at;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"bbawj"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"bbawj"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"bbawj"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"bbawj"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"bbawj"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"bbawj"},"content":"        return \"[E]\" + super.getTask() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"bbawj"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"bbawj":15}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbawj"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"bbawj"},"content":"public class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"bbawj"},"content":"    protected String description;","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"bbawj"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"bbawj"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"bbawj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"bbawj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"bbawj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"bbawj"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"bbawj"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"bbawj"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"bbawj"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"bbawj"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"bbawj"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"bbawj"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"bbawj"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"bbawj"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"bbawj"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"bbawj"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"bbawj"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"bbawj":29}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbawj"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"bbawj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"bbawj"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"bbawj"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"bbawj"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"bbawj"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"bbawj"},"content":"        return \"[T]\" + super.getTask();","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"bbawj"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"bbawj"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"bbawj":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bbawj"},"content":"todo borrow book","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"bbawj"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"bbawj"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"bbawj"},"content":"mark 1","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"bbawj"},"content":"list","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"bbawj"},"content":"bye","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"bbawj":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"bbawj"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"bbawj"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"bbawj"},"content":"pause","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"bbawj":3,"-":20}}]
