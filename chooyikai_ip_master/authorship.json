[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chooyikai"},"content":"# duke.Duke project template","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"chooyikai"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chooyikai":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chooyikai"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"chooyikai"},"content":"import duke.exception.*;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"chooyikai"},"content":"import duke.task.*;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"chooyikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"chooyikai"},"content":"import java.io.*;","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"chooyikai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"chooyikai"},"content":"    // Data file location","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"chooyikai"},"content":"    private static final String DATA_FOLDER_PATH \u003d \"./data/\";","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"chooyikai"},"content":"    private static final String DATA_FILE_PATH \u003d DATA_FOLDER_PATH + \"duke.txt\";","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"chooyikai"},"content":"    // Misc text elements","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"chooyikai"},"content":"    private static final String HORIZONTAL_SEPARATOR \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"chooyikai"},"content":"    private static final String INPUT_PROMPT \u003d \"\u003e \";","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"chooyikai"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"chooyikai"},"content":"    private static final String FS \u003d \"`\";","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"chooyikai"},"content":"    // Messages","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_DIRECTORY_FOUND \u003d \"Data directory found!\";","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_DIRECTORY_CREATED \u003d \"Data directory created successfully!\";","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_DIRECTORY_ERROR \u003d \"Data directory could not be created...\";","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_DATA_FILE_FOUND \u003d \"Data file found!\";","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_DATA_FILE_CREATED \u003d \"Data file created successfully!\";","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_DATA_FILE_ERROR \u003d \"Data file could not be created...\";","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_MALFORMED_TASK \u003d \"Skipped malformed task data at line %d: %s\";","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_DATA_SAVE_ERROR \u003d \"Error saving data to file. Your changes were NOT saved!\";","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_DATA_LOADED \u003d \"Successfully loaded %d tasks from file.\";","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_CLOSE_TO_FIX \u003d \"Close the program NOW if you wish to fix this manually.\";","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_WELCOME \u003d \"Hi, I\u0027m Robit!\" + LS + \"What would you like me to do?\";","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_SHOW_TASKS \u003d \"Here are your tasks:\";","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_NO_TASKS \u003d \"You don\u0027t have any tasks!\";","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_INCORRECT_COMMAND_FORMAT \u003d \"Incorrect command format for %s.\" + LS","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"chooyikai"},"content":"                                                                    + \"Usage: \\\"%s\\\"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_ITEMIZED_TASK \u003d \"%d) %s\";","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_TODO_ADDED \u003d \"Todo successfully added:\" + LS + \"\\t%s\";","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_DEADLINE_ADDED \u003d \"Deadline successfully added:\" + LS + \"\\t%s\";","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_EVENT_ADDED \u003d \"Event successfully added:\" + LS + \"\\t%s\";","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_TASK_DELETED \u003d \"Task successfully deleted:\" + LS + \"\\t%s\";","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_UNKNOWN_COMMAND \u003d \"I don\u0027t understand that command...\";","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_NO_SUCH_INDEX \u003d \"There\u0027s no task with that index...\";","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_TASK_MARKED \u003d \"I\u0027ve marked this task as done. Yay!\" + LS + \"%d) %s\";","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_TASK_UNMARKED \u003d \"I\u0027ve unmarked this task.\" + LS + \"%d) %s\";","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_TASK_ALREADY_MARKED \u003d \"That task is already marked.\";","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_TASK_ALREADY_UNMARKED \u003d \"That task is already unmarked.\";","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"chooyikai"},"content":"    private static final String MESSAGE_GOODBYE \u003d \"Goodbye!\";","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"chooyikai"},"content":"    // Commands","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"chooyikai"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"chooyikai"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"chooyikai"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"chooyikai"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"chooyikai"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"chooyikai"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"chooyikai"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"chooyikai"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"chooyikai"},"content":"    // Argument separators","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"chooyikai"},"content":"    private static final String DEADLINE_SEPARATOR \u003d \" /by \";","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"chooyikai"},"content":"    private static final String EVENT_SEPARATOR \u003d \" /at \";","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"chooyikai"},"content":"    // Usage examples","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"chooyikai"},"content":"    private static final String USAGE_BYE \u003d COMMAND_BYE;","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"chooyikai"},"content":"    private static final String USAGE_LIST \u003d COMMAND_LIST;","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"chooyikai"},"content":"    private static final String USAGE_TODO \u003d COMMAND_TODO + \" \u003cyour task\u003e\";","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"chooyikai"},"content":"    private static final String USAGE_DEADLINE \u003d COMMAND_DEADLINE + \" \u003cyour task\u003e\"","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"chooyikai"},"content":"                                                + DEADLINE_SEPARATOR + \"\u003ctask deadline\u003e\";","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"chooyikai"},"content":"    private static final String USAGE_EVENT \u003d COMMAND_EVENT + \" \u003cyour event\u003e\" + EVENT_SEPARATOR + \"\u003ctime\u003e\";","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"chooyikai"},"content":"    private static final String USAGE_MARK \u003d COMMAND_MARK + \" \u003ctask index\u003e\";","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"chooyikai"},"content":"    private static final String USAGE_UNMARK \u003d COMMAND_UNMARK + \" \u003ctask index\u003e\";","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"chooyikai"},"content":"    private static final String USAGE_DELETE \u003d COMMAND_DELETE + \" \u003ctask index\u003e\";","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"chooyikai"},"content":"    // Program logic stuff","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"chooyikai"},"content":"    private static final File directory \u003d new File(DATA_FOLDER_PATH);","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"chooyikai"},"content":"    private static final File dataFile \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"chooyikai"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"chooyikai"},"content":"    private static final ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"chooyikai"},"content":"    private static boolean isExitRequested \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"chooyikai"},"content":"     * Main entry point of the program.","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"chooyikai"},"content":"        if (!checkForDataFile()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"chooyikai"},"content":"            System.exit(-1);","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"chooyikai"},"content":"        loadTasks();","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"chooyikai"},"content":"        printMessage(MESSAGE_WELCOME);","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"chooyikai"},"content":"        while (!isExitRequested) {","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"chooyikai"},"content":"            String[] input \u003d getUserInput();","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"chooyikai"},"content":"            String response \u003d parseCommand(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"chooyikai"},"content":"            printMessage(response);","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"chooyikai"},"content":"     * Checks for existence of the data file and attempts to create it if it doesn\u0027t already exist.","lastModifiedDate":"2022-02-12"},{"lineNumber":105,"author":{"gitId":"chooyikai"},"content":"     * @return true if data file already exists or could be created in specified location, false otherwise.","lastModifiedDate":"2022-02-12"},{"lineNumber":106,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":107,"author":{"gitId":"chooyikai"},"content":"    private static boolean checkForDataFile() {","lastModifiedDate":"2022-02-12"},{"lineNumber":108,"author":{"gitId":"chooyikai"},"content":"        // Using System.out.println here when I don\u0027t want to print a horizontal line after each output","lastModifiedDate":"2022-02-12"},{"lineNumber":109,"author":{"gitId":"chooyikai"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":110,"author":{"gitId":"chooyikai"},"content":"            if (directory.mkdir()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":111,"author":{"gitId":"chooyikai"},"content":"                System.out.println(MESSAGE_DIRECTORY_CREATED);","lastModifiedDate":"2022-02-12"},{"lineNumber":112,"author":{"gitId":"chooyikai"},"content":"            } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":113,"author":{"gitId":"chooyikai"},"content":"                printMessage(MESSAGE_DIRECTORY_ERROR);","lastModifiedDate":"2022-02-12"},{"lineNumber":114,"author":{"gitId":"chooyikai"},"content":"                return false;","lastModifiedDate":"2022-02-12"},{"lineNumber":115,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":116,"author":{"gitId":"chooyikai"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":117,"author":{"gitId":"chooyikai"},"content":"            System.out.println(MESSAGE_DIRECTORY_FOUND);","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":119,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":120,"author":{"gitId":"chooyikai"},"content":"            if (dataFile.createNewFile()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"chooyikai"},"content":"                System.out.println(MESSAGE_DATA_FILE_CREATED);","lastModifiedDate":"2022-02-12"},{"lineNumber":122,"author":{"gitId":"chooyikai"},"content":"            } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":123,"author":{"gitId":"chooyikai"},"content":"                System.out.println(MESSAGE_DATA_FILE_FOUND);","lastModifiedDate":"2022-02-12"},{"lineNumber":124,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":125,"author":{"gitId":"chooyikai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":126,"author":{"gitId":"chooyikai"},"content":"            printMessage(MESSAGE_DATA_FILE_ERROR);","lastModifiedDate":"2022-02-12"},{"lineNumber":127,"author":{"gitId":"chooyikai"},"content":"            return false;","lastModifiedDate":"2022-02-12"},{"lineNumber":128,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":129,"author":{"gitId":"chooyikai"},"content":"        return true;","lastModifiedDate":"2022-02-12"},{"lineNumber":130,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":131,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":132,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":133,"author":{"gitId":"chooyikai"},"content":"     * Load tasks from data file into the program.","lastModifiedDate":"2022-02-12"},{"lineNumber":134,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":135,"author":{"gitId":"chooyikai"},"content":"    private static void loadTasks() {","lastModifiedDate":"2022-02-12"},{"lineNumber":136,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":137,"author":{"gitId":"chooyikai"},"content":"            Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2022-02-12"},{"lineNumber":138,"author":{"gitId":"chooyikai"},"content":"            int lineNum \u003d 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":139,"author":{"gitId":"chooyikai"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":140,"author":{"gitId":"chooyikai"},"content":"                Task t \u003d parseSavedTask(sc.nextLine(), lineNum);","lastModifiedDate":"2022-02-12"},{"lineNumber":141,"author":{"gitId":"chooyikai"},"content":"                if (t !\u003d null) {","lastModifiedDate":"2022-02-12"},{"lineNumber":142,"author":{"gitId":"chooyikai"},"content":"                    savedTasks.add(t);","lastModifiedDate":"2022-02-12"},{"lineNumber":143,"author":{"gitId":"chooyikai"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":144,"author":{"gitId":"chooyikai"},"content":"                lineNum++;","lastModifiedDate":"2022-02-12"},{"lineNumber":145,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":146,"author":{"gitId":"chooyikai"},"content":"            printMessage(String.format(MESSAGE_DATA_LOADED, savedTasks.size()));","lastModifiedDate":"2022-02-12"},{"lineNumber":147,"author":{"gitId":"chooyikai"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":148,"author":{"gitId":"chooyikai"},"content":"            // This branch should be unreachable because we create the file if it doesn\u0027t exist","lastModifiedDate":"2022-02-12"},{"lineNumber":149,"author":{"gitId":"chooyikai"},"content":"            printMessage(MESSAGE_DATA_FILE_ERROR);","lastModifiedDate":"2022-02-12"},{"lineNumber":150,"author":{"gitId":"chooyikai"},"content":"            System.exit(-2);","lastModifiedDate":"2022-02-12"},{"lineNumber":151,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":152,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":153,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":154,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":155,"author":{"gitId":"chooyikai"},"content":"     * Parse task saved as string format and convert it back into an object.","lastModifiedDate":"2022-02-12"},{"lineNumber":156,"author":{"gitId":"chooyikai"},"content":"     * @param taskAsString task saved as string","lastModifiedDate":"2022-02-12"},{"lineNumber":157,"author":{"gitId":"chooyikai"},"content":"     * @param lineNum line number","lastModifiedDate":"2022-02-12"},{"lineNumber":158,"author":{"gitId":"chooyikai"},"content":"     * @return Task object if successful, or null if error","lastModifiedDate":"2022-02-12"},{"lineNumber":159,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":160,"author":{"gitId":"chooyikai"},"content":"    private static Task parseSavedTask(String taskAsString, int lineNum) {","lastModifiedDate":"2022-02-12"},{"lineNumber":161,"author":{"gitId":"chooyikai"},"content":"        String[] processedString \u003d taskAsString.split(FS);","lastModifiedDate":"2022-02-12"},{"lineNumber":162,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":163,"author":{"gitId":"chooyikai"},"content":"            final String taskType \u003d processedString[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":164,"author":{"gitId":"chooyikai"},"content":"            final boolean taskMarked;","lastModifiedDate":"2022-02-12"},{"lineNumber":165,"author":{"gitId":"chooyikai"},"content":"            if (processedString[1].equals(\"1\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":166,"author":{"gitId":"chooyikai"},"content":"                taskMarked \u003d true;","lastModifiedDate":"2022-02-12"},{"lineNumber":167,"author":{"gitId":"chooyikai"},"content":"            } else if (processedString[1].equals(\"0\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":168,"author":{"gitId":"chooyikai"},"content":"                taskMarked \u003d false;","lastModifiedDate":"2022-02-12"},{"lineNumber":169,"author":{"gitId":"chooyikai"},"content":"            } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":170,"author":{"gitId":"chooyikai"},"content":"                throw new MalformedTaskFormatException();","lastModifiedDate":"2022-02-12"},{"lineNumber":171,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":172,"author":{"gitId":"chooyikai"},"content":"            final String taskDescription \u003d processedString[2];","lastModifiedDate":"2022-02-12"},{"lineNumber":173,"author":{"gitId":"chooyikai"},"content":"            switch (taskType) {","lastModifiedDate":"2022-02-12"},{"lineNumber":174,"author":{"gitId":"chooyikai"},"content":"            case \"T\":","lastModifiedDate":"2022-02-12"},{"lineNumber":175,"author":{"gitId":"chooyikai"},"content":"                if (processedString.length !\u003d 3) {","lastModifiedDate":"2022-02-12"},{"lineNumber":176,"author":{"gitId":"chooyikai"},"content":"                    throw new MalformedTaskFormatException();","lastModifiedDate":"2022-02-12"},{"lineNumber":177,"author":{"gitId":"chooyikai"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":178,"author":{"gitId":"chooyikai"},"content":"                Todo todo \u003d new Todo(taskDescription);","lastModifiedDate":"2022-02-12"},{"lineNumber":179,"author":{"gitId":"chooyikai"},"content":"                todo.setIsDone(taskMarked);","lastModifiedDate":"2022-02-12"},{"lineNumber":180,"author":{"gitId":"chooyikai"},"content":"                return todo;","lastModifiedDate":"2022-02-12"},{"lineNumber":181,"author":{"gitId":"chooyikai"},"content":"            case \"D\":","lastModifiedDate":"2022-02-12"},{"lineNumber":182,"author":{"gitId":"chooyikai"},"content":"                if (processedString.length !\u003d 4) {","lastModifiedDate":"2022-02-12"},{"lineNumber":183,"author":{"gitId":"chooyikai"},"content":"                    throw new MalformedTaskFormatException();","lastModifiedDate":"2022-02-12"},{"lineNumber":184,"author":{"gitId":"chooyikai"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":185,"author":{"gitId":"chooyikai"},"content":"                final String dueBy \u003d processedString[3];","lastModifiedDate":"2022-02-12"},{"lineNumber":186,"author":{"gitId":"chooyikai"},"content":"                Deadline deadline \u003d new Deadline(taskDescription, dueBy);","lastModifiedDate":"2022-02-12"},{"lineNumber":187,"author":{"gitId":"chooyikai"},"content":"                deadline.setIsDone(taskMarked);","lastModifiedDate":"2022-02-12"},{"lineNumber":188,"author":{"gitId":"chooyikai"},"content":"                return deadline;","lastModifiedDate":"2022-02-12"},{"lineNumber":189,"author":{"gitId":"chooyikai"},"content":"            case \"E\":","lastModifiedDate":"2022-02-12"},{"lineNumber":190,"author":{"gitId":"chooyikai"},"content":"                if (processedString.length !\u003d 4) {","lastModifiedDate":"2022-02-12"},{"lineNumber":191,"author":{"gitId":"chooyikai"},"content":"                    throw new MalformedTaskFormatException();","lastModifiedDate":"2022-02-12"},{"lineNumber":192,"author":{"gitId":"chooyikai"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":193,"author":{"gitId":"chooyikai"},"content":"                final String time \u003d processedString[3];","lastModifiedDate":"2022-02-12"},{"lineNumber":194,"author":{"gitId":"chooyikai"},"content":"                Event event \u003d new Event(taskDescription, time);","lastModifiedDate":"2022-02-12"},{"lineNumber":195,"author":{"gitId":"chooyikai"},"content":"                event.setIsDone(taskMarked);","lastModifiedDate":"2022-02-12"},{"lineNumber":196,"author":{"gitId":"chooyikai"},"content":"                return event;","lastModifiedDate":"2022-02-12"},{"lineNumber":197,"author":{"gitId":"chooyikai"},"content":"            default:","lastModifiedDate":"2022-02-12"},{"lineNumber":198,"author":{"gitId":"chooyikai"},"content":"                throw new MalformedTaskFormatException();","lastModifiedDate":"2022-02-12"},{"lineNumber":199,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":200,"author":{"gitId":"chooyikai"},"content":"        } catch (IndexOutOfBoundsException | MalformedTaskFormatException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":201,"author":{"gitId":"chooyikai"},"content":"            // Using System.out.println here because I don\u0027t want to print a horizontal line after each output","lastModifiedDate":"2022-02-12"},{"lineNumber":202,"author":{"gitId":"chooyikai"},"content":"            System.out.println(String.format(MESSAGE_MALFORMED_TASK, lineNum, taskAsString));","lastModifiedDate":"2022-02-12"},{"lineNumber":203,"author":{"gitId":"chooyikai"},"content":"            return null;","lastModifiedDate":"2022-02-12"},{"lineNumber":204,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":205,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":206,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":207,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":208,"author":{"gitId":"chooyikai"},"content":"     * Attempt to save current task data to data file.","lastModifiedDate":"2022-02-12"},{"lineNumber":209,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":210,"author":{"gitId":"chooyikai"},"content":"    private static void saveToFile() {","lastModifiedDate":"2022-02-12"},{"lineNumber":211,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":212,"author":{"gitId":"chooyikai"},"content":"            FileWriter fw \u003d new FileWriter(dataFile);","lastModifiedDate":"2022-02-12"},{"lineNumber":213,"author":{"gitId":"chooyikai"},"content":"            for (Task t : savedTasks) {","lastModifiedDate":"2022-02-12"},{"lineNumber":214,"author":{"gitId":"chooyikai"},"content":"                fw.write(t.formatAsData(FS) + LS);","lastModifiedDate":"2022-02-12"},{"lineNumber":215,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":216,"author":{"gitId":"chooyikai"},"content":"            fw.close();","lastModifiedDate":"2022-02-12"},{"lineNumber":217,"author":{"gitId":"chooyikai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":218,"author":{"gitId":"chooyikai"},"content":"            // Using System.out.println here because I don\u0027t want to print a horizontal line after each output","lastModifiedDate":"2022-02-12"},{"lineNumber":219,"author":{"gitId":"chooyikai"},"content":"            System.out.println(MESSAGE_DATA_SAVE_ERROR);","lastModifiedDate":"2022-02-12"},{"lineNumber":220,"author":{"gitId":"chooyikai"},"content":"            System.out.println(MESSAGE_CLOSE_TO_FIX);","lastModifiedDate":"2022-02-12"},{"lineNumber":221,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":222,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":223,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":224,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":225,"author":{"gitId":"chooyikai"},"content":"     * Prints the specified message, followed by a horizontal separator on the next line.","lastModifiedDate":"2022-01-29"},{"lineNumber":226,"author":{"gitId":"chooyikai"},"content":"     * @param message the message to be printed","lastModifiedDate":"2022-01-29"},{"lineNumber":227,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":228,"author":{"gitId":"chooyikai"},"content":"    private static void printMessage(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":229,"author":{"gitId":"chooyikai"},"content":"        System.out.println(message);","lastModifiedDate":"2022-01-29"},{"lineNumber":230,"author":{"gitId":"chooyikai"},"content":"        System.out.println(HORIZONTAL_SEPARATOR);","lastModifiedDate":"2022-01-29"},{"lineNumber":231,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":232,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":233,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":234,"author":{"gitId":"chooyikai"},"content":"     * Reads user input and separates the command being invoked from its arguments.","lastModifiedDate":"2022-01-29"},{"lineNumber":235,"author":{"gitId":"chooyikai"},"content":"     * @return a String array of the form {command, args}","lastModifiedDate":"2022-01-29"},{"lineNumber":236,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":237,"author":{"gitId":"chooyikai"},"content":"    private static String[] getUserInput() {","lastModifiedDate":"2022-01-29"},{"lineNumber":238,"author":{"gitId":"chooyikai"},"content":"        System.out.print(INPUT_PROMPT);","lastModifiedDate":"2022-01-29"},{"lineNumber":239,"author":{"gitId":"chooyikai"},"content":"        // Strip file separator characters from user input to avoid writing malformed data to file","lastModifiedDate":"2022-02-12"},{"lineNumber":240,"author":{"gitId":"chooyikai"},"content":"        String userInput \u003d in.nextLine().replace(FS,\"\");","lastModifiedDate":"2022-02-12"},{"lineNumber":241,"author":{"gitId":"chooyikai"},"content":"        System.out.println(HORIZONTAL_SEPARATOR);","lastModifiedDate":"2022-01-29"},{"lineNumber":242,"author":{"gitId":"chooyikai"},"content":"        String[] userInputTokenized \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2022-01-29"},{"lineNumber":243,"author":{"gitId":"chooyikai"},"content":"        if (userInputTokenized.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-29"},{"lineNumber":244,"author":{"gitId":"chooyikai"},"content":"            return userInputTokenized;","lastModifiedDate":"2022-01-29"},{"lineNumber":245,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":246,"author":{"gitId":"chooyikai"},"content":"        return new String[] {userInputTokenized[0], \"\"};","lastModifiedDate":"2022-01-29"},{"lineNumber":247,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":248,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":249,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":250,"author":{"gitId":"chooyikai"},"content":"     * Generates an error message for an invalid command.","lastModifiedDate":"2022-01-29"},{"lineNumber":251,"author":{"gitId":"chooyikai"},"content":"     * @param usageExample string showing the correct command format","lastModifiedDate":"2022-01-29"},{"lineNumber":252,"author":{"gitId":"chooyikai"},"content":"     * @return generated error message","lastModifiedDate":"2022-01-29"},{"lineNumber":253,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":254,"author":{"gitId":"chooyikai"},"content":"    private static String invalidCommandError(String command, String usageExample) {","lastModifiedDate":"2022-01-29"},{"lineNumber":255,"author":{"gitId":"chooyikai"},"content":"        return String.format(MESSAGE_INCORRECT_COMMAND_FORMAT, command, usageExample);","lastModifiedDate":"2022-01-29"},{"lineNumber":256,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":257,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":258,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":259,"author":{"gitId":"chooyikai"},"content":"     * Adds the specified task to the task list.","lastModifiedDate":"2022-02-12"},{"lineNumber":260,"author":{"gitId":"chooyikai"},"content":"     * @param t task to be added","lastModifiedDate":"2022-01-29"},{"lineNumber":261,"author":{"gitId":"chooyikai"},"content":"     * @param successMessage message to be displayed on success","lastModifiedDate":"2022-01-29"},{"lineNumber":262,"author":{"gitId":"chooyikai"},"content":"     * @return command feedback","lastModifiedDate":"2022-02-05"},{"lineNumber":263,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":264,"author":{"gitId":"chooyikai"},"content":"    private static String addTask(Task t, String successMessage) {","lastModifiedDate":"2022-01-29"},{"lineNumber":265,"author":{"gitId":"chooyikai"},"content":"        savedTasks.add(t);","lastModifiedDate":"2022-02-12"},{"lineNumber":266,"author":{"gitId":"chooyikai"},"content":"        saveToFile();","lastModifiedDate":"2022-02-12"},{"lineNumber":267,"author":{"gitId":"chooyikai"},"content":"        return String.format(successMessage, t);","lastModifiedDate":"2022-01-29"},{"lineNumber":268,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":269,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":270,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":271,"author":{"gitId":"chooyikai"},"content":"     * Deletes the task with the specified index from the task list.","lastModifiedDate":"2022-02-12"},{"lineNumber":272,"author":{"gitId":"chooyikai"},"content":"     * @param index index of the task to be removed","lastModifiedDate":"2022-02-12"},{"lineNumber":273,"author":{"gitId":"chooyikai"},"content":"     * @return command feedback","lastModifiedDate":"2022-02-12"},{"lineNumber":274,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":275,"author":{"gitId":"chooyikai"},"content":"    private static String removeTask(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":276,"author":{"gitId":"chooyikai"},"content":"        String feedback \u003d String.format(MESSAGE_TASK_DELETED, savedTasks.get(index));","lastModifiedDate":"2022-02-12"},{"lineNumber":277,"author":{"gitId":"chooyikai"},"content":"        savedTasks.remove(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":278,"author":{"gitId":"chooyikai"},"content":"        saveToFile();","lastModifiedDate":"2022-02-12"},{"lineNumber":279,"author":{"gitId":"chooyikai"},"content":"        return feedback;","lastModifiedDate":"2022-02-12"},{"lineNumber":280,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":281,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":282,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":283,"author":{"gitId":"chooyikai"},"content":"     * Invokes the correct command function based on the command string inputted by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":284,"author":{"gitId":"chooyikai"},"content":"     * @param input user input, as an array {requested_command, command_args}","lastModifiedDate":"2022-02-05"},{"lineNumber":285,"author":{"gitId":"chooyikai"},"content":"     * @return output from running requested_command with command_args","lastModifiedDate":"2022-02-05"},{"lineNumber":286,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":287,"author":{"gitId":"chooyikai"},"content":"    private static String parseCommand(String[] input) {","lastModifiedDate":"2022-01-29"},{"lineNumber":288,"author":{"gitId":"chooyikai"},"content":"        final String command \u003d input[0];","lastModifiedDate":"2022-01-29"},{"lineNumber":289,"author":{"gitId":"chooyikai"},"content":"        final String args \u003d input[1];","lastModifiedDate":"2022-01-29"},{"lineNumber":290,"author":{"gitId":"chooyikai"},"content":"        switch (command) {","lastModifiedDate":"2022-01-29"},{"lineNumber":291,"author":{"gitId":"chooyikai"},"content":"        case COMMAND_BYE:","lastModifiedDate":"2022-01-29"},{"lineNumber":292,"author":{"gitId":"chooyikai"},"content":"            return byeCommand(args);","lastModifiedDate":"2022-01-29"},{"lineNumber":293,"author":{"gitId":"chooyikai"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2022-01-29"},{"lineNumber":294,"author":{"gitId":"chooyikai"},"content":"            return listCommand(args);","lastModifiedDate":"2022-01-29"},{"lineNumber":295,"author":{"gitId":"chooyikai"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2022-01-29"},{"lineNumber":296,"author":{"gitId":"chooyikai"},"content":"            return todoCommand(args);","lastModifiedDate":"2022-01-29"},{"lineNumber":297,"author":{"gitId":"chooyikai"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2022-01-29"},{"lineNumber":298,"author":{"gitId":"chooyikai"},"content":"            return deadlineCommand(args);","lastModifiedDate":"2022-01-29"},{"lineNumber":299,"author":{"gitId":"chooyikai"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2022-01-29"},{"lineNumber":300,"author":{"gitId":"chooyikai"},"content":"            return eventCommand(args);","lastModifiedDate":"2022-01-29"},{"lineNumber":301,"author":{"gitId":"chooyikai"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2022-01-29"},{"lineNumber":302,"author":{"gitId":"chooyikai"},"content":"            return markCommand(args);","lastModifiedDate":"2022-01-29"},{"lineNumber":303,"author":{"gitId":"chooyikai"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2022-01-29"},{"lineNumber":304,"author":{"gitId":"chooyikai"},"content":"            return unmarkCommand(args);","lastModifiedDate":"2022-01-29"},{"lineNumber":305,"author":{"gitId":"chooyikai"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2022-02-12"},{"lineNumber":306,"author":{"gitId":"chooyikai"},"content":"            return deleteCommand(args);","lastModifiedDate":"2022-02-12"},{"lineNumber":307,"author":{"gitId":"chooyikai"},"content":"        default:","lastModifiedDate":"2022-01-29"},{"lineNumber":308,"author":{"gitId":"chooyikai"},"content":"            return MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-01-29"},{"lineNumber":309,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":310,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":311,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":312,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":313,"author":{"gitId":"chooyikai"},"content":"     * Request to exit the program.","lastModifiedDate":"2022-01-29"},{"lineNumber":314,"author":{"gitId":"chooyikai"},"content":"     * @param args command arguments","lastModifiedDate":"2022-02-05"},{"lineNumber":315,"author":{"gitId":"chooyikai"},"content":"     * @return command feedback","lastModifiedDate":"2022-02-05"},{"lineNumber":316,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":317,"author":{"gitId":"chooyikai"},"content":"    private static String byeCommand(String args) {","lastModifiedDate":"2022-01-29"},{"lineNumber":318,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":319,"author":{"gitId":"chooyikai"},"content":"            if (!args.equals(\"\")) {","lastModifiedDate":"2022-02-05"},{"lineNumber":320,"author":{"gitId":"chooyikai"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2022-02-05"},{"lineNumber":321,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":322,"author":{"gitId":"chooyikai"},"content":"            isExitRequested \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":323,"author":{"gitId":"chooyikai"},"content":"            return MESSAGE_GOODBYE;","lastModifiedDate":"2022-01-29"},{"lineNumber":324,"author":{"gitId":"chooyikai"},"content":"        } catch (InvalidCommandFormatException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":325,"author":{"gitId":"chooyikai"},"content":"            return invalidCommandError(COMMAND_BYE, USAGE_BYE);","lastModifiedDate":"2022-01-29"},{"lineNumber":326,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":327,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":328,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":329,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":330,"author":{"gitId":"chooyikai"},"content":"     * Lists all saved tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":331,"author":{"gitId":"chooyikai"},"content":"     * @param args command arguments","lastModifiedDate":"2022-02-05"},{"lineNumber":332,"author":{"gitId":"chooyikai"},"content":"     * @return command feedback","lastModifiedDate":"2022-02-05"},{"lineNumber":333,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":334,"author":{"gitId":"chooyikai"},"content":"    private static String listCommand(String args) {","lastModifiedDate":"2022-01-29"},{"lineNumber":335,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":336,"author":{"gitId":"chooyikai"},"content":"            if (!args.equals(\"\")) {","lastModifiedDate":"2022-02-05"},{"lineNumber":337,"author":{"gitId":"chooyikai"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2022-02-05"},{"lineNumber":338,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":339,"author":{"gitId":"chooyikai"},"content":"            int numSavedTasks \u003d savedTasks.size();","lastModifiedDate":"2022-02-12"},{"lineNumber":340,"author":{"gitId":"chooyikai"},"content":"            if (numSavedTasks \u003d\u003d 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":341,"author":{"gitId":"chooyikai"},"content":"                return MESSAGE_NO_TASKS;","lastModifiedDate":"2022-01-29"},{"lineNumber":342,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":343,"author":{"gitId":"chooyikai"},"content":"            String result \u003d MESSAGE_SHOW_TASKS;","lastModifiedDate":"2022-01-29"},{"lineNumber":344,"author":{"gitId":"chooyikai"},"content":"            for (int i \u003d 0; i \u003c numSavedTasks; i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":345,"author":{"gitId":"chooyikai"},"content":"                result +\u003d LS + String.format(MESSAGE_ITEMIZED_TASK, i + 1, savedTasks.get(i));","lastModifiedDate":"2022-02-12"},{"lineNumber":346,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":347,"author":{"gitId":"chooyikai"},"content":"            return result;","lastModifiedDate":"2022-01-29"},{"lineNumber":348,"author":{"gitId":"chooyikai"},"content":"        } catch (InvalidCommandFormatException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":349,"author":{"gitId":"chooyikai"},"content":"            return invalidCommandError(COMMAND_LIST, USAGE_LIST);","lastModifiedDate":"2022-01-29"},{"lineNumber":350,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":351,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":352,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":353,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":354,"author":{"gitId":"chooyikai"},"content":"     * Adds a new to-do task.","lastModifiedDate":"2022-01-29"},{"lineNumber":355,"author":{"gitId":"chooyikai"},"content":"     * @param args command arguments","lastModifiedDate":"2022-02-05"},{"lineNumber":356,"author":{"gitId":"chooyikai"},"content":"     * @return command feedback","lastModifiedDate":"2022-02-05"},{"lineNumber":357,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":358,"author":{"gitId":"chooyikai"},"content":"    private static String todoCommand(String args) {","lastModifiedDate":"2022-01-29"},{"lineNumber":359,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":360,"author":{"gitId":"chooyikai"},"content":"            if (args.equals(\"\")) {","lastModifiedDate":"2022-02-05"},{"lineNumber":361,"author":{"gitId":"chooyikai"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2022-02-05"},{"lineNumber":362,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":363,"author":{"gitId":"chooyikai"},"content":"            Todo newTodo \u003d new Todo(args.trim());","lastModifiedDate":"2022-01-29"},{"lineNumber":364,"author":{"gitId":"chooyikai"},"content":"            return addTask(newTodo, MESSAGE_TODO_ADDED);","lastModifiedDate":"2022-01-29"},{"lineNumber":365,"author":{"gitId":"chooyikai"},"content":"        } catch (InvalidCommandFormatException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":366,"author":{"gitId":"chooyikai"},"content":"            return invalidCommandError(COMMAND_TODO, USAGE_TODO);","lastModifiedDate":"2022-01-29"},{"lineNumber":367,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":368,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":369,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":370,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":371,"author":{"gitId":"chooyikai"},"content":"     * Adds a new deadline task. Parsing of the deadline separator occurs in the function body.","lastModifiedDate":"2022-01-29"},{"lineNumber":372,"author":{"gitId":"chooyikai"},"content":"     * @param args command arguments","lastModifiedDate":"2022-02-05"},{"lineNumber":373,"author":{"gitId":"chooyikai"},"content":"     * @return command feedback","lastModifiedDate":"2022-02-05"},{"lineNumber":374,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":375,"author":{"gitId":"chooyikai"},"content":"    private static String deadlineCommand(String args) {","lastModifiedDate":"2022-01-29"},{"lineNumber":376,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":377,"author":{"gitId":"chooyikai"},"content":"            String[] parsedArgs \u003d args.trim().split(DEADLINE_SEPARATOR, 2);","lastModifiedDate":"2022-01-29"},{"lineNumber":378,"author":{"gitId":"chooyikai"},"content":"            if (parsedArgs.length !\u003d 2) {","lastModifiedDate":"2022-02-05"},{"lineNumber":379,"author":{"gitId":"chooyikai"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2022-02-05"},{"lineNumber":380,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":381,"author":{"gitId":"chooyikai"},"content":"            final String taskDescription \u003d parsedArgs[0].trim();","lastModifiedDate":"2022-01-29"},{"lineNumber":382,"author":{"gitId":"chooyikai"},"content":"            final String taskDeadline \u003d parsedArgs[1].trim();","lastModifiedDate":"2022-01-29"},{"lineNumber":383,"author":{"gitId":"chooyikai"},"content":"            Deadline newDeadline \u003d new Deadline(taskDescription, taskDeadline);","lastModifiedDate":"2022-01-29"},{"lineNumber":384,"author":{"gitId":"chooyikai"},"content":"            return addTask(newDeadline, MESSAGE_DEADLINE_ADDED);","lastModifiedDate":"2022-01-29"},{"lineNumber":385,"author":{"gitId":"chooyikai"},"content":"        } catch (InvalidCommandFormatException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":386,"author":{"gitId":"chooyikai"},"content":"            return invalidCommandError(COMMAND_DEADLINE, USAGE_DEADLINE);","lastModifiedDate":"2022-01-29"},{"lineNumber":387,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":388,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":389,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":390,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":391,"author":{"gitId":"chooyikai"},"content":"     * Adds a new event task. Parsing of the event separator occurs in the function body.","lastModifiedDate":"2022-01-29"},{"lineNumber":392,"author":{"gitId":"chooyikai"},"content":"     * @param args command arguments","lastModifiedDate":"2022-02-05"},{"lineNumber":393,"author":{"gitId":"chooyikai"},"content":"     * @return command feedback","lastModifiedDate":"2022-02-05"},{"lineNumber":394,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":395,"author":{"gitId":"chooyikai"},"content":"    private static String eventCommand(String args) {","lastModifiedDate":"2022-01-29"},{"lineNumber":396,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":397,"author":{"gitId":"chooyikai"},"content":"            String[] parsedArgs \u003d args.trim().split(EVENT_SEPARATOR, 2);","lastModifiedDate":"2022-01-29"},{"lineNumber":398,"author":{"gitId":"chooyikai"},"content":"            if (parsedArgs.length !\u003d 2) {","lastModifiedDate":"2022-02-05"},{"lineNumber":399,"author":{"gitId":"chooyikai"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2022-02-05"},{"lineNumber":400,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":401,"author":{"gitId":"chooyikai"},"content":"            final String eventDescription \u003d parsedArgs[0].trim();","lastModifiedDate":"2022-01-29"},{"lineNumber":402,"author":{"gitId":"chooyikai"},"content":"            final String eventTime \u003d parsedArgs[1].trim();","lastModifiedDate":"2022-01-29"},{"lineNumber":403,"author":{"gitId":"chooyikai"},"content":"            Event newEvent \u003d new Event(eventDescription, eventTime);","lastModifiedDate":"2022-01-29"},{"lineNumber":404,"author":{"gitId":"chooyikai"},"content":"            return addTask(newEvent, MESSAGE_EVENT_ADDED);","lastModifiedDate":"2022-01-29"},{"lineNumber":405,"author":{"gitId":"chooyikai"},"content":"        } catch (InvalidCommandFormatException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":406,"author":{"gitId":"chooyikai"},"content":"            return invalidCommandError(COMMAND_EVENT, USAGE_EVENT);","lastModifiedDate":"2022-01-29"},{"lineNumber":407,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":408,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":409,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":410,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":411,"author":{"gitId":"chooyikai"},"content":"     * Marks the specified task as completed.","lastModifiedDate":"2022-01-29"},{"lineNumber":412,"author":{"gitId":"chooyikai"},"content":"     * @param args command arguments","lastModifiedDate":"2022-02-05"},{"lineNumber":413,"author":{"gitId":"chooyikai"},"content":"     * @return command feedback","lastModifiedDate":"2022-02-05"},{"lineNumber":414,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":415,"author":{"gitId":"chooyikai"},"content":"    private static String markCommand(String args) {","lastModifiedDate":"2022-01-29"},{"lineNumber":416,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":417,"author":{"gitId":"chooyikai"},"content":"            int index \u003d Integer.parseInt(args);","lastModifiedDate":"2022-01-29"},{"lineNumber":418,"author":{"gitId":"chooyikai"},"content":"            if (index \u003c 1 || index \u003e savedTasks.size()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":419,"author":{"gitId":"chooyikai"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-02-05"},{"lineNumber":420,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":421,"author":{"gitId":"chooyikai"},"content":"            if (savedTasks.get(index - 1).getIsDone()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":422,"author":{"gitId":"chooyikai"},"content":"                return MESSAGE_TASK_ALREADY_MARKED;","lastModifiedDate":"2022-01-29"},{"lineNumber":423,"author":{"gitId":"chooyikai"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":424,"author":{"gitId":"chooyikai"},"content":"                savedTasks.get(index - 1).setIsDone(true);","lastModifiedDate":"2022-02-12"},{"lineNumber":425,"author":{"gitId":"chooyikai"},"content":"                saveToFile();","lastModifiedDate":"2022-02-12"},{"lineNumber":426,"author":{"gitId":"chooyikai"},"content":"                return String.format(MESSAGE_TASK_MARKED, index, savedTasks.get(index - 1));","lastModifiedDate":"2022-02-12"},{"lineNumber":427,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":428,"author":{"gitId":"chooyikai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":429,"author":{"gitId":"chooyikai"},"content":"            return invalidCommandError(COMMAND_MARK, USAGE_MARK);","lastModifiedDate":"2022-01-29"},{"lineNumber":430,"author":{"gitId":"chooyikai"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":431,"author":{"gitId":"chooyikai"},"content":"            return MESSAGE_NO_SUCH_INDEX;","lastModifiedDate":"2022-02-05"},{"lineNumber":432,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":433,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":434,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":435,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":436,"author":{"gitId":"chooyikai"},"content":"     * Marks the specified task as incomplete.","lastModifiedDate":"2022-01-29"},{"lineNumber":437,"author":{"gitId":"chooyikai"},"content":"     * @param args command arguments","lastModifiedDate":"2022-02-05"},{"lineNumber":438,"author":{"gitId":"chooyikai"},"content":"     * @return command feedback","lastModifiedDate":"2022-02-05"},{"lineNumber":439,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":440,"author":{"gitId":"chooyikai"},"content":"    private static String unmarkCommand(String args) {","lastModifiedDate":"2022-01-29"},{"lineNumber":441,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":442,"author":{"gitId":"chooyikai"},"content":"            int index \u003d Integer.parseInt(args);","lastModifiedDate":"2022-01-29"},{"lineNumber":443,"author":{"gitId":"chooyikai"},"content":"            if (index \u003c 1 || index \u003e savedTasks.size()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":444,"author":{"gitId":"chooyikai"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-02-05"},{"lineNumber":445,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":446,"author":{"gitId":"chooyikai"},"content":"            if (savedTasks.get(index - 1).getIsDone()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":447,"author":{"gitId":"chooyikai"},"content":"                savedTasks.get(index - 1).setIsDone(false);","lastModifiedDate":"2022-02-12"},{"lineNumber":448,"author":{"gitId":"chooyikai"},"content":"                saveToFile();","lastModifiedDate":"2022-02-12"},{"lineNumber":449,"author":{"gitId":"chooyikai"},"content":"                return String.format(MESSAGE_TASK_UNMARKED, index, savedTasks.get(index-1));","lastModifiedDate":"2022-02-12"},{"lineNumber":450,"author":{"gitId":"chooyikai"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":451,"author":{"gitId":"chooyikai"},"content":"                return MESSAGE_TASK_ALREADY_UNMARKED;","lastModifiedDate":"2022-01-29"},{"lineNumber":452,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":453,"author":{"gitId":"chooyikai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":454,"author":{"gitId":"chooyikai"},"content":"            return invalidCommandError(COMMAND_UNMARK, USAGE_UNMARK);","lastModifiedDate":"2022-01-29"},{"lineNumber":455,"author":{"gitId":"chooyikai"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":456,"author":{"gitId":"chooyikai"},"content":"            return MESSAGE_NO_SUCH_INDEX;","lastModifiedDate":"2022-02-05"},{"lineNumber":457,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":459,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":460,"author":{"gitId":"chooyikai"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":461,"author":{"gitId":"chooyikai"},"content":"     * Deletes the specified task.","lastModifiedDate":"2022-02-12"},{"lineNumber":462,"author":{"gitId":"chooyikai"},"content":"     * @param args command arguments","lastModifiedDate":"2022-02-12"},{"lineNumber":463,"author":{"gitId":"chooyikai"},"content":"     * @return command feedback","lastModifiedDate":"2022-02-12"},{"lineNumber":464,"author":{"gitId":"chooyikai"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":465,"author":{"gitId":"chooyikai"},"content":"    private static String deleteCommand(String args) {","lastModifiedDate":"2022-02-12"},{"lineNumber":466,"author":{"gitId":"chooyikai"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":467,"author":{"gitId":"chooyikai"},"content":"            int index \u003d Integer.parseInt(args);","lastModifiedDate":"2022-02-12"},{"lineNumber":468,"author":{"gitId":"chooyikai"},"content":"            if (index \u003c 1 || index \u003e savedTasks.size()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":469,"author":{"gitId":"chooyikai"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-02-12"},{"lineNumber":470,"author":{"gitId":"chooyikai"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":471,"author":{"gitId":"chooyikai"},"content":"            return removeTask(index - 1);","lastModifiedDate":"2022-02-12"},{"lineNumber":472,"author":{"gitId":"chooyikai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":473,"author":{"gitId":"chooyikai"},"content":"            return invalidCommandError(COMMAND_DELETE, USAGE_DELETE);","lastModifiedDate":"2022-02-12"},{"lineNumber":474,"author":{"gitId":"chooyikai"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":475,"author":{"gitId":"chooyikai"},"content":"            return MESSAGE_NO_SUCH_INDEX;","lastModifiedDate":"2022-02-12"},{"lineNumber":476,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":477,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":478,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chooyikai":474,"-":4}},{"path":"src/main/java/duke/exception/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chooyikai"},"content":"package duke.exception;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"chooyikai"},"content":"public class InvalidCommandFormatException extends Exception {","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"chooyikai"},"content":"    // No code needed","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"chooyikai"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"chooyikai":5}},{"path":"src/main/java/duke/exception/MalformedTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chooyikai"},"content":"package duke.exception;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"chooyikai"},"content":"public class MalformedTaskFormatException extends Exception {","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"chooyikai"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"chooyikai":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chooyikai"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"chooyikai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"chooyikai"},"content":"    protected String dueBy;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"chooyikai"},"content":"    public Deadline(String description, String dueBy) {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"chooyikai"},"content":"        super(description);","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"chooyikai"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"chooyikai"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"chooyikai"},"content":"    public String formatAsData(String FS) {","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"chooyikai"},"content":"        return \"D\" + FS + super.formatAsData(FS) + FS + this.dueBy;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"chooyikai"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"chooyikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"chooyikai"},"content":"        return \"  DUE: \" + super.toString() + \" (by: \" + this.dueBy + \")\";","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"chooyikai"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"chooyikai":20}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chooyikai"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"chooyikai"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"chooyikai"},"content":"    protected String time;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"chooyikai"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"chooyikai"},"content":"        super(description);","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"chooyikai"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"chooyikai"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"chooyikai"},"content":"    public String formatAsData(String FS) {","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"chooyikai"},"content":"        return \"E\" + FS + super.formatAsData(FS) + FS + this.time;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"chooyikai"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"chooyikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"chooyikai"},"content":"        return \"EVENT: \" + super.toString() + \" (at: \" + this.time + \")\";","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"chooyikai"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"chooyikai":20}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chooyikai"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"chooyikai"},"content":"public class Task {","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"chooyikai"},"content":"    protected static final String INDICATOR_MARKED \u003d \"[✓]\";","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"chooyikai"},"content":"    protected static final String INDICATOR_UNMARKED \u003d \"[ ]\";","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"chooyikai"},"content":"    protected String taskDescription;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"chooyikai"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"chooyikai"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"chooyikai"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"chooyikai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"chooyikai"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"chooyikai"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"chooyikai"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"chooyikai"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"chooyikai"},"content":"    public String formatAsData(String FS) {","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"chooyikai"},"content":"        return (isDone ? 1 : 0) + FS + this.taskDescription;","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"chooyikai"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"chooyikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"chooyikai"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"chooyikai"},"content":"            return INDICATOR_MARKED + \" \" + this.taskDescription;","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"chooyikai"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"chooyikai"},"content":"            return INDICATOR_UNMARKED + \" \" + this.taskDescription;","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"chooyikai"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"chooyikai"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"chooyikai":35}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chooyikai"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"chooyikai"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"chooyikai"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"chooyikai"},"content":"        super(description);","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"chooyikai"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"chooyikai"},"content":"    public String formatAsData(String FS) {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"chooyikai"},"content":"        return \"T\" + FS + super.formatAsData(FS);","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"chooyikai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"chooyikai"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"chooyikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"chooyikai"},"content":"        return \" TODO: \" + super.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"chooyikai"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"chooyikai"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"chooyikai":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chooyikai"},"content":"list list","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"chooyikai"},"content":"list","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"chooyikai"},"content":"todo","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"chooyikai"},"content":"todo task 1","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"chooyikai"},"content":"deadline","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"chooyikai"},"content":"deadline task 2","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"chooyikai"},"content":"deadline task 2 /by ","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"chooyikai"},"content":"deadline task 2 /by due` date`","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"chooyikai"},"content":"event","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"chooyikai"},"content":"event task 3","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"chooyikai"},"content":"event task 3 /at ","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"chooyikai"},"content":"event task 3 /at time","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"chooyikai"},"content":"list","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"chooyikai"},"content":"mark","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"chooyikai"},"content":"unmark","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"chooyikai"},"content":"mark abc","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"chooyikai"},"content":"unmark abc","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"chooyikai"},"content":"unmark 1","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"chooyikai"},"content":"mark 1","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"chooyikai"},"content":"mark 1","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"chooyikai"},"content":"unmark 1","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"chooyikai"},"content":"mark 100","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"chooyikai"},"content":"unmark 100","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"chooyikai"},"content":"delete","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"chooyikai"},"content":"delete abc","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"chooyikai"},"content":"delete 100","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"chooyikai"},"content":"mark 3","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"chooyikai"},"content":"delete 2","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"chooyikai"},"content":"list","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"chooyikai"},"content":"bye bye","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"chooyikai"},"content":"bye","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"chooyikai":31}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chooyikai"},"content":"list","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"chooyikai"},"content":"bye","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"chooyikai":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"chooyikai"},"content":"if exist .\\data del .\\data","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"chooyikai"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"chooyikai"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"chooyikai"},"content":"java -classpath ..\\bin duke.Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"chooyikai"},"content":"FC ACTUAL2.TXT EXPECTED2.TXT","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"chooyikai":5,"-":19}}]
