[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"    // toString format string","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"    public static final String FORMAT_STRING \u003d \"[D][%c] %s (by: %s)\";","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"    protected String byDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"     * Create a Deadline with isDone set to false, empty description and empty byDate","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    public Deadline() {","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"        super();","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"        this.byDate \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"     * Create a Deadline with isDone set to false, description of choice and empty byDate","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"     * @param description Description of the Task to be created","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    public Deadline(String description) {","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"        super(description);","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"        this.byDate \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"     * Create a Deadline with isDone set to false, description of choice and byDate of choice","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"     * @param description Description of the Task to be created","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"     * @param byDate String representing deadline","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    public Deadline(String description, String byDate) {","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"     * Returns the byDate associated with deadline","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"     * @return byDate","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"    public String getByDate() {","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        return byDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"    public String toString() {","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"        return String.format(FORMAT_STRING, this.getStatusIcon(), this.getDescription(), this.getByDate());","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"IncompetentDev":51}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    // Regex string to extract commands and flags","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"    public static final String COMMAND_FORMAT \u003d \"(\\\\S+)(.*)\";","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    // Fixed string output for startup and exit","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"            \" ____        _        \\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    public static final String WELCOME_BANNER \u003d","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"            \"____________________________________________________________\"","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\nHello! I\u0027m Dook!\"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\nWhat can I do for you?\"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\n____________________________________________________________\";","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    public static final String EXIT_MESSAGE \u003d","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"            \"____________________________________________________________\"","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\nBye. Hope to see you again soon!\"","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\n____________________________________________________________\";","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"     * Prints introduction message","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"    public static void printIntro() {","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"        System.out.println(WELCOME_BANNER);","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        // Intro message","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        printIntro();","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"        //","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"        Handler commandHandler \u003d new Handler();","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"        Scanner scannerInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        boolean hasInput \u003d true;","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"        Parser argumentParser \u003d new Parser();","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"        while (hasInput) {","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"            String userInput \u003d scannerInput.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"            if (!argumentParser.parseInput(userInput)) {","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"                continue;","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"            hasInput \u003d commandHandler.execute(argumentParser.getUserCommand(), argumentParser.getArgumentList());","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"        scannerInput.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"        System.out.println(EXIT_MESSAGE);","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"IncompetentDev":48,"-":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"    // toString format string","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"    public static final String FORMAT_STRING \u003d \"[E][%c] %s (at: %s)\";","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"    protected String atDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"     * Create a Deadline with isDone set to false, empty description and empty atDate","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    public Event() {","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"        super();","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"        this.atDate \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"     * Create an Event with isDone set to false, description of choice and empty atDate","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"     * @param description Description of the Task to be created","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    public Event(String description) {","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"        super(description);","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"        this.atDate \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"     * Create an Event with isDone set to false, description of choice and atDate of choice","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"     * @param description Description of the Task to be created","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"     * @param atDate String representing event time","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    public Event(String description, String atDate) {","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"     * Returns the atDate associated with event","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"     * @return byDate","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"    public String getAtDate() {","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        return atDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"    public String toString() {","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"        return String.format(FORMAT_STRING, this.getStatusIcon(), this.getDescription(), this.getAtDate());","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"IncompetentDev":51}},{"path":"src/main/java/Handler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":" * Stores the","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"public class Handler {","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    // Output message format for various actions","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"    public static final String TASK_ADDED_MESSAGE_FORMAT \u003d","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"            \"____________________________________________________________\"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\nadded: %s\"","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\n____________________________________________________________\";","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    public static final String TASK_MARKED_MESSAGE_FORMAT \u003d","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"            \"____________________________________________________________\"","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\nNice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\n %s\"","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\n____________________________________________________________\";","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    public static final String TASK_UNMARKED_MESSAGE_FORMAT \u003d","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"            \"____________________________________________________________\"","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\nOK, I\u0027ve marked this task as not done yet:\"","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\n %s\"","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\n____________________________________________________________\";","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    public static final String LIST_PRE_MESSAGE_FORMAT \u003d","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"            \"____________________________________________________________\"","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\nHere are the tasks in your list\";","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"    public static final String LIST_POST_MESSAGE_FORMAT \u003d","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"            \"____________________________________________________________\";","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    public Handler() {","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"     * Execute a command based on user input","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"     * @param userCommand the command user entered","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"     * @param argumentList the accompanying arguments for the command","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"    public Boolean execute(String userCommand, Map\u003cString, String\u003e argumentList) {","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        Task taskToAct;","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"        switch (userCommand) {","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"        case \"bye\":","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"            return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"        case \"list\":","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"            System.out.println(LIST_PRE_MESSAGE_FORMAT);","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"            for (int i \u003d 0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"                System.out.println((i+1)+\". \"+taskList.get(i).toString());","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"            System.out.println(LIST_POST_MESSAGE_FORMAT);","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"            taskToAct \u003d taskList.get(Integer.parseInt(argumentList.get(\"\"))-1);","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"            taskToAct.setStatusIcon(true);","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"            System.out.println(String.format(TASK_MARKED_MESSAGE_FORMAT, taskToAct.toString()));","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"            taskToAct \u003d taskList.get(Integer.parseInt(argumentList.get(\"\"))-1);","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"            taskToAct.setStatusIcon(false);","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"IncompetentDev"},"content":"            System.out.println(String.format(TASK_UNMARKED_MESSAGE_FORMAT, taskToAct.toString()));","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"IncompetentDev"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"IncompetentDev"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"IncompetentDev"},"content":"            taskToAct \u003d new Todo(argumentList.get(\"\"));","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"IncompetentDev"},"content":"            taskList.add(taskToAct);","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"IncompetentDev"},"content":"            System.out.println(String.format(TASK_ADDED_MESSAGE_FORMAT, taskToAct.toString()));","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"IncompetentDev"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"IncompetentDev"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"IncompetentDev"},"content":"            taskToAct \u003d new Deadline(argumentList.get(\"\"), argumentList.get(\"by\"));","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"IncompetentDev"},"content":"            taskList.add(taskToAct);","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"IncompetentDev"},"content":"            System.out.println(String.format(TASK_ADDED_MESSAGE_FORMAT, taskToAct.toString()));","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"IncompetentDev"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"IncompetentDev"},"content":"        case \"event\":","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"IncompetentDev"},"content":"            taskToAct \u003d new Event(argumentList.get(\"\"), argumentList.get(\"at\"));","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"IncompetentDev"},"content":"            taskList.add(taskToAct);","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"IncompetentDev"},"content":"            System.out.println(String.format(TASK_ADDED_MESSAGE_FORMAT, taskToAct.toString()));","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"IncompetentDev"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"IncompetentDev"},"content":"        default:","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"IncompetentDev"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"IncompetentDev"},"content":"        return true;","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"IncompetentDev":85}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"import static java.util.Map.entry;","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"public class Parser {","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"    // Dictionary storing mappings of command -\u003e regex string to extract parameters","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"    public static final Map\u003cString, Pattern\u003e MAP_COMMAND_FORMAT \u003d Map.ofEntries(","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"            entry(\"bye\", Pattern.compile(\"(.?)\")),","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"            entry(\"list\", Pattern.compile(\"(.?)\")),","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"            entry(\"mark\", Pattern.compile(\"(\\\\d+)\")),","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"            entry(\"unmark\", Pattern.compile(\"(\\\\d+)\")),","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"            entry(\"todo\", Pattern.compile(\"(.+)\")),","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"            entry(\"deadline\", Pattern.compile(\"(.*)\\\\/by\\\\s(.*)\")),","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"            entry(\"event\", Pattern.compile(\"(.*)\\\\/at\\\\s(.*)\")));","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    // Used to extract initial command","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"    public static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(\\\\S+)(.*)\");","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    // Data fields to store command arguments","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    protected String userCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    protected Map\u003cString, String\u003e argumentList;","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"     * Initialises this Parser with empty userCommand and empty argumentList","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"    public Parser() {","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        this.userCommand \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        argumentList \u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"     * Parse user input, returns a boolean indicating success or failure","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"     * Sets userCommand to the command in userInput","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"     * Sets argumentList on the arguments passed through userInput","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"     * argumentList is built based off userCommand","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"     * userCommand and argumentList will be set to empty if the command given does not match regex","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"     * @param userInput user input to be parsed","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"     * @return boolean indicating valid argument","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"    public Boolean parseInput(String userInput) {","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"        // Get the command and set userCommand","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"        Matcher commandMatcher \u003d COMMAND_FORMAT.matcher(userInput);","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"        // if empty (todo improve checks)","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"        if (!commandMatcher.find()) {","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"            this.userCommand \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"            this.argumentList \u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"            return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"        userCommand \u003d commandMatcher.group(1);","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"        // Set arguments based off userCommand","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"        String arguments \u003d commandMatcher.group(2).trim();","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"        Pattern argumentFormat \u003d MAP_COMMAND_FORMAT.get(userCommand);","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"        Matcher argumentMatcher \u003d argumentFormat.matcher(arguments);","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"        if (!argumentMatcher.find()) {","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"            this.userCommand \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"            this.argumentList \u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"            return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"IncompetentDev"},"content":"        // Half-baked argument parser, not extensible past iP","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"IncompetentDev"},"content":"        switch (userCommand) {","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"IncompetentDev"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"IncompetentDev"},"content":"            argumentList \u003d Map.ofEntries(","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"IncompetentDev"},"content":"                    entry(\"\", argumentMatcher.group(1).trim()),","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"IncompetentDev"},"content":"                    entry(\"by\", argumentMatcher.group(2).trim()));","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"IncompetentDev"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"IncompetentDev"},"content":"        case \"event\":","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"IncompetentDev"},"content":"            argumentList \u003d Map.ofEntries(","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"IncompetentDev"},"content":"                    entry(\"\", argumentMatcher.group(1)),","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"IncompetentDev"},"content":"                    entry(\"at\", argumentMatcher.group(2).trim()));","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"IncompetentDev"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"IncompetentDev"},"content":"        default:","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"IncompetentDev"},"content":"            argumentList \u003d Map.ofEntries(entry(\"\", argumentMatcher.group(1)));","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"IncompetentDev"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"IncompetentDev"},"content":"        return true;","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"IncompetentDev"},"content":"     * Returns parsed command from user input","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"IncompetentDev"},"content":"     * @return parsed command form user input","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"IncompetentDev"},"content":"    public String getUserCommand() {","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"IncompetentDev"},"content":"        return this.userCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"IncompetentDev"},"content":"     * Get all arguments","lastModifiedDate":"2022-02-07"},{"lineNumber":94,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":95,"author":{"gitId":"IncompetentDev"},"content":"     * @return command given by user","lastModifiedDate":"2022-02-07"},{"lineNumber":96,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"IncompetentDev"},"content":"    public Map\u003cString, String\u003e getArgumentList() {","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"IncompetentDev"},"content":"        return this.argumentList;","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"IncompetentDev":100}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"public class Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"    protected String description;","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"     * Create a Task with isDone set to false and empty description","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    public Task() {","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"     * Create a Task with isDone set to false and description of choice","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"     * @param description Description of the Task to be created","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"     * Returns a String representing the description for the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"     * @return Description of Task","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"        return description;","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"     * Returns a character that appropriately represents the state of Task completion","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"     * @return char \u0027X\u0027 if done, \u0027 \u0027 if not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"    public char getStatusIcon() {","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        return (isDone ? \u0027X\u0027 : \u0027 \u0027);","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"     * Sets a boolean value for isDone","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"     * @param isDone boolean value representing completion of Task","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"    public void setStatusIcon(boolean isDone) {","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"IncompetentDev":49}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"    // toString format string","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"    public static final String FORMAT_STRING \u003d \"[T][%c] %s\";","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"     * Create a Todo with isDone set to false and description of choice","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"     * @param description Description of the Task to be created","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"        super(description);","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    public String toString() {","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"        return String.format(FORMAT_STRING, this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"IncompetentDev":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"todo asdasd","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"todo asdasd /by test","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"todo asdasd /at test","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"deadline asdasd","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"deadline asdasd /at test","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"deadline asdasd /by test","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"event asdasd","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"event asdasdasd /at test","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"event asdasd /by test","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"list","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"mark 5","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"list","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"unmark 4","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"list","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"mark 4","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"list","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"unmark 4","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"list","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"bye","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"IncompetentDev":19}}]
