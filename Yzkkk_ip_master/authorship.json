[{"path":"DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"Yzkkk"},"content":"    public DukeException(String message){","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"Yzkkk"},"content":"        super(message);","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"Yzkkk"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"Yzkkk":5}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"[  (D)( ) hw (by: tmr),   (E)( ) hehe (at: 7am)]","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Yzkkk":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Yzkkk"},"content":"    protected String by;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Yzkkk"},"content":"    public Deadline(String instruction, String by) {","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Yzkkk"},"content":"        super(instruction);","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Yzkkk"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Yzkkk"},"content":"    public void setBy(String by) {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Yzkkk"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Yzkkk"},"content":"    public String getBy() {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Yzkkk"},"content":"        return by;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Yzkkk"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Yzkkk"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Yzkkk"},"content":"        return \"  (D)\" + super.toString() + this.instruction + \"(by: \" + by + \")\";","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"Yzkkk"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Yzkkk":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Yzkkk"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Yzkkk"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Yzkkk"},"content":"    public static final String PREFIX \u003d \"  \\\\[T]\\\\[ ]\";","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"Yzkkk"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"Yzkkk"},"content":"        Storage.checkFile();","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Yzkkk"},"content":"        greet();","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"Yzkkk"},"content":"        TaskList.executeCommands();","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"Yzkkk"},"content":"    private static void greet() {","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(UI.LOGO);","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(UI.MESSAGE_GREET);","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Yzkkk"},"content":"    public static void scanInput(Task task) {","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Yzkkk"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"Yzkkk"},"content":"        task.instruction \u003d in.nextLine();","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Yzkkk":22,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"Yzkkk"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"Yzkkk"},"content":"        super(message);","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"Yzkkk"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"Yzkkk":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"public class Event extends Task{","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"Yzkkk"},"content":"    protected String at;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Yzkkk"},"content":"    public Event(String instruction, String at) {","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Yzkkk"},"content":"        super(instruction);","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Yzkkk"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Yzkkk"},"content":"    public void setAt(String at) {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Yzkkk"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Yzkkk"},"content":"    public String getAt() {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Yzkkk"},"content":"        return at;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Yzkkk"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Yzkkk"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Yzkkk"},"content":"        return \"  (E)\" + super.toString() + this.instruction + \"(at: \" + at + \")\";","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Yzkkk"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Yzkkk":22}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"public class Parser {","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Yzkkk"},"content":"    public static void checkExceptionsFind(String[] arrayOfStr) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 1){","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"find\"","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_KEYWORD);","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 2 \u0026\u0026 arrayOfStr[1].equals(\"\")){","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"find \"","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_KEYWORD);","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Yzkkk"},"content":"    public static void checkExceptionsEvent(String[] arrayOfStr, String[] arrayOfEvent) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 1 || arrayOfStr[1].equals(\"/at\")){","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"event\" or \"event /at\"","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_EVENT);","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 2 \u0026\u0026 arrayOfStr[1].equals(\"\")){","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"event \"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_EVENT);","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfEvent.length \u003d\u003d 1){","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Yzkkk"},"content":"            //if user did not input \"/at\"","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_EVENT_DATE);","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Yzkkk"},"content":"    public static void checkExceptionsDeadline(String[] arrayOfStr, String[] arrayOfDeadline) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 1 || arrayOfStr[1].equals(\"/by\")){","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"deadline\" or \"deadline /by\"","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_TASK);","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 2 \u0026\u0026 arrayOfStr[1].equals(\"\")){","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"deadline \"","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_TASK);","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfDeadline.length \u003d\u003d 1){","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"Yzkkk"},"content":"            //if user did not input \"/by\"","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_DUE_DATE);","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"Yzkkk"},"content":"    public static void checkExceptionsDelete(String[] arrayOfStr) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 1) {","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"delete\"","lastModifiedDate":"2022-03-01"},{"lineNumber":46,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_TASK_NUMBER);","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":48,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 2 \u0026\u0026 arrayOfStr[1].equals(\"\")){","lastModifiedDate":"2022-03-01"},{"lineNumber":49,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"delete \"","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_TASK_NUMBER);","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":53,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":54,"author":{"gitId":"Yzkkk"},"content":"    public static void checkExceptionsMark(String[] arrayOfStr) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":55,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 1){","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"mark\"","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_TASK_NUMBER);","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 2 \u0026\u0026 arrayOfStr[1].equals(\"\")){","lastModifiedDate":"2022-03-01"},{"lineNumber":60,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"mark \"","lastModifiedDate":"2022-03-01"},{"lineNumber":61,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_TASK_NUMBER);","lastModifiedDate":"2022-03-01"},{"lineNumber":62,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":63,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":64,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":65,"author":{"gitId":"Yzkkk"},"content":"    public static void checkExceptionsTodo(String[] arrayOfStr) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":66,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 1) {","lastModifiedDate":"2022-03-01"},{"lineNumber":67,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"todo\"","lastModifiedDate":"2022-03-01"},{"lineNumber":68,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_TASK);","lastModifiedDate":"2022-03-01"},{"lineNumber":69,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":70,"author":{"gitId":"Yzkkk"},"content":"        if (arrayOfStr.length \u003d\u003d 2 \u0026\u0026 arrayOfStr[1].equals(\"\")){","lastModifiedDate":"2022-03-01"},{"lineNumber":71,"author":{"gitId":"Yzkkk"},"content":"            //if user input \"todo \"","lastModifiedDate":"2022-03-01"},{"lineNumber":72,"author":{"gitId":"Yzkkk"},"content":"            throw new DukeException(UI.ERROR_NO_TASK);","lastModifiedDate":"2022-03-01"},{"lineNumber":73,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":75,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"Yzkkk"},"content":"}","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Yzkkk":76}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Yzkkk"},"content":"import java.io.File;","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Yzkkk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Yzkkk"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Yzkkk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Yzkkk"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Yzkkk"},"content":"public class Storage {","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Yzkkk"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"Yzkkk"},"content":"    public static void checkFile() {","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Yzkkk"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Yzkkk"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Yzkkk"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Yzkkk"},"content":"            folder.mkdir();","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Yzkkk"},"content":"        if (!f.exists()) {","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Yzkkk"},"content":"            try {","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Yzkkk"},"content":"                f.createNewFile();","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Yzkkk"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Yzkkk"},"content":"                System.out.println(UI.ERROR_FAILED_TO_CREATE_FILE);","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Yzkkk"},"content":"            }","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"full path: \" + f.getAbsolutePath());","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Yzkkk"},"content":"    public static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Yzkkk"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Yzkkk"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Yzkkk"},"content":"        fw.close();","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Yzkkk"},"content":"    public static void saveToFile(ArrayList\u003cString\u003e instructionsList) {","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"Yzkkk"},"content":"        String task;","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Yzkkk"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"Yzkkk"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"Yzkkk"},"content":"            for (int i \u003d 1; i \u003c\u003d instructionsList.size(); i++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"Yzkkk"},"content":"                task \u003d i + \". \" + instructionsList.get(i - 1);","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"Yzkkk"},"content":"                list.add(task);","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"Yzkkk"},"content":"            }","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"Yzkkk"},"content":"            writeToFile(filePath, String.valueOf(instructionsList));","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"Yzkkk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"Yzkkk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"Yzkkk"},"content":"    public static void loadFromFile(ArrayList\u003cString\u003e instructionsList) throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"Yzkkk"},"content":"        try {","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"Yzkkk"},"content":"            File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"Yzkkk"},"content":"            Scanner scan \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"Yzkkk"},"content":"            String[] array;","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"Yzkkk"},"content":"            while (scan.hasNextLine()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"Yzkkk"},"content":"                String instructions \u003d scan.nextLine();","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"Yzkkk"},"content":"                instructions \u003d instructions.replace(\"[\", \"\");","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"Yzkkk"},"content":"                instructions \u003d instructions.replace(\"]\", \"\");","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"Yzkkk"},"content":"                array \u003d instructions.split(\", \", 200);","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"Yzkkk"},"content":"                for (int i \u003d 0; i \u003c array.length; i++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"Yzkkk"},"content":"                    instructionsList.add(\"\");","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"Yzkkk"},"content":"                    instructionsList.set(i, array[i]);","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"Yzkkk"},"content":"                    Task.number++;","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"Yzkkk"},"content":"                }","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"Yzkkk"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"Yzkkk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"Yzkkk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"Yzkkk"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Yzkkk":69}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"public class Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Yzkkk"},"content":"    protected String instruction;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"Yzkkk"},"content":"    protected static int number;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Yzkkk"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Yzkkk"},"content":"    public Task(String instruction) {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Yzkkk"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Yzkkk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Yzkkk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Yzkkk"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Yzkkk"},"content":"    public void setStatusIcon(Boolean isDone){","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Yzkkk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Yzkkk"},"content":"    public void printStatus() {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Yzkkk"},"content":"        System.out.print(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"Yzkkk"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"Yzkkk"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"Yzkkk"},"content":"        return \"(\" + getStatusIcon() +\")\";","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"Yzkkk"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Yzkkk":25}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Yzkkk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Yzkkk"},"content":"public class TaskList {","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Yzkkk"},"content":"    //public static ArrayList\u003cString\u003e instructionsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Yzkkk"},"content":"    public static void executeCommands() throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Yzkkk"},"content":"        ArrayList\u003cString\u003e instructionsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Yzkkk"},"content":"        Task task \u003d new Task(\"homework\");","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Yzkkk"},"content":"        task.number \u003d 0;","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Yzkkk"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"holiday\");","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Yzkkk"},"content":"        Event event \u003d new Event(\"test\", \"7pm\");","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Yzkkk"},"content":"        Storage.loadFromFile(instructionsList);","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"Yzkkk"},"content":"        for (int i \u003d 0; i \u003c 200; i++) { // can have 200 input lines (including wrong command)","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"Yzkkk"},"content":"            Duke.scanInput(task);","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Yzkkk"},"content":"            String instructionLine \u003d task.instruction.replaceAll(\"todo|deadline|event\", \"\");","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Yzkkk"},"content":"            //String updatedInstructionLine; (updated instruction line is in the form of ()() instructionline)","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Yzkkk"},"content":"            String[] arrayOfStr \u003d task.instruction.split(\" \", 50);","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Yzkkk"},"content":"            String[] arrayOfDeadline \u003d instructionLine.split(\"/by \", 2);","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Yzkkk"},"content":"            String[] arrayOfEvent \u003d instructionLine.split(\"/at \", 2);","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Yzkkk"},"content":"            boolean isBye \u003d arrayOfStr[0].equals(UI.COMMAND_BYE);","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Yzkkk"},"content":"            boolean isList \u003d arrayOfStr[0].equals(UI.COMMAND_LIST);","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Yzkkk"},"content":"            boolean isMark \u003d arrayOfStr[0].equals(UI.COMMAND_MARK);","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Yzkkk"},"content":"            boolean isTodo \u003d arrayOfStr[0].equals(UI.COMMAND_TODO);","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Yzkkk"},"content":"            boolean isDeadline \u003d arrayOfStr[0].equals(UI.COMMAND_DEADLINE);","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Yzkkk"},"content":"            boolean isEvent \u003d arrayOfStr[0].equals(UI.COMMAND_EVENT);","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"Yzkkk"},"content":"            boolean isDelete \u003d arrayOfStr[0].equals(UI.COMMAND_DELETE);","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"Yzkkk"},"content":"            boolean isFind \u003d arrayOfStr[0].equals(UI.COMMAND_FIND);","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Yzkkk"},"content":"            try {","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"Yzkkk"},"content":"                if (isBye) {","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"Yzkkk"},"content":"                    executeBye();","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"Yzkkk"},"content":"                    break;","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"Yzkkk"},"content":"                } else if (isList) {","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"Yzkkk"},"content":"                    executeList(instructionsList, task);","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"Yzkkk"},"content":"                } else if (isMark) {","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"Yzkkk"},"content":"                    executeMark(instructionsList, arrayOfStr);","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"Yzkkk"},"content":"                } else if (isTodo) {","lastModifiedDate":"2022-03-01"},{"lineNumber":46,"author":{"gitId":"Yzkkk"},"content":"                    executeTodo(instructionsList, task, instructionLine, arrayOfStr);","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"Yzkkk"},"content":"                } else if (isDelete){","lastModifiedDate":"2022-03-01"},{"lineNumber":48,"author":{"gitId":"Yzkkk"},"content":"                    executeDelete(instructionsList, task, arrayOfStr);","lastModifiedDate":"2022-03-01"},{"lineNumber":49,"author":{"gitId":"Yzkkk"},"content":"                } else if (isDeadline) {","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"Yzkkk"},"content":"                    executeDeadline(instructionsList, task, deadline, arrayOfStr, arrayOfDeadline);","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"Yzkkk"},"content":"                } else if (isEvent) {","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"Yzkkk"},"content":"                    executeEvent(instructionsList, task, event, arrayOfStr, arrayOfEvent);","lastModifiedDate":"2022-03-01"},{"lineNumber":53,"author":{"gitId":"Yzkkk"},"content":"                } else if (isFind) {","lastModifiedDate":"2022-03-01"},{"lineNumber":54,"author":{"gitId":"Yzkkk"},"content":"                    executeFind(instructionsList, task, arrayOfStr);","lastModifiedDate":"2022-03-01"},{"lineNumber":55,"author":{"gitId":"Yzkkk"},"content":"                } else {","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"Yzkkk"},"content":"                    System.out.println(UI.ERROR_GENERAL);","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"Yzkkk"},"content":"                }","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"Yzkkk"},"content":"            } catch(DukeException | IOException e) {","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"Yzkkk"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-03-01"},{"lineNumber":60,"author":{"gitId":"Yzkkk"},"content":"            }","lastModifiedDate":"2022-03-01"},{"lineNumber":61,"author":{"gitId":"Yzkkk"},"content":"            Storage.saveToFile(instructionsList);","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":63,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":64,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":65,"author":{"gitId":"Yzkkk"},"content":"    private static void executeBye() throws IOException {","lastModifiedDate":"2022-03-01"},{"lineNumber":66,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(UI.MESSAGE_BYE);","lastModifiedDate":"2022-03-01"},{"lineNumber":67,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":68,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":69,"author":{"gitId":"Yzkkk"},"content":"    private static void executeList(ArrayList\u003cString\u003e instructionsList, Task task) throws IOException {","lastModifiedDate":"2022-03-01"},{"lineNumber":70,"author":{"gitId":"Yzkkk"},"content":"        printListMessage(instructionsList, task);","lastModifiedDate":"2022-03-01"},{"lineNumber":71,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":72,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":73,"author":{"gitId":"Yzkkk"},"content":"    private static void executeMark(ArrayList\u003cString\u003e instructionsList, String[] arrayOfStr) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":75,"author":{"gitId":"Yzkkk"},"content":"        Parser.checkExceptionsMark(arrayOfStr);","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":77,"author":{"gitId":"Yzkkk"},"content":"        String instructionNum;","lastModifiedDate":"2022-03-01"},{"lineNumber":78,"author":{"gitId":"Yzkkk"},"content":"        instructionNum \u003d arrayOfStr[1];","lastModifiedDate":"2022-03-01"},{"lineNumber":79,"author":{"gitId":"Yzkkk"},"content":"        int index \u003d Integer.parseInt(instructionNum) - 1;","lastModifiedDate":"2022-03-01"},{"lineNumber":80,"author":{"gitId":"Yzkkk"},"content":"        String temp \u003d instructionsList.get(index);","lastModifiedDate":"2022-03-01"},{"lineNumber":81,"author":{"gitId":"Yzkkk"},"content":"        temp \u003d temp.replaceAll(Duke.PREFIX, \"  (T)(X)\");","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"Yzkkk"},"content":"        instructionsList.set(index, temp); //updates the list","lastModifiedDate":"2022-03-01"},{"lineNumber":83,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":84,"author":{"gitId":"Yzkkk"},"content":"        printMarkMessage(instructionsList, index);","lastModifiedDate":"2022-03-01"},{"lineNumber":85,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":86,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":87,"author":{"gitId":"Yzkkk"},"content":"    private static void executeTodo(ArrayList\u003cString\u003e instructionsList, Task task, String instructionLine, String[] arrayOfStr) throws DukeException, IOException {","lastModifiedDate":"2022-03-01"},{"lineNumber":88,"author":{"gitId":"Yzkkk"},"content":"        Parser.checkExceptionsTodo(arrayOfStr);","lastModifiedDate":"2022-03-01"},{"lineNumber":89,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":90,"author":{"gitId":"Yzkkk"},"content":"        String updatedInstructionLine;","lastModifiedDate":"2022-03-01"},{"lineNumber":91,"author":{"gitId":"Yzkkk"},"content":"        updatedInstructionLine \u003d \"  (T)( )\" + instructionLine;","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"Yzkkk"},"content":"        instructionsList.add(\"\");","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"Yzkkk"},"content":"        instructionsList.set(Task.number, updatedInstructionLine);","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"Yzkkk"},"content":"        Task.number++;","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":96,"author":{"gitId":"Yzkkk"},"content":"        printTodoMessage(task, updatedInstructionLine);","lastModifiedDate":"2022-03-01"},{"lineNumber":97,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":98,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":99,"author":{"gitId":"Yzkkk"},"content":"    private static void executeFind(ArrayList\u003cString\u003e instructionsList, Task task, String[] arrayOfStr) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":100,"author":{"gitId":"Yzkkk"},"content":"        Parser.checkExceptionsFind(arrayOfStr);","lastModifiedDate":"2022-03-01"},{"lineNumber":101,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":102,"author":{"gitId":"Yzkkk"},"content":"        String keyword \u003d arrayOfStr[1];","lastModifiedDate":"2022-03-01"},{"lineNumber":103,"author":{"gitId":"Yzkkk"},"content":"        int numOfMatching \u003d 0;","lastModifiedDate":"2022-03-01"},{"lineNumber":104,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"Yzkkk"},"content":"        printFindMessage(instructionsList, task, keyword, numOfMatching);","lastModifiedDate":"2022-03-01"},{"lineNumber":106,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":107,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":108,"author":{"gitId":"Yzkkk"},"content":"    private static void executeEvent(ArrayList\u003cString\u003e instructionsList, Task task, Event event, String[] arrayOfStr, String[] arrayOfEvent) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":109,"author":{"gitId":"Yzkkk"},"content":"        Parser.checkExceptionsEvent(arrayOfStr, arrayOfEvent);","lastModifiedDate":"2022-03-01"},{"lineNumber":110,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":111,"author":{"gitId":"Yzkkk"},"content":"        String updatedInstructionLine;","lastModifiedDate":"2022-03-01"},{"lineNumber":112,"author":{"gitId":"Yzkkk"},"content":"        event.instruction \u003d arrayOfEvent[0];","lastModifiedDate":"2022-03-01"},{"lineNumber":113,"author":{"gitId":"Yzkkk"},"content":"        event.setAt(arrayOfEvent[1]);","lastModifiedDate":"2022-03-01"},{"lineNumber":114,"author":{"gitId":"Yzkkk"},"content":"        updatedInstructionLine \u003d event.toString();","lastModifiedDate":"2022-03-01"},{"lineNumber":115,"author":{"gitId":"Yzkkk"},"content":"        instructionsList.add(\"\");","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"Yzkkk"},"content":"        instructionsList.set(Task.number, updatedInstructionLine);","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"Yzkkk"},"content":"        Task.number++;","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"Yzkkk"},"content":"        printEventMessage(task, event);","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":121,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":122,"author":{"gitId":"Yzkkk"},"content":"    private static void executeDeadline(ArrayList\u003cString\u003e instructionsList, Task task, Deadline deadline, String[] arrayOfStr, String[] arrayOfDeadline) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":123,"author":{"gitId":"Yzkkk"},"content":"        Parser.checkExceptionsDeadline(arrayOfStr, arrayOfDeadline);","lastModifiedDate":"2022-03-01"},{"lineNumber":124,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":125,"author":{"gitId":"Yzkkk"},"content":"        String updatedInstructionLine;","lastModifiedDate":"2022-03-01"},{"lineNumber":126,"author":{"gitId":"Yzkkk"},"content":"        deadline.instruction \u003d arrayOfDeadline[0];","lastModifiedDate":"2022-03-01"},{"lineNumber":127,"author":{"gitId":"Yzkkk"},"content":"        deadline.setBy(arrayOfDeadline[1]);","lastModifiedDate":"2022-03-01"},{"lineNumber":128,"author":{"gitId":"Yzkkk"},"content":"        updatedInstructionLine \u003d deadline.toString();","lastModifiedDate":"2022-03-01"},{"lineNumber":129,"author":{"gitId":"Yzkkk"},"content":"        instructionsList.add(\"\");","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"Yzkkk"},"content":"        instructionsList.set(Task.number, updatedInstructionLine);","lastModifiedDate":"2022-03-02"},{"lineNumber":131,"author":{"gitId":"Yzkkk"},"content":"        Task.number++;","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":133,"author":{"gitId":"Yzkkk"},"content":"        printDeadlineMessage(task, deadline);","lastModifiedDate":"2022-03-01"},{"lineNumber":134,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":135,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":136,"author":{"gitId":"Yzkkk"},"content":"    private static void executeDelete(ArrayList\u003cString\u003e instructionsList, Task task, String[] arrayOfStr) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":137,"author":{"gitId":"Yzkkk"},"content":"        Parser.checkExceptionsDelete(arrayOfStr);","lastModifiedDate":"2022-03-01"},{"lineNumber":138,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":139,"author":{"gitId":"Yzkkk"},"content":"        String instructionNum;","lastModifiedDate":"2022-03-01"},{"lineNumber":140,"author":{"gitId":"Yzkkk"},"content":"        instructionNum \u003d arrayOfStr[1];","lastModifiedDate":"2022-03-01"},{"lineNumber":141,"author":{"gitId":"Yzkkk"},"content":"        int index \u003d Integer.parseInt(instructionNum) - 1;","lastModifiedDate":"2022-03-01"},{"lineNumber":142,"author":{"gitId":"Yzkkk"},"content":"        Task.number--;","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":144,"author":{"gitId":"Yzkkk"},"content":"        printDeleteMessage(instructionsList, task, index);","lastModifiedDate":"2022-03-01"},{"lineNumber":145,"author":{"gitId":"Yzkkk"},"content":"        instructionsList.remove(index);","lastModifiedDate":"2022-03-01"},{"lineNumber":146,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":147,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":148,"author":{"gitId":"Yzkkk"},"content":"    private static void printTodoMessage(Task task, String updatedInstructionLine) {","lastModifiedDate":"2022-03-01"},{"lineNumber":149,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-03-01"},{"lineNumber":150,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(updatedInstructionLine);","lastModifiedDate":"2022-03-01"},{"lineNumber":151,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Now you have \" + Task.number + \" task(s) in the list.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":152,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":153,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":154,"author":{"gitId":"Yzkkk"},"content":"    private static void printMarkMessage(ArrayList\u003cString\u003e instructionsList, int index) {","lastModifiedDate":"2022-03-01"},{"lineNumber":155,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-03-01"},{"lineNumber":156,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(instructionsList.get(index));","lastModifiedDate":"2022-03-01"},{"lineNumber":157,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":158,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":159,"author":{"gitId":"Yzkkk"},"content":"    private static void printDeleteMessage(ArrayList\u003cString\u003e instructionsList, Task task, int index) {","lastModifiedDate":"2022-03-01"},{"lineNumber":160,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-03-01"},{"lineNumber":161,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(instructionsList.get(index));","lastModifiedDate":"2022-03-01"},{"lineNumber":162,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Now you have \" + Task.number + \" task(s) in the list.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":164,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":165,"author":{"gitId":"Yzkkk"},"content":"    private static void printDeadlineMessage(Task task, Deadline deadline) {","lastModifiedDate":"2022-03-01"},{"lineNumber":166,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-03-01"},{"lineNumber":167,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(deadline);","lastModifiedDate":"2022-03-01"},{"lineNumber":168,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Now you have \" + Task.number + \" task(s) in the list.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":169,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":170,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":171,"author":{"gitId":"Yzkkk"},"content":"    private static void printEventMessage(Task task, Event event) {","lastModifiedDate":"2022-03-01"},{"lineNumber":172,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-03-01"},{"lineNumber":173,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(event);","lastModifiedDate":"2022-03-01"},{"lineNumber":174,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Now you have \" + Task.number + \" task(s) in the list.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":175,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":176,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":177,"author":{"gitId":"Yzkkk"},"content":"    private static void printListMessage(ArrayList\u003cString\u003e instructionsList, Task task) {","lastModifiedDate":"2022-03-01"},{"lineNumber":178,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Here are the task(s) in your list:\");","lastModifiedDate":"2022-03-01"},{"lineNumber":179,"author":{"gitId":"Yzkkk"},"content":"        for (int j \u003d 1; j \u003c\u003d Task.number; j++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":180,"author":{"gitId":"Yzkkk"},"content":"            System.out.println(j + \". \" + instructionsList.get(j - 1));","lastModifiedDate":"2022-03-01"},{"lineNumber":181,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":182,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":183,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":184,"author":{"gitId":"Yzkkk"},"content":"    private static void printFindMessage(ArrayList\u003cString\u003e instructionsList, Task task, String keyword, int numOfMatching) {","lastModifiedDate":"2022-03-01"},{"lineNumber":185,"author":{"gitId":"Yzkkk"},"content":"        System.out.println(\"Here are the matching task(s) in your list:\");","lastModifiedDate":"2022-03-01"},{"lineNumber":186,"author":{"gitId":"Yzkkk"},"content":"        for (int j \u003d 1; j \u003c\u003d Task.number; j++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":187,"author":{"gitId":"Yzkkk"},"content":"            if (instructionsList.get(j - 1).contains(keyword)){","lastModifiedDate":"2022-03-01"},{"lineNumber":188,"author":{"gitId":"Yzkkk"},"content":"                numOfMatching++;","lastModifiedDate":"2022-03-01"},{"lineNumber":189,"author":{"gitId":"Yzkkk"},"content":"                System.out.println(numOfMatching + \". \" + instructionsList.get(j - 1));","lastModifiedDate":"2022-03-01"},{"lineNumber":190,"author":{"gitId":"Yzkkk"},"content":"            }","lastModifiedDate":"2022-03-01"},{"lineNumber":191,"author":{"gitId":"Yzkkk"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":192,"author":{"gitId":"Yzkkk"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":193,"author":{"gitId":"Yzkkk"},"content":"}","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Yzkkk":193}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yzkkk"},"content":"public class UI {","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"Yzkkk"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"Yzkkk"},"content":"                                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"Yzkkk"},"content":"                                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"Yzkkk"},"content":"                                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"Yzkkk"},"content":"                                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"Yzkkk"},"content":"    public static final String MESSAGE_GREET \u003d \"Hello! I\u0027m Duke! :)\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Yzkkk"},"content":"    public static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon! :)\";","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"Yzkkk"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"Yzkkk"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"Yzkkk"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"Yzkkk"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"Yzkkk"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"Yzkkk"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"Yzkkk"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"Yzkkk"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"Yzkkk"},"content":"    public static final String ERROR_NO_TASK_NUMBER \u003d \"☹ OOPS! You have not entered the task number!\";","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"Yzkkk"},"content":"    public static final String ERROR_NO_KEYWORD \u003d \"☹ OOPS! You have not entered what you want to find! (The keyword!)\";","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"Yzkkk"},"content":"    public static final String ERROR_NO_TASK \u003d \"☹ OOPS! You have not entered the task!\";","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"Yzkkk"},"content":"    public static final String ERROR_NO_EVENT \u003d \"☹ OOPS! You have not entered the event!\";","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"Yzkkk"},"content":"    public static final String ERROR_NO_EVENT_DATE \u003d \"Hey! You have not entered the event date! hint: use \u0027/at\u0027\";","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"Yzkkk"},"content":"    public static final String ERROR_NO_DUE_DATE \u003d \"Hey! You have not entered the due date! hint: use \u0027/by\u0027\";","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"Yzkkk"},"content":"    public static final String ERROR_GENERAL \u003d \"☹ OOPS! I\u0027m sorry, but I don\u0027t know what that means.\";","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"Yzkkk"},"content":"    public static final String ERROR_FAILED_TO_CREATE_FILE \u003d \"Failed to create file to save tasks.\";","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"Yzkkk"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"Yzkkk"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"Yzkkk":28}}]
