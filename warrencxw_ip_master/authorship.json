[{"path":"src/main/java/duke/Display.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"import java.sql.SQLOutput;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"public class Display {","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"    // Types of errors","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"    public enum ErrorType {","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"        MISSING_TASK_NO, INVALID_TASK_NO, EMPTY_INPUT, EMPTY_TASK_NAME,","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"        MISSING_EVENT_DELIMITER, MISSING_DEADLINE_DELIMITER,","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"        EMPTY_TASK_LIST, COMMAND_NOT_RECOGNISED, CSV_DELIMITER_IN_TASK,","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"        FILE_CREATION_FAILED, SAVE_LOAD_FAILED, SAVE_WRITE_FAILED","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"    // Error Messages","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_MISSING_TASK_NO \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"            \"Please specify a task number to mark/unmark.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_INVALID_TASK_NO \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"            \"The input task number you have entered is invalid.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_EMPTY_INPUT \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"            \"Please enter either a task to do, mark/unmark \u003ctask number\u003e or list\";","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_EMPTY_TASK_NAME \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"            \"Please enter a name for your task.\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"                    + \"SYNTAX: todo \u003ctodo name\u003e\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"                    + \"        event \u003cevent name\u003e /at \u003ctime range\u003e\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"                    + \"        deadline \u003cdeadline name\u003e /by \u003cdue date\u003e\";","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_MISSING_EVENT_DELIMITER \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"            \"Please specify a time range for the event with the delimiter \\\"/at\\\"\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"                    + \"SYNTAX: event \u003cevent name\u003e /at \u003ctime range\u003e\";","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_MISSING_DEADLINE_DELIMITER \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"            \"Please specify a deadline for the task with the delimiter \\\"/by\\\"\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"                    + \"SYNTAX: deadline \u003cdeadline name\u003e /by \u003cdue date\u003e\";","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_EMPTY_TASK_LIST \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"            \"The task list is empty!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_COMMAND_NOT_RECOGNISED \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"            \"The input that you have entered is not recognised, enter \u0027help\u0027 to see available commands.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_CSV_DELIMITER_IN_TASK \u003d","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"            \"The delimiter \u0027\" + Duke.CSV_DELIMITER + \"\u0027 is not allowed to be included in any part of the Task.\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"                    + \"Please try again after omitting it!\";","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_FILE_CREATION_FAILED \u003d ","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"            \"The save system was unable to create the save file for this program. Any tasks created will not be saved.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_SAVE_LOAD_FAILED \u003d ","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"            \"The save system attempted to look for a save file, but encountered errors in the process of doing so.\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"                    + \"The program will proceed with running as if there was no save files.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_SAVE_WRITE_FAILED \u003d","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"            \"The save system attempted to write to a save file, but encountered errors in the process of doing so.\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"                    + \"The program will proceed with running without saving.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"    // Text Constants","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"    public static final String RABBIT_ASCII \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"            \"                      /|      __\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"                    + \"*             +      / |   ,-~ /             +\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"                    + \"     .              Y :|  //  /                .         *\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"                    + \"         .          | jj /( .^     *\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"                    + \"               *    \u003e-\\\"~\\\"-v\\\"              .        *        .\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"                    + \"*                  /       Y\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"warrencxw"},"content":"                    + \"   .     .        jo  o    |     .            +\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"warrencxw"},"content":"                    + \"                 ( ~T~     j                     +     .\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"warrencxw"},"content":"                    + \"      +           \u003e._-\u0027 _./         +\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"warrencxw"},"content":"                    + \"               /| ;-\\\"~ _  l\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"warrencxw"},"content":"                    + \"  .           / l/ ,-\\\"~    \\\\     +\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"warrencxw"},"content":"                    + \"              \\\\//\\\\/      .- \\\\\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"warrencxw"},"content":"                    + \"       +       Y        /    Y\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"warrencxw"},"content":"                    + \"               l       I     !\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"warrencxw"},"content":"                    + \"               ]\\\\      _\\\\    /\\\"\\\\\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"warrencxw"},"content":"                    + \"              (\\\" ~----( ~   Y.  )\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"warrencxw"},"content":"                    + \"          ~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"warrencxw"},"content":"    public static final String WARREN_ASCII \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"            \",--.   ,--.\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"warrencxw"},"content":"                    + \"|  |   |  | ,--,--.,--.--.,--.--. ,---. ,--,--,\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"warrencxw"},"content":"                    + \"|  |.\u0027.|  |\u0027 ,-.  ||  .--\u0027|  .--\u0027| .-. :|      \\\\\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"warrencxw"},"content":"                    + \"|   ,\u0027.   |\\\\ \u0027-\u0027  ||  |   |  |   \\\\   --.|  ||  |\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"warrencxw"},"content":"                    + \"\u0027--\u0027   \u0027--\u0027 `--`--\u0027`--\u0027   `--\u0027    `----\u0027`--\u0027\u0027--\u0027\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"warrencxw"},"content":"    public static final String GREETING_MESSAGE \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":74,"author":{"gitId":"warrencxw"},"content":"            \"Hello,\\n\" + WARREN_ASCII","lastModifiedDate":"2022-02-05"},{"lineNumber":75,"author":{"gitId":"warrencxw"},"content":"                    + \"What can I do for you? (enter \u0027hello\u0027 for available commands!)\";","lastModifiedDate":"2022-02-05"},{"lineNumber":76,"author":{"gitId":"warrencxw"},"content":"    public static final String FAREWELL_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":77,"author":{"gitId":"warrencxw"},"content":"    public static final String HELP_MESSAGE \u003d","lastModifiedDate":"2022-02-05"},{"lineNumber":78,"author":{"gitId":"warrencxw"},"content":"            \"| AVAILABLE COMMANDS |\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":79,"author":{"gitId":"warrencxw"},"content":"                    + \"  1. list\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"warrencxw"},"content":"                    + \"        Displays the full list of tasks that have been saved.\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"warrencxw"},"content":"                    + \"  2. todo \u003ctask name\u003e\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"warrencxw"},"content":"                    + \"        Creates a new todo list entry.\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"warrencxw"},"content":"                    + \"  3. event \u003cevent name\u003e /at \u003ctime range\u003e\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":84,"author":{"gitId":"warrencxw"},"content":"                    + \"        Creates a new event entry with its accompanying time of occurrence.\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":85,"author":{"gitId":"warrencxw"},"content":"                    + \"  4. deadline \u003cdeadline name\u003e /by \u003cdue date\u003e\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":86,"author":{"gitId":"warrencxw"},"content":"                    + \"        Creates a new deadline entry with its accompanying due date.\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"warrencxw"},"content":"                    + \"  5. mark \u003ctask entry number\u003e\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"warrencxw"},"content":"                    + \"        Marks the entry as done, see list for entry numbers.\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"warrencxw"},"content":"                    + \"  6. unmark \u003ctask entry number\u003e\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"warrencxw"},"content":"                    + \"        Marks the entry as incomplete, see list for entry numbers.\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"warrencxw"},"content":"                    + \"  7. help / ?\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":92,"author":{"gitId":"warrencxw"},"content":"                    + \"        Displays this help menu.\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":93,"author":{"gitId":"warrencxw"},"content":"                    + \"  8. bye / exit / quit\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":94,"author":{"gitId":"warrencxw"},"content":"                    + \"        Displays the farewell message and closes the application.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":95,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":96,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":97,"author":{"gitId":"warrencxw"},"content":"     * Simply prints out a dividing line to standard output","lastModifiedDate":"2022-02-05"},{"lineNumber":98,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":99,"author":{"gitId":"warrencxw"},"content":"    public static void printDivider() {","lastModifiedDate":"2022-02-05"},{"lineNumber":100,"author":{"gitId":"warrencxw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-02-05"},{"lineNumber":101,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":102,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":103,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":104,"author":{"gitId":"warrencxw"},"content":"     * Prints out the greeting message to standard output","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":106,"author":{"gitId":"warrencxw"},"content":"    public static void printGreetingMessage() {","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"warrencxw"},"content":"        printDivider();","lastModifiedDate":"2022-02-05"},{"lineNumber":108,"author":{"gitId":"warrencxw"},"content":"        System.out.println(RABBIT_ASCII);","lastModifiedDate":"2022-02-05"},{"lineNumber":109,"author":{"gitId":"warrencxw"},"content":"        printDivider();","lastModifiedDate":"2022-02-05"},{"lineNumber":110,"author":{"gitId":"warrencxw"},"content":"        System.out.println(GREETING_MESSAGE);","lastModifiedDate":"2022-02-05"},{"lineNumber":111,"author":{"gitId":"warrencxw"},"content":"        printDivider();","lastModifiedDate":"2022-02-05"},{"lineNumber":112,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":113,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":114,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":115,"author":{"gitId":"warrencxw"},"content":"     * Prints out the farewell message to standard output","lastModifiedDate":"2022-02-05"},{"lineNumber":116,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":117,"author":{"gitId":"warrencxw"},"content":"    public static void printFarewellMessage() {","lastModifiedDate":"2022-02-05"},{"lineNumber":118,"author":{"gitId":"warrencxw"},"content":"        System.out.println(FAREWELL_MESSAGE);","lastModifiedDate":"2022-02-05"},{"lineNumber":119,"author":{"gitId":"warrencxw"},"content":"        printDivider();","lastModifiedDate":"2022-02-05"},{"lineNumber":120,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":121,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":122,"author":{"gitId":"warrencxw"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2022-02-05"},{"lineNumber":123,"author":{"gitId":"warrencxw"},"content":"        System.out.println(HELP_MESSAGE);","lastModifiedDate":"2022-02-05"},{"lineNumber":124,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":125,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":126,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":127,"author":{"gitId":"warrencxw"},"content":"     * Prints out error message based on what type of error has been encountered by the program","lastModifiedDate":"2022-02-05"},{"lineNumber":128,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":129,"author":{"gitId":"warrencxw"},"content":"     * @param error The error type encountered by the program","lastModifiedDate":"2022-02-05"},{"lineNumber":130,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":131,"author":{"gitId":"warrencxw"},"content":"    public static void printError(ErrorType error) {","lastModifiedDate":"2022-02-05"},{"lineNumber":132,"author":{"gitId":"warrencxw"},"content":"        switch (error) {","lastModifiedDate":"2022-02-05"},{"lineNumber":133,"author":{"gitId":"warrencxw"},"content":"        case MISSING_TASK_NO:","lastModifiedDate":"2022-02-05"},{"lineNumber":134,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_MISSING_TASK_NO);","lastModifiedDate":"2022-02-05"},{"lineNumber":135,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":136,"author":{"gitId":"warrencxw"},"content":"        case INVALID_TASK_NO:","lastModifiedDate":"2022-02-05"},{"lineNumber":137,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_INVALID_TASK_NO);","lastModifiedDate":"2022-02-05"},{"lineNumber":138,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":139,"author":{"gitId":"warrencxw"},"content":"        case EMPTY_INPUT:","lastModifiedDate":"2022-02-05"},{"lineNumber":140,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_EMPTY_INPUT);","lastModifiedDate":"2022-02-05"},{"lineNumber":141,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":142,"author":{"gitId":"warrencxw"},"content":"        case EMPTY_TASK_NAME:","lastModifiedDate":"2022-02-05"},{"lineNumber":143,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_EMPTY_TASK_NAME);","lastModifiedDate":"2022-02-05"},{"lineNumber":144,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":145,"author":{"gitId":"warrencxw"},"content":"        case MISSING_EVENT_DELIMITER:","lastModifiedDate":"2022-02-05"},{"lineNumber":146,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_MISSING_EVENT_DELIMITER);","lastModifiedDate":"2022-02-05"},{"lineNumber":147,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":148,"author":{"gitId":"warrencxw"},"content":"        case MISSING_DEADLINE_DELIMITER:","lastModifiedDate":"2022-02-05"},{"lineNumber":149,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_MISSING_DEADLINE_DELIMITER);","lastModifiedDate":"2022-02-05"},{"lineNumber":150,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":151,"author":{"gitId":"warrencxw"},"content":"        case EMPTY_TASK_LIST:","lastModifiedDate":"2022-02-05"},{"lineNumber":152,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_EMPTY_TASK_LIST);","lastModifiedDate":"2022-02-05"},{"lineNumber":153,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":154,"author":{"gitId":"warrencxw"},"content":"        case COMMAND_NOT_RECOGNISED:","lastModifiedDate":"2022-02-05"},{"lineNumber":155,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_COMMAND_NOT_RECOGNISED);","lastModifiedDate":"2022-02-05"},{"lineNumber":156,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":157,"author":{"gitId":"warrencxw"},"content":"        case CSV_DELIMITER_IN_TASK:","lastModifiedDate":"2022-02-16"},{"lineNumber":158,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_CSV_DELIMITER_IN_TASK);","lastModifiedDate":"2022-02-16"},{"lineNumber":159,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":160,"author":{"gitId":"warrencxw"},"content":"        case FILE_CREATION_FAILED:","lastModifiedDate":"2022-02-16"},{"lineNumber":161,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_FILE_CREATION_FAILED);","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":163,"author":{"gitId":"warrencxw"},"content":"        case SAVE_LOAD_FAILED:","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_SAVE_LOAD_FAILED);","lastModifiedDate":"2022-02-16"},{"lineNumber":165,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":166,"author":{"gitId":"warrencxw"},"content":"        case SAVE_WRITE_FAILED:","lastModifiedDate":"2022-02-16"},{"lineNumber":167,"author":{"gitId":"warrencxw"},"content":"            System.out.println(ERROR_SAVE_WRITE_FAILED);","lastModifiedDate":"2022-02-16"},{"lineNumber":168,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":169,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":170,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":171,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"warrencxw":171}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"    // Regex patterns","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"    public static final String REGEX_PATTERN_WHITESPACES \u003d \"\\\\s\";","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"    public static final String REGEX_PATTERN_CSV_DELIMITER \u003d \"[ ]*,[ ]*\";","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"    public static final String CSV_DELIMITER \u003d \",\";","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"    // Misc Constants","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"    public static final String INPUT_PREPEND \u003d \" \u003e \";","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"     * Reads in input from standard input and processes the input to determine","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"     * what operations to carry out by calling other helper methods.","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"     * Repeats process until exit/quit/bye commands are called.","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    public static void processInputLoop() {","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"        System.out.print(INPUT_PREPEND);","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"        String input \u003d in.nextLine().trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"        // inputs: Array of Strings { command, furtherArguments }","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"        String[] inputs \u003d input.split(REGEX_PATTERN_WHITESPACES, 2);","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"        boolean isCommandOnly;","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"        while (inputs.length \u003e 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"            Display.printDivider();","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"            switch (inputs[0].toLowerCase()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"            // EMPTY INPUT","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"            case \"\":","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"                Display.printError(Display.ErrorType.EMPTY_INPUT);","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"            // DISPLAY HELP MENU, FALLTHROUGH : IDENTICAL COMMAND","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"            case \"?\":","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"            case \"help\":","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"                Display.printHelpMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"            // LIST OUT TASK LIST","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"            case \"list\":","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"                TaskList.printTaskList();","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"            // MARK TASK AS DONE","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"            case \"mark\":","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"                TaskList.processInputAndMarkTask(true, inputs);","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"                SaveManager.saveChanges();","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"            // MARK TASK AS NOT DONE","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"            case \"unmark\":","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"                TaskList.processInputAndMarkTask(false, inputs);","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"                SaveManager.saveChanges();","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"            // CREATE NEW TODO","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"warrencxw"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"warrencxw"},"content":"                TaskList.saveInputAsTask(inputs, TaskList.TaskType.TODO);","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"warrencxw"},"content":"                SaveManager.saveChanges();","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"warrencxw"},"content":"            // CREATE NEW DEADLINE","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"warrencxw"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"warrencxw"},"content":"                TaskList.saveInputAsTask(inputs, TaskList.TaskType.DEADLINE);","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"warrencxw"},"content":"                SaveManager.saveChanges();","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"warrencxw"},"content":"            // CREATE NEW EVENT","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"warrencxw"},"content":"            case \"event\":","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"warrencxw"},"content":"                TaskList.saveInputAsTask(inputs, TaskList.TaskType.EVENT);","lastModifiedDate":"2022-02-05"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"                SaveManager.saveChanges();","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"warrencxw"},"content":"            // DELETE TASK, FALLTHROUGH : IDENTICAL COMMANDS","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"warrencxw"},"content":"            case \"delete\":","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"warrencxw"},"content":"            case \"remove\":","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"warrencxw"},"content":"                TaskList.processInputAndDeleteTask(inputs);","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"warrencxw"},"content":"                SaveManager.saveChanges();","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"warrencxw"},"content":"            case \"clear\":","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"warrencxw"},"content":"                TaskList.removeAllTasks(in);","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"warrencxw"},"content":"            // CONCLUDE SESSION, FALLTHROUGH : IDENTICAL COMMANDS","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"warrencxw"},"content":"            case \"exit\":","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"warrencxw"},"content":"            case \"quit\":","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"warrencxw"},"content":"            case \"bye\":","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"warrencxw"},"content":"                Display.printFarewellMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":84,"author":{"gitId":"warrencxw"},"content":"                return;","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"warrencxw"},"content":"            // UNRECOGNISED INPUT","lastModifiedDate":"2022-02-05"},{"lineNumber":86,"author":{"gitId":"warrencxw"},"content":"            default:","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"warrencxw"},"content":"                Display.printError(Display.ErrorType.COMMAND_NOT_RECOGNISED);","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"warrencxw"},"content":"            Display.printDivider();","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"warrencxw"},"content":"            System.out.print(INPUT_PREPEND);","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"warrencxw"},"content":"            input \u003d in.nextLine().trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"warrencxw"},"content":"            inputs \u003d input.split(REGEX_PATTERN_WHITESPACES, 2);","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"warrencxw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-17"},{"lineNumber":99,"author":{"gitId":"warrencxw"},"content":"        SaveManager.loadSave();","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"warrencxw"},"content":"        Display.printGreetingMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":101,"author":{"gitId":"warrencxw"},"content":"        processInputLoop();","lastModifiedDate":"2022-02-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"warrencxw":100,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"        super(errorMessage);","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"warrencxw":7}},{"path":"src/main/java/duke/SaveManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"import java.io.File;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"public class SaveManager {","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"    public static final String SAVE_FILE_NAME \u003d \"save.csv\";","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"    private static final String PATH_STRING_DATA_FOLDER \u003d \"data\";","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"    private static final String PATH_STRING_SAVE_FILE \u003d PATH_STRING_DATA_FOLDER + File.separator + SAVE_FILE_NAME;","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"    private static final String LINE_SEPARATOR \u003d System.getProperty(\"line.separator\");","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"    // TODO: CREATE A TEST FOR LOAD","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"     * Checks if a save file already exist on the system","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"     * If toCreate is true, creates the file structure and save file for saving TaskList data as it updates","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"     * ","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"     * @param toCreate Tells the method whether to create the files for saving or only to check if save exists","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"     * @return Returns true if the save file exists, false otherwise","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"     * @throws IOException If File.exists(), File.mkdir(), File.createNewFile() faces exceptions.","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"    private static boolean saveExists(boolean toCreate) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"        File directory \u003d new File(PATH_STRING_DATA_FOLDER);","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"            if (!toCreate) {","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"                return false;","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"            ","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"            boolean success \u003d directory.mkdir();","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"            if (!success) {","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"                Display.printError(Display.ErrorType.FILE_CREATION_FAILED);","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"                return false;","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"        File saveFile \u003d new File(PATH_STRING_SAVE_FILE);","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"            if (!toCreate) {","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"                return false;","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"            ","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"            boolean success \u003d saveFile.createNewFile();","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"            if (!success) {","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"                Display.printError(Display.ErrorType.FILE_CREATION_FAILED);","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"                return false;","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"        return true;","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"warrencxw"},"content":"     * Loads from save.csv, all tasks that were previously saved, into TaskList","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"warrencxw"},"content":"    static void loadSave() {","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"warrencxw"},"content":"        boolean saveExists \u003d false;","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"warrencxw"},"content":"            saveExists \u003d saveExists(false);","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"warrencxw"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"warrencxw"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.SAVE_LOAD_FAILED);","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"warrencxw"},"content":"        if (!saveExists) {","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"warrencxw"},"content":"        File saveFile;","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"warrencxw"},"content":"        Scanner saveIn;","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"warrencxw"},"content":"            saveFile \u003d new File(PATH_STRING_SAVE_FILE);","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"warrencxw"},"content":"            saveIn \u003d new Scanner(saveFile);","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"warrencxw"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"warrencxw"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.SAVE_LOAD_FAILED);","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"warrencxw"},"content":"        String inputLine; ","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"warrencxw"},"content":"        while (saveIn.hasNext()) {","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"warrencxw"},"content":"            inputLine \u003d saveIn.nextLine();","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"warrencxw"},"content":"            String[] csvRecordEntries \u003d inputLine.split(Duke.REGEX_PATTERN_CSV_DELIMITER);","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"warrencxw"},"content":"            try {","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"warrencxw"},"content":"                TaskList.addTaskFromCSVRecord(csvRecordEntries);","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"warrencxw"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"warrencxw"},"content":"                System.out.println(exception.getMessage());","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"warrencxw"},"content":"                return;","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"warrencxw"},"content":"     * Save into save.csv, all tasks that are currently in TaskList, as a CSV file","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"warrencxw"},"content":"    static void saveChanges() {","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"warrencxw"},"content":"        boolean saveExists;","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"warrencxw"},"content":"            saveExists \u003d saveExists(true);","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"warrencxw"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"warrencxw"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":106,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.FILE_CREATION_FAILED);","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"warrencxw"},"content":"        FileWriter fw;","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"warrencxw"},"content":"            fw \u003d new FileWriter(PATH_STRING_SAVE_FILE);","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"warrencxw"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"warrencxw"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.SAVE_WRITE_FAILED);","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"warrencxw"},"content":"        String[] saveStrings \u003d TaskList.getSavableCSVStrings();","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":120,"author":{"gitId":"warrencxw"},"content":"            for (String saveString : saveStrings) {","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"warrencxw"},"content":"                fw.write(saveString + LINE_SEPARATOR);","lastModifiedDate":"2022-02-16"},{"lineNumber":122,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"warrencxw"},"content":"            fw.close();","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"warrencxw"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-02-16"},{"lineNumber":125,"author":{"gitId":"warrencxw"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":126,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.SAVE_WRITE_FAILED);","lastModifiedDate":"2022-02-16"},{"lineNumber":127,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":128,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":129,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"warrencxw":129}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"    protected String dueDate;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"    public Deadline() {","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"        super();","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"        this.dueDate \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"    public Deadline(String taskName, String dueDate) {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"        super(taskName);","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"    public Deadline(String taskName, Boolean isDone, String dueDate) {","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"        super(taskName, isDone);","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"        return \"[D]\" + super.toString() + \" (due: \" + dueDate + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"    public void printAddedMessage() {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"        System.out.println(\"Deadline \\\"\" + taskName + \"\\\" has been added.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"        System.out.println(\" \u003e \" + toString());","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"    public String getSavableCSVString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"        return \"D\" + Duke.CSV_DELIMITER","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"                + (isDone ? \"Y\" : \"N\") + Duke.CSV_DELIMITER","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"                + taskName + Duke.CSV_DELIMITER","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"                + dueDate;","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"warrencxw":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"    protected String eventTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"    public Event() {","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"        super();","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"        this.eventTime \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"    public Event(String taskName, String eventTime) {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"        super(taskName);","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"    public Event(String taskName, Boolean isDone, String eventTime) {","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"        super(taskName, isDone);","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"        return \"[E]\" + super.toString() + \" (happening at: \" + eventTime + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"    public void printAddedMessage() {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"        System.out.println(\"Event \\\"\" + taskName + \"\\\" has been added.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"        System.out.println(\" \u003e \" + toString());","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"    public String getSavableCSVString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"        return \"E\" + Duke.CSV_DELIMITER ","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"                + (isDone ? \"Y\" : \"N\") + Duke.CSV_DELIMITER ","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"                + taskName + Duke.CSV_DELIMITER ","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"                + eventTime;","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"warrencxw":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"    // Member Variables","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"    protected String taskName;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"    public Task() {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"        this(\"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"    public Task(String taskName, Boolean isDone) {","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    } ","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"        return taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"        isDone \u003d done;","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"        return isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"     * Prints a message to indicate that the task has been successfully added.","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"    public abstract void printAddedMessage();","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"     * Convert Task object information into a savable CSV format","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"     * ","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"     * @return Returns a String object containing the CSV record representing the Task to be saved.","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"    public abstract String getSavableCSVString();","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"warrencxw":55}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"import duke.Display;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"import duke.SaveManager;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"public class TaskList {","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"    // Member attributes","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"    // Regex patterns","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"    public static final String REGEX_PATTERN_AT \u003d \"\\\\s/at\\\\s\";","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"    public static final String REGEX_PATTERN_BY \u003d \"\\\\s/by\\\\s\";","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"    // String patterns","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"    public static final String STRING_PATTERN_AT \u003d \"/at\";","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    public static final String STRING_PATTERN_BY \u003d \"/by\";","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"    // Exception messages","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"    public static final String EXCEPTION_MESSAGE_REGEX_PATTERN_TODO_REQUESTED \u003d","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"            \"TaskType TODO does not have a Regex pattern\";","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"    public static final String EXCEPTION_MESSAGE_INVALID_TASKTYPE \u003d","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"            \"Invalid TaskType argument provided to method.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"    public static final String EXCEPTION_MESSAGE_STRING_PATTERN_TODO_REQUESTED \u003d","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"            \"TaskType TODO does not have a String pattern.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"    public static final String EXCEPTION_MALFORMED_CSV_RECORD \u003d","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"            \"The save file \u0027\" + SaveManager.SAVE_FILE_NAME + \"\u0027 contains one or more malformed CSV records.\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"                    + \"The loading process will be halted. Please quit immediately and rectify any errors\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"                    + \"in the file to prevent the save file from being overwritten.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"    // Misc messages","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"    public static final String WARNING_DELETION \u003d ","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"            \"Are you really sure you want to delete all available tasks? Type \u0027Y\u0027 to confirm.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"    public static final String TASK_DELETED_CONFIRMATION \u003d ","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"            \"All tasks have been cleared.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"    // Subclasses","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"    public enum TaskType {","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"    // Subclass Constants","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"    private static final int TODO_RECORD_LENGTH \u003d 3;","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"    private static final int DEADLINE_EVENT_RECORD_LENGTH \u003d 4;","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"     * Takes the provided input string and saves it into the array of Task \"tasks\"","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"     * Does nothing and prints out an error message if either the input is invalid,","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"     * or the CSV delimiter is included in any part of the task details.","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"     * @param inputs   Input string to be saved","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"warrencxw"},"content":"     * @param taskType Type of task to save as","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"warrencxw"},"content":"    public static void saveInputAsTask(String[] inputs, TaskType taskType) {","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"warrencxw"},"content":"        if (inputs.length \u003c\u003d 1) {","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.EMPTY_TASK_NAME);","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"warrencxw"},"content":"        String taskDetailString \u003d inputs[1].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"warrencxw"},"content":"        if (taskDetailString.contains(Duke.CSV_DELIMITER)) {","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.CSV_DELIMITER_IN_TASK);","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"warrencxw"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"warrencxw"},"content":"        case TODO:","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"warrencxw"},"content":"            tasks.add(new Todo(taskDetailString));","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":74,"author":{"gitId":"warrencxw"},"content":"        // FALLTHROUGH: TASKTYPE DIFFERENTIATION IN METHOD.","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"warrencxw"},"content":"        case EVENT:","lastModifiedDate":"2022-02-05"},{"lineNumber":76,"author":{"gitId":"warrencxw"},"content":"        case DEADLINE:","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"warrencxw"},"content":"            Task newTask \u003d getTaskFromInputStringWithDelimiters(taskDetailString, taskType);","lastModifiedDate":"2022-02-13"},{"lineNumber":78,"author":{"gitId":"warrencxw"},"content":"            if (newTask \u003d\u003d null) {","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"warrencxw"},"content":"                return;","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"warrencxw"},"content":"            tasks.add(newTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"warrencxw"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-05"},{"lineNumber":85,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":86,"author":{"gitId":"warrencxw"},"content":"        tasks.get(tasks.size() - 1).printAddedMessage();","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"warrencxw"},"content":"     * Returns a Task object based on the given consolidated input string and task type.","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"warrencxw"},"content":"     * @param taskDetailString Input string that follows the syntax [task name] [delimiter] [time specification]","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"warrencxw"},"content":"     * @param taskType         Either TaskType.EVENT or TaskType.DEADLINE","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"warrencxw"},"content":"     * @return Returns Event or Deadline object if taskDetailString is valid, null otherwise.","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"warrencxw"},"content":"    private static Task getTaskFromInputStringWithDelimiters(String taskDetailString, TaskType taskType) {","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"warrencxw"},"content":"        String[] taskDetailTokens;","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"warrencxw"},"content":"            taskDetailTokens \u003d getTaskDetailTokens(taskDetailString, taskType);","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"warrencxw"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"warrencxw"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"warrencxw"},"content":"            return null;","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"warrencxw"},"content":"        if (taskDetailTokens \u003d\u003d null) {","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"warrencxw"},"content":"            return null;","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"warrencxw"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"warrencxw"},"content":"        case EVENT:","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"warrencxw"},"content":"            return new Event(taskDetailTokens[0].trim(), taskDetailTokens[1].trim());","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"warrencxw"},"content":"        case DEADLINE:","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"warrencxw"},"content":"            return new Deadline(taskDetailTokens[0].trim(), taskDetailTokens[1].trim());","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"warrencxw"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"warrencxw"},"content":"            return null;","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"warrencxw"},"content":"     * Returns String pattern of the task specified in the argument","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"warrencxw"},"content":"     * @param taskType Either TaskType.EVENT or TaskType.DEADLINE","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"warrencxw"},"content":"     * @return String pattern of task given","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"warrencxw"},"content":"     * @throws DukeException If taskType is NOT TaskType.EVENT or TaskType.DEADLINE","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"warrencxw"},"content":"    private static String getStringPatternOfTask(TaskType taskType) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"warrencxw"},"content":"        String stringPattern;","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"warrencxw"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"warrencxw"},"content":"        case TODO:","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"warrencxw"},"content":"            throw new DukeException(EXCEPTION_MESSAGE_STRING_PATTERN_TODO_REQUESTED);","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"warrencxw"},"content":"        case EVENT:","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"warrencxw"},"content":"            stringPattern \u003d STRING_PATTERN_AT;","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"warrencxw"},"content":"        case DEADLINE:","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"warrencxw"},"content":"            stringPattern \u003d STRING_PATTERN_BY;","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":136,"author":{"gitId":"warrencxw"},"content":"        default:","lastModifiedDate":"2022-02-05"},{"lineNumber":137,"author":{"gitId":"warrencxw"},"content":"            throw new DukeException(EXCEPTION_MESSAGE_INVALID_TASKTYPE);","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"warrencxw"},"content":"        return stringPattern;","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"warrencxw"},"content":"     * Returns Regex pattern of the task specified in the argument","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"warrencxw"},"content":"     * @param taskType Either TaskType.EVENT or TaskType.DEADLINE","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"warrencxw"},"content":"     * @return Regex pattern of task given","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"warrencxw"},"content":"     * @throws DukeException If taskType is NOT TaskType.EVENT or TaskType.DEADLINE","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"warrencxw"},"content":"    private static String getRegexPatternOfTask(TaskType taskType) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"warrencxw"},"content":"        String regexPattern;","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"warrencxw"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"warrencxw"},"content":"        case TODO:","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"warrencxw"},"content":"            throw new DukeException(EXCEPTION_MESSAGE_REGEX_PATTERN_TODO_REQUESTED);","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"warrencxw"},"content":"        case EVENT:","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"warrencxw"},"content":"            regexPattern \u003d REGEX_PATTERN_AT;","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"warrencxw"},"content":"        case DEADLINE:","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"warrencxw"},"content":"            regexPattern \u003d REGEX_PATTERN_BY;","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":160,"author":{"gitId":"warrencxw"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"warrencxw"},"content":"            throw new DukeException(EXCEPTION_MESSAGE_INVALID_TASKTYPE);","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":163,"author":{"gitId":"warrencxw"},"content":"        return regexPattern;","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"warrencxw"},"content":"     * Takes in an input string and returns whether the input string starts with a time specification delimiter.","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"warrencxw"},"content":"     * @param taskDetailString Input string that follows the syntax [task name] [delimiter] [time specification]","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"warrencxw"},"content":"     * @param taskType         Either TaskType.EVENT or TaskType.DEADLINE","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"warrencxw"},"content":"     * @return Returns true if taskDetailString starts with the delimiter, i.e. task name is missing,","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"warrencxw"},"content":"     * returns false otherwise.","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"warrencxw"},"content":"     * @throws DukeException If taskType is NOT TaskType.EVENT or TaskType.DEADLINE","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"warrencxw"},"content":"    private static boolean isDelimiterWithoutTaskName(String taskDetailString, TaskType taskType) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"warrencxw"},"content":"        String stringPattern \u003d getStringPatternOfTask(taskType);","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"warrencxw"},"content":"        boolean isMissingTaskName \u003d taskDetailString.indexOf(stringPattern) \u003d\u003d 0;","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"warrencxw"},"content":"        if (isMissingTaskName) {","lastModifiedDate":"2022-02-06"},{"lineNumber":179,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.EMPTY_TASK_NAME);","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"warrencxw"},"content":"            return true;","lastModifiedDate":"2022-02-06"},{"lineNumber":181,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":182,"author":{"gitId":"warrencxw"},"content":"        return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":183,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":186,"author":{"gitId":"warrencxw"},"content":"     * Takes in an input string and returns a String array of {task name, time specification} if input syntax is valid.","lastModifiedDate":"2022-02-06"},{"lineNumber":187,"author":{"gitId":"warrencxw"},"content":"     * Returns NULL if any component is missing, i.e. invalid syntax.","lastModifiedDate":"2022-02-06"},{"lineNumber":188,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"warrencxw"},"content":"     * @param taskDetailString Input string that follows the syntax [task name] [delimiter] [time specification]","lastModifiedDate":"2022-02-06"},{"lineNumber":190,"author":{"gitId":"warrencxw"},"content":"     * @param taskType         Either TaskType.EVENT or TaskType.DEADLINE","lastModifiedDate":"2022-02-06"},{"lineNumber":191,"author":{"gitId":"warrencxw"},"content":"     * @return Returns a String[] object containing the task name in the first index [0] and","lastModifiedDate":"2022-02-06"},{"lineNumber":192,"author":{"gitId":"warrencxw"},"content":"     * the time specification in the second index [1].","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"warrencxw"},"content":"     * Returns null and prints an error message if task name, delimiter or time specification is missing","lastModifiedDate":"2022-02-13"},{"lineNumber":194,"author":{"gitId":"warrencxw"},"content":"     * @throws DukeException If taskType is NOT TaskType.EVENT or TaskType.DEADLINE","lastModifiedDate":"2022-02-06"},{"lineNumber":195,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":196,"author":{"gitId":"warrencxw"},"content":"    private static String[] getTaskDetailTokens(String taskDetailString, TaskType taskType) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":197,"author":{"gitId":"warrencxw"},"content":"        taskDetailString \u003d taskDetailString.trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":198,"author":{"gitId":"warrencxw"},"content":"        // Exception is thrown here if taskType does not belong to TaskType.EVENT or TaskType.DEADLINE","lastModifiedDate":"2022-02-06"},{"lineNumber":199,"author":{"gitId":"warrencxw"},"content":"        if (isDelimiterWithoutTaskName(taskDetailString, taskType)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":200,"author":{"gitId":"warrencxw"},"content":"            return null;","lastModifiedDate":"2022-02-06"},{"lineNumber":201,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":202,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":203,"author":{"gitId":"warrencxw"},"content":"        String[] taskDetailTokens;","lastModifiedDate":"2022-02-06"},{"lineNumber":204,"author":{"gitId":"warrencxw"},"content":"        String regexPattern \u003d getRegexPatternOfTask(taskType);","lastModifiedDate":"2022-02-06"},{"lineNumber":205,"author":{"gitId":"warrencxw"},"content":"        taskDetailTokens \u003d taskDetailString.split(regexPattern, 2);","lastModifiedDate":"2022-02-06"},{"lineNumber":206,"author":{"gitId":"warrencxw"},"content":"        boolean isTaskNameOnly \u003d taskDetailTokens.length \u003c 2;","lastModifiedDate":"2022-02-06"},{"lineNumber":207,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"warrencxw"},"content":"        if (isTaskNameOnly) {","lastModifiedDate":"2022-02-06"},{"lineNumber":209,"author":{"gitId":"warrencxw"},"content":"            if (taskType \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"warrencxw"},"content":"                Display.printError(Display.ErrorType.MISSING_EVENT_DELIMITER);","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"warrencxw"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":212,"author":{"gitId":"warrencxw"},"content":"                Display.printError(Display.ErrorType.MISSING_DEADLINE_DELIMITER);","lastModifiedDate":"2022-02-06"},{"lineNumber":213,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":214,"author":{"gitId":"warrencxw"},"content":"            return null;","lastModifiedDate":"2022-02-06"},{"lineNumber":215,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":216,"author":{"gitId":"warrencxw"},"content":"        return taskDetailTokens;","lastModifiedDate":"2022-02-06"},{"lineNumber":217,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":218,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":219,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":220,"author":{"gitId":"warrencxw"},"content":"     * Prints out the full list of inputs given by the user","lastModifiedDate":"2022-02-05"},{"lineNumber":221,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":222,"author":{"gitId":"warrencxw"},"content":"    public static void printTaskList() {","lastModifiedDate":"2022-02-05"},{"lineNumber":223,"author":{"gitId":"warrencxw"},"content":"        System.out.println(\"| Task List |\");","lastModifiedDate":"2022-02-05"},{"lineNumber":224,"author":{"gitId":"warrencxw"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-13"},{"lineNumber":225,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.EMPTY_TASK_LIST);","lastModifiedDate":"2022-02-05"},{"lineNumber":226,"author":{"gitId":"warrencxw"},"content":"        } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":227,"author":{"gitId":"warrencxw"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-13"},{"lineNumber":228,"author":{"gitId":"warrencxw"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2022-02-13"},{"lineNumber":229,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":230,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":231,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":232,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":233,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":234,"author":{"gitId":"warrencxw"},"content":"     * Reads in a String object representing the task number and parses the String to get the numeric index.","lastModifiedDate":"2022-02-13"},{"lineNumber":235,"author":{"gitId":"warrencxw"},"content":"     * Returns an integer representing the index of the task.","lastModifiedDate":"2022-02-13"},{"lineNumber":236,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":237,"author":{"gitId":"warrencxw"},"content":"     * @param taskNoString The input task number string that identifies the task in \"tasks\"","lastModifiedDate":"2022-02-05"},{"lineNumber":238,"author":{"gitId":"warrencxw"},"content":"     * @return Returns an integer in [0, (tasks.size()-1)]","lastModifiedDate":"2022-02-13"},{"lineNumber":239,"author":{"gitId":"warrencxw"},"content":"     * @throws DukeException If taskNoString is not a valid integer, tasks is empty or","lastModifiedDate":"2022-02-13"},{"lineNumber":240,"author":{"gitId":"warrencxw"},"content":"     *                       taskNoString is not within [0, (tasks.size()-1)]","lastModifiedDate":"2022-02-13"},{"lineNumber":241,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":242,"author":{"gitId":"warrencxw"},"content":"    private static int getTaskIndexFromString(String taskNoString) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":243,"author":{"gitId":"warrencxw"},"content":"        int taskNo;","lastModifiedDate":"2022-02-05"},{"lineNumber":244,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":245,"author":{"gitId":"warrencxw"},"content":"            // -1 to get task index for 0-indexing","lastModifiedDate":"2022-02-13"},{"lineNumber":246,"author":{"gitId":"warrencxw"},"content":"            taskNo \u003d Integer.parseInt(taskNoString) - 1;","lastModifiedDate":"2022-02-05"},{"lineNumber":247,"author":{"gitId":"warrencxw"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-02-05"},{"lineNumber":248,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.INVALID_TASK_NO);","lastModifiedDate":"2022-02-05"},{"lineNumber":249,"author":{"gitId":"warrencxw"},"content":"            throw new DukeException(\"Please enter a value between 1 and \" + tasks.size());","lastModifiedDate":"2022-02-13"},{"lineNumber":250,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":251,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":252,"author":{"gitId":"warrencxw"},"content":"        // Check if index is within array limits","lastModifiedDate":"2022-02-06"},{"lineNumber":253,"author":{"gitId":"warrencxw"},"content":"        boolean isTaskNoOutOfRange \u003d taskNo \u003c 0 || taskNo \u003e\u003d tasks.size();","lastModifiedDate":"2022-02-13"},{"lineNumber":254,"author":{"gitId":"warrencxw"},"content":"        if (isTaskNoOutOfRange) {","lastModifiedDate":"2022-02-05"},{"lineNumber":255,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.INVALID_TASK_NO);","lastModifiedDate":"2022-02-05"},{"lineNumber":256,"author":{"gitId":"warrencxw"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-13"},{"lineNumber":257,"author":{"gitId":"warrencxw"},"content":"                throw new DukeException(Display.ERROR_EMPTY_TASK_LIST);","lastModifiedDate":"2022-02-13"},{"lineNumber":258,"author":{"gitId":"warrencxw"},"content":"            } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":259,"author":{"gitId":"warrencxw"},"content":"                throw new DukeException(\"Please enter a value between 1 and \" + tasks.size());","lastModifiedDate":"2022-02-13"},{"lineNumber":260,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":261,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":262,"author":{"gitId":"warrencxw"},"content":"        return taskNo;","lastModifiedDate":"2022-02-13"},{"lineNumber":263,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":264,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":265,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":266,"author":{"gitId":"warrencxw"},"content":"     * Modifies the completion of the task identified by the input task number and print out a confirmation message.","lastModifiedDate":"2022-02-13"},{"lineNumber":267,"author":{"gitId":"warrencxw"},"content":"     * Will not modify tasks if taskNoString is not an integer, an error message is printed instead","lastModifiedDate":"2022-02-13"},{"lineNumber":268,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":269,"author":{"gitId":"warrencxw"},"content":"     * @param shouldMarkTask Determines whether to set task to done or not done","lastModifiedDate":"2022-02-13"},{"lineNumber":270,"author":{"gitId":"warrencxw"},"content":"     * @param taskNoString   The input task number string that identifies the task in \"tasks\"","lastModifiedDate":"2022-02-13"},{"lineNumber":271,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":272,"author":{"gitId":"warrencxw"},"content":"    private static void markTask(boolean shouldMarkTask, String taskNoString) {","lastModifiedDate":"2022-02-13"},{"lineNumber":273,"author":{"gitId":"warrencxw"},"content":"        // Check if task number is numerical","lastModifiedDate":"2022-02-13"},{"lineNumber":274,"author":{"gitId":"warrencxw"},"content":"        int taskNo;","lastModifiedDate":"2022-02-13"},{"lineNumber":275,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":276,"author":{"gitId":"warrencxw"},"content":"            taskNo \u003d getTaskIndexFromString(taskNoString);","lastModifiedDate":"2022-02-13"},{"lineNumber":277,"author":{"gitId":"warrencxw"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-13"},{"lineNumber":278,"author":{"gitId":"warrencxw"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2022-02-13"},{"lineNumber":279,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-06"},{"lineNumber":280,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":281,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":282,"author":{"gitId":"warrencxw"},"content":"        // Check if already marked / unmarked","lastModifiedDate":"2022-02-05"},{"lineNumber":283,"author":{"gitId":"warrencxw"},"content":"        if (tasks.get(taskNo).isDone() \u003d\u003d shouldMarkTask) {","lastModifiedDate":"2022-02-13"},{"lineNumber":284,"author":{"gitId":"warrencxw"},"content":"            System.out.println(\"Your task has already been marked as \" + (shouldMarkTask ? \"done!\" : \"not done!\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":285,"author":{"gitId":"warrencxw"},"content":"        } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":286,"author":{"gitId":"warrencxw"},"content":"            tasks.get(taskNo).setDone(shouldMarkTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":287,"author":{"gitId":"warrencxw"},"content":"            System.out.println(\"Your task is now marked as \" + (shouldMarkTask ? \"done!\" : \"not done!\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":288,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":289,"author":{"gitId":"warrencxw"},"content":"        System.out.println(\"\u003e \" + (taskNo + 1) + \". \" + tasks.get(taskNo).toString());","lastModifiedDate":"2022-02-13"},{"lineNumber":290,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":291,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":292,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":293,"author":{"gitId":"warrencxw"},"content":"     * Checks if there are arguments in the \u0027mark\u0027/\u0027unmark\u0027 command then runs markTask() to modify completion of","lastModifiedDate":"2022-02-05"},{"lineNumber":294,"author":{"gitId":"warrencxw"},"content":"     * the specified task if a valid numerical argument is indicated. Rejects and prints an error message otherwise,","lastModifiedDate":"2022-02-05"},{"lineNumber":295,"author":{"gitId":"warrencxw"},"content":"     * depending on the type of input provided.","lastModifiedDate":"2022-02-05"},{"lineNumber":296,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":297,"author":{"gitId":"warrencxw"},"content":"     * @param shouldMarkTask Determines whether to set task to done or not done","lastModifiedDate":"2022-02-05"},{"lineNumber":298,"author":{"gitId":"warrencxw"},"content":"     * @param inputs         List of input tokens provided by the user","lastModifiedDate":"2022-02-05"},{"lineNumber":299,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":300,"author":{"gitId":"warrencxw"},"content":"    public static void processInputAndMarkTask(boolean shouldMarkTask, String[] inputs) {","lastModifiedDate":"2022-02-06"},{"lineNumber":301,"author":{"gitId":"warrencxw"},"content":"        boolean isCommandOnly \u003d inputs.length \u003c 2;","lastModifiedDate":"2022-02-05"},{"lineNumber":302,"author":{"gitId":"warrencxw"},"content":"        if (isCommandOnly) {","lastModifiedDate":"2022-02-05"},{"lineNumber":303,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.MISSING_TASK_NO);","lastModifiedDate":"2022-02-05"},{"lineNumber":304,"author":{"gitId":"warrencxw"},"content":"        } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":305,"author":{"gitId":"warrencxw"},"content":"            markTask(shouldMarkTask, inputs[1]);","lastModifiedDate":"2022-02-05"},{"lineNumber":306,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":307,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":308,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":309,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":310,"author":{"gitId":"warrencxw"},"content":"     * Checks if there are arguments in the \u0027delete\u0027 command and if the arguments are valid (integer and within","lastModifiedDate":"2022-02-13"},{"lineNumber":311,"author":{"gitId":"warrencxw"},"content":"     * range of [1, tasks.size()]). If arguments are valid, deletes the task identified by the argument and prints","lastModifiedDate":"2022-02-13"},{"lineNumber":312,"author":{"gitId":"warrencxw"},"content":"     * a success message onto standard output. Prints an error message and does not modify tasks otherwise. ","lastModifiedDate":"2022-02-13"},{"lineNumber":313,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":314,"author":{"gitId":"warrencxw"},"content":"     * @param inputs List of input tokens provided by the user","lastModifiedDate":"2022-02-13"},{"lineNumber":315,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":316,"author":{"gitId":"warrencxw"},"content":"    public static void processInputAndDeleteTask(String[] inputs) {","lastModifiedDate":"2022-02-13"},{"lineNumber":317,"author":{"gitId":"warrencxw"},"content":"        boolean isCommandOnly \u003d inputs.length \u003c 2;","lastModifiedDate":"2022-02-13"},{"lineNumber":318,"author":{"gitId":"warrencxw"},"content":"        if (isCommandOnly) {","lastModifiedDate":"2022-02-13"},{"lineNumber":319,"author":{"gitId":"warrencxw"},"content":"            Display.printError(Display.ErrorType.MISSING_TASK_NO);","lastModifiedDate":"2022-02-13"},{"lineNumber":320,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-13"},{"lineNumber":321,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":322,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":323,"author":{"gitId":"warrencxw"},"content":"        int taskNo;","lastModifiedDate":"2022-02-13"},{"lineNumber":324,"author":{"gitId":"warrencxw"},"content":"        String taskNoString \u003d inputs[1];","lastModifiedDate":"2022-02-13"},{"lineNumber":325,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":326,"author":{"gitId":"warrencxw"},"content":"            taskNo \u003d getTaskIndexFromString(taskNoString);","lastModifiedDate":"2022-02-13"},{"lineNumber":327,"author":{"gitId":"warrencxw"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-13"},{"lineNumber":328,"author":{"gitId":"warrencxw"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2022-02-13"},{"lineNumber":329,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-13"},{"lineNumber":330,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":331,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":332,"author":{"gitId":"warrencxw"},"content":"        String successMessage \u003d","lastModifiedDate":"2022-02-13"},{"lineNumber":333,"author":{"gitId":"warrencxw"},"content":"                \"I have removed the following task for you:\\n\"","lastModifiedDate":"2022-02-13"},{"lineNumber":334,"author":{"gitId":"warrencxw"},"content":"                        + \"\u003e \" + (taskNo + 1) + \". \" + tasks.get(taskNo).toString() + \"\\n\"","lastModifiedDate":"2022-02-13"},{"lineNumber":335,"author":{"gitId":"warrencxw"},"content":"                        + \"You now have \" + (tasks.size() - 1) + \" tasks in your list.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":336,"author":{"gitId":"warrencxw"},"content":"        tasks.remove(taskNo);","lastModifiedDate":"2022-02-13"},{"lineNumber":337,"author":{"gitId":"warrencxw"},"content":"        System.out.println(successMessage);","lastModifiedDate":"2022-02-13"},{"lineNumber":338,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":339,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":340,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":341,"author":{"gitId":"warrencxw"},"content":"     * Reads through every single Task in the TaskList and returns an array of Strings, each String containing","lastModifiedDate":"2022-02-16"},{"lineNumber":342,"author":{"gitId":"warrencxw"},"content":"     * a CSV record for each Task in the TaskList.","lastModifiedDate":"2022-02-16"},{"lineNumber":343,"author":{"gitId":"warrencxw"},"content":"     * ","lastModifiedDate":"2022-02-16"},{"lineNumber":344,"author":{"gitId":"warrencxw"},"content":"     * @return Returns a String array of CSV records representing the entire TaskList to be saved.","lastModifiedDate":"2022-02-16"},{"lineNumber":345,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":346,"author":{"gitId":"warrencxw"},"content":"    public static String[] getSavableCSVStrings() {","lastModifiedDate":"2022-02-13"},{"lineNumber":347,"author":{"gitId":"warrencxw"},"content":"        String[] csvStrings \u003d new String[tasks.size()];","lastModifiedDate":"2022-02-13"},{"lineNumber":348,"author":{"gitId":"warrencxw"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-13"},{"lineNumber":349,"author":{"gitId":"warrencxw"},"content":"            csvStrings[i] \u003d tasks.get(i).getSavableCSVString();","lastModifiedDate":"2022-02-13"},{"lineNumber":350,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":351,"author":{"gitId":"warrencxw"},"content":"        return csvStrings;","lastModifiedDate":"2022-02-13"},{"lineNumber":352,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":353,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":354,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":355,"author":{"gitId":"warrencxw"},"content":"     * Reads through a single CSV record and checks if it is valid and can be loaded into the TaskList as a task.","lastModifiedDate":"2022-02-16"},{"lineNumber":356,"author":{"gitId":"warrencxw"},"content":"     * ","lastModifiedDate":"2022-02-16"},{"lineNumber":357,"author":{"gitId":"warrencxw"},"content":"     * @param record An array of Strings each representing a value within the CSV record","lastModifiedDate":"2022-02-16"},{"lineNumber":358,"author":{"gitId":"warrencxw"},"content":"     * @return Returns true if the CSV record is valid and can be loaded as a Task, false otherwise.","lastModifiedDate":"2022-02-16"},{"lineNumber":359,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":360,"author":{"gitId":"warrencxw"},"content":"    public static boolean isValidCSVRecord(String[] record) {","lastModifiedDate":"2022-02-13"},{"lineNumber":361,"author":{"gitId":"warrencxw"},"content":"        boolean isInvalidRecordLength \u003d ","lastModifiedDate":"2022-02-16"},{"lineNumber":362,"author":{"gitId":"warrencxw"},"content":"                record.length \u003c TODO_RECORD_LENGTH || record.length \u003e DEADLINE_EVENT_RECORD_LENGTH;","lastModifiedDate":"2022-02-16"},{"lineNumber":363,"author":{"gitId":"warrencxw"},"content":"        if (isInvalidRecordLength) {","lastModifiedDate":"2022-02-13"},{"lineNumber":364,"author":{"gitId":"warrencxw"},"content":"            return false;","lastModifiedDate":"2022-02-13"},{"lineNumber":365,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":366,"author":{"gitId":"warrencxw"},"content":"        boolean isValidTask \u003d","lastModifiedDate":"2022-02-13"},{"lineNumber":367,"author":{"gitId":"warrencxw"},"content":"                (record.length \u003d\u003d TODO_RECORD_LENGTH \u0026\u0026 record[0].equalsIgnoreCase(\"T\"))","lastModifiedDate":"2022-02-16"},{"lineNumber":368,"author":{"gitId":"warrencxw"},"content":"                        || (record.length \u003d\u003d DEADLINE_EVENT_RECORD_LENGTH ","lastModifiedDate":"2022-02-16"},{"lineNumber":369,"author":{"gitId":"warrencxw"},"content":"                        \u0026\u0026 (record[0].equalsIgnoreCase(\"D\") || record[0].equalsIgnoreCase(\"E\")));","lastModifiedDate":"2022-02-16"},{"lineNumber":370,"author":{"gitId":"warrencxw"},"content":"        boolean isValidMarking \u003d ","lastModifiedDate":"2022-02-13"},{"lineNumber":371,"author":{"gitId":"warrencxw"},"content":"                record[1].equalsIgnoreCase(\"Y\") || record[1].equalsIgnoreCase(\"N\");","lastModifiedDate":"2022-02-13"},{"lineNumber":372,"author":{"gitId":"warrencxw"},"content":"        return isValidTask \u0026\u0026 isValidMarking;","lastModifiedDate":"2022-02-13"},{"lineNumber":373,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":374,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":375,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":376,"author":{"gitId":"warrencxw"},"content":"     * Reads through a single CSV record, and if valid, create a relevant Task subclass object into tasks.","lastModifiedDate":"2022-02-16"},{"lineNumber":377,"author":{"gitId":"warrencxw"},"content":"     * Otherwise, throw an exception containing the error message for a malformed CSV record.","lastModifiedDate":"2022-02-16"},{"lineNumber":378,"author":{"gitId":"warrencxw"},"content":"     * ","lastModifiedDate":"2022-02-16"},{"lineNumber":379,"author":{"gitId":"warrencxw"},"content":"     * @param record An array of Strings each representing a value within the CSV record","lastModifiedDate":"2022-02-16"},{"lineNumber":380,"author":{"gitId":"warrencxw"},"content":"     * @throws DukeException If record is a CSV record that does not follow the saving conventions as per any of","lastModifiedDate":"2022-02-16"},{"lineNumber":381,"author":{"gitId":"warrencxw"},"content":"     *                       each Task subclass\u0027 getSavableCSVString() method.","lastModifiedDate":"2022-02-16"},{"lineNumber":382,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":383,"author":{"gitId":"warrencxw"},"content":"    public static void addTaskFromCSVRecord(String[] record) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":384,"author":{"gitId":"warrencxw"},"content":"        if (!isValidCSVRecord(record)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":385,"author":{"gitId":"warrencxw"},"content":"            throw new DukeException(EXCEPTION_MALFORMED_CSV_RECORD); ","lastModifiedDate":"2022-02-16"},{"lineNumber":386,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":387,"author":{"gitId":"warrencxw"},"content":"        // record \u003d { taskType {T,E,D}, marked {Y,N}, name, dueDate/eventTime(if D/E)}","lastModifiedDate":"2022-02-13"},{"lineNumber":388,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-02-13"},{"lineNumber":389,"author":{"gitId":"warrencxw"},"content":"        boolean marked \u003d record[1].equalsIgnoreCase(\"Y\");","lastModifiedDate":"2022-02-13"},{"lineNumber":390,"author":{"gitId":"warrencxw"},"content":"        switch (record[0]) {","lastModifiedDate":"2022-02-13"},{"lineNumber":391,"author":{"gitId":"warrencxw"},"content":"        case \"T\":","lastModifiedDate":"2022-02-13"},{"lineNumber":392,"author":{"gitId":"warrencxw"},"content":"            tasks.add(new Todo(record[2], marked));","lastModifiedDate":"2022-02-13"},{"lineNumber":393,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-13"},{"lineNumber":394,"author":{"gitId":"warrencxw"},"content":"        case \"E\":","lastModifiedDate":"2022-02-13"},{"lineNumber":395,"author":{"gitId":"warrencxw"},"content":"            tasks.add(new Event(record[2], marked, record[3]));","lastModifiedDate":"2022-02-13"},{"lineNumber":396,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-13"},{"lineNumber":397,"author":{"gitId":"warrencxw"},"content":"        case \"D\":","lastModifiedDate":"2022-02-13"},{"lineNumber":398,"author":{"gitId":"warrencxw"},"content":"            tasks.add(new Deadline(record[2], marked, record[3]));","lastModifiedDate":"2022-02-13"},{"lineNumber":399,"author":{"gitId":"warrencxw"},"content":"            break;","lastModifiedDate":"2022-02-13"},{"lineNumber":400,"author":{"gitId":"warrencxw"},"content":"        default:","lastModifiedDate":"2022-02-13"},{"lineNumber":401,"author":{"gitId":"warrencxw"},"content":"            throw new DukeException(EXCEPTION_MALFORMED_CSV_RECORD);","lastModifiedDate":"2022-02-16"},{"lineNumber":402,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":403,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":404,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":405,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":406,"author":{"gitId":"warrencxw"},"content":"     * Clears all the tasks that has been saved thus far. ","lastModifiedDate":"2022-02-16"},{"lineNumber":407,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":408,"author":{"gitId":"warrencxw"},"content":"    public static void removeAllTasks(Scanner in) {","lastModifiedDate":"2022-02-16"},{"lineNumber":409,"author":{"gitId":"warrencxw"},"content":"        System.out.println(WARNING_DELETION);","lastModifiedDate":"2022-02-16"},{"lineNumber":410,"author":{"gitId":"warrencxw"},"content":"        String input \u003d in.nextLine().trim();","lastModifiedDate":"2022-02-16"},{"lineNumber":411,"author":{"gitId":"warrencxw"},"content":"        if (!input.equalsIgnoreCase(\"Y\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":412,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-02-16"},{"lineNumber":413,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":414,"author":{"gitId":"warrencxw"},"content":"        tasks.clear();","lastModifiedDate":"2022-02-16"},{"lineNumber":415,"author":{"gitId":"warrencxw"},"content":"        System.out.println(TASK_DELETED_CONFIRMATION);","lastModifiedDate":"2022-02-16"},{"lineNumber":416,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":417,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"warrencxw":417}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"    public Todo() {","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"        super();","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"        super(taskName);","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"    public Todo(String taskName, Boolean isDone) {","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"        super(taskName, isDone);","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"    public void printAddedMessage() {","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"        System.out.println(\"Todo \\\"\" + taskName + \"\\\" has been added.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"        System.out.println(\" \u003e \" + toString());","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"    public String getSavableCSVString() {","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"        return \"T\" + Duke.CSV_DELIMITER","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"                + (isDone ? \"Y\" : \"N\") + Duke.CSV_DELIMITER","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"                + taskName;","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"warrencxw":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"clear","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"Y","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"mark 1","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"unmark 1","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"delete 3","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"todo test1","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"todo test1 test2","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"mark","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"unmark","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"event ","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"event  ","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"event /at","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"event /at test3","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"event at test3","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"event test3 test4","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"event test3 test4 /at test5 test6","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"mark 3","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"mark 4","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"mark 0","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"event test3 /at test4 test5","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"mark 4","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"mark apple","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"event test7 /by test8","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"unmark 4","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"unmark 0","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"unmark apple","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"deadline test9 test10 /at test11","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"deadline test9","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"deadline test9 test10 /by test11 test12","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"deadline test9 test10","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"deadline test9 test10 /by test11","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"deadline ","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"deadline  ","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"deadline /by","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"deadline /by test12 test13","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"deadline test12 by test13","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"deadline test12 /by test13 /by test14","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"help","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"? apple","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"help test","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"delete 0","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"delete 8","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"delete apple","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"delete 7","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"list","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"delete 3","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"list","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"mark 2","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"list","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"warrencxw"},"content":"bye","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"warrencxw":56}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"FC data\\save.csv EXPECTED_SAVE.CSV","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"warrencxw":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"warrencxw":2,"-":36}}]
