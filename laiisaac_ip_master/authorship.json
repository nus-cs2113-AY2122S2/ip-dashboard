[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"# duke project template","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"laiisaac":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"Welcome to User Guide for Domo the chat bot.","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"* [Features](#features)","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"  * [Add Todo task](#feature---add-todo-task-todo)","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"  * [Add Deadline task](#feature---add-deadline-task-deadline)","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"  * [Add Event task](#feature---add-event-task-event)","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"  * [List tasks](#feature---list-tasks-list)","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"  * [Mark task as done](#feature---mark-task-as-done-mark)","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"  * [Mark task as undone](#feature---unmark-tasks-unmark)","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"  * [Delete a task](#feature---delete-a-task-delete)","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"  * [Find tasks](#feature---find-tasks-find)","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"  * [Exiting the program](#feature---exiting-the-program-bye)","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"## Quick start","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"1. Check that you are running `Java 11`.","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"2. Download the latest [jar file](https://github.com/laiisaac/ip/releases/tag/A-Release).","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"3. Move the file to the appropriate folder location you want.","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"4. Open the terminal/command line and run the file with `java -jar IP.jar`","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"5. Refer to the available features below and enjoy the chat bot.","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"#### Notes about command format ","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"* All commands are case-sensitive, including descriptions and parameters of the commands","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"* Required parameters are in `[PARAMETER]` format.","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"e.g. `todo [DESCRIPTION]`","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"Example:","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"Adding a Todo task with \"Cook breakfast\" as the parameter","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"`todo Cook breakfast`","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"### Feature - Add Todo task: `todo`","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"Adds a Todo task to the task list.","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"Format: `todo [DESCRIPTION]`","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"Example of usage: ","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"`todo Study for quiz`","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"### Feature - Add Deadline task: `deadline`","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"Adds a Deadline task with a required parameter `DEADLINE` to the task list.","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"Format: `deadline [DESCRIPTION] /by [DEADLINE]`","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"Example of usage:","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"`deadline buy groceries /by tomorrow`","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"### Feature - Add Event task: `event`","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"Adds an Event task with a required parameter `TIME_PERIOD` to the task list.","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"Format: `event [DESCRIPTION] /at [TIME_PERIOD]`","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"Example of usage:","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"`event CS2113 Lecture /at Fri 4-6pm`","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"### Feature - List tasks: `list`","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"Lists all current tasks in the task list.","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"Format: `list`","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"### Feature - Mark task as done: `mark`","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"Marks a specific task in the task list as done. `TASK_NUMBER` is a mandatory parameter.","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"Format: `mark [TASK_NUMBER]`","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"Example of usage: `mark 3`","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"### Feature - Unmark tasks: `unmark`","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"Marks a specific task in the task list as undone. `TASK_NUMBER` is a mandatory parameter.","lastModifiedDate":"2022-02-24"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"Format: `unmark [TASK_NUMBER]`","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"Example of usage: `unmark 3`","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"### Feature - Delete a task: `delete`","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"Deletes a specific task specified by the user. `TASK_NUMBER` is a mandatory parameter.","lastModifiedDate":"2022-02-24"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"Format: `delete [TASK_NUMBER]`","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"Example of usage: `delete 4`","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"laiisaac"},"content":"### Feature - Find tasks: `find`","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"Find tasks with specified keyword(s). `CONTENT` is a mandatory parameter and can be made up of multiple words.","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"Format: `find [CONTENT]`","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"`find CS2113 Tutorial`","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"### Feature - Exiting the program: `bye`","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"Exits the program by passing the command `bye`.","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"laiisaac"},"content":"Format: `bye`","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":113,"author":{"gitId":"laiisaac"},"content":"### Saving the data","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"laiisaac"},"content":"Changes to your tasks are saved automatically when you exit the program. There is no need for manual changes to the save file. ","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"laiisaac":97,"-":18}},{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package duke;","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"public class Commands {","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    //Commands","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    public static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"     * Parses user input and calls the correct method to execute command if command is valid.","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"     * @param input input by the user","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"     * @throws DukeException If there is no input by the user or command is invalid","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"     * @throws IOException If there is an IOException","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"    public static void parseCommand(String input) throws DukeException, IOException {","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"            throw new DukeException(Ui.ERROR_NO_INPUT);","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"        String command \u003d Parser.getCommand(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"        switch(command) {","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"            executeList();","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"            break;","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"            executeMark(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"            break;","lastModifiedDate":"2022-02-23"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"            executeUnmark(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"            break;","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2022-02-23"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"            executeDelete(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"            break;","lastModifiedDate":"2022-02-23"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2022-02-23"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"            executeTodo(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"            break;","lastModifiedDate":"2022-02-23"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2022-02-23"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"            executeDeadline(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"            break;","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2022-02-23"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"            executeEvent(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"            break;","lastModifiedDate":"2022-02-23"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"            executeFind(input);","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"            break;","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"        default:","lastModifiedDate":"2022-02-23"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"            throw new DukeException(Ui.ERROR_NOT_VALID_COMMAND);","lastModifiedDate":"2022-02-23"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"     * Prints the list of tasks in taskList.","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"laiisaac"},"content":"    public static void executeList() {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"        if (Ui.taskList.size() \u003e 0) {","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.MESSAGE_LIST);","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"            Parser.listTasks(Ui.taskList);","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.MESSAGE_NO_TASKS);","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"     * Finds all tasks with descriptions matching the user\u0027s requested content and prints the","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"     * corresponding tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"     * @param input full find command provided by the user","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"    public static void executeFind(String input) {","lastModifiedDate":"2022-02-24"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"            String content \u003d Parser.parseOneParameter(input);","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"            ArrayList\u003cTask\u003e resultantList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"            for (Task task: duke.Ui.taskList) {","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"laiisaac"},"content":"                if (task.getDescription().contains(content)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"                    resultantList.add(task);","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"                }","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"            if (resultantList.size() \u003e 0) {","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"                System.out.println(Ui.MESSAGE_FIND_RESULT + \"\u0027\" + content + \"\u0027:\");","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"                Parser.listTasks(resultantList);","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"            } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"laiisaac"},"content":"                System.out.println(Ui.MESSAGE_NO_FIND_RESULT + \" \u0027\" + content + \"\u0027.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"laiisaac"},"content":"        } catch (DukeException | ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_INVALID_SYNTAX + COMMAND_FIND + \". \" + Ui.ERROR_NO_CONTENT);","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"     * Deletes a specified task from the list.","lastModifiedDate":"2022-02-23"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"     * @param input task number","lastModifiedDate":"2022-02-23"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"    public static void executeDelete(String input) {","lastModifiedDate":"2022-02-23"},{"lineNumber":110,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-02-23"},{"lineNumber":111,"author":{"gitId":"laiisaac"},"content":"            String taskNumber \u003d Parser.parseOneParameter(input);","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"laiisaac"},"content":"            int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2022-02-23"},{"lineNumber":113,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.MESSAGE_DELETE_SUCCESS + Ui.taskList.get(taskIndex));","lastModifiedDate":"2022-02-23"},{"lineNumber":114,"author":{"gitId":"laiisaac"},"content":"            Ui.taskList.remove(taskIndex);","lastModifiedDate":"2022-02-23"},{"lineNumber":115,"author":{"gitId":"laiisaac"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2022-02-23"},{"lineNumber":116,"author":{"gitId":"laiisaac"},"content":"            System.out.println(error.getMessage() + COMMAND_DELETE + \".\");","lastModifiedDate":"2022-02-23"},{"lineNumber":117,"author":{"gitId":"laiisaac"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-23"},{"lineNumber":118,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_INVALID_TASK_NUMBER);","lastModifiedDate":"2022-02-23"},{"lineNumber":119,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":120,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":121,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":122,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":123,"author":{"gitId":"laiisaac"},"content":"     * Marks a specified task as done.","lastModifiedDate":"2022-02-23"},{"lineNumber":124,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":125,"author":{"gitId":"laiisaac"},"content":"     * @param input task number","lastModifiedDate":"2022-02-23"},{"lineNumber":126,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":127,"author":{"gitId":"laiisaac"},"content":"    public static void executeMark(String input) {","lastModifiedDate":"2022-02-23"},{"lineNumber":128,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-02-23"},{"lineNumber":129,"author":{"gitId":"laiisaac"},"content":"            String taskNumber \u003d Parser.parseOneParameter(input);","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"laiisaac"},"content":"            int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2022-02-23"},{"lineNumber":131,"author":{"gitId":"laiisaac"},"content":"            Ui.taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2022-02-23"},{"lineNumber":132,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.MESSAGE_MARK_SUCCESS + Ui.taskList.get(taskIndex));","lastModifiedDate":"2022-02-23"},{"lineNumber":133,"author":{"gitId":"laiisaac"},"content":"        } catch (DukeException | NumberFormatException | IndexOutOfBoundsException error) {","lastModifiedDate":"2022-02-24"},{"lineNumber":134,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_INVALID_SYNTAX + COMMAND_MARK + \". \" + Ui.ERROR_INVALID_TASK_NUMBER);","lastModifiedDate":"2022-02-24"},{"lineNumber":135,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":136,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":137,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":138,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":139,"author":{"gitId":"laiisaac"},"content":"     * Marks a specified task as undone.","lastModifiedDate":"2022-02-23"},{"lineNumber":140,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":141,"author":{"gitId":"laiisaac"},"content":"     * @param input task number","lastModifiedDate":"2022-02-23"},{"lineNumber":142,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":143,"author":{"gitId":"laiisaac"},"content":"    public static void executeUnmark(String input) {","lastModifiedDate":"2022-02-23"},{"lineNumber":144,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-02-23"},{"lineNumber":145,"author":{"gitId":"laiisaac"},"content":"            String taskNumber \u003d Parser.parseOneParameter(input);","lastModifiedDate":"2022-02-24"},{"lineNumber":146,"author":{"gitId":"laiisaac"},"content":"            int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2022-02-23"},{"lineNumber":147,"author":{"gitId":"laiisaac"},"content":"            Ui.taskList.get(taskIndex).markAsNotDone();","lastModifiedDate":"2022-02-23"},{"lineNumber":148,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.MESSAGE_UNMARK_SUCCESS + Ui.taskList.get(taskIndex));","lastModifiedDate":"2022-02-23"},{"lineNumber":149,"author":{"gitId":"laiisaac"},"content":"        } catch (DukeException | NumberFormatException | IndexOutOfBoundsException error) {","lastModifiedDate":"2022-02-24"},{"lineNumber":150,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_INVALID_SYNTAX + COMMAND_UNMARK + \". \" + Ui.ERROR_INVALID_TASK_NUMBER);","lastModifiedDate":"2022-02-24"},{"lineNumber":151,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":152,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":153,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":154,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":155,"author":{"gitId":"laiisaac"},"content":"     * Adds a Todo task specified by the user to the list of tasks.","lastModifiedDate":"2022-02-23"},{"lineNumber":156,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":157,"author":{"gitId":"laiisaac"},"content":"     * @param input user\u0027s Todo command","lastModifiedDate":"2022-02-23"},{"lineNumber":158,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":159,"author":{"gitId":"laiisaac"},"content":"    public static void executeTodo(String input) {","lastModifiedDate":"2022-02-23"},{"lineNumber":160,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":161,"author":{"gitId":"laiisaac"},"content":"            String description \u003d Parser.parseOneParameter(input);","lastModifiedDate":"2022-02-24"},{"lineNumber":162,"author":{"gitId":"laiisaac"},"content":"            Todo task \u003d new Todo(description);","lastModifiedDate":"2022-02-23"},{"lineNumber":163,"author":{"gitId":"laiisaac"},"content":"            Ui.taskList.add(task);","lastModifiedDate":"2022-02-23"},{"lineNumber":164,"author":{"gitId":"laiisaac"},"content":"            task.printAddToListMessage();","lastModifiedDate":"2022-02-23"},{"lineNumber":165,"author":{"gitId":"laiisaac"},"content":"        } catch (DukeException | ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2022-02-24"},{"lineNumber":166,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_INVALID_SYNTAX + COMMAND_TODO + \". \" + Ui.ERROR_NO_DESCRIPTION);","lastModifiedDate":"2022-02-24"},{"lineNumber":167,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":168,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":169,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":170,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":171,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":172,"author":{"gitId":"laiisaac"},"content":"     * Adds a Deadline task specified by the user to the list of tasks.","lastModifiedDate":"2022-02-23"},{"lineNumber":173,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":174,"author":{"gitId":"laiisaac"},"content":"     * @param input user\u0027s Deadline command","lastModifiedDate":"2022-02-23"},{"lineNumber":175,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":176,"author":{"gitId":"laiisaac"},"content":"    public static void executeDeadline(String input) {","lastModifiedDate":"2022-02-23"},{"lineNumber":177,"author":{"gitId":"laiisaac"},"content":"        if (!input.contains(Parser.FLAG_DEADLINE)) { // Checks for presence of description","lastModifiedDate":"2022-02-23"},{"lineNumber":178,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_INVALID_SYNTAX + COMMAND_DEADLINE + \".\");","lastModifiedDate":"2022-02-23"},{"lineNumber":179,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-02-23"},{"lineNumber":180,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":181,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":182,"author":{"gitId":"laiisaac"},"content":"            String[] parsedCommand \u003d Parser.parseDeadlineOrEvent(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":183,"author":{"gitId":"laiisaac"},"content":"            String description \u003d parsedCommand[0];","lastModifiedDate":"2022-02-23"},{"lineNumber":184,"author":{"gitId":"laiisaac"},"content":"            String by \u003d parsedCommand[1];","lastModifiedDate":"2022-02-23"},{"lineNumber":185,"author":{"gitId":"laiisaac"},"content":"            Deadline task \u003d new Deadline(description, by);","lastModifiedDate":"2022-02-23"},{"lineNumber":186,"author":{"gitId":"laiisaac"},"content":"            Ui.taskList.add(task);","lastModifiedDate":"2022-02-23"},{"lineNumber":187,"author":{"gitId":"laiisaac"},"content":"            task.printAddToListMessage();","lastModifiedDate":"2022-02-23"},{"lineNumber":188,"author":{"gitId":"laiisaac"},"content":"        } catch (StringIndexOutOfBoundsException error) {","lastModifiedDate":"2022-02-28"},{"lineNumber":189,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_NO_DESCRIPTION);","lastModifiedDate":"2022-02-28"},{"lineNumber":190,"author":{"gitId":"laiisaac"},"content":"        } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2022-02-28"},{"lineNumber":191,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_NO_PARAMETER);","lastModifiedDate":"2022-02-28"},{"lineNumber":192,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":193,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":194,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":195,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":196,"author":{"gitId":"laiisaac"},"content":"     * Adds an Event task specified by the user to the list of tasks.","lastModifiedDate":"2022-02-23"},{"lineNumber":197,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":198,"author":{"gitId":"laiisaac"},"content":"     * @param input user\u0027s Event command","lastModifiedDate":"2022-02-23"},{"lineNumber":199,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":200,"author":{"gitId":"laiisaac"},"content":"    public static void executeEvent(String input) {","lastModifiedDate":"2022-02-23"},{"lineNumber":201,"author":{"gitId":"laiisaac"},"content":"        if (!input.contains(Parser.FLAG_EVENT)) { // Checks for presence of description","lastModifiedDate":"2022-02-23"},{"lineNumber":202,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_INVALID_SYNTAX + COMMAND_EVENT + \".\");","lastModifiedDate":"2022-02-23"},{"lineNumber":203,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-02-23"},{"lineNumber":204,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":205,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":206,"author":{"gitId":"laiisaac"},"content":"            String[] parsedCommand \u003d Parser.parseDeadlineOrEvent(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":207,"author":{"gitId":"laiisaac"},"content":"            String description \u003d parsedCommand[0];","lastModifiedDate":"2022-02-23"},{"lineNumber":208,"author":{"gitId":"laiisaac"},"content":"            String at \u003d parsedCommand[1];","lastModifiedDate":"2022-02-23"},{"lineNumber":209,"author":{"gitId":"laiisaac"},"content":"            Event task \u003d new Event(description, at);","lastModifiedDate":"2022-02-23"},{"lineNumber":210,"author":{"gitId":"laiisaac"},"content":"            Ui.taskList.add(task);","lastModifiedDate":"2022-02-23"},{"lineNumber":211,"author":{"gitId":"laiisaac"},"content":"            task.printAddToListMessage();","lastModifiedDate":"2022-02-23"},{"lineNumber":212,"author":{"gitId":"laiisaac"},"content":"        } catch (StringIndexOutOfBoundsException error) {","lastModifiedDate":"2022-02-28"},{"lineNumber":213,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_NO_DESCRIPTION);","lastModifiedDate":"2022-02-28"},{"lineNumber":214,"author":{"gitId":"laiisaac"},"content":"        } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2022-02-28"},{"lineNumber":215,"author":{"gitId":"laiisaac"},"content":"            System.out.println(Ui.ERROR_NO_PARAMETER);","lastModifiedDate":"2022-02-28"},{"lineNumber":216,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":217,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":218,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"laiisaac":218}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"import java.io.File;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"        duke.Ui.showGreeting();","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"            Storage.loadFileContents();","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"            File file \u003d new File(duke.Storage.FILE_PATH);","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"            File directory \u003d new File(Storage.FILE_DIRECTORY_PATH);","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"                directory.mkdir();","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"            file.createNewFile();","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"        Ui.acceptInputs();","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"        duke.Ui.exit();","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"laiisaac":20,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"        super(message);","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"laiisaac":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package duke;","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"public class Parser {","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    //Flags","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"    public static final String FLAG_DEADLINE \u003d \" /by \";","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"    public static final String FLAG_EVENT \u003d \" /at \";","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"     * Returns a String array which parses the description and corresponding task parameter.","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"     * The first element of the string array is the task description and the second element of the","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"     * string array is the deadline for Deadline task or time period for Event task.","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"     * @param input command provided by the user","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"     * @return String array with 2 elements: task description and task parameter","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"    public static String[] parseDeadlineOrEvent(String input) {","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"        String command \u003d getCommand(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"        String[] inputArray;","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"        if (command.equals(Commands.COMMAND_DEADLINE)) {","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"            inputArray \u003d input.split(FLAG_DEADLINE);","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"            inputArray \u003d input.split(FLAG_EVENT);","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"        inputArray[0] \u003d inputArray[0].substring(inputArray[0].indexOf(\" \"));","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"        return inputArray;","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"     * Returns a String representing the parameter of a given command.","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"     * The method is called when user calls a command with only one parameter (e.g. Todo, Mark, Delete","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"     * , Find) and returns the parameter.","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"     * @param input command containing one parameter","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"     * @return String representation of the parameter","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"     * @throws DukeException If command follows an invalid syntax","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"    public static String parseOneParameter(String input) throws DukeException {","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"        String[] arrayOfInput \u003d input.split(\" \", 2);","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"        if (arrayOfInput[1].isEmpty()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"            throw new DukeException(Ui.ERROR_INVALID_SYNTAX);","lastModifiedDate":"2022-02-23"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"        return arrayOfInput[1];","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"     * Returns the first word, or the command, from the input entered by the user.","lastModifiedDate":"2022-02-23"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"     * @param input command provided by the user","lastModifiedDate":"2022-02-23"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"     * @return command specified by the user","lastModifiedDate":"2022-02-23"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"    public static String getCommand(String input) {","lastModifiedDate":"2022-02-23"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"        String[] arrayOfInput \u003d input.split(\" \", 0);","lastModifiedDate":"2022-02-23"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"        return arrayOfInput[0];","lastModifiedDate":"2022-02-23"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"     * Prints all the tasks in the list.","lastModifiedDate":"2022-02-23"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"laiisaac"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"            System.out.println((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"     * Returns a formatted String of the corresponding task to be saved in the storage file.","lastModifiedDate":"2022-02-23"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"     * @param task the subclass of Task","lastModifiedDate":"2022-02-23"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"     * @return the string format needed for the storage file","lastModifiedDate":"2022-02-23"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"    public static String getFormattedString(Task task) {","lastModifiedDate":"2022-02-23"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2022-02-23"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"            return (Storage.FILE_TODO + \" | \" + convertStatusToString(task.getIsDone()) + \" | \"","lastModifiedDate":"2022-02-23"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"                    + task.getDescription());","lastModifiedDate":"2022-02-23"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-02-23"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"            return (Storage.FILE_DEADLINE + \" | \" + convertStatusToString(task.getIsDone()) + \" | \"","lastModifiedDate":"2022-02-23"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"                    + task.getDescription() + \" | \" + ((Deadline) task).getDeadline());","lastModifiedDate":"2022-02-23"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-02-23"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"            return (Storage.FILE_EVENT + \" | \" + convertStatusToString(task.getIsDone()) + \" | \"","lastModifiedDate":"2022-02-23"},{"lineNumber":88,"author":{"gitId":"laiisaac"},"content":"                    + task.getDescription() + \" | \" + ((Event) task).getAt());","lastModifiedDate":"2022-02-23"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"     *  Converts the status of the task, whether done or not done to a string (0 or 1).","lastModifiedDate":"2022-02-23"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"     *  If task is done, method returns FILE_DONE. If task is undone, method returns FILE_NOT_DONE.","lastModifiedDate":"2022-02-23"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":96,"author":{"gitId":"laiisaac"},"content":"     * @param value status of task","lastModifiedDate":"2022-02-23"},{"lineNumber":97,"author":{"gitId":"laiisaac"},"content":"     * @return string representation of status of task","lastModifiedDate":"2022-02-23"},{"lineNumber":98,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"    public static String convertStatusToString(boolean value) {","lastModifiedDate":"2022-02-23"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"        if (value) {","lastModifiedDate":"2022-02-23"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"            return Storage.FILE_DONE;","lastModifiedDate":"2022-02-23"},{"lineNumber":102,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":103,"author":{"gitId":"laiisaac"},"content":"        return Storage.FILE_NOT_DONE;","lastModifiedDate":"2022-02-23"},{"lineNumber":104,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"    public static boolean isBye(String command) {","lastModifiedDate":"2022-02-23"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"        return command.equals(Commands.COMMAND_BYE);","lastModifiedDate":"2022-02-23"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"laiisaac":109}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package duke;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"import java.util.List;","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"public class Storage {","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"    //File","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"    public static final String FILE_DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"    public static final String FILE_FLAG \u003d \" \\\\| \";","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"    public static final String FILE_TODO \u003d \"T\";","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"    public static final String FILE_DEADLINE \u003d \"D\";","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"    public static final String FILE_EVENT \u003d \"E\";","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"    public static final String FILE_DONE \u003d \"1\";","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"    public static final String FILE_NOT_DONE \u003d \"0\";","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"     * Loads the saved tasks from the user\u0027s local file to Duke\u0027s list of tasks.","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"     * Parses the content of the file line by line and adds the task to the list of tasks.","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"     * @throws FileNotFoundException If file is not found","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"    public static void loadFileContents() throws FileNotFoundException {","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"        java.io.File f \u003d new java.io.File(FILE_PATH);","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"        String[] contentArray;","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"            String input \u003d s.nextLine();","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"            contentArray \u003d input.split(FILE_FLAG);","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"            if (contentArray[0].equals(FILE_TODO)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"                addToDo(contentArray[1], contentArray[2]);","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"            } else if (contentArray[0].equals(FILE_DEADLINE)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"                addDeadline(contentArray[1], contentArray[2], contentArray[3]);","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"            } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"                addEvent(contentArray[1], contentArray[2], contentArray[3]);","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"     * Updates the file by overwriting each task line by line from the list of tasks to the local file.","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"     * @throws IOException If IOException occurs","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"    public static void updateFile() throws IOException {","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"        Path path \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"        for (Task task: Ui.taskList) {","lastModifiedDate":"2022-02-23"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"            lines.add(Parser.getFormattedString(task));","lastModifiedDate":"2022-02-23"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"        Files.write(path, lines, StandardCharsets.UTF_8);","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"     * Adds a Todo task to the list of tasks.","lastModifiedDate":"2022-02-23"},{"lineNumber":68,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"     * @param status status of the task","lastModifiedDate":"2022-02-23"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"     * @param description description of the task","lastModifiedDate":"2022-02-23"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"    public static void addToDo(String status, String description) {","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"        Todo task \u003d new Todo(description);","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"        Ui.taskList.add(task);","lastModifiedDate":"2022-02-23"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"        if (status.equals(FILE_DONE)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"            task.markAsDone();","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"     * Adds a Deadline task to the list of tasks.","lastModifiedDate":"2022-02-23"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"     * @param status status of task","lastModifiedDate":"2022-02-23"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"     * @param description description of task","lastModifiedDate":"2022-02-23"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"     * @param deadline deadline of task","lastModifiedDate":"2022-02-23"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"    public static void addDeadline(String status, String description, String deadline) {","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"laiisaac"},"content":"        Deadline task \u003d new Deadline(description, deadline);","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"        Ui.taskList.add(task);","lastModifiedDate":"2022-02-23"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"        if (status.equals(FILE_DONE)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"            task.markAsDone();","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":96,"author":{"gitId":"laiisaac"},"content":"     * Adds an Event task to the list of tasks.","lastModifiedDate":"2022-02-23"},{"lineNumber":97,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":98,"author":{"gitId":"laiisaac"},"content":"     * @param status status of task","lastModifiedDate":"2022-02-23"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"     * @param description description of task","lastModifiedDate":"2022-02-23"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"     * @param at time period of task","lastModifiedDate":"2022-02-23"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":102,"author":{"gitId":"laiisaac"},"content":"    public static void addEvent(String status, String description, String at) {","lastModifiedDate":"2022-02-23"},{"lineNumber":103,"author":{"gitId":"laiisaac"},"content":"        Event task \u003d new Event(description, at);","lastModifiedDate":"2022-02-23"},{"lineNumber":104,"author":{"gitId":"laiisaac"},"content":"        Ui.taskList.add(task);","lastModifiedDate":"2022-02-23"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"        if (status.equals(FILE_DONE)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"            task.markAsDone();","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"laiisaac":109}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package duke;","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"public class Ui {","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"    protected static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    protected static final Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"    //Messages","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Hi there! I\u0027m Domo the chat bot.\\nWhat would you like to do?\";","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    public static final String MESSAGE_BYE \u003d \"Goodbye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"    public static final String MESSAGE_LIST \u003d \"Here is your list so far:\";","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"    public static final String MESSAGE_INSTRUCTION \u003d \"Type a valid command (bye, list, mark, unmark, delete, todo, deadline, event, find):\";","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"    public static final String MESSAGE_MARK_SUCCESS \u003d \"Congrats! You\u0027ve completed:\\n\";","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"    public static final String MESSAGE_UNMARK_SUCCESS \u003d \"Aw, you\u0027ve marked this as undone:\\n\";","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"    public static final String MESSAGE_DELETE_SUCCESS \u003d \"Alright, deleting this task:\\n\";","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"    public static final String MESSAGE_NO_TASKS \u003d \"You don\u0027t seem to have any tasks so far!\";","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"    public static final String MESSAGE_FIND_RESULT \u003d \"Here are the tasks containing \";","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"    public static final String MESSAGE_NO_FIND_RESULT \u003d \"Sorry, looks like there are no tasks which match\";","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"    //Misc text","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"    public static final String SEPARATOR \u003d \"───────────────────────────────────\";","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"    //Errors","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_NO_INPUT \u003d \"Hmmmm... you didn\u0027t type anything. Please try again using a valid command!\";","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_IO \u003d \"IO Error occurred!\";","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_NO_FILE_DIRECTORY \u003d \"IO Error occurred! Please check if /data directory exists!\";","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_NO_DESCRIPTION \u003d \"You did not enter a description!\";","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_NO_PARAMETER \u003d \"You did not enter a valid parameter!\";","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_NO_CONTENT \u003d \"You did not enter a description to find!\";","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_NOT_VALID_COMMAND \u003d \"Sorry, command is not recognised. Please try again using a valid command!\";","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_INVALID_SYNTAX \u003d \"You\u0027ve entered an invalid syntax for \";","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_INVALID_TASK_NUMBER \u003d \"Please enter a valid task number!\";","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"    public static void showGreeting() {","lastModifiedDate":"2022-02-23"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"        printSeparator();","lastModifiedDate":"2022-02-23"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"        System.out.println(MESSAGE_WELCOME);","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"     * Continually accepts inputs/commands from the user until the \u0027bye\u0027 command is encountered.","lastModifiedDate":"2022-02-23"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"    public static void acceptInputs() {","lastModifiedDate":"2022-02-23"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"        String input \u003d getInput();","lastModifiedDate":"2022-02-23"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"        while (!Parser.isBye(input)) {","lastModifiedDate":"2022-02-23"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"            try {","lastModifiedDate":"2022-02-23"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"                Commands.parseCommand(input);","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"            } catch (DukeException error){","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"                System.out.println(error.getMessage());","lastModifiedDate":"2022-02-23"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-23"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"                System.out.println(ERROR_IO);","lastModifiedDate":"2022-02-23"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-02-23"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"            input \u003d getInput();","lastModifiedDate":"2022-02-23"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"     * Prepares to exit the program by updating the local file and printing a goodbye message.","lastModifiedDate":"2022-02-23"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"     * @throws IOException If IOException occurs","lastModifiedDate":"2022-02-23"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"    public static void exit() throws IOException {","lastModifiedDate":"2022-02-23"},{"lineNumber":68,"author":{"gitId":"laiisaac"},"content":"        Storage.updateFile();","lastModifiedDate":"2022-02-23"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"        printSeparator();","lastModifiedDate":"2022-02-23"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"        System.out.println(MESSAGE_BYE);","lastModifiedDate":"2022-02-23"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"     * Gets input from the user.","lastModifiedDate":"2022-02-23"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"     * @return user\u0027s input","lastModifiedDate":"2022-02-23"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"    public static String getInput() {","lastModifiedDate":"2022-02-23"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"        System.out.println(MESSAGE_INSTRUCTION);","lastModifiedDate":"2022-02-23"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"        return scan.nextLine();","lastModifiedDate":"2022-02-23"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"     * Prints out a line separator for UI aesthetic purposes.","lastModifiedDate":"2022-02-23"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"    public static void printSeparator() {","lastModifiedDate":"2022-02-23"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-02-23"},{"lineNumber":88,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-02-23"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"laiisaac":90}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package duke.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"    protected String by;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"        super(description);","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"        return \"[D]\" + getStatusIcon() + \" \" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"    public String getDeadline() { return by; }","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"    public void printAddToListMessage() {","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"        System.out.println(\"\\nSuccessfully added to list:\\n\" + addIndentation() + \"[D]\" + getStatusIcon() + \" \"","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"                + description + \" (by: \" + by + \")\");","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"laiisaac":23}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package duke.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"    protected String at;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"        super(description);","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"        return \"[E]\" + getStatusIcon() + \" \" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"    public String getAt() { return at; }","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"    public void printAddToListMessage() {","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"        System.out.println(\"\\nSuccessfully added to list:\\n\" + addIndentation() + \"[E]\" + getStatusIcon() + \" \"","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"                + description + \" (at: \" + at + \")\");","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"laiisaac":24}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package duke.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"    protected String description;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"        return description;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"    public boolean getIsDone() { return (isDone ? true : false); }","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"    public String getDescription() { return description; }","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with tick","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"    public static String addIndentation() {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"        return \"    \"; // adds an indentation of 4 spaces for aesthetic purposes","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"laiisaac":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package duke.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"        super(description);","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"        return \"[T]\" + getStatusIcon() + \" \" + super.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"    public void printAddToListMessage() {","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"        System.out.println(\"\\nSuccessfully added to list:\\n\" + addIndentation() + \"[T]\" + getStatusIcon() + \" \"","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"                + description);","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"laiisaac":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"list","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"todo task 1","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"deadline task 2 /by tomorrow 12pm","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"event task 3 /at 2-4pm","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"list","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"mark 1","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"mark 2","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"unmark 1","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"find task","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"bye","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"laiisaac":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"laiisaac":2,"-":19}}]
