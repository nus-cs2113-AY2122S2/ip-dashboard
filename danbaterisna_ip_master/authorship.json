[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"    private static final String DEADLINE_FORMAT_STRING \u003d \"[D]%s (by: %s)\";","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"    private String dueDate;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"        return String.format(DEADLINE_FORMAT_STRING, super.toString(), dueDate);","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"danbaterisna":16}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"    private static final String EVENT_FORMAT_STRING \u003d \"[E]%s (at: %s)\";","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"    private String eventTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"        return String.format(EVENT_FORMAT_STRING, super.toString(), eventTime);","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"danbaterisna":15}},{"path":"src/main/java/Marites.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"public class Marites {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"    /* STRING CONSTANTS */","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"    // Logo found in https://emojicombos.com/kaomoji","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"    private static final String INTRO_MESSAGE \u003d \"(งツ)ว\\n\" +","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"            \"Hi, I\u0027m Marites! I\u0027ve heard so many things about you!\\n\" +","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"            \"I have a lot of stories to share, but first, how can I help you?\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"    private static final String EXIT_MESSAGE \u003d \"See you next time!\";","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"    private static final String UNKNOWN_COMMAND_MESSAGE \u003d \"I didn\u0027t understand that.\";","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_ADD_TODO \u003d \"todo\";","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_ADD_EVENT \u003d \"event\";","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_ADD_DEADLINE_TAG \u003d \"/by\";","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"    private static final String COMMAND_ADD_EVENT_TAG \u003d \"/at\";","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"danbaterisna"},"content":"    private static final String LIST_TASK_ITEM_FORMAT_STRING \u003d \"%d. %s%n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"danbaterisna"},"content":"    private static final String ADD_TASK_FORMAT_STRING \u003d","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"danbaterisna"},"content":"        \"Alright, task added:%n  %s%nYour list currently has %d tasks.%n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"danbaterisna"},"content":"    private static final String MARK_DONE_MESSAGE \u003d \"Good job on getting this done!\";","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"danbaterisna"},"content":"    private static final String MARK_UNDONE_MESSAGE \u003d \"Okay, I\u0027ve marked this as not yet done:\";","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"danbaterisna"},"content":"    private static final String SET_TASK_STATUS_FORMAT_STRING \u003d \"%s%n    %s%n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"danbaterisna"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"danbaterisna"},"content":"    /** The task list being tracked by Marites. */","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"danbaterisna"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"danbaterisna"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"danbaterisna"},"content":"        printIntroduction();","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"danbaterisna"},"content":"        while (true) {","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"danbaterisna"},"content":"            String userInput \u003d SCANNER.nextLine();","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"danbaterisna"},"content":"            String commandFeedback \u003d processUserCommand(userInput);","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"danbaterisna"},"content":"            showFeedback(commandFeedback);","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"danbaterisna"},"content":"    /* OUTPUT */","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"danbaterisna"},"content":"     * Prints a separator string.","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"danbaterisna"},"content":"    private static void printSeparator() {","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"danbaterisna"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"danbaterisna"},"content":"     * Prints an introductory message.","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"danbaterisna"},"content":"    private static void printIntroduction() {","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"danbaterisna"},"content":"        System.out.println(INTRO_MESSAGE);","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"danbaterisna"},"content":"        printSeparator();","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"danbaterisna"},"content":"     * Prints an exit message.","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"danbaterisna"},"content":"    private static void printExitMessage() {","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"danbaterisna"},"content":"        System.out.println(EXIT_MESSAGE);","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"danbaterisna"},"content":"        printSeparator();","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"danbaterisna"},"content":"     * Prints a feedback string from an executed command.","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"danbaterisna"},"content":"     * @param feedback The feedback string to execute.","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"danbaterisna"},"content":"    private static void showFeedback(String feedback) {","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"danbaterisna"},"content":"        printSeparator();","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"danbaterisna"},"content":"        System.out.print(feedback);","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"danbaterisna"},"content":"        printSeparator();","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":85,"author":{"gitId":"danbaterisna"},"content":"     * Get the type of command issued.","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"danbaterisna"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"danbaterisna"},"content":"     * @return The command type.","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":89,"author":{"gitId":"danbaterisna"},"content":"    private static String getCommandType(String userInput) {","lastModifiedDate":"2022-02-01"},{"lineNumber":90,"author":{"gitId":"danbaterisna"},"content":"        String[] tokens \u003d userInput.split(\"\\\\s\");","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"danbaterisna"},"content":"        return tokens[0];","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":93,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":94,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"danbaterisna"},"content":"     * Parses a user\u0027s command, and executes it.","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"danbaterisna"},"content":"     * @param userInput A line of the user\u0027s input.","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"danbaterisna"},"content":"     * @return Output that must be passed back to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":99,"author":{"gitId":"danbaterisna"},"content":"    private static String processUserCommand(String userInput) {","lastModifiedDate":"2022-01-31"},{"lineNumber":100,"author":{"gitId":"danbaterisna"},"content":"        switch (getCommandType(userInput)) {","lastModifiedDate":"2022-02-01"},{"lineNumber":101,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2022-02-01"},{"lineNumber":102,"author":{"gitId":"danbaterisna"},"content":"            return executeExit();","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2022-02-01"},{"lineNumber":104,"author":{"gitId":"danbaterisna"},"content":"            return executeListTasks();","lastModifiedDate":"2022-01-31"},{"lineNumber":105,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2022-02-01"},{"lineNumber":106,"author":{"gitId":"danbaterisna"},"content":"            return executeSetTaskStatus(userInput, true);","lastModifiedDate":"2022-02-01"},{"lineNumber":107,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2022-02-01"},{"lineNumber":108,"author":{"gitId":"danbaterisna"},"content":"            return executeSetTaskStatus(userInput, false);","lastModifiedDate":"2022-02-01"},{"lineNumber":109,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_TODO:","lastModifiedDate":"2022-02-01"},{"lineNumber":110,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_DEADLINE:","lastModifiedDate":"2022-02-01"},{"lineNumber":111,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_EVENT:","lastModifiedDate":"2022-02-01"},{"lineNumber":112,"author":{"gitId":"danbaterisna"},"content":"            return executeAddTask(userInput);","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"danbaterisna"},"content":"        default:","lastModifiedDate":"2022-02-01"},{"lineNumber":114,"author":{"gitId":"danbaterisna"},"content":"            return UNKNOWN_COMMAND_MESSAGE;","lastModifiedDate":"2022-02-01"},{"lineNumber":115,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":117,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"danbaterisna"},"content":"    /*","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"danbaterisna"},"content":"        The following methods take in a String,","lastModifiedDate":"2022-02-01"},{"lineNumber":120,"author":{"gitId":"danbaterisna"},"content":"            denoting the full line of user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":121,"author":{"gitId":"danbaterisna"},"content":"        They return a String, denoting the feedback after executing the command.","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"danbaterisna"},"content":"     * Executes a list command.","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"danbaterisna"},"content":"     * @return The list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":127,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"danbaterisna"},"content":"    private static String executeListTasks() {","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"danbaterisna"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"danbaterisna"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {","lastModifiedDate":"2022-01-31"},{"lineNumber":131,"author":{"gitId":"danbaterisna"},"content":"            String task \u003d String.format(LIST_TASK_ITEM_FORMAT_STRING, i, tasks.get(i-1));","lastModifiedDate":"2022-02-01"},{"lineNumber":132,"author":{"gitId":"danbaterisna"},"content":"            taskList.append(task);","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":134,"author":{"gitId":"danbaterisna"},"content":"        return taskList.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":138,"author":{"gitId":"danbaterisna"},"content":"     * Parses an add task command given by the user.","lastModifiedDate":"2022-02-01"},{"lineNumber":139,"author":{"gitId":"danbaterisna"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2022-02-01"},{"lineNumber":140,"author":{"gitId":"danbaterisna"},"content":"     * @return A Task object representing the task","lastModifiedDate":"2022-02-01"},{"lineNumber":141,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":142,"author":{"gitId":"danbaterisna"},"content":"    private static Task parseAddTask(String userInput) {","lastModifiedDate":"2022-02-01"},{"lineNumber":143,"author":{"gitId":"danbaterisna"},"content":"        String[] tokens \u003d userInput.split(\"\\\\s\", 2);","lastModifiedDate":"2022-02-01"},{"lineNumber":144,"author":{"gitId":"danbaterisna"},"content":"        String[] parametersSplit;","lastModifiedDate":"2022-02-01"},{"lineNumber":145,"author":{"gitId":"danbaterisna"},"content":"        String commandType \u003d tokens[0], commandParameters \u003d tokens[1];","lastModifiedDate":"2022-02-01"},{"lineNumber":146,"author":{"gitId":"danbaterisna"},"content":"        switch (commandType) {","lastModifiedDate":"2022-02-01"},{"lineNumber":147,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_TODO:","lastModifiedDate":"2022-02-01"},{"lineNumber":148,"author":{"gitId":"danbaterisna"},"content":"            return new Todo(commandParameters.strip());","lastModifiedDate":"2022-02-01"},{"lineNumber":149,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_DEADLINE:","lastModifiedDate":"2022-02-01"},{"lineNumber":150,"author":{"gitId":"danbaterisna"},"content":"            parametersSplit \u003d commandParameters.split(COMMAND_ADD_DEADLINE_TAG);","lastModifiedDate":"2022-02-01"},{"lineNumber":151,"author":{"gitId":"danbaterisna"},"content":"            return new Deadline(parametersSplit[0].strip(), parametersSplit[1].strip());","lastModifiedDate":"2022-02-01"},{"lineNumber":152,"author":{"gitId":"danbaterisna"},"content":"        case COMMAND_ADD_EVENT:","lastModifiedDate":"2022-02-01"},{"lineNumber":153,"author":{"gitId":"danbaterisna"},"content":"            parametersSplit \u003d commandParameters.split(COMMAND_ADD_EVENT_TAG);","lastModifiedDate":"2022-02-01"},{"lineNumber":154,"author":{"gitId":"danbaterisna"},"content":"            return new Event(parametersSplit[0].strip(), parametersSplit[1].strip());","lastModifiedDate":"2022-02-01"},{"lineNumber":155,"author":{"gitId":"danbaterisna"},"content":"        default:","lastModifiedDate":"2022-02-01"},{"lineNumber":156,"author":{"gitId":"danbaterisna"},"content":"            return new Task(\"\");","lastModifiedDate":"2022-02-01"},{"lineNumber":157,"author":{"gitId":"danbaterisna"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":158,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":159,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":160,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":161,"author":{"gitId":"danbaterisna"},"content":"     * Executes an add task command.","lastModifiedDate":"2022-01-31"},{"lineNumber":162,"author":{"gitId":"danbaterisna"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-01-31"},{"lineNumber":163,"author":{"gitId":"danbaterisna"},"content":"     * @return A feedback string with the added task.","lastModifiedDate":"2022-01-31"},{"lineNumber":164,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":165,"author":{"gitId":"danbaterisna"},"content":"    private static String executeAddTask(String userInput) {","lastModifiedDate":"2022-01-31"},{"lineNumber":166,"author":{"gitId":"danbaterisna"},"content":"        Task task \u003d parseAddTask(userInput);","lastModifiedDate":"2022-02-01"},{"lineNumber":167,"author":{"gitId":"danbaterisna"},"content":"        tasks.add(task);","lastModifiedDate":"2022-02-01"},{"lineNumber":168,"author":{"gitId":"danbaterisna"},"content":"        return String.format(ADD_TASK_FORMAT_STRING, task, tasks.size());","lastModifiedDate":"2022-02-01"},{"lineNumber":169,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":170,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":171,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":172,"author":{"gitId":"danbaterisna"},"content":"     * Executes a set task command.","lastModifiedDate":"2022-01-31"},{"lineNumber":173,"author":{"gitId":"danbaterisna"},"content":"     * This can be used to both mark and unmark a task as done.","lastModifiedDate":"2022-01-31"},{"lineNumber":174,"author":{"gitId":"danbaterisna"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-02-01"},{"lineNumber":175,"author":{"gitId":"danbaterisna"},"content":"     * @param isDone The new done/undone status of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":176,"author":{"gitId":"danbaterisna"},"content":"     * @return A feedback string with the tasks\u0027 new status.","lastModifiedDate":"2022-01-31"},{"lineNumber":177,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":178,"author":{"gitId":"danbaterisna"},"content":"    private static String executeSetTaskStatus(String userInput, boolean isDone) {","lastModifiedDate":"2022-02-01"},{"lineNumber":179,"author":{"gitId":"danbaterisna"},"content":"        String[] tokens \u003d userInput.split(\"\\\\s\");","lastModifiedDate":"2022-02-01"},{"lineNumber":180,"author":{"gitId":"danbaterisna"},"content":"        int taskIndex \u003d parseInt(tokens[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"danbaterisna"},"content":"        Task taskToMark \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"danbaterisna"},"content":"        taskToMark.setDone(isDone);","lastModifiedDate":"2022-01-31"},{"lineNumber":183,"author":{"gitId":"danbaterisna"},"content":"        String message \u003d (isDone ? MARK_DONE_MESSAGE :","lastModifiedDate":"2022-02-01"},{"lineNumber":184,"author":{"gitId":"danbaterisna"},"content":"                MARK_UNDONE_MESSAGE);","lastModifiedDate":"2022-02-01"},{"lineNumber":185,"author":{"gitId":"danbaterisna"},"content":"        return String.format(SET_TASK_STATUS_FORMAT_STRING, message, taskToMark);","lastModifiedDate":"2022-02-01"},{"lineNumber":186,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":187,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"danbaterisna"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":189,"author":{"gitId":"danbaterisna"},"content":"     * Executes an exit command.","lastModifiedDate":"2022-01-31"},{"lineNumber":190,"author":{"gitId":"danbaterisna"},"content":"     * This method calls System.exit, so it should not return.","lastModifiedDate":"2022-01-31"},{"lineNumber":191,"author":{"gitId":"danbaterisna"},"content":"     * @return A dummy value.","lastModifiedDate":"2022-01-31"},{"lineNumber":192,"author":{"gitId":"danbaterisna"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":193,"author":{"gitId":"danbaterisna"},"content":"    private static String executeExit() {","lastModifiedDate":"2022-01-31"},{"lineNumber":194,"author":{"gitId":"danbaterisna"},"content":"        printExitMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":195,"author":{"gitId":"danbaterisna"},"content":"        System.exit(0);","lastModifiedDate":"2022-01-31"},{"lineNumber":196,"author":{"gitId":"danbaterisna"},"content":"        return \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":197,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":198,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"danbaterisna":198}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"public class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"    private final String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"        return description;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"danbaterisna"},"content":"        return isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"danbaterisna"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"danbaterisna"},"content":"        isDone \u003d done;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"danbaterisna"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"danbaterisna"},"content":"        String doneIndicator \u003d (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"danbaterisna"},"content":"        return String.format(\"%s %s\", doneIndicator, this.description);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"danbaterisna":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"    private static final String TODO_FORMAT_STRING \u003d \"[T]%s\";","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"danbaterisna"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"danbaterisna"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"danbaterisna"},"content":"        return String.format(TODO_FORMAT_STRING, super.toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"danbaterisna"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"danbaterisna"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"danbaterisna":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danbaterisna"},"content":"todo Finish increment","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"danbaterisna"},"content":"deadline Run grading scripts /by next weekend","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"danbaterisna"},"content":"event Midterms /at February 14","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"danbaterisna"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"danbaterisna"},"content":"mark 2","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"danbaterisna"},"content":"unmark 2","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"danbaterisna"},"content":"mark 1","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"danbaterisna"},"content":"bye","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"danbaterisna":8}}]
