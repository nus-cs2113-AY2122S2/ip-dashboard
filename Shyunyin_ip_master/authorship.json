[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Shyunyin"},"content":"   ","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"Shyunyin"},"content":"#Personalisation","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"Shyunyin"},"content":"1.Renamed bot to Eliz","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"-":24,"Shyunyin":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shyunyin"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Shyunyin"},"content":"    private String taskType;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Shyunyin"},"content":"    public Deadline(String description) {","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Shyunyin"},"content":"        super(description);","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Shyunyin"},"content":"        taskType \u003d \"D\";","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Shyunyin"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Shyunyin"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Shyunyin"},"content":"        return taskType;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Shyunyin"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Shyunyin"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Shyunyin"},"content":"        return \"[\" + taskType + \"][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Shyunyin"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Shyunyin":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"Shyunyin"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Shyunyin"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Shyunyin"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Shyunyin"},"content":"        System.out.println(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Shyunyin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":10,"Shyunyin":5}},{"path":"src/main/java/Eliz.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shyunyin"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Shyunyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Shyunyin"},"content":"public class Eliz {","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Shyunyin"},"content":"    public static void printTasks(Task[] tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"Shyunyin"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Shyunyin"},"content":"            int numToPrint \u003d i + 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Shyunyin"},"content":"            System.out.println(numToPrint + \".[\" + tasks[i].getTaskType() + \"]\" + \"[\" + tasks[i].getStatusIcon() + \"] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Shyunyin"},"content":"                    + tasks[i].description);","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Shyunyin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Shyunyin"},"content":"    public static void markATask(String line, Task[] tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Shyunyin"},"content":"        char taskNumChar \u003d line.charAt(line.length() - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"Shyunyin"},"content":"        int taskNumInt \u003d Character.getNumericValue(taskNumChar);","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Shyunyin"},"content":"        tasks[taskNumInt - 1].setAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Shyunyin"},"content":"        System.out.println(\"[\" + tasks[taskNumInt - 1].getTaskType() + \"]\" + \"[X] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Shyunyin"},"content":"                + tasks[taskNumInt - 1].description);","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"Shyunyin"},"content":"    public static void unmarkATask(String line, Task[] tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Shyunyin"},"content":"        char taskNumChar \u003d line.charAt(line.length() - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Shyunyin"},"content":"        int taskNumInt \u003d Character.getNumericValue(taskNumChar);","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Shyunyin"},"content":"        tasks[taskNumInt - 1].setAsNotDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Shyunyin"},"content":"        System.out.println(\"[\" + tasks[taskNumInt - 1].getTaskType() + \"]\" + \"[ ] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"Shyunyin"},"content":"                + tasks[taskNumInt - 1].description);","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"Shyunyin"},"content":"    public static Task createTask(String line) {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Shyunyin"},"content":"        Task t;","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"Shyunyin"},"content":"        String[] splitTwoSections \u003d line.split(\" \", 2); //0: task type, 1: rest of the words","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"Shyunyin"},"content":"        String taskType \u003d splitTwoSections[0];","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"Shyunyin"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"Shyunyin"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"Shyunyin"},"content":"            t \u003d createTodo(taskType, splitTwoSections[1]);","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"Shyunyin"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"Shyunyin"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"Shyunyin"},"content":"            t \u003d createDeadline(taskType, splitTwoSections[1]);","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"Shyunyin"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"Shyunyin"},"content":"        case \"event\":","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"Shyunyin"},"content":"            t \u003d createEvent(taskType, splitTwoSections[1]);","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"Shyunyin"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"Shyunyin"},"content":"        default:","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"Shyunyin"},"content":"            return null;","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"Shyunyin"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"Shyunyin"},"content":"        return t;","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"Shyunyin"},"content":"    public static Task createTodo(String taskType, String line) {","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"Shyunyin"},"content":"        Todo newTodo \u003d new Todo(line);","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"Shyunyin"},"content":"        return newTodo;","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"Shyunyin"},"content":"    public static Task createDeadline(String taskType, String line) {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"Shyunyin"},"content":"        String newDescription \u003d line;","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"Shyunyin"},"content":"        if (line.contains(\"/\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"Shyunyin"},"content":"            String[] splitTwoSections \u003d line.split(\"/\", 2);","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"Shyunyin"},"content":"            newDescription \u003d splitTwoSections[0] + \"(\" + splitTwoSections[1] + \")\";","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"Shyunyin"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"Shyunyin"},"content":"        Deadline newDeadline \u003d new Deadline(newDescription);","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"Shyunyin"},"content":"        return newDeadline;","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"Shyunyin"},"content":"    public static Task createEvent(String taskType, String line) {","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"Shyunyin"},"content":"        String newDescription \u003d line;","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"Shyunyin"},"content":"        if (line.contains(\"/\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"Shyunyin"},"content":"            String[] splitTwoSections \u003d line.split(\"/\", 2);","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"Shyunyin"},"content":"            newDescription \u003d splitTwoSections[0] + \"(\" + splitTwoSections[1] + \")\";","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"Shyunyin"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"Shyunyin"},"content":"        Event newEvent \u003d new Event(newDescription);","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"Shyunyin"},"content":"        return newEvent;","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"Shyunyin"},"content":"    public static void botIntroduction() {","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"Shyunyin"},"content":"        String logo \u003d \" ____    __       __     ______ \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"Shyunyin"},"content":"                + \"|  __|  |  |     |  |   |___  /\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"Shyunyin"},"content":"                + \"| |__   |  |     |  |      / /  \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"Shyunyin"},"content":"                + \"| |__|  |  |     |  |     / /  \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Shyunyin"},"content":"                + \"| |__   |  |__   |  |    / /___\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"Shyunyin"},"content":"                + \"|____|  |_____|  |__|   |______|\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"Shyunyin"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Shyunyin"},"content":"        System.out.println(\"Hello! I\u0027m Eliz\");","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"Shyunyin"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"Shyunyin"},"content":"    public static void markOrUnmark(String line, Task[] tasks, int taskCounter) {","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"Shyunyin"},"content":"        if (line.contains(\"unmark\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"Shyunyin"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"Shyunyin"},"content":"            unmarkATask(line, Arrays.copyOf(tasks, taskCounter));","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"Shyunyin"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"Shyunyin"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"Shyunyin"},"content":"            markATask(line, Arrays.copyOf(tasks, taskCounter));","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"Shyunyin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"Shyunyin"},"content":"    public static void getInput(String line, Task[] tasks, int taskCounter) throws ElizException {","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"Shyunyin"},"content":"        String[] breakTaskNames \u003d line.split(\" \");","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"Shyunyin"},"content":"        if (breakTaskNames[0].equalsIgnoreCase(\"todo\") || breakTaskNames[0].equalsIgnoreCase(\"deadline\")","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"Shyunyin"},"content":"        || breakTaskNames[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"Shyunyin"},"content":"            //do nothing;","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"Shyunyin"},"content":"        } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"Shyunyin"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry but I do not understand what you mean\");","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"Shyunyin"},"content":"            throw new ElizException();","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"Shyunyin"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"Shyunyin"},"content":"        if (breakTaskNames.length \u003c 2) {","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"Shyunyin"},"content":"            System.out.println(\"OOPS!!! The description of a \" + breakTaskNames[0] + \" cannot be empty.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"Shyunyin"},"content":"            throw new ElizException();","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"Shyunyin"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"Shyunyin"},"content":"        if (line.equalsIgnoreCase(\"list\")) { //check if action is t","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"Shyunyin"},"content":"            // o echo or print tasks","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"Shyunyin"},"content":"            printTasks(Arrays.copyOf(tasks, taskCounter));","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"Shyunyin"},"content":"        } else if (line.contains(\"mark\")) { //to check if todos are marked","lastModifiedDate":"2022-02-03"},{"lineNumber":114,"author":{"gitId":"Shyunyin"},"content":"            Eliz.markOrUnmark(line, tasks, taskCounter);","lastModifiedDate":"2022-02-03"},{"lineNumber":115,"author":{"gitId":"Shyunyin"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"Shyunyin"},"content":"            /** add line to todo, deadline, or event by creating the respective object */","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"Shyunyin"},"content":"            Task t \u003d createTask(line);","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"Shyunyin"},"content":"            tasks[taskCounter] \u003d t;","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"Shyunyin"},"content":"            taskCounter++;","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"Shyunyin"},"content":"            System.out.println(\"Got it. I\u0027ve added this task \");","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"Shyunyin"},"content":"            System.out.println(t);","lastModifiedDate":"2022-02-02"},{"lineNumber":122,"author":{"gitId":"Shyunyin"},"content":"            System.out.println(\"Now you have \" + taskCounter + \" tasks in the list.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":123,"author":{"gitId":"Shyunyin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"Shyunyin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"Shyunyin"},"content":"        /** Key Definitions */","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"Shyunyin"},"content":"        String line;","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"Shyunyin"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2022-02-09"},{"lineNumber":130,"author":{"gitId":"Shyunyin"},"content":"        int taskCounter \u003d 0;","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"Shyunyin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"Shyunyin"},"content":"        botIntroduction(); //calls the introduction of the bot","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"Shyunyin"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"Shyunyin"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"Shyunyin"},"content":"            while (!line.equalsIgnoreCase(\"bye\")) { //while command to end is not entered","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"Shyunyin"},"content":"                getInput(line, tasks, taskCounter);","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"Shyunyin"},"content":"                taskCounter++;","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"Shyunyin"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"Shyunyin"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"Shyunyin"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"Shyunyin"},"content":"        } catch (ElizException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"Shyunyin"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"Shyunyin"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Shyunyin":144}},{"path":"src/main/java/ElizException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shyunyin"},"content":"public class ElizException extends Exception{","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"Shyunyin"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"Shyunyin":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shyunyin"},"content":"public class Event extends Task{","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Shyunyin"},"content":"    private String taskType;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Shyunyin"},"content":"    public Event(String description) {","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Shyunyin"},"content":"        super(description);","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Shyunyin"},"content":"        taskType \u003d \"E\";","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Shyunyin"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Shyunyin"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Shyunyin"},"content":"        return taskType;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Shyunyin"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Shyunyin"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Shyunyin"},"content":"        return \"[\" + taskType + \"][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Shyunyin"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Shyunyin":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shyunyin"},"content":"/** Used to create task objects whenever a task is keyed in*/","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Shyunyin"},"content":"public class Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Shyunyin"},"content":"    protected String description;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Shyunyin"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Shyunyin"},"content":"    protected String taskType;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Shyunyin"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Shyunyin"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Shyunyin"},"content":"        this.isDone \u003d false; //set to false as default","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Shyunyin"},"content":"    /** Method to get task status */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Shyunyin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Shyunyin"},"content":"        return (isDone ? \"X\" : \" \"); //if task is done mark with X","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Shyunyin"},"content":"    /** Method to mark a task status as Done */","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Shyunyin"},"content":"    public void setAsDone() {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Shyunyin"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Shyunyin"},"content":"    /**Method to mark a task status as not done */","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Shyunyin"},"content":"    public void setAsNotDone() {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Shyunyin"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"Shyunyin"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"Shyunyin"},"content":"        return taskType;","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"Shyunyin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Shyunyin":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shyunyin"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Shyunyin"},"content":"    private String taskType;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Shyunyin"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Shyunyin"},"content":"        super(description);","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Shyunyin"},"content":"        taskType \u003d \"T\";","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Shyunyin"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Shyunyin"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Shyunyin"},"content":"        return taskType;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Shyunyin"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Shyunyin"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Shyunyin"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Shyunyin"},"content":"        return \"[\" + taskType + \"][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Shyunyin"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Shyunyin"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Shyunyin":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shyunyin"},"content":"todo read book","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Shyunyin"},"content":"todo return book","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Shyunyin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Shyunyin"},"content":"event friend\u0027s birthday /at Sat 7-9pm","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Shyunyin"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Shyunyin"},"content":"mark 1","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"Shyunyin"},"content":"mark 2","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"Shyunyin"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Shyunyin"},"content":"unmark 1","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Shyunyin"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Shyunyin"},"content":"bye","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Shyunyin":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Shyunyin"},"content":"del ACTUAL.TXT","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Shyunyin"},"content":"java -classpath ..\\bin Eliz \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Shyunyin":2}}]
