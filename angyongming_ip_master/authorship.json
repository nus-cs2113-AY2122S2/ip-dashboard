[{"path":"src/main/java/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":" * The CommandHandler class executes commands according to the user\u0027s input","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"angyongming"},"content":"public class CommandHandler {","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"angyongming"},"content":"    public static final String DEADLINE_INDICATOR \u003d \" /by \";","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"angyongming"},"content":"    public static final String EVENT_INDICATOR \u003d \" /at \";","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"angyongming"},"content":"     * Call the Parser class to identify the target Task, and mark it as done","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"angyongming"},"content":"     * If IndexOutOfBoundsException is caught, either the user did not specify task number or task does not exist","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"angyongming"},"content":"     * @param userInput String containing \"mark\" followed by the task number","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"angyongming"},"content":"    public static void markTask(String userInput) {","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"angyongming"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"angyongming"},"content":"            int taskIndex \u003d Parser.getTaskIndex(userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"angyongming"},"content":"            Task targetTask \u003d TaskList.get(taskIndex);","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"angyongming"},"content":"            targetTask.markAsDone();","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"angyongming"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"angyongming"},"content":"            Ui.printWrongFormat();","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"angyongming"},"content":"     * Call the Parser class to identify the target Task, and mark it as not done","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"angyongming"},"content":"     * If IndexOutOfBoundsException is caught, either the user did not specify task number or task does not exist","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"angyongming"},"content":"     * @param userInput String containing \"unmark\" followed by the task number","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"angyongming"},"content":"    public static void unmarkTask(String userInput) {","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"angyongming"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"angyongming"},"content":"            int taskIndex \u003d Parser.getTaskIndex(userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"angyongming"},"content":"            Task targetTask \u003d TaskList.get(taskIndex);","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"angyongming"},"content":"            targetTask.markAsUndone();","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"angyongming"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"angyongming"},"content":"            Ui.printWrongFormat();","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"angyongming"},"content":"     * Call the Parser class to identify the target Task, and delete it","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"angyongming"},"content":"     * If IndexOutOfBoundsException is caught, either the user did not specify task number or task does not exist","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"angyongming"},"content":"     * @param userInput String containing \"delete\" followed by the task number","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"angyongming"},"content":"    public static void deleteTask(String userInput) {","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"angyongming"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"angyongming"},"content":"            int taskIndex \u003d Parser.getTaskIndex(userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"angyongming"},"content":"            Ui.printDeleteFromList(taskIndex);","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"angyongming"},"content":"            TaskList.remove(taskIndex);","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"angyongming"},"content":"            Ui.printListSize();","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"angyongming"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"angyongming"},"content":"            Ui.printWrongFormat();","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"angyongming"},"content":"     * Call the Parser class to extract the keyword of the task that the user wishes to find","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"angyongming"},"content":"     * All the tasks containing the keyword will then be printed by the Ui class","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"angyongming"},"content":"     * If IndexOutOfBoundsException is caught, it implies that the user has failed to supply the task\u0027s description","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"angyongming"},"content":"     * @param userInput","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"angyongming"},"content":"    public static void findTask(String userInput) {","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"angyongming"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"angyongming"},"content":"            String targetDescription \u003d Parser.getTargetDescription(userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"angyongming"},"content":"            Ui.printMatchingTasks(targetDescription);","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"angyongming"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"angyongming"},"content":"            Ui.printWrongFormat();","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"angyongming"},"content":"     * Add a new ToDo Task","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"angyongming"},"content":"     * @param todoTask String containing description of ToDo","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"angyongming"},"content":"     * @throws IndexOutOfBoundsException If task description is not explicated","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"angyongming"},"content":"    public static void addTodo(String todoTask) {","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"angyongming"},"content":"        todoTask \u003d todoTask.trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"angyongming"},"content":"        if (todoTask.length() \u003d\u003d 0) {","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"angyongming"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-02-25"},{"lineNumber":84,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"angyongming"},"content":"        TaskList.add(new ToDo(todoTask));","lastModifiedDate":"2022-02-25"},{"lineNumber":86,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":87,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"angyongming"},"content":"     * Add a new Deadline Task, with parameters derived with the help of Parser class","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"angyongming"},"content":"     * @param deadlineTask String containing description of Deadline and deadline time","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"angyongming"},"content":"     * @throws IndexOutOfBoundsException If task description or deadline time is not explicated","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"angyongming"},"content":"    public static void addDeadline(String deadlineTask) {","lastModifiedDate":"2022-02-25"},{"lineNumber":95,"author":{"gitId":"angyongming"},"content":"        String[] deadlineInputs \u003d Parser.parseAdditionalParameters(deadlineTask, DEADLINE_INDICATOR);","lastModifiedDate":"2022-02-25"},{"lineNumber":96,"author":{"gitId":"angyongming"},"content":"        if (deadlineInputs[0].length() \u003d\u003d 0 || deadlineInputs[1].length() \u003d\u003d 0){","lastModifiedDate":"2022-02-25"},{"lineNumber":97,"author":{"gitId":"angyongming"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-02-25"},{"lineNumber":98,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":99,"author":{"gitId":"angyongming"},"content":"        TaskList.add(new Deadline(deadlineInputs[0], deadlineInputs[1]));","lastModifiedDate":"2022-02-25"},{"lineNumber":100,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"angyongming"},"content":"     * Add a new Event Task, with parameters derived with the help of Parser class","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"angyongming"},"content":"     * @param eventTask String containing description of Event and event time","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"angyongming"},"content":"     * @throws IndexOutOfBoundsException If task description or event time is not explicated","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"angyongming"},"content":"    public static void addEvent(String eventTask) {","lastModifiedDate":"2022-02-25"},{"lineNumber":109,"author":{"gitId":"angyongming"},"content":"        String[] eventInputs \u003d Parser.parseAdditionalParameters(eventTask, EVENT_INDICATOR);","lastModifiedDate":"2022-02-25"},{"lineNumber":110,"author":{"gitId":"angyongming"},"content":"        if (eventInputs[0].length() \u003d\u003d 0 || eventInputs[1].length() \u003d\u003d 0){","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"angyongming"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-02-25"},{"lineNumber":112,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":113,"author":{"gitId":"angyongming"},"content":"        TaskList.add(new Event(eventInputs[0], eventInputs[1]));","lastModifiedDate":"2022-02-25"},{"lineNumber":114,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":115,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":116,"author":{"gitId":"angyongming"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"angyongming":116}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":" * Subclass of Task","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":" * Deadline has an additional parameter \u0027by\u0027 that indicates the latest time the task should be completed by","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"angyongming"},"content":" * The string \"/by\" in the user input will demarcate the deadline timing","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"angyongming"},"content":" * User input to add a new Deadline is:","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"angyongming"},"content":" * \u003e deadline [description] /by [time]","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"angyongming"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"angyongming"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"angyongming"},"content":"    protected String by;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"angyongming"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"angyongming"},"content":"        super(description);","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"angyongming"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"angyongming"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"angyongming"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"angyongming"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"angyongming"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"angyongming":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"angyongming"},"content":" * Duke allows users to keep track of their personal list of tasks (Todo, Deadline and Events).","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"angyongming"},"content":" * Tasks can be added, marked / unmarked as done, deleted or searched.","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"angyongming"},"content":" * On exiting Duke, the tasks will be stored in a human-readable format (txt file).","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"angyongming"},"content":" * The task list itself will also be stored when exiting Duke, and restored once the user runs Duke again.","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"angyongming"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"angyongming"},"content":"    private static void endProgramme() {","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"angyongming"},"content":"        Storage.save();","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"angyongming"},"content":"        Ui.printBye();","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"angyongming"},"content":"     * Initialise Scanner to read in user input with the help of Ui class","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"angyongming"},"content":"    private static void startProgramme() {","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"angyongming"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"angyongming"},"content":"        String userInput \u003d Ui.readCommand(in);","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"angyongming"},"content":"        Parser.parseInput(userInput, in);","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"angyongming"},"content":"        endProgramme();","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"angyongming"},"content":"        Ui.printWelcome();","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"angyongming"},"content":"        Storage.load();","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"angyongming"},"content":"        startProgramme();","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"angyongming":28,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":"    //used when first word of the input does not correspond to list of accepted inputs","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"angyongming":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":" * Subclass of Task","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":" * Event has an additional parameter \u0027at\u0027 that indicates when the event will start","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"angyongming"},"content":" * The string \"/at\" in the user input will demarcate the time that the event starts","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"angyongming"},"content":" * User input to add a new Event is:","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"angyongming"},"content":" * \u003e event [description] /at [time]","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"angyongming"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"angyongming"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"angyongming"},"content":"    protected String at;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"angyongming"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"angyongming"},"content":"        super(description);","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"angyongming"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"angyongming"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"angyongming"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"angyongming"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"angyongming"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"angyongming":23}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"angyongming"},"content":" * The Parser class receives the user\u0027s input and checks that it is valid","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"angyongming"},"content":" * Based on the user\u0027s command, the Parser class will delegate it to the CommandHandler class accordingly","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"angyongming"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"angyongming"},"content":"public class Parser {","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"angyongming"},"content":"    public static final String EXIT_MESSAGE \u003d \"bye\";","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"angyongming"},"content":"    public static final String PRINT_MESSAGE \u003d \"list\";","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"angyongming"},"content":"    public static final String MARK_MESSAGE \u003d \"mark\";","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"angyongming"},"content":"    public static final String UNMARK_MESSAGE \u003d \"unmark\";","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"angyongming"},"content":"    public static final String DELETE_MESSAGE \u003d \"delete\";","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"angyongming"},"content":"    public static final String TODO_MESSAGE \u003d \"todo\";","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"angyongming"},"content":"    public static final String DEADLINE_MESSAGE \u003d \"deadline\";","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"angyongming"},"content":"    public static final String EVENT_MESSAGE \u003d \"event\";","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"angyongming"},"content":"    public static final String FIND_MESSAGE \u003d \"find\";","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"angyongming"},"content":"     * This method is called when the user wishes to mark / unmark / delete a specific task","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"angyongming"},"content":"     * The method first finds the specified task number in the user input (String)","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"angyongming"},"content":"     * The task number is subsequently converted into the TaskList\u0027s task index (integer)","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"angyongming"},"content":"     * @param userInput String containing the task number","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"angyongming"},"content":"     * @return Corresponding task index","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"angyongming"},"content":"    public static int getTaskIndex(String userInput) {","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"angyongming"},"content":"        String[] commandInputs \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"angyongming"},"content":"        String taskNumber \u003d commandInputs[1];","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"angyongming"},"content":"        return Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"angyongming"},"content":"     * This method is called when the user wishes to find a task based on its description, which is second word of input","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"angyongming"},"content":"     * @param userInput String containing the keyword of the task that the user wishes to find","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"angyongming"},"content":"     * @return Keyword of the task that the user wishes to find","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"angyongming"},"content":"    public static String getTargetDescription(String userInput) {","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"angyongming"},"content":"        String[] commandInputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"angyongming"},"content":"        return commandInputs[1];","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"angyongming"},"content":"     * This method is invoked when the user wishes to add a new deadline or event","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"angyongming"},"content":"     * As these tasks have an additional parameter (time), this method extracts the time from user input","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"angyongming"},"content":"     * @param parsedUserInput String containing the task\u0027s description and time","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"angyongming"},"content":"     * @param indicator \"/by\" for deadline or \"/at\" for event to split the task\u0027s description and time","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"angyongming"},"content":"     * @return Array with 2 elements - task\u0027s description and task\u0027s time","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"angyongming"},"content":"    public static String[] parseAdditionalParameters (String parsedUserInput, String indicator) {","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"angyongming"},"content":"        String[] additionalParameters \u003d parsedUserInput.split(indicator, 2);","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"angyongming"},"content":"        additionalParameters[0] \u003d additionalParameters[0].trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"angyongming"},"content":"        additionalParameters[1] \u003d additionalParameters[1].trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"angyongming"},"content":"        return additionalParameters;","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"angyongming"},"content":"     * This method is invoked if a user wishes to add a new Task","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"angyongming"},"content":"     * The method extracts the first word from the user input to determine the type of Task the user wishes to add","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"angyongming"},"content":"     * The CommandHandler class is subsequently invoked to handle the respective tasks","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"angyongming"},"content":"     * @param userInput String containing the task description (and time)","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"angyongming"},"content":"     * @throws DukeException If the first word of user input does not correspond to any known command","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"angyongming"},"content":"    private static void parseTask(String userInput) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"angyongming"},"content":"        String[] parsedUserInputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"angyongming"},"content":"        parsedUserInputs[0] \u003d parsedUserInputs[0].toLowerCase();","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"angyongming"},"content":"        switch (parsedUserInputs[0]) {","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"angyongming"},"content":"        case TODO_MESSAGE:","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"angyongming"},"content":"            CommandHandler.addTodo(parsedUserInputs[1]);","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"angyongming"},"content":"            break;","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"angyongming"},"content":"        case DEADLINE_MESSAGE:","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"angyongming"},"content":"            CommandHandler.addDeadline(parsedUserInputs[1]);","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"angyongming"},"content":"            break;","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"angyongming"},"content":"        case EVENT_MESSAGE:","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"angyongming"},"content":"            CommandHandler.addEvent(parsedUserInputs[1]);","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"angyongming"},"content":"            break;","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"angyongming"},"content":"        default:","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"angyongming"},"content":"            throw new DukeException();","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"angyongming"},"content":"        Ui.printAddToList();","lastModifiedDate":"2022-02-25"},{"lineNumber":84,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":86,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"angyongming"},"content":"     * Takes in user input and execute accordingly with the help of CommandHandler class","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"angyongming"},"content":"     * If user wishes to add a new Task, the parseTask method is called","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"angyongming"},"content":"     * If DukeException is caught, user input does not correspond to any known command","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"angyongming"},"content":"     * If IndexOutOfBoundsException is caught, user input is missing one or more parameters","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"angyongming"},"content":"     * @param userInput String that represents the user\u0027s input","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"angyongming"},"content":"     * @param in Scanner to read in next input","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"angyongming"},"content":"    public static void parseInput(String userInput, Scanner in) {","lastModifiedDate":"2022-02-25"},{"lineNumber":96,"author":{"gitId":"angyongming"},"content":"        while(!userInput.equalsIgnoreCase(EXIT_MESSAGE)){","lastModifiedDate":"2022-02-25"},{"lineNumber":97,"author":{"gitId":"angyongming"},"content":"            if (userInput.startsWith(PRINT_MESSAGE)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":98,"author":{"gitId":"angyongming"},"content":"                Ui.printList();","lastModifiedDate":"2022-02-25"},{"lineNumber":99,"author":{"gitId":"angyongming"},"content":"            } else if (userInput.startsWith(MARK_MESSAGE)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":100,"author":{"gitId":"angyongming"},"content":"                CommandHandler.markTask(userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"angyongming"},"content":"            } else if (userInput.startsWith(UNMARK_MESSAGE)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"angyongming"},"content":"                CommandHandler.unmarkTask(userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":103,"author":{"gitId":"angyongming"},"content":"            } else if (userInput.startsWith(DELETE_MESSAGE)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":104,"author":{"gitId":"angyongming"},"content":"                CommandHandler.deleteTask(userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":105,"author":{"gitId":"angyongming"},"content":"            } else if (userInput.startsWith(FIND_MESSAGE)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"angyongming"},"content":"                CommandHandler.findTask(userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"angyongming"},"content":"            } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":108,"author":{"gitId":"angyongming"},"content":"                try {","lastModifiedDate":"2022-02-25"},{"lineNumber":109,"author":{"gitId":"angyongming"},"content":"                    parseTask(userInput);","lastModifiedDate":"2022-03-02"},{"lineNumber":110,"author":{"gitId":"angyongming"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"angyongming"},"content":"                    Ui.printWrongInput();","lastModifiedDate":"2022-02-25"},{"lineNumber":112,"author":{"gitId":"angyongming"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":113,"author":{"gitId":"angyongming"},"content":"                    Ui.printWrongFormat();","lastModifiedDate":"2022-02-25"},{"lineNumber":114,"author":{"gitId":"angyongming"},"content":"                }","lastModifiedDate":"2022-02-25"},{"lineNumber":115,"author":{"gitId":"angyongming"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":116,"author":{"gitId":"angyongming"},"content":"            userInput \u003d Ui.readCommand(in);","lastModifiedDate":"2022-02-25"},{"lineNumber":117,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":119,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":120,"author":{"gitId":"angyongming"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"angyongming":120}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"import java.io.File;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"angyongming"},"content":"import java.io.EOFException;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"angyongming"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"angyongming"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"angyongming"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"angyongming"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"angyongming"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"angyongming"},"content":" * The Storage class handles anything related to the loading or saving of tasks","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"angyongming"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"angyongming"},"content":"public class Storage {","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"angyongming"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"angyongming"},"content":"    public static final String FOLDER_NAME \u003d \"data/\";","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"angyongming"},"content":"    public static final String READABLE_FILE_PATH \u003d \"data/list.txt\";","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"angyongming"},"content":"     * Locate the file specified by FILE_PATH and read each object in the file","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"angyongming"},"content":"     * Cast each object to Task, and add these tasks into the user\u0027s TaskList","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"angyongming"},"content":"    public static void load() {","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"angyongming"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"angyongming"},"content":"            FileInputStream fileIn \u003d new FileInputStream(FILE_PATH);","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"angyongming"},"content":"            ObjectInputStream objectIn \u003d new ObjectInputStream(fileIn);","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"angyongming"},"content":"            Object obj;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"angyongming"},"content":"            while (true) {","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"angyongming"},"content":"                try {","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"angyongming"},"content":"                    obj \u003d objectIn.readObject();","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"angyongming"},"content":"                } catch (EOFException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"angyongming"},"content":"                    break;","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"angyongming"},"content":"                }","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"angyongming"},"content":"                TaskList.add((Task) obj);","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"angyongming"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"Task File Uploaded\\n\");","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"angyongming"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"No input file located\\n\");","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"angyongming"},"content":"     * Locate the output file specified by FILE_PATH","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"angyongming"},"content":"     * Cast every Task in user\u0027s TaskList as object, and save them in the output file","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"angyongming"},"content":"     * @throws IOException If saving TaskList into the output file failed or was interrupted","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"angyongming"},"content":"    private static void saveListState() throws IOException {","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"angyongming"},"content":"        FileOutputStream fileOut \u003d new FileOutputStream(FILE_PATH);","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"angyongming"},"content":"        ObjectOutputStream objectOut \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"angyongming"},"content":"        for (int i \u003d 0; i \u003c TaskList.size(); i++) {","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"angyongming"},"content":"            objectOut.writeObject(TaskList.get(i));","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"angyongming"},"content":"        objectOut.close();","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"angyongming"},"content":"     * Locate the output file specified by READABLE_FILE_PATH","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"angyongming"},"content":"     * Write every Task in user\u0027s TaskList into the output file","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"angyongming"},"content":"     * @throws IOException If writing Tasks into the output file failed or was interrupted","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"angyongming"},"content":"    private static void saveReadableList() throws IOException {","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"angyongming"},"content":"        FileWriter fw \u003d new FileWriter(READABLE_FILE_PATH);","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"angyongming"},"content":"        for (int i \u003d 0; i \u003c TaskList.size(); i++) {","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"angyongming"},"content":"            int listIndex \u003d i + 1;","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"angyongming"},"content":"            fw.write(listIndex + \".\" + TaskList.get(i) + System.lineSeparator());","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"angyongming"},"content":"        fw.close();","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"angyongming"},"content":"     * Save the current tasks in user\u0027s TaskList to create a persistent storage feature","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"angyongming"},"content":"     * There are 2 things to be saved - File that stores user\u0027s TaskList as an object (unreadable)","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"angyongming"},"content":"     *                                - File that stores a readable version of the tasks in user\u0027s TaskList","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"angyongming"},"content":"    public static void save() {","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"angyongming"},"content":"        File dir \u003d new File(FOLDER_NAME);","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"angyongming"},"content":"        dir.mkdirs();","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"angyongming"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"angyongming"},"content":"            saveListState();","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"angyongming"},"content":"            saveReadableList();","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"angyongming"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":84,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"IO Error\");","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":86,"author":{"gitId":"angyongming"},"content":"        System.out.println(\"Task File Updated\");","lastModifiedDate":"2022-02-25"},{"lineNumber":87,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":89,"author":{"gitId":"angyongming"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"angyongming":89}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"angyongming"},"content":" * Represents a task that a user needs to do","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"angyongming"},"content":" * Task has 2 parameters - description that describes the task","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"angyongming"},"content":" *                       - isDone to indicate if the task has been marked as done","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"angyongming"},"content":" * Task is serializable so that it can be saved as an object when the programme ends","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"angyongming"},"content":" * Task is the parent class of ToDo, Deadline, Event","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"angyongming"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"angyongming"},"content":"public class Task implements Serializable {","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"angyongming"},"content":"    protected String description;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"angyongming"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"angyongming"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"angyongming"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"angyongming"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"angyongming"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"angyongming"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"angyongming"},"content":"     * If the task has not been marked as done yet, mark it as done","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"angyongming"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"angyongming"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"This task has already been marked as done:\");","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"angyongming"},"content":"        } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"angyongming"},"content":"            isDone \u003d true;","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"angyongming"},"content":"        System.out.println(this + System.lineSeparator());","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"angyongming"},"content":"     * If a task has been marked as done, marked it as not done yet","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"angyongming"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"angyongming"},"content":"        if (!isDone) {","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"This task has not been marked as done yet:\");","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"angyongming"},"content":"        } else{","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"angyongming"},"content":"            isDone \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"angyongming"},"content":"        System.out.println(this + System.lineSeparator());","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"angyongming"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"angyongming"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"angyongming"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"angyongming"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"angyongming":55}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"angyongming"},"content":" * The TaskList class stores the user\u0027s list of tasks","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"angyongming"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"angyongming"},"content":"public class TaskList {","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"angyongming"},"content":"    public static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"angyongming"},"content":"    public static void add (Task task) {","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"angyongming"},"content":"        list.add(task);","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"angyongming"},"content":"    public static void remove (int taskIndex) {","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"angyongming"},"content":"        list.remove(taskIndex);","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"angyongming"},"content":"    public static int size() {","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"angyongming"},"content":"        return list.size();","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"angyongming"},"content":"    public static Task get(int taskIndex) {","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"angyongming"},"content":"        return list.get(taskIndex);","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"angyongming"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"angyongming":26}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":" * Subclass of Task","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":" * User input to add a new ToDo is:","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"angyongming"},"content":" * \u003e todo [description]","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"angyongming"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"angyongming"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"angyongming"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"angyongming"},"content":"        super(description);","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"angyongming"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"angyongming"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"angyongming"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"angyongming"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"angyongming":17}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angyongming"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"angyongming"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"angyongming"},"content":" * The Ui class handles anything related to user interaction such as printing to CLI or reading user input","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"angyongming"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"angyongming"},"content":"public class Ui {","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"angyongming"},"content":"    public static final String WELCOME_MESSAGE \u003d \"##    ##  #######  ##    ##  ######      ##     ## #### ##    ##  ######\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"angyongming"},"content":"                                               + \" ##  ##  ##     ## ###   ## ##    ##     ###   ###  ##  ###   ## ##    ##\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"angyongming"},"content":"                                               + \"  ####   ##     ## ####  ## ##           #### ####  ##  ####  ## ##\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"angyongming"},"content":"                                               + \"   ##    ##     ## ## ## ## ##   ####    ## ### ##  ##  ## ## ## ##   ####\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"angyongming"},"content":"                                               + \"   ##    ##     ## ##  #### ##    ##     ##     ##  ##  ##  #### ##    ##\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"angyongming"},"content":"                                               + \"   ##    ##     ## ##   ### ##    ##     ##     ##  ##  ##   ### ##    ##\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"angyongming"},"content":"                                               + \"   ##     #######  ##    ##  ######      ##     ## #### ##    ##  ######\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"angyongming"},"content":"                                               + \"Hello! I\u0027m Yong Ming\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"angyongming"},"content":"                                               + \"What can I do for you?\";","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"angyongming"},"content":"    public static final String WRONG_FORMAT_MESSAGE \u003d \"OOPS!!! One or more parameters are missing or invalid. The correct format is:\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"angyongming"},"content":"                                                    + \"todo [description]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"angyongming"},"content":"                                                    + \"deadline [description] /by [deadline]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"angyongming"},"content":"                                                    + \"event [description] /at [time]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"angyongming"},"content":"                                                    + \"mark [Task#]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"angyongming"},"content":"                                                    + \"unmark [Task#]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"angyongming"},"content":"                                                    + \"delete [Task#]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"angyongming"},"content":"                                                    + \"find [task description]\\n\";","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"angyongming"},"content":"    public static final String WRONG_INPUT_MESSAGE \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"angyongming"},"content":"                                                   + \"The accepted inputs are:\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"angyongming"},"content":"                                                   + \"\u003e todo [description]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"angyongming"},"content":"                                                   + \"\u003e deadline [description] /by [deadline]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"angyongming"},"content":"                                                   + \"\u003e event [description] /at [time]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"angyongming"},"content":"                                                   + \"\u003e list\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"angyongming"},"content":"                                                   + \"\u003e mark [Task#]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"angyongming"},"content":"                                                   + \"\u003e unmark [Task#]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"angyongming"},"content":"                                                   + \"\u003e delete [Task#]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"angyongming"},"content":"                                                   + \"\u003e find [Task description]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"angyongming"},"content":"                                                   + \"\u003e bye\\n\";","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"angyongming"},"content":"    public static final String END_MESSAGE \u003d \"Bye! Hope to see you again soon :)\";","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"angyongming"},"content":"    public static void printWelcome() {","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"angyongming"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"angyongming"},"content":"    public static void printWrongFormat() {","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"angyongming"},"content":"        System.out.println(WRONG_FORMAT_MESSAGE);","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"angyongming"},"content":"    public static void printWrongInput() {","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"angyongming"},"content":"        System.out.println(WRONG_INPUT_MESSAGE);","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"angyongming"},"content":"    public static void printBye() {","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"angyongming"},"content":"        System.out.println(END_MESSAGE);","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"angyongming"},"content":"     * Prints all the tasks in user\u0027s TaskList to give user an overview of his tasks","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"angyongming"},"content":"    public static void printList() {","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"angyongming"},"content":"        if (TaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"There are no tasks yet!\\n\");","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"angyongming"},"content":"        } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"angyongming"},"content":"            for (int i \u003d 0; i \u003c TaskList.size(); i++) {","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"angyongming"},"content":"                int listIndex \u003d i + 1;","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"angyongming"},"content":"                System.out.println(listIndex + \".\" + TaskList.get(i));","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"angyongming"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"angyongming"},"content":"            System.out.println();","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"angyongming"},"content":"     * Prints the number of tasks in user\u0027s TaskList","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"angyongming"},"content":"     * Method is invoked when user adds or deletes a task from TaskList to update user on the number of remaining tasks","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"angyongming"},"content":"    public static void printListSize() {","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"angyongming"},"content":"        if (TaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"Now you have no tasks in the list\\n\");","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"angyongming"},"content":"        } else if (TaskList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"Now you have 1 task in the list\\n\");","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"angyongming"},"content":"        } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"Now you have \" + TaskList.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"angyongming"},"content":"     * Informs user that task has been added to TaskList","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"angyongming"},"content":"    public static void printAddToList() {","lastModifiedDate":"2022-02-25"},{"lineNumber":87,"author":{"gitId":"angyongming"},"content":"        int newTaskIndex \u003d TaskList.size() - 1;","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"angyongming"},"content":"        Task addedTask \u003d TaskList.get(newTaskIndex);","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"angyongming"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + addedTask);","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"angyongming"},"content":"        printListSize();","lastModifiedDate":"2022-02-25"},{"lineNumber":91,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":92,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":93,"author":{"gitId":"angyongming"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"angyongming"},"content":"     * Informs user which task is going to be deleted","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"angyongming"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"angyongming"},"content":"     * @param taskIndex Index of the task that is to be deleted","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"angyongming"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"angyongming"},"content":"    public static void printDeleteFromList(int taskIndex) {","lastModifiedDate":"2022-02-25"},{"lineNumber":99,"author":{"gitId":"angyongming"},"content":"        Task targetTask \u003d TaskList.get(taskIndex);","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"angyongming"},"content":"        System.out.println(\"Got it. Removing this task:\" + System.lineSeparator() + targetTask);","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":103,"author":{"gitId":"angyongming"},"content":"    public static String readCommand(Scanner in) {","lastModifiedDate":"2022-02-25"},{"lineNumber":104,"author":{"gitId":"angyongming"},"content":"        return in.nextLine();","lastModifiedDate":"2022-02-25"},{"lineNumber":105,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"angyongming"},"content":"    public static void printMatchingTasks(String targetDescription) {","lastModifiedDate":"2022-02-25"},{"lineNumber":108,"author":{"gitId":"angyongming"},"content":"        boolean isFirst \u003d true;","lastModifiedDate":"2022-02-25"},{"lineNumber":109,"author":{"gitId":"angyongming"},"content":"        for (int i \u003d 0; i \u003c TaskList.size(); i++) {","lastModifiedDate":"2022-02-25"},{"lineNumber":110,"author":{"gitId":"angyongming"},"content":"            Task tempTask \u003d TaskList.get(i);","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"angyongming"},"content":"            String taskDescription \u003d tempTask.description;","lastModifiedDate":"2022-02-25"},{"lineNumber":112,"author":{"gitId":"angyongming"},"content":"            if (taskDescription.contains(targetDescription)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":113,"author":{"gitId":"angyongming"},"content":"                if (isFirst) {","lastModifiedDate":"2022-02-25"},{"lineNumber":114,"author":{"gitId":"angyongming"},"content":"                    isFirst \u003d false;","lastModifiedDate":"2022-02-25"},{"lineNumber":115,"author":{"gitId":"angyongming"},"content":"                    System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-25"},{"lineNumber":116,"author":{"gitId":"angyongming"},"content":"                }","lastModifiedDate":"2022-02-25"},{"lineNumber":117,"author":{"gitId":"angyongming"},"content":"                System.out.println(tempTask);","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"angyongming"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":119,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":120,"author":{"gitId":"angyongming"},"content":"        if (isFirst) {","lastModifiedDate":"2022-02-25"},{"lineNumber":121,"author":{"gitId":"angyongming"},"content":"            System.out.println(\"There are no matching tasks in your list!\");","lastModifiedDate":"2022-02-25"},{"lineNumber":122,"author":{"gitId":"angyongming"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":123,"author":{"gitId":"angyongming"},"content":"        System.out.println();","lastModifiedDate":"2022-02-25"},{"lineNumber":124,"author":{"gitId":"angyongming"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":125,"author":{"gitId":"angyongming"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":126,"author":{"gitId":"angyongming"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"angyongming":126}}]
