[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"D | 1 |  something | 2089-09-11","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"T | 0 |  sljf","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aiman-imtiaz":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"    public String taskKind;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"        super(description);","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"        this.taskKind \u003d \"[D]\";","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"    public String toString(){","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        String indicator;","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        if (this.isDone){","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"            indicator \u003d \"[X]\";","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"        } else indicator \u003d \"[ ]\";","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d \"[D]\" + indicator + description","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"                + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"        return message;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setBy(String by) {","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getBy() {","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"aiman-imtiaz":33}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":" * Starts the program.","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    final static String FILE_NAME \u003d \"/Users/aimanimtiaz/software-engineering/ip/data/duke.txt\";","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"     * Runs the main duke program using the Runner class.","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param args arguments to run the program, can be left empty","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws IOException exception could be thrown if reading or writing from a file is not successful","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        Runner.run();","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"aiman-imtiaz":18,"-":3}},{"path":"src/main/java/duke/DukeIllegalDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"public class DukeIllegalDescription extends Exception {","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"aiman-imtiaz":3}},{"path":"src/main/java/duke/DukeIllegalKeyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"public class DukeIllegalKeyword extends Exception {","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"aiman-imtiaz":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class Event extends Todo {","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    public String taskKind;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"    protected String at;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"        super(description);","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"        this.taskKind  \u003d \"[E]\";","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"    public String toString(){","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"        String indicator;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"        if (this.isDone){","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"            indicator \u003d \"[X]\";","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        } else indicator \u003d \"[ ]\";","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d \"[D]\" + indicator + description","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"                + \" (at: \" + at + \")\";","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"        return message;","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setAt(String at) {","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getAt() {","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        return at;","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"aiman-imtiaz":29}},{"path":"src/main/java/duke/FileAccess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.File;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":" * Provides methods for storing to and loading from the storage file.","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"public class FileAccess {","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"     * Reads all the existing tasks from a text file and adds them to the TaskList.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws FileNotFoundException exception if the file does not exist","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"     * @see Parser","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"     * @see TaskList","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"    private static void readFromFile() throws FileNotFoundException {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"        File f \u003d new File(Duke.FILE_NAME); // create a File for the given file path","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"            Task task \u003d Parser.lineToTask(s.nextLine());","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"            TaskList.taskList.add(task);","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"     * Saves the entire TaskList to the given text file/","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws IOException exception if file cannot be written to","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"     * @see Parser","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"     * @see TaskList","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"    public static void saveToFile() throws IOException {","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"        FileWriter fw \u003d new FileWriter(Duke.FILE_NAME);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"        String line;","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"            for (Task task: TaskList.taskList){","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"                line \u003d Parser.taskToLine(task);","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"                fw.write(line + System.lineSeparator());","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"            fw.close();","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"     * Tries to read from file and prints a message if the file does not exist.","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"    public static void loadFromFile(){","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"            readFromFile();","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"aiman-imtiaz":65}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"public class Parser {","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"     * Parses a string to a Task object by figuring out the kind of Task,","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"     * and all other fields required for the relevant class.","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param line the string that needs to be parsed as a Task","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"     * @return Task the task object which can be added to the TaskList","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"    static Task lineToTask(String line){","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"        int isDoneInt;","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        char indicator \u003d line.charAt(0);","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        switch (indicator) {","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"            int byIndex \u003d line.indexOf(\"|\", 8);","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"            String deadlineDescription \u003d line.substring(8, byIndex - 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"            String by \u003d line.substring(byIndex + 2);","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"            task \u003d new Deadline(deadlineDescription, LocalDate.parse(by));","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"            isDoneInt \u003d Integer.parseInt(line.substring(4, 5));","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"            if (isDoneInt !\u003d 0) task.setDone(true);","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"            break;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"            int atIndex \u003d line.indexOf(\"|\", 8);","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"            String eventDescription \u003d line.substring(8, atIndex - 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"            String at \u003d line.substring(atIndex + 2);","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"            task \u003d new Event(eventDescription, at);","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"            isDoneInt \u003d Integer.parseInt(line.substring(4, 5));","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"            if (isDoneInt !\u003d 0) task.setDone(true);","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"            break;","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"            String todoDescription \u003d line.substring(8);","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"            task \u003d new Todo(todoDescription);","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"            isDoneInt \u003d Integer.parseInt(line.substring(4, 5));","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"            if (isDoneInt !\u003d 0) task.setDone(true);","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"            break;","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"        return task;","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"     * Appropriately converts a Task to a string object in a way that all","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"     * information about the Task object is preserved. Every field of the","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"     * object is converted to a string and the final line is constructed.","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param task the Task object which needs to be converted to string","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"     * @return the string that can be written to a text file as a single line","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"    static String taskToLine(Task task) {","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"        String line \u003d \"\";","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"        // code block","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"            line \u003d \"D\" + \" | \" +","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"                    boolToInt(deadline.isDone()) +","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"                    \" | \" + deadline.description +","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"                    \" | \" + deadline.by.toString();","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"            line \u003d \"E\" + \" | \" +","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"                    boolToInt(event.isDone()) +","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"                    \" | \" + event.description +","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"                    \" | \" + event.getAt();","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (task instanceof Todo) {","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"            Todo todo \u003d (Todo) task;","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"            line \u003d \"T\" + \" | \" +","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"                    boolToInt(todo.isDone()) +","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"                    \" | \" + todo.description;","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"        return line;","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"     * Converts boolean to integer.","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param b the boolean value to be turned either to 0 or 1","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"aiman-imtiaz"},"content":"     * @return 0 or 1","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"aiman-imtiaz"},"content":"    private static int boolToInt(boolean b) {","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"aiman-imtiaz"},"content":"        return Boolean.compare(b, false);","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":87,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"aiman-imtiaz"},"content":"     * Each line that the user inputs is parsed and processed.","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param line the line from the command line that needs to be parsed in order","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"aiman-imtiaz"},"content":"     *             for appropriate action to be taken","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws DukeIllegalKeyword throws exception if invalid keyword is typed","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws DukeIllegalDescription throws exception if no description is added","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"aiman-imtiaz"},"content":"    static void processLine(String line) throws DukeIllegalKeyword, DukeIllegalDescription {","lastModifiedDate":"2022-03-05"},{"lineNumber":97,"author":{"gitId":"aiman-imtiaz"},"content":"        if (line.equals(\"list\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":98,"author":{"gitId":"aiman-imtiaz"},"content":"            UI.printList();","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (line.startsWith(\"mark\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":100,"author":{"gitId":"aiman-imtiaz"},"content":"            int indexToMark \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"aiman-imtiaz"},"content":"            UI.markTask(indexToMark);","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if(line.startsWith(\"unmark\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"aiman-imtiaz"},"content":"            int indexToUnmark \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"aiman-imtiaz"},"content":"            UI.unMarkTask(indexToUnmark);","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (line.startsWith(\"todo\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"aiman-imtiaz"},"content":"            if (line.length() \u003c 5){","lastModifiedDate":"2022-03-05"},{"lineNumber":107,"author":{"gitId":"aiman-imtiaz"},"content":"                throw new DukeIllegalDescription();","lastModifiedDate":"2022-03-05"},{"lineNumber":108,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":109,"author":{"gitId":"aiman-imtiaz"},"content":"            String todoDescription \u003d line.substring(4);","lastModifiedDate":"2022-03-05"},{"lineNumber":110,"author":{"gitId":"aiman-imtiaz"},"content":"            Todo task \u003d new Todo(todoDescription);","lastModifiedDate":"2022-03-05"},{"lineNumber":111,"author":{"gitId":"aiman-imtiaz"},"content":"            TaskList.taskList.add(task);","lastModifiedDate":"2022-03-05"},{"lineNumber":112,"author":{"gitId":"aiman-imtiaz"},"content":"            UI.printAddedItem(task);","lastModifiedDate":"2022-03-05"},{"lineNumber":113,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (line.startsWith(\"deadline\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":114,"author":{"gitId":"aiman-imtiaz"},"content":"            if (line.length() \u003c 9 || !line.contains(\"/by\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"aiman-imtiaz"},"content":"                throw new DukeIllegalDescription();","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":117,"author":{"gitId":"aiman-imtiaz"},"content":"            int byIndex \u003d line.indexOf(\"/by\");","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"aiman-imtiaz"},"content":"            String deadlineDescription \u003d line.substring(8, byIndex - 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":119,"author":{"gitId":"aiman-imtiaz"},"content":"            String by \u003d line.substring(byIndex + 4);","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"aiman-imtiaz"},"content":"            Deadline task \u003d new Deadline(deadlineDescription, LocalDate.parse(by));","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"aiman-imtiaz"},"content":"            TaskList.taskList.add(task);","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"aiman-imtiaz"},"content":"            UI.printAddedItem(task);","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (line.startsWith(\"event\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"aiman-imtiaz"},"content":"            if (line.length() \u003c 6 || !line.contains(\"/at\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"aiman-imtiaz"},"content":"                throw new DukeIllegalDescription();","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"aiman-imtiaz"},"content":"            int atIndex \u003d line.indexOf(\"/at\");","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"aiman-imtiaz"},"content":"            String eventDescription \u003d line.substring(5, atIndex - 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"aiman-imtiaz"},"content":"            String at \u003d line.substring(atIndex + 3);","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"aiman-imtiaz"},"content":"            Event task \u003d new Event(eventDescription, at);","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"aiman-imtiaz"},"content":"            TaskList.taskList.add(task);","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"aiman-imtiaz"},"content":"            UI.printAddedItem(task);","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"aiman-imtiaz"},"content":"            if (line.length() \u003c 8) {","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"aiman-imtiaz"},"content":"                throw new DukeIllegalDescription();","lastModifiedDate":"2022-03-05"},{"lineNumber":136,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"aiman-imtiaz"},"content":"            int indexToDelete \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"aiman-imtiaz"},"content":"            Task deletedTask \u003d TaskList.taskList.get(indexToDelete - 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":139,"author":{"gitId":"aiman-imtiaz"},"content":"            TaskList.taskList.remove(indexToDelete - 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":140,"author":{"gitId":"aiman-imtiaz"},"content":"            UI.printDeletedItem(deletedTask);","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (line.startsWith(\"find\")) {","lastModifiedDate":"2022-03-05"},{"lineNumber":142,"author":{"gitId":"aiman-imtiaz"},"content":"            if (line.length() \u003c 6) {","lastModifiedDate":"2022-03-05"},{"lineNumber":143,"author":{"gitId":"aiman-imtiaz"},"content":"                throw new DukeIllegalDescription();","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"aiman-imtiaz"},"content":"            String stringToSearch \u003d line.substring(5);","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"aiman-imtiaz"},"content":"            Searcher.searchInList(stringToSearch);","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"aiman-imtiaz"},"content":"        }else throw new DukeIllegalKeyword();","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"aiman-imtiaz":149}},{"path":"src/main/java/duke/Runner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":" * Loads previous data from file and starts requesting input from user.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"public class Runner {","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"     * Loads previous tasks from file and starts requesting input and processing it","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"     * line by line until the user inputs \"bye\".","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws IOException exception in case file access if unsuccessful","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"    public static void run() throws IOException {","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        String line;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"Hello from\\n\" + UI.logo);","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"        FileAccess.loadFromFile();","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(UI.greeting);","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"        while (!line.contains(\"bye\")){","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"            try{","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"                Parser.processLine(line);","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"            } catch (DukeIllegalKeyword e){","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"                UI.printIllegalKeyword();","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"            } catch (DukeIllegalDescription e){","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"                UI.printIllegalDescription();","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"            } catch (Exception e){","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"                UI.printIllegalTerm();","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.print(UI.bye);","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"        FileAccess.saveToFile();","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"aiman-imtiaz":47}},{"path":"src/main/java/duke/Searcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import static duke.UI.DASHED_LINE;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":" * Class used to search for a keyword inside the list of tasks.","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"public class Searcher {","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"     * This method prints out any task whose description contains","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"     * the keyword we are looking for.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param keyWord the string user searched for","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"    static void searchInList(String keyWord){","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(DASHED_LINE);","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.print(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        for (int j \u003d 0; j \u003c TaskList.taskList.size(); j++){","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"            if (TaskList.taskList.get(j).getDescription().contains(keyWord)){","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"                System.out.print(\"\\n\");","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"                System.out.print(\"\\t\" + (j+1) + \".\" + TaskList.taskList.get(j).toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"\\n\" + DASHED_LINE);","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"aiman-imtiaz":26}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    private boolean isDone;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"    public String taskKind \u003d \"[ ]\";","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"    protected String description;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    public Task(String description) {","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"    public String toString(){","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"        return \"description: \" + description;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"        return isDone;","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"        return description;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"aiman-imtiaz":27}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":" * The main list where all the tasks are stored while the program is running.","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"public class TaskList {","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"aiman-imtiaz":10}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    public String taskKind;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"        super(description);","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"        this.taskKind \u003d \"[T]\";","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"    public String toString(){","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"        String indicator;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"        if (this.isDone){","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"            indicator \u003d \"[X]\";","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        } else indicator \u003d \"[ ]\";","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d \"[T]\" + indicator + description;","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        return message;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"        isDone \u003d done;","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"        return isDone;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"aiman-imtiaz":27}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package duke;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":" * The main UI which helps print relevant output.","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"public class UI {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"    final static String DASHED_LINE \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"     * When user requests to mark a task, this method not only marks the","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"     * task as done, but also prints out the relevant message.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param index the index of the task to mark","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"    static void markTask(int index){","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        TaskList.taskList.get(index - 1).setDone(true);","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d DASHED_LINE + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t Nice! I\u0027ve marked this task as done: \\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t \\t\" + TaskList.taskList.get(index - 1).toString() + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"                DASHED_LINE;","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"     * Marks a task as not done and prints out the relevant message as","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"     * confirmation.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param index the index of the task to unmark","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"    static void unMarkTask(int index){","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"        TaskList.taskList.get(index - 1).setDone(false);","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d DASHED_LINE + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\tOK, I\u0027ve marked this task as not done yet: \\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t \\t\" + TaskList.taskList.get(index - 1).toString() + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"                DASHED_LINE;","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"     * Pretty prints the recently added task with a message confimation.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param task the task which was just added to the TaskList","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"    static void printAddedItem(Task task){","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d DASHED_LINE + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t Got it. I\u0027ve added this task:\" + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t \\t\" + task.toString() + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t Now you have \" + TaskList.taskList.size() +","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"                \" tasks in the list.\" + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"                DASHED_LINE;","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"     * Pretty prints the recently deleted task which confirms deletion.","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param task","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"    static void printDeletedItem(Task task){","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d DASHED_LINE + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t Got it. I\u0027ve removed this task:\" + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t \\t\" + task.toString() + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t Now you have \" + TaskList.taskList.size() +","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"                \" tasks in the list.\" + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"                DASHED_LINE;","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"     * Prints out all tasks in the TaskList when the user requests to view","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"     * all tasks present.","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"    static void printList(){","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.print(DASHED_LINE);","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"        for (int j \u003d 0; j \u003c TaskList.taskList.size(); j++){","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"            System.out.print(\"\\n\");","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"            System.out.print(\"\\t\" + (j+1) + \".\" + TaskList.taskList.get(j).toString());","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"\\n\" + DASHED_LINE);","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"aiman-imtiaz"},"content":"     * Prints out an error message when the DukeIllegalKeyword exception is thrown.","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"aiman-imtiaz"},"content":"     * @see DukeIllegalKeyword","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"aiman-imtiaz"},"content":"    static void printIllegalKeyword(){","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d DASHED_LINE + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t You typed an illegal keyword.\" + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t I have no idea what you are trying to say. :(\" + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"aiman-imtiaz"},"content":"                DASHED_LINE;","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"aiman-imtiaz"},"content":"     * Prints out an error message when the DukeIllegalDescription exception is thrown.","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"aiman-imtiaz"},"content":"     * @see DukeIllegalDescription","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"aiman-imtiaz"},"content":"    static void printIllegalDescription(){","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d DASHED_LINE + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t You did not add any description.\" + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t I can\u0027t do much. Try again!\" + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"aiman-imtiaz"},"content":"                DASHED_LINE;","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"aiman-imtiaz"},"content":"     * Prints out an error message when the command cannot be parsed and *any*","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"aiman-imtiaz"},"content":"     * kind of exception is thrown.","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"aiman-imtiaz"},"content":"     * @see Parser","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"aiman-imtiaz"},"content":"    static void printIllegalTerm(){","lastModifiedDate":"2022-03-05"},{"lineNumber":117,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d DASHED_LINE + \"\\n\" +","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t You did not make any sense\" + \"\\n\" +","lastModifiedDate":"2022-03-05"},{"lineNumber":119,"author":{"gitId":"aiman-imtiaz"},"content":"                \"\\t I can\u0027t do much. Try again!\" + \"\\n\" +","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"aiman-imtiaz"},"content":"                DASHED_LINE;","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"aiman-imtiaz"},"content":"    final static String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"aiman-imtiaz"},"content":"    final static String greeting \u003d UI.DASHED_LINE + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"aiman-imtiaz"},"content":"            \"\\t Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"aiman-imtiaz"},"content":"            \"\\t What can I do for you?\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"aiman-imtiaz"},"content":"            UI.DASHED_LINE;","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"aiman-imtiaz"},"content":"    final static String bye \u003d UI.DASHED_LINE + \"\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"aiman-imtiaz"},"content":"            \"\\t Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":137,"author":{"gitId":"aiman-imtiaz"},"content":"            UI.DASHED_LINE;","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"aiman-imtiaz":138}}]
