[{"path":"Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"1. [T][ ] ` ","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"2. [D][ ] ` (by: 99)","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"kktai1512":2}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    1. Click `Open`.","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"   ```","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"-":20,"kktai1512":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"# Welcome to Duke!","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"Duke is a CLI-based todo application.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"# Getting started","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"After running the JAR file, an output file named \"Duke.txt\" will be created in the same directory of the JAR.  Output will be saved into the file before the program exits, and the file will be reread the next time Duke runs.","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"To run the file, from the terminal, go to the same directory as your Duke.jar file, and run the command `java -jar Duke.jar`","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"# Features and usage","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"| Notation | Meaning  |","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"|--|--|","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"| [T] | todo  |","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"| [D] | deadline|","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"| [E] | event |","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"| [ ] | incomplete task","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"| [X] | completed task","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"## Add","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"There are three types of tasks to be added. Namely, todo, deadline and event.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"### Todo","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"To add a todo,  command should be typed in the format","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"`todo (taskname)`","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"Example of a valid input:","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"`todo get groceries`","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"Sample usage:","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"    todo buy groceries","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"        ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"kktai1512"},"content":"\t    Got it. I\u0027ve added this task:","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"kktai1512"},"content":"\t    [T][ ] buy groceries","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"kktai1512"},"content":"\t    Now you have 1 task in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"kktai1512"},"content":"### Event / Deadline","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"kktai1512"},"content":"To add an event or a deadline, command should be typed in the format `event (taskname) /(dd-MM-yyyy HH:mm)` or","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"kktai1512"},"content":"`event (taskname) /(additional info)`","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"kktai1512"},"content":":white_check_mark: Sample usage with valid input:","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"kktai1512"},"content":"    deadline cs2113t project /tomorrow","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"kktai1512"},"content":"        ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"kktai1512"},"content":"        Got it. I\u0027ve added this task:","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"kktai1512"},"content":"        [D][ ] cs2113t project (by: tomorrow)","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"kktai1512"},"content":"        Now you have 2 tasks in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"kktai1512"},"content":"        ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"kktai1512"},"content":"    event Mark\u0027s birthday party /07-03-2022 22:00","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"kktai1512"},"content":"        ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"kktai1512"},"content":"        Got it. I\u0027ve added this task:","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"kktai1512"},"content":"        [E][ ] Mark\u0027s birthday party (on: Mar 07 2022 22:00)","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"kktai1512"},"content":"        Now you have 3 tasks in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"kktai1512"},"content":"        ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"kktai1512"},"content":":x: Example of a invalid input:","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"kktai1512"},"content":"\tdeadline hello /","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"kktai1512"},"content":"\tevent / ","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"kktai1512"},"content":"## List","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"kktai1512"},"content":"To list all the tasks, simply type","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"kktai1512"},"content":"`list`","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"kktai1512"},"content":"Sample usage:","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"kktai1512"},"content":"    list","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________   ","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"kktai1512"},"content":"\t    1. [T][ ] buy groceries","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"kktai1512"},"content":"\t    2. [D][ ] cs2113t project (by: tomorrow)","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"kktai1512"},"content":"\t    3. [E][ ] Mark\u0027s birthday party (on: Mar 07 2022 22:00)","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"kktai1512"},"content":"## Delete","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"kktai1512"},"content":"To delete a task, type in the command `delete (task number)`","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"kktai1512"},"content":"Sample usage: ","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"kktai1512"},"content":"    delete 2","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"kktai1512"},"content":"\t    Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"kktai1512"},"content":"\t    [D][ ] cs2113t project (by: tomorrow)","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"kktai1512"},"content":"\t    Now you have 2 tasks in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"kktai1512"},"content":"## Mark/Unmark","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"kktai1512"},"content":"To mark the task as completed, type in `mark (task number)`.","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"kktai1512"},"content":"Similarly, type in `unmark (task number)` to mark the task as incomplete.","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"kktai1512"},"content":"Sample usage:","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"kktai1512"},"content":"    mark 1","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"kktai1512"},"content":"\t    [T][X] buy groceries","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"kktai1512"},"content":"\tunmark 1","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"kktai1512"},"content":"\t    [T][ ] buy groceries","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"kktai1512"},"content":"## Find","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"kktai1512"},"content":"To find task(s) containing a specific keyword, type in `find (keyword)`","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"kktai1512"},"content":"Sample usage:","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"kktai1512"},"content":"    find groceries","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"kktai1512"},"content":"\t    Here are the matching tasks in your list:","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"kktai1512"},"content":"\t    1. [T][ ] buy groceries","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"kktai1512"},"content":"## Bye","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"kktai1512"},"content":"To exit the program, simply type \"bye\". The program terminates and the current state of the tasks is saved into \"Duke.txt\".","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"kktai1512"},"content":"Sample usage:","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"kktai1512"},"content":"    bye","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"kktai1512"},"content":"\t    Bye. Hope to see you again soon!","lastModifiedDate":"2022-03-04"},{"lineNumber":137,"author":{"gitId":"kktai1512"},"content":"\t    ____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":139,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"kktai1512"},"content":"    ","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"-":23,"kktai1512":118}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import duke.command.Command;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"    //fields","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"    private Ui ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"    //methods","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"     * Creates a Duke Object","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"     * @param filePath filePath of the input/output file","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"            taskManager \u003d new TaskManager();","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"            taskManager.setTasks(storage.readFile());","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"            ui.showError(e);","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"     * Runs the main function","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"kktai1512"},"content":"    public void run() {","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"kktai1512"},"content":"        ui.hello();","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"kktai1512"},"content":"        while (!isExit) {","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"kktai1512"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"kktai1512"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"kktai1512"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"kktai1512"},"content":"                if (c !\u003d null) {","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"kktai1512"},"content":"                    c.execute(taskManager, ui, storage);","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"kktai1512"},"content":"                    isExit \u003d c.isExit();","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"kktai1512"},"content":"                }","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"kktai1512"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"                ui.showError(e);","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"kktai1512"},"content":"        Ui.printWithDivider(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"kktai1512"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"kktai1512"},"content":"      new Duke (\"./Duke.txt\").run();","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"kktai1512":57}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"    private String commandType;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    private String taskName;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"    private String addInfo;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"     * Command for \"add\" operations (add todo, event or deadline)","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"     * @param commandType todo, event or deadline","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"     * @param taskName name of task","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"     * @param addInfo additional information","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"    public AddCommand(String commandType, String taskName, String addInfo) {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"        this.addInfo \u003d addInfo;","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"        taskManager.addTask(this.commandType, this.taskName, this.addInfo);","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"        storage.writeFile(taskManager.toString());","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":31}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"        return true;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":9}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"     * Executes the command","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"     * @param taskManager TaskManager instance in charge of calling the correct method","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"     * @param ui Ui instance in charge to print","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"     * @param storage Storage instance for writing files","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"     * @throws DukeException","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"    public boolean isExit(){","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"        return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"    private int taskNumber;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"        taskManager.deleteTask(this.taskNumber);","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"        storage.writeFile(taskManager.toString());","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":21}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    private String keyword;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"        TaskManager relatedTaskManager \u003d taskManager.findTask(this.keyword);","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"        if (relatedTaskManager.getNumOfTasks() \u003d\u003d 0) {","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"             Ui.printWithDivider(\"Sorry, task(s) containing the word \" + this.keyword +\" not found.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"        else {","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"            Ui.printWithDivider( \"Here are the matching tasks in your list: \\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"                    + relatedTaskManager);","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":28}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"        Ui.printWithDivider(taskManager.toString());","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":13}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    private int taskNumber;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"        taskManager.markCompleted(this.taskNumber);","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"        storage.writeFile(taskManager.toString());","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":20}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    private int taskNumber;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"    public void execute(TaskManager taskManager, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"        taskManager.unmarkCompleted(this.taskNumber);","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"        storage.writeFile(taskManager.toString());","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":20}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.exception;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":" * Exception for anything related to Duke","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"        super(message);","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"kktai1512":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.parser;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import duke.command.*;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"import duke.task.Event;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"import duke.task.Task;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"public class Parser {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"    private static ArrayList\u003cString\u003e splitToTwo(String line, String delimiter) {","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"        ArrayList\u003cString\u003e words \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"        int divider \u003d line.indexOf(delimiter);","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"        words.add(line);","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"        if (divider !\u003d -1) {","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"            words.set(0, line.substring(0, divider));","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"            words.add(line.substring(divider + 1));","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"        return words;","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"    private static String getNextWord(String line, String word) {","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"        String nextWord \u003d \"\";","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"            int indexOfWord \u003d line.indexOf(word);","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"            String nextPart \u003d line.substring(indexOfWord + word.length() + 1);","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"kktai1512"},"content":"            int indexOfSpace \u003d nextPart.indexOf(\" \");","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"            if (indexOfSpace \u003d\u003d -1) {","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"                nextWord \u003d nextPart;","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"kktai1512"},"content":"            } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"kktai1512"},"content":"                nextWord \u003d nextPart.substring(0, indexOfSpace);","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"kktai1512"},"content":"            nextWord \u003d \"\";","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"kktai1512"},"content":"        return nextWord;","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"kktai1512"},"content":"     * Checks input command for any error","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"kktai1512"},"content":"     * @param input input command to be checked","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"kktai1512"},"content":"     * @throws DukeException if there is an error","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"kktai1512"},"content":"    private static void errorCheck(String input) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"kktai1512"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"kktai1512"},"content":"        String command \u003d words[0];","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"kktai1512"},"content":"        switch (command) {","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"kktai1512"},"content":"        case \"todo\":","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"kktai1512"},"content":"        case \"event\":","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"kktai1512"},"content":"        case \"deadline\":","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"kktai1512"},"content":"            String taskName \u003d getNextWord(input, command);","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"kktai1512"},"content":"            // taskName cannot have \"/\" and must be at least size of 1","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"kktai1512"},"content":"            if (taskName.contains(\"/\") || taskName \u003d\u003d \"\") {","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"kktai1512"},"content":"                String errorMsg \u003d String.format(\"%s requires valid name (no `/` allowed) \\n\", command);","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"kktai1512"},"content":"                throw new DukeException(errorMsg);","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"kktai1512"},"content":"            if (command.equals(\"event\") || command.equals(\"deadline\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"kktai1512"},"content":"                int indexOfSlash \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"kktai1512"},"content":"                String date \u003d indexOfSlash \u003d\u003d -1 ? \"\" : input.substring(indexOfSlash);","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"kktai1512"},"content":"                if (date.length() \u003c\u003d 1) {","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"kktai1512"},"content":"                    String errorMsg \u003d String.format(\"%s requires a valid date in the format taskName /date\"","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"kktai1512"},"content":"                            + \"date could be a string or in /dd-MM-yyyy hh:mm format\\n\", command);","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"kktai1512"},"content":"                    throw new DukeException(errorMsg);","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"kktai1512"},"content":"                }","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"kktai1512"},"content":"        case \"bye\":","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"kktai1512"},"content":"        case \"list\":","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"kktai1512"},"content":"            if (!getNextWord(input, command).equals(\"\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"kktai1512"},"content":"                String errorMsg \u003d \"Command not understood\";","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"kktai1512"},"content":"                throw new DukeException(errorMsg);","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"kktai1512"},"content":"        case \"find\":","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"kktai1512"},"content":"            String keyword \u003d getNextWord(input, command);","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"kktai1512"},"content":"            if (keyword.equals(\"\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"kktai1512"},"content":"                String errorMsg \u003d String.format(\"%s requires a word\\n\", command);","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"kktai1512"},"content":"                throw new DukeException(errorMsg);","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"kktai1512"},"content":"        case \"mark\":","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"kktai1512"},"content":"        case \"unmark\":","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"kktai1512"},"content":"        case \"delete\":","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"kktai1512"},"content":"            try {","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"kktai1512"},"content":"                Integer.parseInt(getNextWord(input, command));","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"kktai1512"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"kktai1512"},"content":"                String errorMsg \u003d \"Please enter a valid index for mark/unmark\";","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"kktai1512"},"content":"                throw new DukeException(errorMsg);","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"kktai1512"},"content":"        default:","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"kktai1512"},"content":"            String errorMsg \u003d \"Command not understood\";","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"kktai1512"},"content":"            throw new DukeException(errorMsg);","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"kktai1512"},"content":"     * Parses the input command and return the corresponding command.","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"kktai1512"},"content":"     * @param fullCommand input command","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"kktai1512"},"content":"     * @return Command object corresponding to the input command","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"kktai1512"},"content":"     * @throws DukeException if there is an error","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"kktai1512"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"kktai1512"},"content":"        //checks for error before continuing, if there\u0027s error, an exception is thrown","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"kktai1512"},"content":"        errorCheck(fullCommand);","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"kktai1512"},"content":"        ArrayList\u003cString\u003e words \u003d splitToTwo(fullCommand, \" \");","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"kktai1512"},"content":"        String command \u003d words.get(0);","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"kktai1512"},"content":"        String description \u003d words.size() \u003e\u003d 2 ? words.get(1) : \"\";","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"kktai1512"},"content":"        switch (command) {","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"kktai1512"},"content":"        case \"mark\":","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"kktai1512"},"content":"            return new MarkCommand(Integer.parseInt(description));","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"kktai1512"},"content":"        case \"unmark\":","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"kktai1512"},"content":"            return new UnmarkCommand(Integer.parseInt(description));","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"kktai1512"},"content":"        case \"list\":","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"kktai1512"},"content":"            return new ListCommand();","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"kktai1512"},"content":"        case \"todo\":","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"kktai1512"},"content":"            return new AddCommand(command, description, \"\");","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"kktai1512"},"content":"        case \"deadline\":","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"kktai1512"},"content":"        case \"event\":","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"kktai1512"},"content":"            ArrayList\u003cString\u003e descriptionSplit \u003d Parser.splitToTwo(description, \"/\");","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"kktai1512"},"content":"            String taskName \u003d descriptionSplit.get(0);","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"kktai1512"},"content":"            String addInfo \u003d descriptionSplit.size() \u003e\u003d 2 ? descriptionSplit.get(1) : \"\";","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"kktai1512"},"content":"            return new AddCommand(command, taskName, addInfo);","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"kktai1512"},"content":"        case \"delete\":","lastModifiedDate":"2022-03-02"},{"lineNumber":135,"author":{"gitId":"kktai1512"},"content":"            return new DeleteCommand(Integer.parseInt(description));","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"kktai1512"},"content":"        case \"find\":","lastModifiedDate":"2022-03-02"},{"lineNumber":137,"author":{"gitId":"kktai1512"},"content":"            return new FindCommand(description);","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"kktai1512"},"content":"        case \"bye\":","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"kktai1512"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"kktai1512"},"content":"        default: //fine to return null, as error check makes sure the commands are valid.","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"kktai1512"},"content":"            return null;","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":145,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":146,"author":{"gitId":"kktai1512"},"content":"     * Parses string into task. Used by Storage to parse input file into task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":147,"author":{"gitId":"kktai1512"},"content":"     * @param input String to be parsed","lastModifiedDate":"2022-03-04"},{"lineNumber":148,"author":{"gitId":"kktai1512"},"content":"     * @return task object correspond to the String","lastModifiedDate":"2022-03-04"},{"lineNumber":149,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":150,"author":{"gitId":"kktai1512"},"content":"    public static Task parseToTask(String input) {","lastModifiedDate":"2022-03-02"},{"lineNumber":151,"author":{"gitId":"kktai1512"},"content":"        int indexOfSpace \u003d input.indexOf(\" \");","lastModifiedDate":"2022-03-02"},{"lineNumber":152,"author":{"gitId":"kktai1512"},"content":"        String taskType \u003d input.substring(indexOfSpace + 2, indexOfSpace+3);","lastModifiedDate":"2022-03-02"},{"lineNumber":153,"author":{"gitId":"kktai1512"},"content":"        String status \u003d input.substring(indexOfSpace + 5, indexOfSpace + 6);","lastModifiedDate":"2022-03-02"},{"lineNumber":154,"author":{"gitId":"kktai1512"},"content":"        String nameAndDate \u003d input.substring(indexOfSpace + 7);","lastModifiedDate":"2022-03-02"},{"lineNumber":155,"author":{"gitId":"kktai1512"},"content":"        String name \u003d \"\";","lastModifiedDate":"2022-03-04"},{"lineNumber":156,"author":{"gitId":"kktai1512"},"content":"        String date \u003d \"\";","lastModifiedDate":"2022-03-04"},{"lineNumber":157,"author":{"gitId":"kktai1512"},"content":"        if (!taskType.equals(\"T\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":158,"author":{"gitId":"kktai1512"},"content":"            name \u003d nameAndDate.substring(0, nameAndDate.indexOf(\"(\"));","lastModifiedDate":"2022-03-02"},{"lineNumber":159,"author":{"gitId":"kktai1512"},"content":"            date \u003d nameAndDate.substring(nameAndDate.indexOf(\"(\") + 1, nameAndDate.indexOf(\")\"));","lastModifiedDate":"2022-03-02"},{"lineNumber":160,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"kktai1512"},"content":"        Task task \u003d new Task(\"\");","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"kktai1512"},"content":"        switch (taskType) {","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"kktai1512"},"content":"        case \"T\":","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"kktai1512"},"content":"            task \u003d new ToDo(nameAndDate);","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-03-02"},{"lineNumber":166,"author":{"gitId":"kktai1512"},"content":"        case \"D\":","lastModifiedDate":"2022-03-02"},{"lineNumber":167,"author":{"gitId":"kktai1512"},"content":"            task \u003d new Deadline(name, date);","lastModifiedDate":"2022-03-02"},{"lineNumber":168,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-03-02"},{"lineNumber":169,"author":{"gitId":"kktai1512"},"content":"        case \"E\":","lastModifiedDate":"2022-03-02"},{"lineNumber":170,"author":{"gitId":"kktai1512"},"content":"            task \u003d new Event(name, date);","lastModifiedDate":"2022-03-02"},{"lineNumber":171,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-03-02"},{"lineNumber":172,"author":{"gitId":"kktai1512"},"content":"        default:","lastModifiedDate":"2022-03-04"},{"lineNumber":173,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":174,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":175,"author":{"gitId":"kktai1512"},"content":"        if (status.equals(\"X\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":176,"author":{"gitId":"kktai1512"},"content":"            task.setCompleted(true);","lastModifiedDate":"2022-03-02"},{"lineNumber":177,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":178,"author":{"gitId":"kktai1512"},"content":"        return task;","lastModifiedDate":"2022-03-02"},{"lineNumber":179,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":180,"author":{"gitId":"kktai1512"},"content":" }","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":180}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.task.Task;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"import java.io.File;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"public class Storage {","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"    private String filePath;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"     * Creates a storage to read and write file from filepath","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"     * @param filePath path of input/output file","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"     * Reads input and returns it as a task list","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"     * @return TaskList from input file","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"     * @throws DukeException If no input file is found","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"    public ArrayList\u003cTask\u003e readFile() throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"        File input \u003d new File(filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"            //unused boolean","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"            boolean hasCreatedFile \u003d input.createNewFile();","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"kktai1512"},"content":"            Scanner s \u003d new Scanner(input);","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"kktai1512"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"kktai1512"},"content":"                tasks.add(Parser.parseToTask(s.nextLine()));","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"kktai1512"},"content":"            return tasks;","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"kktai1512"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"kktai1512"},"content":"            String message \u003d \"Issue at file creation!\";","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"kktai1512"},"content":"            throw new DukeException(message);","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"     * Saves task list into a ile","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"kktai1512"},"content":"     * @param textToAdd text to be written","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"kktai1512"},"content":"     * @throws DukeException if file not found","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"kktai1512"},"content":"    public void writeFile(String textToAdd) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"kktai1512"},"content":"            FileWriter output \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"kktai1512"},"content":"            output.write(textToAdd);","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"kktai1512"},"content":"            output.close();","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"kktai1512"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"kktai1512"},"content":"            String message \u003d \"File writing issue\";","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"kktai1512"},"content":"            throw new DukeException(message);","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":64}},{"path":"src/main/java/duke/task/DatedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.task;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"public class DatedTask extends Task {","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    private String DateTimeString;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"    private LocalDateTime RealDateTime;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"     * Task that has date/time attribute","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"     * @param taskName name of task","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"     * @param DateTimeString optional date/time in string format \"dd-MM-yyyy HH:mm, \"\" if none","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"    public DatedTask(String taskName, String DateTimeString) {","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"        super(taskName);","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"        this.DateTimeString \u003d DateTimeString;","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"            this.RealDateTime \u003d LocalDateTime.parse(DateTimeString, formatter);","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"            this.RealDateTime \u003d null;","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"     * Get date and time in string","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"     * @return date and time","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"kktai1512"},"content":"    public String getDateTimeString() {","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"        String dateTimeString \u003d this.DateTimeString;","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"kktai1512"},"content":"        if (this.RealDateTime !\u003d null) {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"kktai1512"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"kktai1512"},"content":"            dateTimeString \u003d this.RealDateTime.format(formatter);","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"kktai1512"},"content":"        return dateTimeString;","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":43}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"public class Deadline extends DatedTask {","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"        super(name, by);","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"        return \"[D]\" + super.toString() + String.format(\"(by: %s)\", this.getDateTimeString());","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"kktai1512":14}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"public class Event extends DatedTask {","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"    public Event(String name, String on) {","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"        super(name, on);","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"        return \"[E]\" + super.toString() + String.format(\"(on: %s)\", this.getDateTimeString());","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"kktai1512":13}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"public class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"    private String name;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"     * Creates a task","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"     * @param name name of task","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"     * Returns name of task","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"     * @return task name","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"    public String getName() {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"        return this.name;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"     * Mark task as complete/incomplete","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"     * @param completion completion status of task, true as completed, false as not completed","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"    public void setCompleted(boolean completion) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"        this.isCompleted \u003d completion;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"     * @return task in the format \"[x] task name\" (x for completed, \" \" for incomplete)","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"kktai1512"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"kktai1512"},"content":"        return String.format(\"[%s] %s\", (this.isCompleted ? \"X\" : \" \"), this.name);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"kktai1512":41}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"public class TaskManager {","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"    private int numOfTasks \u003d 0;","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"     * Class to manage the tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"    public TaskManager(){","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"     * Returns number of tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"     * @return Number of tasks","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"        return this.numOfTasks;","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"     * Adds a task into the task list.","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"     * @param type Type of command (todo, event or deadline)","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"     * @param taskName Task name","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"kktai1512"},"content":"     * @param addInfo Any additional info (date or time)","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"    public void addTask(String type, String taskName, String addInfo) {","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"kktai1512"},"content":"        Task toBeAdded;","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"kktai1512"},"content":"        switch (type) {","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"kktai1512"},"content":"            toBeAdded \u003d new ToDo(taskName);","lastModifiedDate":"2022-02-08"},{"lineNumber":41,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"kktai1512"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"kktai1512"},"content":"            toBeAdded \u003d new Deadline(taskName, addInfo);","lastModifiedDate":"2022-02-08"},{"lineNumber":44,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-02-08"},{"lineNumber":45,"author":{"gitId":"kktai1512"},"content":"        case \"event\":","lastModifiedDate":"2022-02-08"},{"lineNumber":46,"author":{"gitId":"kktai1512"},"content":"            toBeAdded \u003d new Event(taskName, addInfo);","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-02-08"},{"lineNumber":48,"author":{"gitId":"kktai1512"},"content":"        default:","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"            toBeAdded \u003d new Task(taskName);","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"kktai1512"},"content":"            break;","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":52,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"kktai1512"},"content":"        this.numOfTasks++;","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"kktai1512"},"content":"        this.tasks.add(toBeAdded);","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"kktai1512"},"content":"        Ui.printWithDivider(\"Got it. I\u0027ve added this task:\\n\\t\" + toBeAdded.toString()","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"kktai1512"},"content":"                + String.format(\"\\nNow you have %d task%s in the list.\", this.numOfTasks,","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"kktai1512"},"content":"                this.numOfTasks \u003e 1 ? \"s\" : \"\"));","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":60,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"kktai1512"},"content":"     * * Deletes a task from the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"kktai1512"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"kktai1512"},"content":"     * @param taskNumber Task number of the task to be deleted (as seen from list)","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"kktai1512"},"content":"     * @throws DukeException Throws exception if task number invalid","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"kktai1512"},"content":"    public void deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"kktai1512"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"kktai1512"},"content":"            tasks.remove(task);","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"kktai1512"},"content":"            this.numOfTasks--;","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"kktai1512"},"content":"            Ui.printWithDivider(\"Noted. I\u0027ve removed this task:\\n\\t \" + task.toString()","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"kktai1512"},"content":"                    + String.format(\"\\nNow you have %d task%s in the list.\", this.numOfTasks,","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"kktai1512"},"content":"                    this.numOfTasks \u003e 1 ? \"s\" : \"\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"kktai1512"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"kktai1512"},"content":"            throw new DukeException(\"Index out of bounds!\");","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"kktai1512"},"content":"     * Replaces existing task list with a new task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"kktai1512"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"kktai1512"},"content":"     * @param tasks Replacing task list.","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"kktai1512"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"kktai1512"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"kktai1512"},"content":"        this.numOfTasks \u003d tasks.size();","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"kktai1512"},"content":"     * Marks task as complete.","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"kktai1512"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"kktai1512"},"content":"     * @param taskNumber Task number of the task to be deleted (as seen from list)","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"kktai1512"},"content":"     * @throws DukeException Throws exception if task number invalid","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"kktai1512"},"content":"    public void markCompleted  (int taskNumber) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"kktai1512"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-02-08"},{"lineNumber":102,"author":{"gitId":"kktai1512"},"content":"            task.setCompleted(true);","lastModifiedDate":"2022-02-08"},{"lineNumber":103,"author":{"gitId":"kktai1512"},"content":"            Ui.printWithDivider(task.toString());","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":105,"author":{"gitId":"kktai1512"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"kktai1512"},"content":"            throw new DukeException(\"Index out of bounds!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":110,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"kktai1512"},"content":"     * Marks task as incomplete.","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"kktai1512"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"kktai1512"},"content":"     * @param taskNumber Task number of the task to be deleted (as seen from list)","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"kktai1512"},"content":"     * @throws DukeException Throws exception if task number invalid","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"kktai1512"},"content":"    public void unmarkCompleted (int taskNumber) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"kktai1512"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-02-08"},{"lineNumber":119,"author":{"gitId":"kktai1512"},"content":"            task.setCompleted(false);","lastModifiedDate":"2022-02-08"},{"lineNumber":120,"author":{"gitId":"kktai1512"},"content":"            Ui.printWithDivider(task.toString());","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":122,"author":{"gitId":"kktai1512"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"kktai1512"},"content":"            throw new DukeException(\"Index out of bounds!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":127,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"kktai1512"},"content":"     * Find tasks containing keyword in its name","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"kktai1512"},"content":"     * @param keyword Keyword in task name","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"kktai1512"},"content":"     * @return TaskManager containing all the related tasks","lastModifiedDate":"2022-03-02"},{"lineNumber":131,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"kktai1512"},"content":"    public TaskManager findTask (String keyword) {","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"kktai1512"},"content":"        TaskManager relatedTaskManager \u003d new TaskManager();","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"kktai1512"},"content":"        ArrayList\u003cTask\u003e relatedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-02"},{"lineNumber":135,"author":{"gitId":"kktai1512"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"kktai1512"},"content":"            if (task.getName().contains(keyword)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":137,"author":{"gitId":"kktai1512"},"content":"                relatedTasks.add(task);","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"kktai1512"},"content":"        relatedTaskManager.setTasks(relatedTasks);","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"kktai1512"},"content":"        return relatedTaskManager;","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":145,"author":{"gitId":"kktai1512"},"content":"     * Return the task list (number listed)","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"kktai1512"},"content":"     * @return Task list","lastModifiedDate":"2022-03-02"},{"lineNumber":147,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":148,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-02-08"},{"lineNumber":149,"author":{"gitId":"kktai1512"},"content":"    public String toString() {","lastModifiedDate":"2022-02-08"},{"lineNumber":150,"author":{"gitId":"kktai1512"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":151,"author":{"gitId":"kktai1512"},"content":"        int number \u003d 1;","lastModifiedDate":"2022-02-08"},{"lineNumber":152,"author":{"gitId":"kktai1512"},"content":"        for (Task item : this.tasks) {","lastModifiedDate":"2022-02-08"},{"lineNumber":153,"author":{"gitId":"kktai1512"},"content":"            output +\u003d String.format(\"%d. %s\", number, item.toString());","lastModifiedDate":"2022-02-08"},{"lineNumber":154,"author":{"gitId":"kktai1512"},"content":"            if (number !\u003d numOfTasks) {","lastModifiedDate":"2022-02-08"},{"lineNumber":155,"author":{"gitId":"kktai1512"},"content":"                output +\u003d \"\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":156,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":157,"author":{"gitId":"kktai1512"},"content":"            number++;","lastModifiedDate":"2022-02-08"},{"lineNumber":158,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":159,"author":{"gitId":"kktai1512"},"content":"        return output;","lastModifiedDate":"2022-02-08"},{"lineNumber":160,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":161,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"kktai1512":161}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"        super(name);","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"kktai1512":12}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package duke.ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"public class Ui {","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    private Scanner sc;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    public Ui () {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"     * Prints String wrapped inside two divider lines.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"     * @param stringWithinDivider String to be wrapped","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"    public static void printWithDivider(String stringWithinDivider) {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"        String breakLine \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"        System.out.println(breakLine);","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"        stringWithinDivider \u003d stringWithinDivider.replace(\"\\n\", \"\\n\\t\");","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"        System.out.println(\"\\t\" + stringWithinDivider);","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"        System.out.println(breakLine);","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"     * Greets the user","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"    public void hello() {","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"kktai1512"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"kktai1512"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"kktai1512"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"kktai1512"},"content":"        Ui.printWithDivider(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"kktai1512"},"content":"     * Reads input typed in by user","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"kktai1512"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"kktai1512"},"content":"     * @return input command as string","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"kktai1512"},"content":"    public String readCommand() {","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"kktai1512"},"content":"        String line \u003d sc.nextLine();","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"kktai1512"},"content":"        return line;","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"kktai1512"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"kktai1512"},"content":"     * Prints the error message","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"kktai1512"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"kktai1512"},"content":"     * @param e error","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"kktai1512"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"kktai1512"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"kktai1512"},"content":"        System.out.println(e.toString());","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"kktai1512":59}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"read book","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"mark 1","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"unmark 1","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"todo go to gym","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"deadline assignment 3 /by: Sunday","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"event spiderman\u0027s birthday /15th December","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"mark 3","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"bye","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"kktai1512":9}}]
