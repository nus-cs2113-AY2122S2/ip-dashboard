[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"### Feature - mark","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"Marks the task done","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"### Feature - unmark","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"Unmarks a task","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"### Feature - todo","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"Adds a task in the list if todo is not empty","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"### Feature - deadline","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"Adds a deadline in the list if it has a task and a date between a \u0027/by\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"### Feature - event","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"Adds an event in the list if it has a task and a date between a \u0027/at\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"### Feature - list","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"Lists all tasks in the list","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"### Feature - delete","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"deletes a certain index in the list","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"### Feature - bye","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"Closes the program","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"### Feature - read/write files","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"To be updated in the future","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"Examples are in \u0027input.txt\u0027 and \u0027EXPECTED.TXT\u0027 in text-ui-test file","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"Test via terminal","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"For windows, change directory to the directory of text-ui-test","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"Type in:","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"cmd.exe /c runtest.bat","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"Then enter","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"---------------------------------------------------","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"wraineflores":40,"-":26}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":" * Deadline represents an extension of the Task class","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    protected String by;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"     * Initialise a new Deadline class","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"     * @param description Description of a task the the user want to add in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"     * @param by          Date when the user needs to do the task","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"        this.by \u003d by.trim();","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        parseDate();","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"     * Parses from a String to a LocalDate","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"    public void parseDate() {","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"            this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"            System.out.println(\"OOPS!!! Please key in a correct by date.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"     * Gets the Date in String format","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"     * @return the date of the instantiated deadline","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"    public String getBy() {","lastModifiedDate":"2022-02-19"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"        return by;","lastModifiedDate":"2022-02-19"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"     * toString was modified for an easier way of viewing","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"     * @return Deadline in a modified String format","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"        return \"    [D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"                + \" \" + date.getDayOfWeek() + \")\";","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wraineflores":54}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":" * Duke a checklist system that can store \u0026 save, add \u0026 delete,","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":" * mark \u0026 unmark tasks in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":" *","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":" * @author wraineflores","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":" * @version 1.0","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"     * Duke starts to run as a program","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"     * @param args Part of the main argument","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"     * @throws FileNotFoundException Exception thrown in case no file has been previously created","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cTask\u003e addLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        TaskList.run(addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wraineflores":20,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"    //no other code needed","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"wraineflores":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":" * Event represents an extension of the Task class","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    protected String at;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"     * Initialise a new Event class","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"     * @param description Description of a task the the user want to add in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"     * @param at          Date when the user needs to do the task","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"        this.at \u003d at.trim();","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        parseDate();","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"     * Parses from a String to a LocalDate","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"    public void parseDate() {","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"            this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"            System.out.println(\"OOPS!!! Please key in a correct at date.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"     * Gets the Date in String format","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"     * @return the date of the instantiated deadline","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"    public String getAt() {","lastModifiedDate":"2022-02-19"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"        return at;","lastModifiedDate":"2022-02-19"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"     * toString was modified for an easier way of viewing","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"     * @return Deadline in a modified String format","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"        return \"    [E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"                + \" \" + date.getDayOfWeek() + \")\";","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wraineflores":54}},{"path":"src/main/java/InsertFileContent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":" * InsertFileContent represents the insertion of the file that is read to the main program","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"public class InsertFileContent {","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"    protected String fileContent;","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    protected ArrayList\u003cTask\u003e addLists;","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"    protected ArrayList\u003cString\u003e fileContentLists;","lastModifiedDate":"2022-02-19"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"     * Initialise the InsertFileContent class","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"     * @param fileContent The contents of the file as one long string","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"     * @param addLists    The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    public InsertFileContent(String fileContent, ArrayList\u003cTask\u003e addLists) {","lastModifiedDate":"2022-02-19"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"        this.fileContent \u003d fileContent;","lastModifiedDate":"2022-02-19"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"        this.addLists \u003d addLists;","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        this.fileContentLists \u003d new ArrayList\u003cString\u003e(Arrays.asList(fileContent.split(\"\\n\")));","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"     * Gets the main list from fileContentLists","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"     * @return The main list back","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"    public ArrayList\u003cTask\u003e getAddLists() {","lastModifiedDate":"2022-02-19"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"        for (String fileContentList : fileContentLists) {","lastModifiedDate":"2022-02-19"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"            if (fileContentList.startsWith(\"todo\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"                todoFunc(fileContentList, addLists);","lastModifiedDate":"2022-02-19"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"            } else if (fileContentList.startsWith(\"deadline\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"                deadlineFunc(fileContentList, addLists);","lastModifiedDate":"2022-02-19"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"            } else if (fileContentList.startsWith(\"event\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"                eventFunc(fileContentList, addLists);","lastModifiedDate":"2022-02-19"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-02-19"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"        return addLists;","lastModifiedDate":"2022-02-19"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"     * The todo function is called when a line needs to be processed","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"    private static void todoFunc(String line, ArrayList\u003cTask\u003e addLists) {","lastModifiedDate":"2022-02-19"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"        Parser parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"        parser \u003d getParser(line);","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"        Todo newTodo \u003d new Todo(parser.getNewDescription());","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"        if (parser.getMarkOrUnmark().equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"            newTodo.setAsDone();","lastModifiedDate":"2022-02-19"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":55,"author":{"gitId":"wraineflores"},"content":"        addLists.add(newTodo);","lastModifiedDate":"2022-02-19"},{"lineNumber":56,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":58,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"     * The deadline function is called when a line needs to be processed","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"wraineflores"},"content":"    private static void deadlineFunc(String line, ArrayList\u003cTask\u003e addLists) {","lastModifiedDate":"2022-02-19"},{"lineNumber":65,"author":{"gitId":"wraineflores"},"content":"        Parser parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"wraineflores"},"content":"        parser \u003d getParser(line);","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"wraineflores"},"content":"        Event newDeadline \u003d new Event(parser.getNewDescription(), parser.getByOrAt());","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"wraineflores"},"content":"        if (parser.getMarkOrUnmark().equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"wraineflores"},"content":"            newDeadline.setAsDone();","lastModifiedDate":"2022-02-19"},{"lineNumber":70,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":71,"author":{"gitId":"wraineflores"},"content":"        addLists.add(newDeadline);","lastModifiedDate":"2022-02-19"},{"lineNumber":72,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":73,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":74,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"wraineflores"},"content":"     * The event function is called when a line needs to be processed","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"wraineflores"},"content":"    private static void eventFunc(String line, ArrayList\u003cTask\u003e addLists) {","lastModifiedDate":"2022-02-19"},{"lineNumber":81,"author":{"gitId":"wraineflores"},"content":"        Parser parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"wraineflores"},"content":"        parser \u003d getParser(line);","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"wraineflores"},"content":"        Event newEvent \u003d new Event(parser.getNewDescription(), parser.getByOrAt());","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"wraineflores"},"content":"        if (parser.getMarkOrUnmark().equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"wraineflores"},"content":"            newEvent.setAsDone();","lastModifiedDate":"2022-02-19"},{"lineNumber":86,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":87,"author":{"gitId":"wraineflores"},"content":"        addLists.add(newEvent);","lastModifiedDate":"2022-02-19"},{"lineNumber":88,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":89,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":90,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"wraineflores"},"content":"     * Gets the parsed object class from the line","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"wraineflores"},"content":"     * @param line The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"wraineflores"},"content":"     * @return A parsed class object","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"wraineflores"},"content":"    private static Parser getParser(String line) {","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"wraineflores"},"content":"        Parser parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"wraineflores"},"content":"        parser \u003d new Parser(line);","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"wraineflores"},"content":"        parser.splitLineFileContent();","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"wraineflores"},"content":"        return parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":102,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"wraineflores":102}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":" * The purpose of this class is to print all the Task in the current list","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"public class List {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"    protected static ArrayList\u003cTask\u003e addLists;","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"     * Initialises the List class","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The current list of task in the program","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"    protected List(ArrayList\u003cTask\u003e addLists) {","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"        this.addLists \u003d addLists;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"     * printList function prints out all the current tasks in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"    public static void printList() {","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"        for (int i \u003d 0; i \u003c addLists.size(); i++) {","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"            if (addLists.get(i) \u003d\u003d null) {","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"                continue;","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"            } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"                System.out.println(Integer.toString(i + 1) + \".\" + addLists.get(i).toString().trim());","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wraineflores":31}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-19"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-19"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":" * The class that describes how the the program parses inputs","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"public class Parser {","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"    protected String description;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"    protected String tempDescription;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    protected String newDescription;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"    protected String byOrAt;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"    protected String markOrUnmark;","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"    protected String[] arrOfDescriptions;","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    protected ArrayList\u003cString\u003e fileContentStringLists;","lastModifiedDate":"2022-02-19"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"     * Initialises the Parser class","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"     * @param description Description of a task the the user want to add in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    public Parser(String description) {","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"     * This function parses the FileContent","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"    public void splitLineFileContent() {","lastModifiedDate":"2022-02-19"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"        fileContentStringLists \u003d new ArrayList\u003cString\u003e(Arrays.asList(description.split(\"---\")));","lastModifiedDate":"2022-02-19"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"        if (fileContentStringLists.get(0).equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"            splitFileFunction();","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"        } else if (fileContentStringLists.get(0).equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"            deadlineOrEventSplitFileFunction();","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"        } else if (fileContentStringLists.get(0).equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"            deadlineOrEventSplitFileFunction();","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"     * This is a subfunction of deadlineOrEventSplitFileFunction","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"    private void splitFileFunction() {","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"        markOrUnmark \u003d fileContentStringLists.get(1).trim();","lastModifiedDate":"2022-02-19"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"        newDescription \u003d fileContentStringLists.get(2).trim();","lastModifiedDate":"2022-02-19"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"     * This function splits the String for event and deadline feature","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"    private void deadlineOrEventSplitFileFunction() {","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"        splitFileFunction();","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"wraineflores"},"content":"        byOrAt \u003d fileContentStringLists.get(3).trim();","lastModifiedDate":"2022-02-21"},{"lineNumber":56,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":58,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"     * This is the parsing function for the main loop in TaskList","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"wraineflores"},"content":"    public void splitLine() {","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"wraineflores"},"content":"        if (description.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"wraineflores"},"content":"            newDescription \u003d description.replace(\"todo\", \"\").trim();","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"wraineflores"},"content":"        } else if (description.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"wraineflores"},"content":"            try {","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"wraineflores"},"content":"                this.tempDescription \u003d description.replace(\"deadline\", \"\").trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"wraineflores"},"content":"                this.arrOfDescriptions \u003d tempDescription.split(\"/by\", 2);","lastModifiedDate":"2022-02-21"},{"lineNumber":68,"author":{"gitId":"wraineflores"},"content":"                this.newDescription \u003d arrOfDescriptions[0];","lastModifiedDate":"2022-02-21"},{"lineNumber":69,"author":{"gitId":"wraineflores"},"content":"                this.byOrAt \u003d arrOfDescriptions[1].trim();","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"wraineflores"},"content":"                this.date \u003d LocalDate.parse(byOrAt);","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"wraineflores"},"content":"            } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"wraineflores"},"content":"                System.out.println(\"Oh no! Something went wrong.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"wraineflores"},"content":"        } else if (description.startsWith(\"event\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"wraineflores"},"content":"            try {","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"wraineflores"},"content":"                this.tempDescription \u003d description.replace(\"event\", \"\").trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"wraineflores"},"content":"                this.arrOfDescriptions \u003d tempDescription.split(\"/at\", 2);","lastModifiedDate":"2022-02-21"},{"lineNumber":78,"author":{"gitId":"wraineflores"},"content":"                this.newDescription \u003d arrOfDescriptions[0];","lastModifiedDate":"2022-02-21"},{"lineNumber":79,"author":{"gitId":"wraineflores"},"content":"                this.byOrAt \u003d arrOfDescriptions[1].trim();","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"wraineflores"},"content":"                this.date \u003d LocalDate.parse(byOrAt);","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"wraineflores"},"content":"            } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"wraineflores"},"content":"                System.out.println(\"Oh no! Something went wrong.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"wraineflores"},"content":"     * Gets the date in LocalDate","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"wraineflores"},"content":"     * @return The date","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"wraineflores"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"wraineflores"},"content":"        return date;","lastModifiedDate":"2022-02-26"},{"lineNumber":94,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":95,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"wraineflores"},"content":"     * This is the description that is eventually be seen by the viewer","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"wraineflores"},"content":"     * @return The description","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":101,"author":{"gitId":"wraineflores"},"content":"    public String getNewDescription() {","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"wraineflores"},"content":"        return newDescription;","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":106,"author":{"gitId":"wraineflores"},"content":"     * Gets the date in String","lastModifiedDate":"2022-02-27"},{"lineNumber":107,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":108,"author":{"gitId":"wraineflores"},"content":"     * @return The date in String","lastModifiedDate":"2022-02-27"},{"lineNumber":109,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"wraineflores"},"content":"    public String getByOrAt() {","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"wraineflores"},"content":"        return byOrAt;","lastModifiedDate":"2022-01-30"},{"lineNumber":112,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":114,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"wraineflores"},"content":"     * Gets the status of the line that was read if it was previously marked or unmarked","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"wraineflores"},"content":"     * @return Mark or Unmark status","lastModifiedDate":"2022-02-27"},{"lineNumber":118,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":119,"author":{"gitId":"wraineflores"},"content":"    public String getMarkOrUnmark() {","lastModifiedDate":"2022-02-19"},{"lineNumber":120,"author":{"gitId":"wraineflores"},"content":"        return markOrUnmark;","lastModifiedDate":"2022-02-19"},{"lineNumber":121,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":122,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wraineflores":122}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"import java.io.File;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":" * Storage represents the Read and Write functions of the system","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"public class Storage {","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    protected static String fileContent \u003d \"\";","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"    protected static boolean isFileSaved \u003d false;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"    public Storage() {","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"     * Try-Catch block of ArrayList when reading the file","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"     * @return The main list back","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    protected static ArrayList\u003cTask\u003e tryCatchReadFile(ArrayList\u003cTask\u003e addLists) {","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"            File file \u003d new File(\"savedDukeData.txt\");","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"            if (file.exists()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"                readFromFile(\"savedDukeData.txt\");","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"                InsertFileContent insertFileContent \u003d new InsertFileContent(fileContent, addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"                addLists \u003d insertFileContent.getAddLists();","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"                isFileSaved \u003d true;","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"            } else {","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"                PrintWriter writer \u003d new PrintWriter(\"savedDukeData.txt\", \"UTF-8\");","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"                writer.close();","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"        return addLists;","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"     * The function that starts the reading process","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"     * @param filePath The path where the file is saved","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"     * @throws FileNotFoundException Exception thrown when no file is found","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"    protected static void readFromFile(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"        Scanner scan \u003d new Scanner(file);","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"        while (scan.hasNextLine()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"            fileContent \u003d fileContent.concat(scan.nextLine() + \"\\n\");","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"     * The function that starts the saving process of the content","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"wraineflores"},"content":"     * @throws FileNotFoundException Exception thrown when no file is found","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"wraineflores"},"content":"    protected static void programmeExits(ArrayList\u003cTask\u003e addLists) throws FileNotFoundException {","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"wraineflores"},"content":"        WriteOutFileContent writeOutFileContent \u003d new WriteOutFileContent(addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"wraineflores"},"content":"        writeOutFileContent.getWriteForAll();","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Bye. Until we meet again!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"wraineflores"},"content":"     * Lists out all the features of the product with example","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"wraineflores"},"content":"    protected static void helpCommand() {","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"-------------------------\");","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Here are the basic functions of the system.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"List function example:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"list\");","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Mark function example:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"mark \u003cnumber in list\u003e\");","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Unmark function example:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"unmark \u003cnumber in list\u003e\");","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Todo function example:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"todo \u003cdescription\u003e\");","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Deadline function example:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"deadline \u003cdescription\u003e /by \u003cYYYY--MM-DD\u003e\");","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Event function example:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"event \u003cdescription\u003e /at \u003cYYYY--MM-DD\u003e\");","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Delete function example:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"delete \u003cnumber in list\u003e\");","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Find function example:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"find \u003ckeyword\u003e\");","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Bye function example:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"bye\");","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"-------------------------\");","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"wraineflores":95}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":" * Task represents the basic class the a user would want to do in a checklist system","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"public class Task {","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"    protected String description;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"     * Initialise a new Task class","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"     * @param description Description of a task the the user want to add in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"     * Converts the boolean isDone to a String representing \"1\" or \"0\"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"     * @return The String of \"1\" or \"0\"","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"     * Changes the boolean value of isDone to true","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"     * Changes the boolean value of isDone to true","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"    public void setAsDone() {","lastModifiedDate":"2022-02-19"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-02-19"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"     * Changes the boolean value of isDone to false","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"     * Acknowledges that a task was added in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"    public void printAdded() {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"wraineflores"},"content":"     * Gets the description of the Task class","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"wraineflores"},"content":"     * @return The description of the task when call on","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"wraineflores"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"wraineflores"},"content":"        return description;","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"wraineflores"},"content":"     * toString was modified for an easier way of viewing","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"wraineflores"},"content":"     * @return Task class in a modified String format","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"wraineflores"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"wraineflores"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"wraineflores"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"wraineflores":75}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":" * TaskList represents the class that has all the commands","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"public class TaskList {","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    static int workingIndex \u003d 0;       // points to the index where we want o mark or unmark","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"    static String findKeyWord;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"    static String TODO_EXCEPTION_STATEMENT \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    static String DEADLINE_EXCEPTION_STATEMENT \u003d \"OOPS!!! The description must have a task and date (YYYY-MM-DD).\";","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"    static String EVENT_EXCEPTION_STATEMENT \u003d \"OOPS!!! The description must have a task and date (YYYY-MM-DD).\";","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"    static String ELSE_EXCEPTION_STATEMENT \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"    static String ELSE_EXCEPTION_STATEMENT_2 \u003d \"To see all features, enter: help\";","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    static String DELETED_TASK_STATEMENT \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"    static String DELETED_FAILED_TASK_STATEMENT \u003d \"OOPS!!! Task was not deleted.\";","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    static String MARK_UNMARK_FAILED_STATEMENT \u003d \"OOPS!!! Please key in a correct input.\";","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"    static String START_FIND_STATEMENT \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"    static String FINISHED_FIND_STATEMENT \u003d \"System finished finding keyword.\";","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"    static String FAILED_FIND_STATEMENT \u003d \"OOPS!!! Keyword is empty.\";","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"     * Deletes the task from the list","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"    private static void deletedCommand(String line, ArrayList\u003cTask\u003e addLists) {","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"            workingIndex \u003d Integer.parseInt(line.replace(\"delete\", \"\").trim()) - 1;","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"            System.out.println(DELETED_TASK_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"            System.out.println(addLists.get(workingIndex).toString());","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"            addLists.remove(workingIndex);","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"            System.out.println(\"Now you have \" + addLists.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"            System.out.println(DELETED_FAILED_TASK_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"     * Adds a todo task in the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"     * @throws DukeException Exception for this program","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"    private static void todoCommand(String line, ArrayList\u003cTask\u003e addLists) throws DukeException {","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"        Parser parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"        parser \u003d getParser(line);","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"        if (parser.getNewDescription().isEmpty()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"wraineflores"},"content":"            throw new DukeException();","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"        Todo newTodo \u003d new Todo(parser.getNewDescription());","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"wraineflores"},"content":"        addLists.add(newTodo);","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"        printAddedToList(newTodo, addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"wraineflores"},"content":"     * Adds a deadline task in the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"wraineflores"},"content":"     * @throws DukeException Exception for this program","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"wraineflores"},"content":"    private static void deadlineCommand(String line, ArrayList\u003cTask\u003e addLists) throws DukeException {","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"wraineflores"},"content":"        Parser parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"wraineflores"},"content":"        parser \u003d getParser(line);","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"wraineflores"},"content":"            if (parser.getNewDescription().isEmpty()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"wraineflores"},"content":"                throw new DukeException();","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"wraineflores"},"content":"            } else if (parser.getByOrAt().isEmpty()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"wraineflores"},"content":"                throw new DukeException();","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"wraineflores"},"content":"            } else if (parser.getDate() \u003d\u003d null) {","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"wraineflores"},"content":"                throw new DukeException();","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"wraineflores"},"content":"            } else {","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"wraineflores"},"content":"                Deadline newDeadline \u003d new Deadline(parser.getNewDescription(), parser.getByOrAt());","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"wraineflores"},"content":"                addLists.add(newDeadline);","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"wraineflores"},"content":"                printAddedToList(newDeadline, addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"wraineflores"},"content":"            throw new DukeException();","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"wraineflores"},"content":"     * Adds a event task in the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"wraineflores"},"content":"     * @throws DukeException Exception for this program","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"wraineflores"},"content":"    private static void eventCommand(String line, ArrayList\u003cTask\u003e addLists) throws DukeException {","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"wraineflores"},"content":"        Parser parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"wraineflores"},"content":"        parser \u003d getParser(line);","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"wraineflores"},"content":"            if (parser.getNewDescription().isEmpty()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"wraineflores"},"content":"                throw new DukeException();","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"wraineflores"},"content":"            } else if (parser.getByOrAt().isEmpty()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"wraineflores"},"content":"                throw new DukeException();","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"wraineflores"},"content":"            } else if (parser.getDate() \u003d\u003d null) {","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"wraineflores"},"content":"                throw new DukeException();","lastModifiedDate":"2022-02-26"},{"lineNumber":106,"author":{"gitId":"wraineflores"},"content":"            } else {","lastModifiedDate":"2022-02-26"},{"lineNumber":107,"author":{"gitId":"wraineflores"},"content":"                Event newEvent \u003d new Event(parser.getNewDescription(), parser.getByOrAt());","lastModifiedDate":"2022-02-26"},{"lineNumber":108,"author":{"gitId":"wraineflores"},"content":"                addLists.add(newEvent);","lastModifiedDate":"2022-02-26"},{"lineNumber":109,"author":{"gitId":"wraineflores"},"content":"                printAddedToList(newEvent, addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":110,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-02-26"},{"lineNumber":111,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":112,"author":{"gitId":"wraineflores"},"content":"            throw new DukeException();","lastModifiedDate":"2022-02-26"},{"lineNumber":113,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":114,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":116,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"wraineflores"},"content":"     * Acknowledges that a task was added in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":118,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":119,"author":{"gitId":"wraineflores"},"content":"     * @param task     The specific task in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":120,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":121,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":122,"author":{"gitId":"wraineflores"},"content":"    private static void printAddedToList(Task task, ArrayList\u003cTask\u003e addLists) {","lastModifiedDate":"2022-02-26"},{"lineNumber":123,"author":{"gitId":"wraineflores"},"content":"        task.printAdded();","lastModifiedDate":"2022-02-26"},{"lineNumber":124,"author":{"gitId":"wraineflores"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2022-02-26"},{"lineNumber":125,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Now you have \" + addLists.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":126,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":128,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":129,"author":{"gitId":"wraineflores"},"content":"     * Function that parses the line","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":131,"author":{"gitId":"wraineflores"},"content":"     * @param line The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":132,"author":{"gitId":"wraineflores"},"content":"     * @return The parser instance from the line","lastModifiedDate":"2022-02-27"},{"lineNumber":133,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":134,"author":{"gitId":"wraineflores"},"content":"    private static Parser getParser(String line) {","lastModifiedDate":"2022-02-26"},{"lineNumber":135,"author":{"gitId":"wraineflores"},"content":"        Parser parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":136,"author":{"gitId":"wraineflores"},"content":"        parser \u003d new Parser(line);","lastModifiedDate":"2022-02-26"},{"lineNumber":137,"author":{"gitId":"wraineflores"},"content":"        parser.splitLine();","lastModifiedDate":"2022-02-26"},{"lineNumber":138,"author":{"gitId":"wraineflores"},"content":"        return parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":139,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":140,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":141,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":142,"author":{"gitId":"wraineflores"},"content":"     * Marks the task as done in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":143,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":144,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":145,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":146,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":147,"author":{"gitId":"wraineflores"},"content":"    private static void unmarkCommand(ArrayList\u003cTask\u003e addLists, String line) {","lastModifiedDate":"2022-02-26"},{"lineNumber":148,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":149,"author":{"gitId":"wraineflores"},"content":"            workingIndex \u003d Integer.parseInt(line.replace(\"unmark\", \"\").trim()) - 1;","lastModifiedDate":"2022-02-26"},{"lineNumber":150,"author":{"gitId":"wraineflores"},"content":"            addLists.get(workingIndex).markAsUndone();","lastModifiedDate":"2022-02-26"},{"lineNumber":151,"author":{"gitId":"wraineflores"},"content":"            System.out.println(addLists.get(workingIndex).toString());","lastModifiedDate":"2022-02-26"},{"lineNumber":152,"author":{"gitId":"wraineflores"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":153,"author":{"gitId":"wraineflores"},"content":"            System.out.println(MARK_UNMARK_FAILED_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":154,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":155,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":156,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":157,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":158,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":159,"author":{"gitId":"wraineflores"},"content":"     * Unmarks the task as undone in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":160,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":161,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":162,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":163,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":164,"author":{"gitId":"wraineflores"},"content":"    private static void markCommand(ArrayList\u003cTask\u003e addLists, String line) {","lastModifiedDate":"2022-02-26"},{"lineNumber":165,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":166,"author":{"gitId":"wraineflores"},"content":"            workingIndex \u003d Integer.parseInt(line.replace(\"mark\", \"\").trim()) - 1;","lastModifiedDate":"2022-02-26"},{"lineNumber":167,"author":{"gitId":"wraineflores"},"content":"            addLists.get(workingIndex).markAsDone();","lastModifiedDate":"2022-02-26"},{"lineNumber":168,"author":{"gitId":"wraineflores"},"content":"            System.out.println(addLists.get(workingIndex).toString());","lastModifiedDate":"2022-02-26"},{"lineNumber":169,"author":{"gitId":"wraineflores"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":170,"author":{"gitId":"wraineflores"},"content":"            System.out.println(MARK_UNMARK_FAILED_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":171,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":172,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":173,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":174,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":175,"author":{"gitId":"wraineflores"},"content":"     * The try-catch block of the todoCommand function","lastModifiedDate":"2022-02-27"},{"lineNumber":176,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":177,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":178,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":179,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":180,"author":{"gitId":"wraineflores"},"content":"    private static void todoTryCatch(ArrayList\u003cTask\u003e addLists, String line) {","lastModifiedDate":"2022-02-26"},{"lineNumber":181,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":182,"author":{"gitId":"wraineflores"},"content":"            todoCommand(line, addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":183,"author":{"gitId":"wraineflores"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":184,"author":{"gitId":"wraineflores"},"content":"            System.out.println(TODO_EXCEPTION_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":185,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":186,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":187,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":188,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":189,"author":{"gitId":"wraineflores"},"content":"     * The try-catch block of the deadlineCommand function","lastModifiedDate":"2022-02-27"},{"lineNumber":190,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":191,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":192,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":193,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":194,"author":{"gitId":"wraineflores"},"content":"    private static void deadlineTryCatch(ArrayList\u003cTask\u003e addLists, String line) {","lastModifiedDate":"2022-02-26"},{"lineNumber":195,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":196,"author":{"gitId":"wraineflores"},"content":"            deadlineCommand(line, addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":197,"author":{"gitId":"wraineflores"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":198,"author":{"gitId":"wraineflores"},"content":"            System.out.println(DEADLINE_EXCEPTION_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":199,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":200,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":201,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":202,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":203,"author":{"gitId":"wraineflores"},"content":"     * The try-catch block of the eventCommand function","lastModifiedDate":"2022-02-27"},{"lineNumber":204,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":205,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":206,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":207,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":208,"author":{"gitId":"wraineflores"},"content":"    private static void eventTryCatch(ArrayList\u003cTask\u003e addLists, String line) {","lastModifiedDate":"2022-02-26"},{"lineNumber":209,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":210,"author":{"gitId":"wraineflores"},"content":"            eventCommand(line, addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":211,"author":{"gitId":"wraineflores"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":212,"author":{"gitId":"wraineflores"},"content":"            System.out.println(EVENT_EXCEPTION_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":213,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":214,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":215,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":216,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":217,"author":{"gitId":"wraineflores"},"content":"     * Function that finds task(s) based on the keyword","lastModifiedDate":"2022-02-27"},{"lineNumber":218,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":219,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":220,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":221,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":222,"author":{"gitId":"wraineflores"},"content":"    private static void findCommand(ArrayList\u003cTask\u003e addLists, String line) {","lastModifiedDate":"2022-02-26"},{"lineNumber":223,"author":{"gitId":"wraineflores"},"content":"        findKeyWord \u003d line.replace(\"find\", \"\").trim();","lastModifiedDate":"2022-02-26"},{"lineNumber":224,"author":{"gitId":"wraineflores"},"content":"        if (!findKeyWord.equalsIgnoreCase(\"\")) {","lastModifiedDate":"2022-02-26"},{"lineNumber":225,"author":{"gitId":"wraineflores"},"content":"            System.out.println(START_FIND_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":226,"author":{"gitId":"wraineflores"},"content":"            for (Task addList : addLists) {","lastModifiedDate":"2022-02-26"},{"lineNumber":227,"author":{"gitId":"wraineflores"},"content":"                if (addList.getDescription().contains(findKeyWord)) {","lastModifiedDate":"2022-02-26"},{"lineNumber":228,"author":{"gitId":"wraineflores"},"content":"                    System.out.println(Integer.toString(addLists.indexOf(addList) + 1) + \".\" + addList.toString().trim());","lastModifiedDate":"2022-02-26"},{"lineNumber":229,"author":{"gitId":"wraineflores"},"content":"                }","lastModifiedDate":"2022-02-26"},{"lineNumber":230,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-02-26"},{"lineNumber":231,"author":{"gitId":"wraineflores"},"content":"            System.out.println(FINISHED_FIND_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":232,"author":{"gitId":"wraineflores"},"content":"        } else {","lastModifiedDate":"2022-02-26"},{"lineNumber":233,"author":{"gitId":"wraineflores"},"content":"            System.out.println(FAILED_FIND_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":234,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":235,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":236,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":237,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":238,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":239,"author":{"gitId":"wraineflores"},"content":"     * Function that is the main loop sequence of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":240,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":241,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":242,"author":{"gitId":"wraineflores"},"content":"     * @param line     The next line that needs to be processed then added into the main list","lastModifiedDate":"2022-02-27"},{"lineNumber":243,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":244,"author":{"gitId":"wraineflores"},"content":"    static void mainLoopCommand(ArrayList\u003cTask\u003e addLists, String line) {","lastModifiedDate":"2022-02-26"},{"lineNumber":245,"author":{"gitId":"wraineflores"},"content":"        if (line.startsWith(String.valueOf(TaskListCommand.list))) {","lastModifiedDate":"2022-02-26"},{"lineNumber":246,"author":{"gitId":"wraineflores"},"content":"            List updatedList \u003d new List(addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":247,"author":{"gitId":"wraineflores"},"content":"            updatedList.printList();","lastModifiedDate":"2022-02-26"},{"lineNumber":248,"author":{"gitId":"wraineflores"},"content":"        } else if (line.startsWith(String.valueOf(TaskListCommand.mark))) {","lastModifiedDate":"2022-02-26"},{"lineNumber":249,"author":{"gitId":"wraineflores"},"content":"            markCommand(addLists, line);","lastModifiedDate":"2022-02-26"},{"lineNumber":250,"author":{"gitId":"wraineflores"},"content":"        } else if (line.startsWith(String.valueOf(TaskListCommand.unmark))) {","lastModifiedDate":"2022-02-26"},{"lineNumber":251,"author":{"gitId":"wraineflores"},"content":"            unmarkCommand(addLists, line);","lastModifiedDate":"2022-02-26"},{"lineNumber":252,"author":{"gitId":"wraineflores"},"content":"        } else if (line.startsWith(String.valueOf(TaskListCommand.delete))) {","lastModifiedDate":"2022-02-26"},{"lineNumber":253,"author":{"gitId":"wraineflores"},"content":"            deletedCommand(line, addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":254,"author":{"gitId":"wraineflores"},"content":"        } else if (line.startsWith(String.valueOf(TaskListCommand.todo))) {","lastModifiedDate":"2022-02-26"},{"lineNumber":255,"author":{"gitId":"wraineflores"},"content":"            todoTryCatch(addLists, line);","lastModifiedDate":"2022-02-26"},{"lineNumber":256,"author":{"gitId":"wraineflores"},"content":"        } else if (line.startsWith(String.valueOf(TaskListCommand.deadline))) {","lastModifiedDate":"2022-02-26"},{"lineNumber":257,"author":{"gitId":"wraineflores"},"content":"            deadlineTryCatch(addLists, line);","lastModifiedDate":"2022-02-26"},{"lineNumber":258,"author":{"gitId":"wraineflores"},"content":"        } else if (line.startsWith(String.valueOf(TaskListCommand.event))) {","lastModifiedDate":"2022-02-26"},{"lineNumber":259,"author":{"gitId":"wraineflores"},"content":"            eventTryCatch(addLists, line);","lastModifiedDate":"2022-02-26"},{"lineNumber":260,"author":{"gitId":"wraineflores"},"content":"        } else if (line.startsWith(String.valueOf(TaskListCommand.find))) {","lastModifiedDate":"2022-02-26"},{"lineNumber":261,"author":{"gitId":"wraineflores"},"content":"            findCommand(addLists, line);","lastModifiedDate":"2022-02-26"},{"lineNumber":262,"author":{"gitId":"wraineflores"},"content":"        } else if (line.startsWith(String.valueOf(TaskListCommand.help))) {","lastModifiedDate":"2022-02-27"},{"lineNumber":263,"author":{"gitId":"wraineflores"},"content":"            Storage.helpCommand();","lastModifiedDate":"2022-02-27"},{"lineNumber":264,"author":{"gitId":"wraineflores"},"content":"        } else {","lastModifiedDate":"2022-02-26"},{"lineNumber":265,"author":{"gitId":"wraineflores"},"content":"            System.out.println(ELSE_EXCEPTION_STATEMENT);","lastModifiedDate":"2022-02-26"},{"lineNumber":266,"author":{"gitId":"wraineflores"},"content":"            System.out.println(ELSE_EXCEPTION_STATEMENT_2);","lastModifiedDate":"2022-02-27"},{"lineNumber":267,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":268,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":269,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":270,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":271,"author":{"gitId":"wraineflores"},"content":"     * The function that starts the Duke program","lastModifiedDate":"2022-02-27"},{"lineNumber":272,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":273,"author":{"gitId":"wraineflores"},"content":"     * @param addLists The main list of the program","lastModifiedDate":"2022-02-27"},{"lineNumber":274,"author":{"gitId":"wraineflores"},"content":"     * @throws FileNotFoundException Exception if no file is found","lastModifiedDate":"2022-02-27"},{"lineNumber":275,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":276,"author":{"gitId":"wraineflores"},"content":"    static void run(ArrayList\u003cTask\u003e addLists) throws FileNotFoundException {","lastModifiedDate":"2022-02-26"},{"lineNumber":277,"author":{"gitId":"wraineflores"},"content":"        String line;","lastModifiedDate":"2022-02-26"},{"lineNumber":278,"author":{"gitId":"wraineflores"},"content":"        addLists \u003d Storage.tryCatchReadFile(addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":279,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Hello! I\u0027m Earl Grey\\nWhat can I do for you?\");","lastModifiedDate":"2022-02-26"},{"lineNumber":280,"author":{"gitId":"wraineflores"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-26"},{"lineNumber":281,"author":{"gitId":"wraineflores"},"content":"        line \u003d in.nextLine().trim();            // reads input","lastModifiedDate":"2022-02-26"},{"lineNumber":282,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":283,"author":{"gitId":"wraineflores"},"content":"        while (!String.valueOf(TaskListCommand.bye).equals(line)) {","lastModifiedDate":"2022-02-26"},{"lineNumber":284,"author":{"gitId":"wraineflores"},"content":"            TaskList.mainLoopCommand(addLists, line);","lastModifiedDate":"2022-02-26"},{"lineNumber":285,"author":{"gitId":"wraineflores"},"content":"            line \u003d in.nextLine().trim();","lastModifiedDate":"2022-02-26"},{"lineNumber":286,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":287,"author":{"gitId":"wraineflores"},"content":"        Storage.programmeExits(addLists);","lastModifiedDate":"2022-02-26"},{"lineNumber":288,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":289,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"wraineflores":289}},{"path":"src/main/java/TaskListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":" * An enumeration of basic tasks in Duke","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"public enum TaskListCommand {","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"    todo, deadline, event, mark, unmark, list, bye, delete, find, help","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"wraineflores":6}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":" * Todo represents an extension of the Task class","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"     * Initialise a new Todo class","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"     * @param description Description of a task the the user want to add in the list","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"     * toString was modified for an easier way of viewing","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"     * @return Todo class in a modified String format","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        return \"    [T]\" + super.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wraineflores":23}},{"path":"src/main/java/WriteOutFileContent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"import java.io.File;","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-02-19"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-19"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":" * WriteOutFileContent represents a write to file when the program is closed","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"public class WriteOutFileContent {","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"    protected ArrayList\u003cTask\u003e addLists;","lastModifiedDate":"2022-02-19"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    public WriteOutFileContent(ArrayList\u003cTask\u003e addLists) {","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"        this.addLists \u003d addLists;","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"     * This function saves in the text file","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"     * @throws FileNotFoundException Exception thrown if no file was found","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"    public void getWriteForAll() throws FileNotFoundException {","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"        File f \u003d new File(\"savedDukeData.txt\");","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"        PrintWriter pw \u003d new PrintWriter(f);","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"        for (Task addlist : addLists) {","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"            if (addlist instanceof Todo) {","lastModifiedDate":"2022-02-19"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"                pw.println(\"todo---\" + addlist.getStatusIcon() + \"---\" + addlist.getDescription());","lastModifiedDate":"2022-02-19"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"            } else if (addlist instanceof Deadline) {","lastModifiedDate":"2022-02-19"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"                pw.println(\"deadline---\" + addlist.getStatusIcon() + \"---\" + addlist.getDescription()","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"                        + \"---\" + ((Deadline) addlist).getBy());","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"            } else if (addlist instanceof Event) {","lastModifiedDate":"2022-02-19"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"                pw.println(\"event---\" + addlist.getStatusIcon() + \"---\" + addlist.getDescription()","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"                        + \"---\" + ((Event) addlist).getAt());","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-02-19"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"        pw.close();","lastModifiedDate":"2022-02-19"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"wraineflores":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"wraineflores":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wraineflores":1,"-":20}},{"path":"text-ui-test/savedDukeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"todo---1---read book","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"event---0---return book---Sunday","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"event---0---project meeting---Mon 2-4pm","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"todo---0---read book","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"event---0---return book---Sunday","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"event---0---project meeting---Mon 2-4pm","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"todo---0---read book","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"event---0---return book---Sunday","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"event---0---project meeting---Mon 2-4pm","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"todo---0---read book","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"deadline---0---return book --- Sunday","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"event---0---project meeting --- Mon 2-4pm","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"wraineflores":12}}]
