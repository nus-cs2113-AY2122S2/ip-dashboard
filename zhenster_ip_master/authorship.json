[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"[E][ ] shower (at: 9-11 PM)","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"[T][ ] d","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"[T][ ] d","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"zhenster":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"// Tasks that need to be done before a specific date/time","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"    protected String by;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"zhenster":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import java.io.File;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static String division \u003d \"_____________________________________________\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"     * Prints taskList when user types \"list\" command in program","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"     * @param taskList the ArrayList of tasks to print out","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    public static void printTaskObjects(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"            System.out.println(Integer.toString(taskNumber) + \": \" + task.toString());","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"            taskNumber +\u003d 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"     * Helper for convertTaskStringToTask","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"     * \"Cleans\" a string representation of a task (gets rid of extraneous characters like brackets and parens)","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"     * Converts clean string representation into an ArrayList","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"     * @param taskString the string representation of the task","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"     * @return ArrayList containing the information of the taskString","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"    public static ArrayList\u003cString\u003e cleanTaskListString(String taskString) {","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        taskString \u003d taskString.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"(\", \"\").replace(\")\", \"\");","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"        String[] splitInformation \u003d taskString.split(\"\\\\s\");","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cString\u003e taskInformation \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"        for (int i \u003d 0; i \u003c splitInformation.length; i++) {","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"            if (splitInformation[i].trim().length() \u003e 0) {","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"                taskInformation.add(splitInformation[i]);","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"        return taskInformation;","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"     * Helper for convertTaskStringToTask","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"     * Given an ArrayList of strings, a starting index, and an ending index, concatenates the strings in the","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"     * ArrayList within the boundaries of the indices into a single string","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"     * @param list the given ArrayList","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"     * @param startIndex the index to start concatenating from","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"     * @param endIndex the index to stop concatenating at (not inclusive)","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"     * @return the concatenated string","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"    public static String concatenateStringsInArrayList(ArrayList\u003cString\u003e list, int startIndex, int endIndex) {","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        String string \u003d \"\";","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"        for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"            string +\u003d list.get(i);","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"            string +\u003d \" \";","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"        return string.trim();","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"     * Helper for loadTasksFromDisk","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"     * Converts a string representation of a Task to a Task object","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"     * @param taskString the string representation of the task","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"     * @return the Task object","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"    public static Task convertTaskStringToTask(String taskString) {","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"        Task task \u003d new Task(\"\");","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cString\u003e taskInformation \u003d cleanTaskListString(taskString);","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"        char taskType \u003d taskInformation.get(0).charAt(0);","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"        boolean isTaskDone \u003d false;","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"        if (taskInformation.get(0).length() \u003e 1) {","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"            isTaskDone \u003d true;","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"        String description;","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"        if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"            description \u003d concatenateStringsInArrayList(taskInformation, 1, taskInformation.size());","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"        } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"            description \u003d concatenateStringsInArrayList(taskInformation, 1, taskInformation.indexOf(\"by:\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"            String deadline \u003d concatenateStringsInArrayList(taskInformation,taskInformation.indexOf(\"by:\") + 1, taskInformation.size());","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"            task \u003d new Deadline(description, deadline);","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"        } else if (taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"            description \u003d concatenateStringsInArrayList(taskInformation, 1, taskInformation.indexOf(\"at:\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"            String time \u003d concatenateStringsInArrayList(taskInformation,taskInformation.indexOf(\"at:\") + 1, taskInformation.size());","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"            task \u003d new Event(description, time);","lastModifiedDate":"2022-02-17"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"        task.isDone \u003d isTaskDone;","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"        return task;","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"     * Loads tasks from duke.txt (file of saved tasks)","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"     * Assumes hard-coded location of saved tasks (\"data/duke.txt\")","lastModifiedDate":"2022-02-17"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"    public static void loadTasksFromDisk() {","lastModifiedDate":"2022-02-17"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"        File savedTaskFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"            ArrayList\u003cString\u003e taskLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"            Scanner s \u003d new Scanner(savedTaskFile);","lastModifiedDate":"2022-02-17"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-02-17"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"                taskLines.add(s.nextLine());","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"            for (String taskString : taskLines) {","lastModifiedDate":"2022-02-17"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"                Task task \u003d convertTaskStringToTask(taskString);","lastModifiedDate":"2022-02-17"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"                taskList.add(task);","lastModifiedDate":"2022-02-17"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"No tasks found saved on disk, starting with a fresh slate!\");","lastModifiedDate":"2022-02-17"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"     * Helper for saveTasksToFile","lastModifiedDate":"2022-02-13"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"     * Formats taskList into a string to be written into a file","lastModifiedDate":"2022-02-13"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":"     * @param taskList list of tasks to be formatted into a string","lastModifiedDate":"2022-02-13"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"     * @return the string representation of the list of tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"    public static String formatTaskListToString(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":126,"author":{"gitId":"zhenster"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":127,"author":{"gitId":"zhenster"},"content":"            taskListString +\u003d task.toString();","lastModifiedDate":"2022-02-13"},{"lineNumber":128,"author":{"gitId":"zhenster"},"content":"            taskListString +\u003d \"\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":130,"author":{"gitId":"zhenster"},"content":"        return taskListString;","lastModifiedDate":"2022-02-13"},{"lineNumber":131,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":132,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":133,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":134,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks","lastModifiedDate":"2022-02-13"},{"lineNumber":135,"author":{"gitId":"zhenster"},"content":"     * Saves the list of tasks to \"data/duke.txt\" (assumes hard-coded location to save the tasks)","lastModifiedDate":"2022-02-17"},{"lineNumber":136,"author":{"gitId":"zhenster"},"content":"     * @param taskListString string representation of list of tasks to write to file","lastModifiedDate":"2022-02-13"},{"lineNumber":137,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":138,"author":{"gitId":"zhenster"},"content":"    public static void saveTasksToFile(String taskListString) throws IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":139,"author":{"gitId":"zhenster"},"content":"        // If data directory doesn\u0027t exist, write to it","lastModifiedDate":"2022-02-13"},{"lineNumber":140,"author":{"gitId":"zhenster"},"content":"        File dataDirectory \u003d new File(\"data\");","lastModifiedDate":"2022-02-13"},{"lineNumber":141,"author":{"gitId":"zhenster"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2022-02-13"},{"lineNumber":142,"author":{"gitId":"zhenster"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2022-02-13"},{"lineNumber":143,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":144,"author":{"gitId":"zhenster"},"content":"        // If duke.txt file doesn\u0027t exist, create it","lastModifiedDate":"2022-02-13"},{"lineNumber":145,"author":{"gitId":"zhenster"},"content":"        File dataFile \u003d new File(dataDirectory, \"duke.txt\");","lastModifiedDate":"2022-02-13"},{"lineNumber":146,"author":{"gitId":"zhenster"},"content":"        dataFile.createNewFile();","lastModifiedDate":"2022-02-13"},{"lineNumber":147,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":148,"author":{"gitId":"zhenster"},"content":"        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2022-02-13"},{"lineNumber":149,"author":{"gitId":"zhenster"},"content":"        fw.write(taskListString);","lastModifiedDate":"2022-02-13"},{"lineNumber":150,"author":{"gitId":"zhenster"},"content":"        fw.close();","lastModifiedDate":"2022-02-13"},{"lineNumber":151,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":152,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":153,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":154,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks","lastModifiedDate":"2022-01-30"},{"lineNumber":155,"author":{"gitId":"zhenster"},"content":"     * Marks a task as done or unmarks a task when user types \"mark\" or \"unmark\" commands, respectively","lastModifiedDate":"2022-01-30"},{"lineNumber":156,"author":{"gitId":"zhenster"},"content":"     * @param line the line of user input","lastModifiedDate":"2022-02-13"},{"lineNumber":157,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":158,"author":{"gitId":"zhenster"},"content":"    public static void markTask(String line) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":159,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":160,"author":{"gitId":"zhenster"},"content":"            String[] taskInfo \u003d line.split(\"\\\\s\");","lastModifiedDate":"2022-02-13"},{"lineNumber":161,"author":{"gitId":"zhenster"},"content":"            int taskNumber \u003d Integer.parseInt(taskInfo[1].trim());","lastModifiedDate":"2022-02-13"},{"lineNumber":162,"author":{"gitId":"zhenster"},"content":"            String markAction \u003d taskInfo[0].trim();","lastModifiedDate":"2022-02-13"},{"lineNumber":163,"author":{"gitId":"zhenster"},"content":"            Task targetTask \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2022-02-12"},{"lineNumber":164,"author":{"gitId":"zhenster"},"content":"            // Mark the task as done","lastModifiedDate":"2022-02-12"},{"lineNumber":165,"author":{"gitId":"zhenster"},"content":"            if (markAction.equals(\"mark\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":166,"author":{"gitId":"zhenster"},"content":"                if (targetTask.isDone \u003d\u003d true) {","lastModifiedDate":"2022-02-12"},{"lineNumber":167,"author":{"gitId":"zhenster"},"content":"                    System.out.println(\"Task is already marked as done.\");","lastModifiedDate":"2022-02-12"},{"lineNumber":168,"author":{"gitId":"zhenster"},"content":"                } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":169,"author":{"gitId":"zhenster"},"content":"                    targetTask.isDone \u003d true;","lastModifiedDate":"2022-02-12"},{"lineNumber":170,"author":{"gitId":"zhenster"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-02-12"},{"lineNumber":171,"author":{"gitId":"zhenster"},"content":"                    System.out.println(targetTask.toString());","lastModifiedDate":"2022-02-12"},{"lineNumber":172,"author":{"gitId":"zhenster"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":173,"author":{"gitId":"zhenster"},"content":"            } else { // Unmark the task","lastModifiedDate":"2022-02-12"},{"lineNumber":174,"author":{"gitId":"zhenster"},"content":"                if (targetTask.isDone \u003d\u003d false) {","lastModifiedDate":"2022-02-12"},{"lineNumber":175,"author":{"gitId":"zhenster"},"content":"                    System.out.println(\"Task is already marked as not done yet.\");","lastModifiedDate":"2022-02-12"},{"lineNumber":176,"author":{"gitId":"zhenster"},"content":"                } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":177,"author":{"gitId":"zhenster"},"content":"                    targetTask.isDone \u003d false;","lastModifiedDate":"2022-02-12"},{"lineNumber":178,"author":{"gitId":"zhenster"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2022-02-12"},{"lineNumber":179,"author":{"gitId":"zhenster"},"content":"                    System.out.println(targetTask.toString());","lastModifiedDate":"2022-02-12"},{"lineNumber":180,"author":{"gitId":"zhenster"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":181,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":182,"author":{"gitId":"zhenster"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":183,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"Oops, there was an error retrieving the specified task.\");","lastModifiedDate":"2022-02-12"},{"lineNumber":184,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":185,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":186,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":187,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":188,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":189,"author":{"gitId":"zhenster"},"content":"     * Helper for addTask","lastModifiedDate":"2022-01-30"},{"lineNumber":190,"author":{"gitId":"zhenster"},"content":"     * Extracts information about Task object from line of user input","lastModifiedDate":"2022-01-30"},{"lineNumber":191,"author":{"gitId":"zhenster"},"content":"     * Reports information in array of Strings","lastModifiedDate":"2022-01-30"},{"lineNumber":192,"author":{"gitId":"zhenster"},"content":"     * @param inputLine line of user input","lastModifiedDate":"2022-01-30"},{"lineNumber":193,"author":{"gitId":"zhenster"},"content":"     * @return array of Strings (task type, description, additional info)","lastModifiedDate":"2022-01-30"},{"lineNumber":194,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":195,"author":{"gitId":"zhenster"},"content":"    public static String[] extractTaskInfo(String inputLine) throws DukeException {","lastModifiedDate":"2022-02-08"},{"lineNumber":196,"author":{"gitId":"zhenster"},"content":"        String type;","lastModifiedDate":"2022-01-30"},{"lineNumber":197,"author":{"gitId":"zhenster"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":198,"author":{"gitId":"zhenster"},"content":"        String additionalInfo;","lastModifiedDate":"2022-01-30"},{"lineNumber":199,"author":{"gitId":"zhenster"},"content":"        int additionalInfoIndex \u003d inputLine.length(); // Index where description should end","lastModifiedDate":"2022-01-30"},{"lineNumber":200,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":201,"author":{"gitId":"zhenster"},"content":"        // Extract the type of task","lastModifiedDate":"2022-01-30"},{"lineNumber":202,"author":{"gitId":"zhenster"},"content":"        type \u003d inputLine.split(\"\\\\s\")[0].trim();","lastModifiedDate":"2022-02-13"},{"lineNumber":203,"author":{"gitId":"zhenster"},"content":"        // If the task type is not a todo, deadline, or event, throw a DukeException","lastModifiedDate":"2022-02-08"},{"lineNumber":204,"author":{"gitId":"zhenster"},"content":"        if ((!type.equals(\"todo\")) \u0026\u0026 (!type.equals(\"deadline\")) \u0026\u0026 (!type.equals(\"event\"))) {","lastModifiedDate":"2022-02-08"},{"lineNumber":205,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-13"},{"lineNumber":206,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":207,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":208,"author":{"gitId":"zhenster"},"content":"        // Extract the deadline (for Deadline tasks) or time (for Event tasks), if applicable","lastModifiedDate":"2022-01-30"},{"lineNumber":209,"author":{"gitId":"zhenster"},"content":"        if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":210,"author":{"gitId":"zhenster"},"content":"            // If the task doesn\u0027t have a deadline, throw a DukeException","lastModifiedDate":"2022-02-08"},{"lineNumber":211,"author":{"gitId":"zhenster"},"content":"            if (!inputLine.contains(\"/by\") || inputLine.endsWith(\"/by\")) {","lastModifiedDate":"2022-02-08"},{"lineNumber":212,"author":{"gitId":"zhenster"},"content":"                throw new DukeException(\"OOPS!!! Task of type deadline must have a deadline specified.\");","lastModifiedDate":"2022-02-08"},{"lineNumber":213,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":214,"author":{"gitId":"zhenster"},"content":"            additionalInfo \u003d inputLine.substring(inputLine.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-01-30"},{"lineNumber":215,"author":{"gitId":"zhenster"},"content":"            // If the task has an empty deadline, throw a DukeException","lastModifiedDate":"2022-02-08"},{"lineNumber":216,"author":{"gitId":"zhenster"},"content":"            if (additionalInfo.trim().isEmpty()) {","lastModifiedDate":"2022-02-08"},{"lineNumber":217,"author":{"gitId":"zhenster"},"content":"                throw new DukeException(\"OOPS!!! Type of task deadline must not have an empty deadline.\");","lastModifiedDate":"2022-02-08"},{"lineNumber":218,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":219,"author":{"gitId":"zhenster"},"content":"            additionalInfoIndex \u003d inputLine.indexOf(\"/by\");","lastModifiedDate":"2022-01-30"},{"lineNumber":220,"author":{"gitId":"zhenster"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":221,"author":{"gitId":"zhenster"},"content":"            // If the task is an event and doesn\u0027t have a time, throw a DukeException","lastModifiedDate":"2022-02-08"},{"lineNumber":222,"author":{"gitId":"zhenster"},"content":"            if (!inputLine.contains(\"/at\") || inputLine.endsWith(\"/at\")) {","lastModifiedDate":"2022-02-08"},{"lineNumber":223,"author":{"gitId":"zhenster"},"content":"                throw new DukeException(\"OOPS!!! Task of type event must have a time specified.\");","lastModifiedDate":"2022-02-08"},{"lineNumber":224,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":225,"author":{"gitId":"zhenster"},"content":"            additionalInfo \u003d inputLine.substring(inputLine.indexOf(\"/at\") + 4);","lastModifiedDate":"2022-01-30"},{"lineNumber":226,"author":{"gitId":"zhenster"},"content":"            // If the task has an empty time, throw a DukeException","lastModifiedDate":"2022-02-08"},{"lineNumber":227,"author":{"gitId":"zhenster"},"content":"            if (additionalInfo.trim().isEmpty()) {","lastModifiedDate":"2022-02-08"},{"lineNumber":228,"author":{"gitId":"zhenster"},"content":"                throw new DukeException(\"OOPS! Task of type event must not have an empty time.\");","lastModifiedDate":"2022-02-08"},{"lineNumber":229,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":230,"author":{"gitId":"zhenster"},"content":"            additionalInfoIndex \u003d inputLine.indexOf(\"/at\");","lastModifiedDate":"2022-01-30"},{"lineNumber":231,"author":{"gitId":"zhenster"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":232,"author":{"gitId":"zhenster"},"content":"            additionalInfo \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":233,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":234,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":235,"author":{"gitId":"zhenster"},"content":"        // Extract the description","lastModifiedDate":"2022-01-30"},{"lineNumber":236,"author":{"gitId":"zhenster"},"content":"        // If the description is empty, throw a DukeException","lastModifiedDate":"2022-02-08"},{"lineNumber":237,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":238,"author":{"gitId":"zhenster"},"content":"            description \u003d inputLine.substring(type.length(), additionalInfoIndex);","lastModifiedDate":"2022-02-08"},{"lineNumber":239,"author":{"gitId":"zhenster"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":240,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + type + \" cannot be empty.\");","lastModifiedDate":"2022-02-08"},{"lineNumber":241,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":242,"author":{"gitId":"zhenster"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2022-02-08"},{"lineNumber":243,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + type + \" cannot be empty.\");","lastModifiedDate":"2022-02-08"},{"lineNumber":244,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":245,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":246,"author":{"gitId":"zhenster"},"content":"        return new String[] { type.trim(), description.trim(), additionalInfo.trim() };","lastModifiedDate":"2022-02-17"},{"lineNumber":247,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":248,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":249,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":250,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks","lastModifiedDate":"2022-01-30"},{"lineNumber":251,"author":{"gitId":"zhenster"},"content":"     * Converts line of user input into relevant Task object","lastModifiedDate":"2022-01-30"},{"lineNumber":252,"author":{"gitId":"zhenster"},"content":"     * Adds Task object to global taskList","lastModifiedDate":"2022-01-30"},{"lineNumber":253,"author":{"gitId":"zhenster"},"content":"     * @param line line of user input","lastModifiedDate":"2022-01-30"},{"lineNumber":254,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":255,"author":{"gitId":"zhenster"},"content":"    public static void addTask(String line) {","lastModifiedDate":"2022-01-30"},{"lineNumber":256,"author":{"gitId":"zhenster"},"content":"        String[] taskInfo \u003d {\"\", \"\", \"\"};","lastModifiedDate":"2022-02-08"},{"lineNumber":257,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":258,"author":{"gitId":"zhenster"},"content":"            taskInfo \u003d extractTaskInfo(line);","lastModifiedDate":"2022-02-08"},{"lineNumber":259,"author":{"gitId":"zhenster"},"content":"            String type \u003d taskInfo[0];","lastModifiedDate":"2022-01-30"},{"lineNumber":260,"author":{"gitId":"zhenster"},"content":"            String description \u003d taskInfo[1];","lastModifiedDate":"2022-01-30"},{"lineNumber":261,"author":{"gitId":"zhenster"},"content":"            String additionalInfo \u003d taskInfo[2];","lastModifiedDate":"2022-01-30"},{"lineNumber":262,"author":{"gitId":"zhenster"},"content":"            Task task \u003d new Task(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":263,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":264,"author":{"gitId":"zhenster"},"content":"            if (type.equals(\"todo\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":265,"author":{"gitId":"zhenster"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":266,"author":{"gitId":"zhenster"},"content":"            } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":267,"author":{"gitId":"zhenster"},"content":"                task \u003d new Deadline(description, additionalInfo);","lastModifiedDate":"2022-01-30"},{"lineNumber":268,"author":{"gitId":"zhenster"},"content":"            } else if (type.equals(\"event\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":269,"author":{"gitId":"zhenster"},"content":"                task \u003d new Event(description, additionalInfo);","lastModifiedDate":"2022-01-30"},{"lineNumber":270,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":271,"author":{"gitId":"zhenster"},"content":"            taskList.add(task);","lastModifiedDate":"2022-02-13"},{"lineNumber":272,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":273,"author":{"gitId":"zhenster"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":274,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"Now you have \" + Integer.toString(taskList.size()) + \" tasks on the list.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":275,"author":{"gitId":"zhenster"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":276,"author":{"gitId":"zhenster"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-08"},{"lineNumber":277,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":278,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":279,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":280,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":281,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks","lastModifiedDate":"2022-02-13"},{"lineNumber":282,"author":{"gitId":"zhenster"},"content":"     * Deletes user-specified task","lastModifiedDate":"2022-02-13"},{"lineNumber":283,"author":{"gitId":"zhenster"},"content":"     * @param line line of user input","lastModifiedDate":"2022-02-13"},{"lineNumber":284,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":285,"author":{"gitId":"zhenster"},"content":"    public static void deleteTask(String line) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":286,"author":{"gitId":"zhenster"},"content":"        String[] lineWords \u003d line.split(\"\\\\s\");","lastModifiedDate":"2022-02-13"},{"lineNumber":287,"author":{"gitId":"zhenster"},"content":"        if (lineWords.length !\u003d 2) {","lastModifiedDate":"2022-02-13"},{"lineNumber":288,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"Invalid syntax for deleting a task.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":289,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":290,"author":{"gitId":"zhenster"},"content":"        int deleteIndex \u003d Integer.parseInt(lineWords[1]) - 1;","lastModifiedDate":"2022-02-13"},{"lineNumber":291,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":292,"author":{"gitId":"zhenster"},"content":"            String taskToDelete \u003d taskList.get(deleteIndex).toString();","lastModifiedDate":"2022-02-13"},{"lineNumber":293,"author":{"gitId":"zhenster"},"content":"            taskList.remove(deleteIndex);","lastModifiedDate":"2022-02-13"},{"lineNumber":294,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-02-13"},{"lineNumber":295,"author":{"gitId":"zhenster"},"content":"            System.out.println(taskToDelete);","lastModifiedDate":"2022-02-13"},{"lineNumber":296,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks on the list.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":297,"author":{"gitId":"zhenster"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":298,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"Could not remove this task from the list of tasks.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":299,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":300,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":301,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":302,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":303,"author":{"gitId":"zhenster"},"content":"     * Processes user input (addition of tasks to the global taskList) until user types \"bye\"","lastModifiedDate":"2022-01-30"},{"lineNumber":304,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":305,"author":{"gitId":"zhenster"},"content":"    public static void processTasks() {","lastModifiedDate":"2022-01-30"},{"lineNumber":306,"author":{"gitId":"zhenster"},"content":"        loadTasksFromDisk();","lastModifiedDate":"2022-02-17"},{"lineNumber":307,"author":{"gitId":"zhenster"},"content":"        String line;","lastModifiedDate":"2022-01-26"},{"lineNumber":308,"author":{"gitId":"zhenster"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":309,"author":{"gitId":"zhenster"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":310,"author":{"gitId":"zhenster"},"content":"        // While the user has not exited the program","lastModifiedDate":"2022-01-30"},{"lineNumber":311,"author":{"gitId":"zhenster"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":312,"author":{"gitId":"zhenster"},"content":"            try {","lastModifiedDate":"2022-02-13"},{"lineNumber":313,"author":{"gitId":"zhenster"},"content":"                System.out.println(division);","lastModifiedDate":"2022-01-26"},{"lineNumber":314,"author":{"gitId":"zhenster"},"content":"                String keyWord \u003d line.split(\"\\\\s\")[0].trim();","lastModifiedDate":"2022-02-13"},{"lineNumber":315,"author":{"gitId":"zhenster"},"content":"                // List out the tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":316,"author":{"gitId":"zhenster"},"content":"                if (line.equals(\"list\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":317,"author":{"gitId":"zhenster"},"content":"                    printTaskObjects(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":318,"author":{"gitId":"zhenster"},"content":"                    // Mark or unmark a task","lastModifiedDate":"2022-02-13"},{"lineNumber":319,"author":{"gitId":"zhenster"},"content":"                } else if (keyWord.equals(\"mark\") || keyWord.equals(\"unmark\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":320,"author":{"gitId":"zhenster"},"content":"                    markTask(line);","lastModifiedDate":"2022-02-13"},{"lineNumber":321,"author":{"gitId":"zhenster"},"content":"                    saveTasksToFile(formatTaskListToString(taskList));","lastModifiedDate":"2022-02-13"},{"lineNumber":322,"author":{"gitId":"zhenster"},"content":"                    // Delete a task","lastModifiedDate":"2022-02-13"},{"lineNumber":323,"author":{"gitId":"zhenster"},"content":"                } else if (keyWord.equals(\"delete\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":324,"author":{"gitId":"zhenster"},"content":"                    deleteTask(line);","lastModifiedDate":"2022-02-13"},{"lineNumber":325,"author":{"gitId":"zhenster"},"content":"                    saveTasksToFile(formatTaskListToString(taskList));","lastModifiedDate":"2022-02-13"},{"lineNumber":326,"author":{"gitId":"zhenster"},"content":"                    // Add a task","lastModifiedDate":"2022-01-30"},{"lineNumber":327,"author":{"gitId":"zhenster"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":328,"author":{"gitId":"zhenster"},"content":"                    addTask(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":329,"author":{"gitId":"zhenster"},"content":"                    saveTasksToFile(formatTaskListToString(taskList));","lastModifiedDate":"2022-02-13"},{"lineNumber":330,"author":{"gitId":"zhenster"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":331,"author":{"gitId":"zhenster"},"content":"                System.out.println(division);","lastModifiedDate":"2022-01-26"},{"lineNumber":332,"author":{"gitId":"zhenster"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":333,"author":{"gitId":"zhenster"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":334,"author":{"gitId":"zhenster"},"content":"                System.out.println(e);","lastModifiedDate":"2022-02-13"},{"lineNumber":335,"author":{"gitId":"zhenster"},"content":"                System.out.println(division);","lastModifiedDate":"2022-02-13"},{"lineNumber":336,"author":{"gitId":"zhenster"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2022-02-13"},{"lineNumber":337,"author":{"gitId":"zhenster"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":338,"author":{"gitId":"zhenster"},"content":"                System.out.println(e);","lastModifiedDate":"2022-02-13"},{"lineNumber":339,"author":{"gitId":"zhenster"},"content":"                System.out.println(division);","lastModifiedDate":"2022-02-13"},{"lineNumber":340,"author":{"gitId":"zhenster"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2022-02-13"},{"lineNumber":341,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":342,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":343,"author":{"gitId":"zhenster"},"content":"        System.out.println(division);","lastModifiedDate":"2022-01-26"},{"lineNumber":344,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":345,"author":{"gitId":"zhenster"},"content":"        System.out.println(division);","lastModifiedDate":"2022-01-26"},{"lineNumber":346,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":347,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":348,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":350,"author":{"gitId":"zhenster"},"content":"        // Greeting","lastModifiedDate":"2022-01-26"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":357,"author":{"gitId":"zhenster"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke, the greatest virtual assistant in the world :) \\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":358,"author":{"gitId":"zhenster"},"content":"        System.out.println(division);","lastModifiedDate":"2022-01-26"},{"lineNumber":359,"author":{"gitId":"zhenster"},"content":"        System.out.println(greeting);","lastModifiedDate":"2022-01-26"},{"lineNumber":360,"author":{"gitId":"zhenster"},"content":"        System.out.println(division);","lastModifiedDate":"2022-01-26"},{"lineNumber":361,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":362,"author":{"gitId":"zhenster"},"content":"        processTasks();","lastModifiedDate":"2022-01-30"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhenster":354,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"        super(errorMessage);","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"zhenster":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"// Tasks that start + end at a specific time","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"    protected String time;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"zhenster":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"public class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"    protected String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        return description;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zhenster":24}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"// Tasks without any date/time attached","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"zhenster":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"1","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"2","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"3","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"mark 1","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"todo borrow book","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"mark 5","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"unmark 5","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"unmark 5","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zhenster":16}}]
