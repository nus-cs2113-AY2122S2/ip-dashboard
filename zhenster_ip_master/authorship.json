[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"# Duke User Guide","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"This is Duke, an application for busy people to keep track of what they need to do. ","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"# Starting the program ","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"## Using Intellij","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"1. Find the project in the `Project Explorer` (usually located at the left side). ","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"2. Go to the src folder and locate the `Duke.java` file (`src --\u003e main --\u003e java --\u003e Duke.java`). ","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"3. Right click on the file and select `Run Duke.main()`.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"4. The program now should run on the Console (usually located on the bottom. You can now interact with the program through the Console. ","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"## Using JAR file","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"1. Open your command prompt. ","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"2. `cd` into the directory that contains the JAR file. ","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"3. Run the command `java -jar NAME_OF_JAR_FILE`. For example, if the name of your JAR file is ip.jar, you could run the command `java -jar ip.jar`. ","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"4. The program should now run in your command prompt. ","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"# Adding a Task ","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"There are three kinds of Tasks: Todos, Deadlines, and Events. ","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"## Adding a Todo","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"Adds a Todo to the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"Format: `todo DESCRIPTION` \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"Words in `UPPER_CASE` are the parameters. \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"Examples: ","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"* todo buy sunscreen ","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"* todo buy bubble tea ","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"## Adding a Deadline","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"Adds a Deadline to the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"Format: `deadline DESCRIPTION /by DEADLINE` \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"Words in `UPPER_CASE` are the parameters. \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"Examples: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"* deadline finish econometrics problem set /by Saturday ","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"* deadine return book /by Sunday 12:30PM","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"## Adding an Event","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"Adds an Event to the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"Format: `event DESCRIPTION /at TIME` \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"Words in `UPPER_CASE` are the parameters. \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"Examples: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"* event project meeting /at Saturday 8:00PM","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"* event attend CS2113 lecture /at Friday 4:00PM ","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"# Listing all Tasks","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"Displays all tasks that the user has added to their list. \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"Format: `list` \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"Output could look like the following: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":" 1: [T][ ] buy sunscreen ","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":" 2: [T][ ] buy bubble tea ","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":" 3: [D][ ] finish econometrics problem set (by: Saturday)","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":" 4: [D][ ] return book (by: Sunday 12:30PM)","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":" 5: [E][ ] project meeting (at: Saturday 8:00PM)","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":" 6: [E][ ] attend CS2113 lecture (at: Friday 4:00PM)","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":" ```","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":" `T` denotes a task of type Todo, `D` denotes a task of type Deadline, and `E` denotes a task of type Event. ","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":" ","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"# Marking a Task as complete ","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"You have the option of marking (i.e. checking off) a task that has been completed. \u003cbr /\u003e ","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"Format: `mark TASK_NUMBER` \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"`TASK_NUMBER` is the numerical label assigned to the task (that you can find from the output of the `list` command). \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"Example: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":" 1: [T][ ] buy sunscreen","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":" 2: [T][ ] buy bubble tea ","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":" 3: [D][ ] finish econometrics problem set (by: Saturday)","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"`mark 2` would result in the following list: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":" 1: [T][ ] buy sunscreen","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":" 2: [T][X] buy bubble tea ","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":" 3: [D][ ] finish econometrics problem set (by: Saturday)","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"# Unmarking a Task ","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"Alternatively, you may also unmark a task that has previously been marked. \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"Format: `unmark TASK_NUMBER` \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"Example: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":" 1: [T][X] buy sunscreen","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":" 2: [T][ ] buy bubble tea ","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":" 3: [D][ ] finish econometrics problem set (by: Saturday)","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"`unmark 1` would result in the following list: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":" 1: [T][ ] buy sunscreen","lastModifiedDate":"2022-02-26"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":" 2: [T][ ] buy bubble tea ","lastModifiedDate":"2022-02-26"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":" 3: [D][ ] finish econometrics problem set (by: Saturday)","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":" ","lastModifiedDate":"2022-02-26"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":" # Deleting a Task","lastModifiedDate":"2022-02-26"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":" Users may also delete a task from the list of tasks. \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":" Format `delete TASK_NUMBER` \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":" Example: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":" Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":" 1: [T][ ] buy sunscreen","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":" 2: [T][X] buy bubble tea ","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":" 3: [D][ ] finish econometrics problem set (by: Saturday)","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":" `delete 2` would result in the following list: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":" 1: [T][ ] buy sunscreen","lastModifiedDate":"2022-02-26"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":" 2: [D][ ] finish econometrics problem set (by: Saturday)","lastModifiedDate":"2022-02-26"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":" ","lastModifiedDate":"2022-02-26"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":" # Finding a Task","lastModifiedDate":"2022-02-26"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":" Users can search for Tasks in their task list with a specific keywords. \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":" Format `find KEYWORD` \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":" Example: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":" Assuming the following task list: \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":" 1: [T][ ] buy sunscreen","lastModifiedDate":"2022-02-26"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":" 2: [T][X] buy bubble tea ","lastModifiedDate":"2022-02-26"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":" 3: [D][ ] finish econometrics problem set (by: Saturday)","lastModifiedDate":"2022-02-26"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":" `find buy` would result in the following list:  \u003cbr /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-02-26"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"  1: [T][ ] buy sunscreen","lastModifiedDate":"2022-02-26"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"  2: [T][X] buy bubble tea ","lastModifiedDate":"2022-02-26"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":" ```","lastModifiedDate":"2022-02-26"},{"lineNumber":126,"author":{"gitId":"zhenster"},"content":"  ","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"zhenster"},"content":" # Accessing saved list of Tasks","lastModifiedDate":"2022-02-26"},{"lineNumber":128,"author":{"gitId":"zhenster"},"content":" Duke automatically saves the list of tasks every time the user makes a modification to it, and loads this list of tasks when the application starts up. The user may access and change this list if they are running in the application in Intellij. ","lastModifiedDate":"2022-02-26"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"1. In the `Project Explorer` (usually located at the left side), go to `data --\u003e duke.txt`. Open the `duke.txt` file. ","lastModifiedDate":"2022-02-26"},{"lineNumber":130,"author":{"gitId":"zhenster"},"content":"2. You may now edit the `duke.txt` file directly. Make sure to follow the given formatting! ","lastModifiedDate":"2022-02-26"},{"lineNumber":131,"author":{"gitId":"zhenster"},"content":" ","lastModifiedDate":"2022-02-26"},{"lineNumber":132,"author":{"gitId":"zhenster"},"content":" ","lastModifiedDate":"2022-02-26"},{"lineNumber":133,"author":{"gitId":"zhenster"},"content":" ","lastModifiedDate":"2022-02-26"},{"lineNumber":134,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":135,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":136,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":137,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":138,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":139,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":140,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":141,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":142,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":143,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":144,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":145,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":146,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":147,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":148,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":149,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":150,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":151,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":152,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":157,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"zhenster":153,"-":4}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"[T][ ] visit Marina Bay","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"[T][ ] visit zoo","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"[T][X] visit gardens","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"[T][ ] attend meeting","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"[D][ ] finish hw (by: MARCH 4 2022 09:09)","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"[E][ ] swim practice (at: MARCH 5 2022 10:00)","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"[D][ ] write essay (by: APRIL 3 2022 23:59)","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"[E][ ] eat with friends (at: MARCH 7 2022 22:00)","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"[E][ ] eat lunch (at: MARCH 5 2022 12:00)","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"[T][ ] watch concert","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"[D][X] watch AOT (by: MARCH 7 2022 10:00)","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"zhenster":11}},{"path":"data/duke2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"[D][ ] eat (by: 3)","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"[E][X] project meeting (at: 4)","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"zhenster":2}},{"path":"finalJAR/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"[T][ ] watch concert","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"[D][ ] finish duke (by: MARCH 4 2022 23:59)","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"[E][ ] sleep (at: MARCH 4 2022 23:59)","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"zhenster":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":" * Represents an \u003ccode\u003eDeadline\u003c/code\u003e object on a person\u0027s list of tasks that they must complete.","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":" * This class inherits from the Task class and supports a slightly different toString() method","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * that contains a marker for the type of Task the Deadline object is (an \"D\" for \"Deadline\"). Also","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * allows users to specify the time/date the Deadline task should be completed by.","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    protected String by;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"zhenster":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":" * Main driver class of the Duke application","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        tasks \u003d new TaskList(storage, ui);","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    public void run() {","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"        tasks.processTasks();","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        //new Duke(\"data/duke2.txt\").run();","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"        //new Duke(\"dataduke.txt\").run();","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zhenster":23,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":" * Represents exceptions that are specifically related to the Duke application","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":" * Also allows support for specifying the precise error message","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"        super(errorMessage);","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"zhenster":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":" * Represents an \u003ccode\u003eEvent\u003c/code\u003e object on a person\u0027s list of tasks that they must complete.","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":" * This class inherits from the Task class and supports a slightly different toString() method","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * that contains a marker for the type of Task the Event object is (an \"E\" for \"Event\"). Also","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * allows users to specify the time that the Event is occurring.","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    protected String time;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"zhenster":19}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * Represents a \u003ccode\u003eParser\u003c/code\u003e object that contains support for","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * parsing user input","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"public class Parser {","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"     * Helper for addTask.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"     * Converts specified line of user input representing date into LocalDateTime object and","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"     * reformats it into a user-readable string.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"     * @param dateString The substring of user input representing the date of a deadline or event","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"     * @return Reformatted string representation of date","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"     * @throws DukeException If the date provided by user is in an invalid format.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    public String checkDateStringFormat(String dateString) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"        String newDateString;","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"            dateTime \u003d LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"            String rawHour \u003d \"0\" + Integer.toString(dateTime.getHour());","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"            String hour \u003d rawHour.substring(rawHour.length() - 2);","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"            String rawMinute \u003d \"0\" + Integer.toString(dateTime.getMinute());","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"            String minute \u003d rawMinute.substring(rawMinute.length() - 2);","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"            newDateString \u003d dateTime.getMonth() + \" \" + dateTime.getDayOfMonth() + \" \" + dateTime.getYear() + \" \"","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"                    + hour + \":\" + minute;","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"Date is not formatted correctly! Should be in format yyyy-MM-dd HHmm.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"        return newDateString;","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"     * Helper for addTask.","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"     * Extracts information (type, description, date) about Task object from line of user input.","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"     * Reports information in array of Strings.","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"     * @param inputLine Line of user input.","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"     * @return Array of Strings (task type, description, additional info)","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"     * @throws DukeException If the user did not follow the correct format for specifying a Task.","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"    public String[] extractTaskInfo(String inputLine) throws DukeException {","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"        String type;","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        //String additionalInfo;","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"        String dateString;","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"        int dateStringIndex \u003d inputLine.length(); // Index where description should end","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"        // Extract the type of task","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"        type \u003d inputLine.split(\"\\\\s\")[0].trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        // If the task type is not a todo, deadline, or event, throw a DukeException","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"        if ((!type.equals(\"todo\")) \u0026\u0026 (!type.equals(\"deadline\")) \u0026\u0026 (!type.equals(\"event\"))) {","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"        // Extract the deadline (for Deadline tasks) or time (for Event tasks), if applicable","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"        if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"            // If the task doesn\u0027t have a deadline, throw a DukeException","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"            if (!inputLine.contains(\"/by\") || inputLine.endsWith(\"/by\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"                throw new DukeException(\"OOPS!!! Task of type deadline must have a deadline specified.\");","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"            dateString \u003d inputLine.substring(inputLine.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"            // If the task has an empty deadline, throw a DukeException","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"            if (dateString.trim().isEmpty()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"                throw new DukeException(\"OOPS!!! Type of task deadline must not have an empty deadline.\");","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"            dateStringIndex \u003d inputLine.indexOf(\"/by\");","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"            // If the task is an event and doesn\u0027t have a time, throw a DukeException","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"            if (!inputLine.contains(\"/at\") || inputLine.endsWith(\"/at\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"                throw new DukeException(\"OOPS!!! Task of type event must have a time specified.\");","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"            dateString \u003d inputLine.substring(inputLine.indexOf(\"/at\") + 4);","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"            // If the task has an empty time, throw a DukeException","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"            if (dateString.trim().isEmpty()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"                throw new DukeException(\"OOPS! Task of type event must not have an empty time.\");","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"            dateStringIndex \u003d inputLine.indexOf(\"/at\");","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"        } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"            dateString \u003d \"\";","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"        // Extract the description","lastModifiedDate":"2022-02-25"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"        // If the description is empty, throw a DukeException","lastModifiedDate":"2022-02-25"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"            description \u003d inputLine.substring(type.length(), dateStringIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + type + \" cannot be empty.\");","lastModifiedDate":"2022-02-25"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2022-02-25"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + type + \" cannot be empty.\");","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"        // Check if the user formatted the date correctly (if task is a Deadline or Event)","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"        if (type.equals(\"deadline\") || type.equals(\"event\")) {","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"            try {","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"                dateString \u003d checkDateStringFormat(dateString);","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"        return new String[] { type.trim(), description.trim(), dateString.trim() };","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"zhenster":107}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import java.io.File;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * Represents a \u003ccode\u003eStorage\u003c/code\u003e object that contains support for","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * saving tasks/loading tasks from storage (ensures persistent storage","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" * of tasks)","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"public class Storage {","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    protected String filePath;","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"     * Helper for convertTaskStringToTask.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"     * \"Cleans\" a string representation of a task (gets rid of extraneous characters like brackets and parens).","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"     * Converts clean string representation into an ArrayList.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"     * @param taskString The string representation of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"     * @return ArrayList containing the information of the taskString.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"    public static ArrayList\u003cString\u003e cleanTaskListString(String taskString) {","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"        taskString \u003d taskString.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"(\", \"\").replace(\")\", \"\");","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"        String[] splitInformation \u003d taskString.split(\"\\\\s\");","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cString\u003e taskInformation \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"        for (int i \u003d 0; i \u003c splitInformation.length; i++) {","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"            if (splitInformation[i].trim().length() \u003e 0) {","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"                taskInformation.add(splitInformation[i]);","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"        return taskInformation;","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"     * Helper for convertTaskStringToTask.","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"     * Given an ArrayList of strings, a starting index, and an ending index, concatenates the strings in the","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"     * ArrayList within the boundaries of the indices into a single string.","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"     * @param list The given ArrayList.","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"     * @param startIndex The index to start concatenating from.","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"     * @param endIndex The index to stop concatenating at (not inclusive).","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"     * @return The concatenated string.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"    public static String concatenateStringsInArrayList(ArrayList\u003cString\u003e list, int startIndex, int endIndex) {","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"        String string \u003d \"\";","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"        for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"            string +\u003d list.get(i);","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"            string +\u003d \" \";","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        return string.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"     * Helper for loadTasksFromDisk.","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"     * Converts a string representation of a Task to a Task object.","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"     * @param taskString the string representation of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"     * @return the Task object.","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"    public static Task convertTaskStringToTask(String taskString) {","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"        Task task \u003d new Task(\"\");","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cString\u003e taskInformation \u003d cleanTaskListString(taskString);","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"        char taskType \u003d taskInformation.get(0).charAt(0);","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"        boolean isTaskDone \u003d false;","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"        if (taskInformation.get(0).length() \u003e 1) {","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"            isTaskDone \u003d true;","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"        String description;","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"        if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"            description \u003d concatenateStringsInArrayList(taskInformation, 1, taskInformation.size());","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"        } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"            description \u003d concatenateStringsInArrayList(taskInformation, 1, taskInformation.indexOf(\"by:\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"            String deadline \u003d concatenateStringsInArrayList(taskInformation,taskInformation.indexOf(\"by:\") + 1, taskInformation.size());","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"            task \u003d new Deadline(description, deadline);","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"        } else if (taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"            description \u003d concatenateStringsInArrayList(taskInformation, 1, taskInformation.indexOf(\"at:\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"            String time \u003d concatenateStringsInArrayList(taskInformation,taskInformation.indexOf(\"at:\") + 1, taskInformation.size());","lastModifiedDate":"2022-02-24"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"            task \u003d new Event(description, time);","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"        task.isDone \u003d isTaskDone;","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"        return task;","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"     * Loads tasks from storage (file of saved tasks).","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"     * @return ArrayList of Task objects loaded from storage.","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"     * @throws DukeException If the specified file to load the Task objects from is not found.","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromDisk() throws DukeException {","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"            File savedTaskFile \u003d new File(this.filePath);","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"            ArrayList\u003cString\u003e taskLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"            Scanner s \u003d new Scanner(savedTaskFile);","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"                taskLines.add(s.nextLine());","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"            for (String taskString : taskLines) {","lastModifiedDate":"2022-02-24"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"                Task task \u003d convertTaskStringToTask(taskString);","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"                taskList.add(task);","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"            return taskList;","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"The specified file was not found!\");","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"     * Helper for saveTasksToFile.","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"     * Separates this.filePath into directory and file name).","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"     * Assumption: this.filePath is in format \"directory/fileName.\"","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"     * @return array of Strings (directory, file name)","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"     * @throws DukeException if the filepath is not in the correct \"directory/fileName\" format.","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"    public String[] separateFilePath() throws DukeException {","lastModifiedDate":"2022-02-26"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"        int slashIndex \u003d filePath.indexOf(\"/\");","lastModifiedDate":"2022-02-26"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"        if (slashIndex !\u003d -1) {","lastModifiedDate":"2022-02-26"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"            String directory \u003d filePath.substring(0, slashIndex);","lastModifiedDate":"2022-02-26"},{"lineNumber":126,"author":{"gitId":"zhenster"},"content":"            String fileName \u003d filePath.substring(slashIndex + 1);","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"zhenster"},"content":"            return new String[]{directory, fileName};","lastModifiedDate":"2022-02-26"},{"lineNumber":128,"author":{"gitId":"zhenster"},"content":"        } else {","lastModifiedDate":"2022-02-26"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"Filepath is not in the correct format! \" +","lastModifiedDate":"2022-02-26"},{"lineNumber":130,"author":{"gitId":"zhenster"},"content":"                    \"The tasks you input during this iteration of Duke will not be saved. \" +","lastModifiedDate":"2022-02-26"},{"lineNumber":131,"author":{"gitId":"zhenster"},"content":"                    \"You will be unable to view the tasks the next time you run the application.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":132,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":133,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":134,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":135,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":136,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":137,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"zhenster"},"content":"     * Saves the list of tasks to the filepath of the Storage object.","lastModifiedDate":"2022-03-04"},{"lineNumber":139,"author":{"gitId":"zhenster"},"content":"     * @param taskListString string representation of list of tasks to write to file.","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"zhenster"},"content":"     * @throws IOException If there is an error saving the list of tasks to the file.","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":142,"author":{"gitId":"zhenster"},"content":"    public void saveTasksToFile(String taskListString) throws IOException {","lastModifiedDate":"2022-02-26"},{"lineNumber":143,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":144,"author":{"gitId":"zhenster"},"content":"            String[] separatedFilePath \u003d separateFilePath();","lastModifiedDate":"2022-02-26"},{"lineNumber":145,"author":{"gitId":"zhenster"},"content":"            String directory \u003d separatedFilePath[0];","lastModifiedDate":"2022-02-26"},{"lineNumber":146,"author":{"gitId":"zhenster"},"content":"            String fileName \u003d separatedFilePath[1];","lastModifiedDate":"2022-02-26"},{"lineNumber":147,"author":{"gitId":"zhenster"},"content":"            // If data directory doesn\u0027t exist, write to it","lastModifiedDate":"2022-02-26"},{"lineNumber":148,"author":{"gitId":"zhenster"},"content":"            File dataDirectory \u003d new File(directory);","lastModifiedDate":"2022-02-26"},{"lineNumber":149,"author":{"gitId":"zhenster"},"content":"            if (!dataDirectory.exists()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":150,"author":{"gitId":"zhenster"},"content":"                dataDirectory.mkdir();","lastModifiedDate":"2022-02-26"},{"lineNumber":151,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-26"},{"lineNumber":152,"author":{"gitId":"zhenster"},"content":"            // If duke.txt file doesn\u0027t exist, create it","lastModifiedDate":"2022-02-26"},{"lineNumber":153,"author":{"gitId":"zhenster"},"content":"            File dataFile \u003d new File(dataDirectory, fileName);","lastModifiedDate":"2022-02-26"},{"lineNumber":154,"author":{"gitId":"zhenster"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2022-02-26"},{"lineNumber":155,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":156,"author":{"gitId":"zhenster"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-02-26"},{"lineNumber":157,"author":{"gitId":"zhenster"},"content":"            fw.write(taskListString);","lastModifiedDate":"2022-02-26"},{"lineNumber":158,"author":{"gitId":"zhenster"},"content":"            fw.close();","lastModifiedDate":"2022-02-26"},{"lineNumber":159,"author":{"gitId":"zhenster"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":160,"author":{"gitId":"zhenster"},"content":"            // If the filePath to save tasks to is not valid","lastModifiedDate":"2022-02-26"},{"lineNumber":161,"author":{"gitId":"zhenster"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-26"},{"lineNumber":162,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":163,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":164,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":165,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":166,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":167,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"zhenster":167}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * Represents a Task object on a person\u0027s list of tasks that they must complete.","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e corresponds to a Task represented by a description of the","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * task as well as a flag for whether it has been completed.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"public class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    protected String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zhenster":30}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.util.List;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * Represents a person\u0027s list of Tasks that they must complete.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * This class contains support for maintaining and modifying a collection of Tasks.","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"public class TaskList {","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    private static String division \u003d \"_____________________________________________\\n\";","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    protected Parser parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    protected Storage storage;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    public TaskList(Storage store, Ui ui) {","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"        storage \u003d store;","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"        ui.showGreeting();","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"            taskList \u003d storage.loadTasksFromDisk();","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"            // If unable to load the tasks form the specified file, initialize an empty taskList","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"            taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"     * Prints string representation of Task objects in TaskList.","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"    public void printTaskObjects() {","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"            System.out.println(Integer.toString(taskNumber) + \": \" + task.toString());","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"            taskNumber +\u003d 1;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"     * Helper for saveTasksToFile.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"     * Formats taskList into a string to be written into a file.","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"     * @return The string representation of the list of tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"    public String formatTaskListToString() {","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"            taskListString +\u003d task.toString();","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"            taskListString +\u003d \"\\n\";","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"        return taskListString;","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"     * Marks a task as done or unmarks a task when user types \"mark\" or \"unmark\" commands, respectively.","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"     * @param line The line of user input.","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"     * @throws DukeException If the user asks to mark/unmark a Task at an out-of-bounds index in the TaskList.","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"    public void markTask(String line) throws DukeException {","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"            String[] taskInfo \u003d line.split(\"\\\\s\");","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"            int taskNumber \u003d Integer.parseInt(taskInfo[1].trim());","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"            String markAction \u003d taskInfo[0].trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"            Task targetTask \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"            // Mark the task as done","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"            if (markAction.equals(\"mark\")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"                if (targetTask.isDone \u003d\u003d true) {","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"                    System.out.println(\"Task is already marked as done.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"                } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"                    targetTask.isDone \u003d true;","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"                    System.out.println(targetTask.toString());","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"                }","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"            } else { // Unmark the task","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"                if (targetTask.isDone \u003d\u003d false) {","lastModifiedDate":"2022-02-24"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"                    System.out.println(\"Task is already marked as not done yet.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"                } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"                    targetTask.isDone \u003d false;","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"                    System.out.println(targetTask.toString());","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"                }","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"Oops, there was an error retrieving the specified task.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"     * Converts line of user input into relevant Task object (Todo, Deadline, or Event).","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"     * Adds Task object to global taskList.","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"     * @param line Line of user input.","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"    public void addTask(String line) {","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"        String[] taskInfo \u003d {\"\", \"\", \"\"};","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"            taskInfo \u003d parser.extractTaskInfo(line);","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"            String type \u003d taskInfo[0];","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"            String description \u003d taskInfo[1];","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"            String additionalInfo \u003d taskInfo[2];","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"            Task task \u003d new Task(line);","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"            if (type.equals(\"todo\")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"            } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"                task \u003d new Deadline(description, additionalInfo);","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"            } else if (type.equals(\"event\")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"                task \u003d new Event(description, additionalInfo);","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"            taskList.add(task);","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"Now you have \" + Integer.toString(taskList.size()) + \" tasks on the list.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":126,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":128,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"     * Filters relevant tasks with the specified keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"zhenster"},"content":"     * @param keywords The relevant keywords that the user wants to search the taskList for.","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"zhenster"},"content":"     * @returns ArrayList of tasks representing taskList filtered by the specified keywords.","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":133,"author":{"gitId":"zhenster"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keywords) {","lastModifiedDate":"2022-02-25"},{"lineNumber":134,"author":{"gitId":"zhenster"},"content":"        List\u003cTask\u003e filteredTasksList \u003d taskList","lastModifiedDate":"2022-02-25"},{"lineNumber":135,"author":{"gitId":"zhenster"},"content":"                .stream()","lastModifiedDate":"2022-02-25"},{"lineNumber":136,"author":{"gitId":"zhenster"},"content":"                .filter(task -\u003e task.description.contains(keywords))","lastModifiedDate":"2022-02-25"},{"lineNumber":137,"author":{"gitId":"zhenster"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-25"},{"lineNumber":138,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cTask\u003e filteredTasksArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-25"},{"lineNumber":139,"author":{"gitId":"zhenster"},"content":"        filteredTasksArrayList.addAll(filteredTasksList);","lastModifiedDate":"2022-02-25"},{"lineNumber":140,"author":{"gitId":"zhenster"},"content":"        return filteredTasksArrayList;","lastModifiedDate":"2022-02-25"},{"lineNumber":141,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":142,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":143,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":144,"author":{"gitId":"zhenster"},"content":"     * Helper for processTasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":145,"author":{"gitId":"zhenster"},"content":"     * Deletes user-specified task from the taskList.","lastModifiedDate":"2022-03-04"},{"lineNumber":146,"author":{"gitId":"zhenster"},"content":"     * @param line Line of user input.","lastModifiedDate":"2022-03-04"},{"lineNumber":147,"author":{"gitId":"zhenster"},"content":"     * @throws DukeException If the user asks to delete a Task at an out-of-bounds index in the taskList.","lastModifiedDate":"2022-03-04"},{"lineNumber":148,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":149,"author":{"gitId":"zhenster"},"content":"    public void deleteTask(String line) throws DukeException {","lastModifiedDate":"2022-02-24"},{"lineNumber":150,"author":{"gitId":"zhenster"},"content":"        String[] lineWords \u003d line.split(\"\\\\s\");","lastModifiedDate":"2022-02-24"},{"lineNumber":151,"author":{"gitId":"zhenster"},"content":"        if (lineWords.length !\u003d 2) {","lastModifiedDate":"2022-02-24"},{"lineNumber":152,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"Invalid syntax for deleting a task.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":153,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":154,"author":{"gitId":"zhenster"},"content":"        int deleteIndex \u003d Integer.parseInt(lineWords[1]) - 1;","lastModifiedDate":"2022-02-24"},{"lineNumber":155,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":156,"author":{"gitId":"zhenster"},"content":"            String taskToDelete \u003d taskList.get(deleteIndex).toString();","lastModifiedDate":"2022-02-24"},{"lineNumber":157,"author":{"gitId":"zhenster"},"content":"            taskList.remove(deleteIndex);","lastModifiedDate":"2022-02-24"},{"lineNumber":158,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":159,"author":{"gitId":"zhenster"},"content":"            System.out.println(taskToDelete);","lastModifiedDate":"2022-02-24"},{"lineNumber":160,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks on the list.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":161,"author":{"gitId":"zhenster"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":162,"author":{"gitId":"zhenster"},"content":"            throw new DukeException(\"Could not remove this task from the list of tasks.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":163,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":164,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":165,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":166,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":167,"author":{"gitId":"zhenster"},"content":"     * Processes user input (addition of tasks to the global taskList) until user types \"bye\".","lastModifiedDate":"2022-03-04"},{"lineNumber":168,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":169,"author":{"gitId":"zhenster"},"content":"    public void processTasks() {","lastModifiedDate":"2022-02-24"},{"lineNumber":170,"author":{"gitId":"zhenster"},"content":"        String line;","lastModifiedDate":"2022-02-24"},{"lineNumber":171,"author":{"gitId":"zhenster"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-24"},{"lineNumber":172,"author":{"gitId":"zhenster"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2022-02-24"},{"lineNumber":173,"author":{"gitId":"zhenster"},"content":"        // While the user has not exited the program","lastModifiedDate":"2022-02-24"},{"lineNumber":174,"author":{"gitId":"zhenster"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":175,"author":{"gitId":"zhenster"},"content":"            try {","lastModifiedDate":"2022-02-24"},{"lineNumber":176,"author":{"gitId":"zhenster"},"content":"                System.out.println(division);","lastModifiedDate":"2022-02-24"},{"lineNumber":177,"author":{"gitId":"zhenster"},"content":"                String keyWord \u003d line.split(\"\\\\s\")[0].trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":178,"author":{"gitId":"zhenster"},"content":"                if (line.equals(\"list\")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":179,"author":{"gitId":"zhenster"},"content":"                    printTaskObjects();","lastModifiedDate":"2022-02-24"},{"lineNumber":180,"author":{"gitId":"zhenster"},"content":"                } else if (keyWord.equals(\"mark\") || keyWord.equals(\"unmark\")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":181,"author":{"gitId":"zhenster"},"content":"                    markTask(line);","lastModifiedDate":"2022-02-24"},{"lineNumber":182,"author":{"gitId":"zhenster"},"content":"                    storage.saveTasksToFile(formatTaskListToString());","lastModifiedDate":"2022-02-26"},{"lineNumber":183,"author":{"gitId":"zhenster"},"content":"                } else if (keyWord.equals(\"delete\")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":184,"author":{"gitId":"zhenster"},"content":"                    deleteTask(line);","lastModifiedDate":"2022-02-24"},{"lineNumber":185,"author":{"gitId":"zhenster"},"content":"                    storage.saveTasksToFile(formatTaskListToString());","lastModifiedDate":"2022-02-26"},{"lineNumber":186,"author":{"gitId":"zhenster"},"content":"                } else if (keyWord.equals(\"find\")) {","lastModifiedDate":"2022-02-25"},{"lineNumber":187,"author":{"gitId":"zhenster"},"content":"                    String taskKeyWords \u003d line.substring(keyWord.length()).trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":188,"author":{"gitId":"zhenster"},"content":"                    ArrayList\u003cTask\u003e relevantTasks \u003d findTasks(taskKeyWords);","lastModifiedDate":"2022-02-25"},{"lineNumber":189,"author":{"gitId":"zhenster"},"content":"                    for (Task task : relevantTasks) {","lastModifiedDate":"2022-02-25"},{"lineNumber":190,"author":{"gitId":"zhenster"},"content":"                        System.out.println(task.toString());","lastModifiedDate":"2022-02-25"},{"lineNumber":191,"author":{"gitId":"zhenster"},"content":"                    }","lastModifiedDate":"2022-02-25"},{"lineNumber":192,"author":{"gitId":"zhenster"},"content":"                } else { // We can have a catch-all else condition because addTask handles invalid tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":193,"author":{"gitId":"zhenster"},"content":"                    addTask(line);","lastModifiedDate":"2022-02-24"},{"lineNumber":194,"author":{"gitId":"zhenster"},"content":"                    storage.saveTasksToFile(formatTaskListToString());","lastModifiedDate":"2022-02-26"},{"lineNumber":195,"author":{"gitId":"zhenster"},"content":"                }","lastModifiedDate":"2022-02-24"},{"lineNumber":196,"author":{"gitId":"zhenster"},"content":"                System.out.println(division);","lastModifiedDate":"2022-02-24"},{"lineNumber":197,"author":{"gitId":"zhenster"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2022-02-24"},{"lineNumber":198,"author":{"gitId":"zhenster"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":199,"author":{"gitId":"zhenster"},"content":"                System.out.println(e);","lastModifiedDate":"2022-02-24"},{"lineNumber":200,"author":{"gitId":"zhenster"},"content":"                System.out.println(division);","lastModifiedDate":"2022-02-24"},{"lineNumber":201,"author":{"gitId":"zhenster"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2022-02-24"},{"lineNumber":202,"author":{"gitId":"zhenster"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":203,"author":{"gitId":"zhenster"},"content":"                System.out.println(e);","lastModifiedDate":"2022-02-24"},{"lineNumber":204,"author":{"gitId":"zhenster"},"content":"                System.out.println(division);","lastModifiedDate":"2022-02-24"},{"lineNumber":205,"author":{"gitId":"zhenster"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2022-02-24"},{"lineNumber":206,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":207,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":208,"author":{"gitId":"zhenster"},"content":"        System.out.println(division);","lastModifiedDate":"2022-02-24"},{"lineNumber":209,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2022-02-24"},{"lineNumber":210,"author":{"gitId":"zhenster"},"content":"        System.out.println(division);","lastModifiedDate":"2022-02-24"},{"lineNumber":211,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":212,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"zhenster":212}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":" * Represents a \u003ccode\u003eTodo\u003c/code\u003e object on a person\u0027s list of tasks that they must complete.","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":" * This class inherits from the Task class and supports a slightly different toString() method","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * that contains a marker for the type of Task the Todo object is (a \"T\" for \"Todo\").","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"zhenster":17}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":" * Represents the user interface of the Duke application","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"public class Ui {","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"    private String division \u003d \"------------------------------------------------\";","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke, the greatest virtual assistant in the world :) \\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        System.out.println(division);","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        System.out.println(greeting);","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        System.out.println(division);","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"Could not find the specified file path to load tasks from!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"Will try saving tasks to the newly specified filepath.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        System.out.println(division);","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"zhenster":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"1","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"2","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"3","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"mark 1","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"todo borrow book","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"mark 5","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"unmark 5","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"unmark 5","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zhenster":16}}]
