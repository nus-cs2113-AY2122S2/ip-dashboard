[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"### Feature- Add Todo","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"Add a task to list","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"### Feature- Add Deadline","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"Add a deadline to list","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"### Feature- Add Event","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"Add a event to list","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"### Feature- Delete Task","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"Delete any type of task in the list","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"### `todo` - Add Todo","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"Add a task into the list","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"`todo read book`","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"Expected outcome:","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"[T][ ] read book ","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"### `deadline` - Add Deadline","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"Add a deadline into the list","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"Example of usage:","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"`deadline read book /by 02/02/1998`","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"Expected outcome:","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"[D][ ] read book (by: 02/02/1998)","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"### `event` - Add Event","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"Add an event into the list","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"Example of usage:","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"`event read book /at 02/02/1998`","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"Expected outcome:","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"[E][ ] read book (at: 02/02/1998)","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"### `delete` - Delete Task","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"Delete Task at particular index","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"Example of usage:","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"`delete 2`","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"Expected outcome:","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"[D][ ] read book (by: 02/02/1998)","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"### `mark` - Mark Task","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"a1021492980"},"content":"Mark the selected index of task as done","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"a1021492980"},"content":"Example of usage:","lastModifiedDate":"2022-02-26"},{"lineNumber":90,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":91,"author":{"gitId":"a1021492980"},"content":"`mark 1`","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"a1021492980"},"content":"Expected outcome:","lastModifiedDate":"2022-02-26"},{"lineNumber":94,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":95,"author":{"gitId":"a1021492980"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"[T][X] read book","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"a1021492980"},"content":"### `unmark` - Unmark Task","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"a1021492980"},"content":"Unmark the selected index of task as not done","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"a1021492980"},"content":"Example of usage:","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"a1021492980"},"content":"`mark 1`","lastModifiedDate":"2022-02-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"a1021492980"},"content":"Expected outcome:","lastModifiedDate":"2022-02-26"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":109,"author":{"gitId":"a1021492980"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-02-26"},{"lineNumber":110,"author":{"gitId":"a1021492980"},"content":"[T][ ] read book","lastModifiedDate":"2022-02-26"},{"lineNumber":111,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":112,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":113,"author":{"gitId":"a1021492980"},"content":"### `list` - Show all tasks in list","lastModifiedDate":"2022-02-26"},{"lineNumber":114,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"a1021492980"},"content":"Show all tasks in list","lastModifiedDate":"2022-02-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"a1021492980"},"content":"`list`","lastModifiedDate":"2022-02-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":123,"author":{"gitId":"a1021492980"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-02-26"},{"lineNumber":124,"author":{"gitId":"a1021492980"},"content":"1.[T] [ ] read book","lastModifiedDate":"2022-02-26"},{"lineNumber":125,"author":{"gitId":"a1021492980"},"content":"2......","lastModifiedDate":"2022-02-26"},{"lineNumber":126,"author":{"gitId":"a1021492980"},"content":"3......","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"a1021492980"},"content":"4......","lastModifiedDate":"2022-02-26"},{"lineNumber":128,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":129,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":130,"author":{"gitId":"a1021492980"},"content":"### `find` - Search tasks with keywords","lastModifiedDate":"2022-02-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"a1021492980"},"content":"Show all tasks containing provided keywords","lastModifiedDate":"2022-02-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":134,"author":{"gitId":"a1021492980"},"content":"Example of usage:","lastModifiedDate":"2022-02-26"},{"lineNumber":135,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":136,"author":{"gitId":"a1021492980"},"content":"`find ea`","lastModifiedDate":"2022-02-26"},{"lineNumber":137,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":138,"author":{"gitId":"a1021492980"},"content":"Expected outcome:","lastModifiedDate":"2022-02-26"},{"lineNumber":139,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":140,"author":{"gitId":"a1021492980"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-02-26"},{"lineNumber":141,"author":{"gitId":"a1021492980"},"content":"1.[T] [ ] read book","lastModifiedDate":"2022-02-26"},{"lineNumber":142,"author":{"gitId":"a1021492980"},"content":"2.[D] [ ] read book (by: 02/02/1998)","lastModifiedDate":"2022-02-26"},{"lineNumber":143,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":144,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":145,"author":{"gitId":"a1021492980"},"content":"### `bye` - Exit Duke","lastModifiedDate":"2022-02-26"},{"lineNumber":146,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":147,"author":{"gitId":"a1021492980"},"content":"Terminate Duke","lastModifiedDate":"2022-02-26"},{"lineNumber":148,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":149,"author":{"gitId":"a1021492980"},"content":"Example of usage:","lastModifiedDate":"2022-02-26"},{"lineNumber":150,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":151,"author":{"gitId":"a1021492980"},"content":"`bye`","lastModifiedDate":"2022-02-26"},{"lineNumber":152,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":153,"author":{"gitId":"a1021492980"},"content":"Expected outcome:","lastModifiedDate":"2022-02-26"},{"lineNumber":154,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"},{"lineNumber":155,"author":{"gitId":"a1021492980"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-02-26"},{"lineNumber":156,"author":{"gitId":"a1021492980"},"content":"````","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"-":22,"a1021492980":134}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"    protected String by;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"    protected String icon \u003d \"D\";","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"    public String getIcon() {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"        return icon;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    public String getBy() {","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"        return by;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"    public String showDate(){return \"(by: \" + getBy() + \")\" ;}","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"a1021492980":17}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"public class Duke {","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"    public static void run() throws IOException, InvalidInputException {","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"        Storage.initializeData();","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"        Ui.checkCommand();","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"        Ui.exit();","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    public static void main(String[] args) throws IOException, InvalidInputException {","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"        run();","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"a1021492980":17,"-":1}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"public class Event extends Task{","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"    protected String at;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"    protected String icon \u003d \"E\";","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"    public String getIcon() {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"        return icon;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    public String getAt() {","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"        return at;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"    public String showDate(){return \"(at: \" + getAt() + \")\" ;}","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"a1021492980":17}},{"path":"src/main/java/Duke/FileWriting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"public class FileWriting {","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"    public static void writeToFile(String filePath, String string) throws IOException {","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"        fw.write(string);","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"        fw.close();","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"a1021492980":12}},{"path":"src/main/java/Duke/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"a1021492980":3}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import static Duke.UserInput.*;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import static Duke.TaskList.*;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"public class Parser {","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"     * Returns whether the input task is todo","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"     * @return true if is todo","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    public static boolean isTodo() {","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"        return getFirstWord().equalsIgnoreCase(\"Todo\");","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"     * Returns the command type","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"     * @return the first word/ command type","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"    public static String getFirstWord() throws StringIndexOutOfBoundsException {","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"        return (line.substring(0, line.indexOf(\" \")));","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"     * Returns whether the input task is deadline","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"     * @return true if is deadline","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"    public static boolean isDeadline() {","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"        return getFirstWord().equalsIgnoreCase(\"Deadline\");","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"     * Returns whether the input task is event","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"     * @return true if is event","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"    public static boolean isEvent() {","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"        return getFirstWord().equalsIgnoreCase(\"Event\");","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"     * Returns whether the input command is delete","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"     * @return true if is delete","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"    public static boolean isDelete() {","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"        return getFirstWord().equalsIgnoreCase(\"Delete\");","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"     * Returns whether the input command is bye","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"     * @return true if is bye","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"    public static boolean isBye() {","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"        return (line.trim()).equalsIgnoreCase(\"bye\");","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"     * Returns whether the input value is within the range of quantity of task","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"     * @return true if is valid","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"    public static boolean checkValidity() throws NumberFormatException {","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"        return Integer.parseInt(line.substring(line.indexOf(\" \") + 1)) \u003c\u003d inputCount;","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"     * Returns whether the input command is find","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"     * @return true if is find","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"    public static boolean isFind() {","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"            return getFirstWord().equalsIgnoreCase(\"Find\");","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"Please enter a valid command!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"        }return false;","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"     * Returns whether the input command is list","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"     * @return true if is list","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"    public static boolean isList() {","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"        return (line.trim()).equalsIgnoreCase(\"list\");","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"     * Checks whether the format of user input is correct","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"a1021492980"},"content":"     * @param input input of users","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidInputException if command of user is invalid","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"a1021492980"},"content":"    public static void checkCommandValidity(Scanner input) throws InvalidInputException {","lastModifiedDate":"2022-02-26"},{"lineNumber":90,"author":{"gitId":"a1021492980"},"content":"        line \u003d input.nextLine().trim();","lastModifiedDate":"2022-02-26"},{"lineNumber":91,"author":{"gitId":"a1021492980"},"content":"        if (line.equalsIgnoreCase(\"todo\") || line.equalsIgnoreCase(\"find\") || line.equalsIgnoreCase(\"deadline\") || line.equalsIgnoreCase(\"event\") || line.equalsIgnoreCase(\"delete\") || line.equalsIgnoreCase(\"unmark\") || line.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"a1021492980"},"content":"            line +\u003d \u0027 \u0027;","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"a1021492980"},"content":"        } else if (!isList() \u0026\u0026 !isBye() \u0026\u0026 !line.contains(\" \")) {","lastModifiedDate":"2022-02-26"},{"lineNumber":94,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-02-26"},{"lineNumber":95,"author":{"gitId":"a1021492980"},"content":"        } else if (!isList() \u0026\u0026 !isBye() \u0026\u0026 line.contains(\" \")) {","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"            if (!validFirstWord())","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"            else if (getFirstWord().equalsIgnoreCase(\"list\"))","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"there should not be any arguments after \u0027list\u0027 command!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"a1021492980"},"content":"            else if (getFirstWord().equalsIgnoreCase(\"bye\"))","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"there should not be any arguments after \u0027bye\u0027 command!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":106,"author":{"gitId":"a1021492980"},"content":"     * Returns true if the first word is a valid command, false otherwise.","lastModifiedDate":"2022-02-26"},{"lineNumber":107,"author":{"gitId":"a1021492980"},"content":"     * @return true if the first word is a valid command","lastModifiedDate":"2022-02-26"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":109,"author":{"gitId":"a1021492980"},"content":"    public static boolean validFirstWord() {","lastModifiedDate":"2022-02-26"},{"lineNumber":110,"author":{"gitId":"a1021492980"},"content":"        return getFirstWord().equalsIgnoreCase(\"delete\") || getFirstWord().equalsIgnoreCase(\"unmark\") ||","lastModifiedDate":"2022-02-26"},{"lineNumber":111,"author":{"gitId":"a1021492980"},"content":"                getFirstWord().equalsIgnoreCase(\"list\") || getFirstWord().equalsIgnoreCase(\"bye\") ||","lastModifiedDate":"2022-02-26"},{"lineNumber":112,"author":{"gitId":"a1021492980"},"content":"                getFirstWord().equalsIgnoreCase(\"mark\") || getFirstWord().equalsIgnoreCase(\"deadline\") ||","lastModifiedDate":"2022-02-26"},{"lineNumber":113,"author":{"gitId":"a1021492980"},"content":"                getFirstWord().equalsIgnoreCase(\"event\") || getFirstWord().equalsIgnoreCase(\"todo\") ||","lastModifiedDate":"2022-02-26"},{"lineNumber":114,"author":{"gitId":"a1021492980"},"content":"                getFirstWord().equalsIgnoreCase(\"find\");","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":116,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":117,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":118,"author":{"gitId":"a1021492980"},"content":"     * Handles the command","lastModifiedDate":"2022-02-26"},{"lineNumber":119,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-26"},{"lineNumber":120,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2022-02-26"},{"lineNumber":121,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":122,"author":{"gitId":"a1021492980"},"content":"    public static void handleCommand() throws IOException, InvalidInputException {","lastModifiedDate":"2022-02-26"},{"lineNumber":123,"author":{"gitId":"a1021492980"},"content":"        while (true) {","lastModifiedDate":"2022-02-26"},{"lineNumber":124,"author":{"gitId":"a1021492980"},"content":"            Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-26"},{"lineNumber":125,"author":{"gitId":"a1021492980"},"content":"            try {","lastModifiedDate":"2022-02-26"},{"lineNumber":126,"author":{"gitId":"a1021492980"},"content":"                checkCommandValidity(input);","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"a1021492980"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":128,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-26"},{"lineNumber":129,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-02-26"},{"lineNumber":130,"author":{"gitId":"a1021492980"},"content":"            if (isList()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":131,"author":{"gitId":"a1021492980"},"content":"                printList();","lastModifiedDate":"2022-02-26"},{"lineNumber":132,"author":{"gitId":"a1021492980"},"content":"                continue;","lastModifiedDate":"2022-02-26"},{"lineNumber":133,"author":{"gitId":"a1021492980"},"content":"            } else if (isBye()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":134,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-02-26"},{"lineNumber":135,"author":{"gitId":"a1021492980"},"content":"            }  else if (isFind()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":136,"author":{"gitId":"a1021492980"},"content":"                try {","lastModifiedDate":"2022-02-26"},{"lineNumber":137,"author":{"gitId":"a1021492980"},"content":"                    findTask();","lastModifiedDate":"2022-02-26"},{"lineNumber":138,"author":{"gitId":"a1021492980"},"content":"                    continue;","lastModifiedDate":"2022-02-26"},{"lineNumber":139,"author":{"gitId":"a1021492980"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":140,"author":{"gitId":"a1021492980"},"content":"                    System.out.println(\"Please input what you want to search!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":141,"author":{"gitId":"a1021492980"},"content":"                }","lastModifiedDate":"2022-02-26"},{"lineNumber":142,"author":{"gitId":"a1021492980"},"content":"            } else if (line.contains(\" \")) {","lastModifiedDate":"2022-02-26"},{"lineNumber":143,"author":{"gitId":"a1021492980"},"content":"                if (isMark()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":144,"author":{"gitId":"a1021492980"},"content":"                    try {","lastModifiedDate":"2022-02-26"},{"lineNumber":145,"author":{"gitId":"a1021492980"},"content":"                        if (checkValidity()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":146,"author":{"gitId":"a1021492980"},"content":"                            markAsDone();","lastModifiedDate":"2022-02-26"},{"lineNumber":147,"author":{"gitId":"a1021492980"},"content":"                        } else {","lastModifiedDate":"2022-02-26"},{"lineNumber":148,"author":{"gitId":"a1021492980"},"content":"                            System.out.println(\"Invalid Index!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":149,"author":{"gitId":"a1021492980"},"content":"                        }","lastModifiedDate":"2022-02-26"},{"lineNumber":150,"author":{"gitId":"a1021492980"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":151,"author":{"gitId":"a1021492980"},"content":"                        System.out.println(\"Please enter the index of task you want to mark!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":152,"author":{"gitId":"a1021492980"},"content":"                    }","lastModifiedDate":"2022-02-26"},{"lineNumber":153,"author":{"gitId":"a1021492980"},"content":"                } else if (isUnmark()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":154,"author":{"gitId":"a1021492980"},"content":"                    try {","lastModifiedDate":"2022-02-26"},{"lineNumber":155,"author":{"gitId":"a1021492980"},"content":"                        if (checkValidity()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":156,"author":{"gitId":"a1021492980"},"content":"                            markAsUndone();","lastModifiedDate":"2022-02-26"},{"lineNumber":157,"author":{"gitId":"a1021492980"},"content":"                        } else {","lastModifiedDate":"2022-02-26"},{"lineNumber":158,"author":{"gitId":"a1021492980"},"content":"                            System.out.println(\"Invalid Index!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":159,"author":{"gitId":"a1021492980"},"content":"                        }","lastModifiedDate":"2022-02-26"},{"lineNumber":160,"author":{"gitId":"a1021492980"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":161,"author":{"gitId":"a1021492980"},"content":"                        System.out.println(\"Please enter the index of task you want to unmark!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":162,"author":{"gitId":"a1021492980"},"content":"                    }","lastModifiedDate":"2022-02-26"},{"lineNumber":163,"author":{"gitId":"a1021492980"},"content":"                } else if (isTodo()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":164,"author":{"gitId":"a1021492980"},"content":"                    try {","lastModifiedDate":"2022-02-26"},{"lineNumber":165,"author":{"gitId":"a1021492980"},"content":"                        addTodo();","lastModifiedDate":"2022-02-26"},{"lineNumber":166,"author":{"gitId":"a1021492980"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":167,"author":{"gitId":"a1021492980"},"content":"                        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":168,"author":{"gitId":"a1021492980"},"content":"                    }","lastModifiedDate":"2022-02-26"},{"lineNumber":169,"author":{"gitId":"a1021492980"},"content":"                } else if (isDeadline()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":170,"author":{"gitId":"a1021492980"},"content":"                    try {","lastModifiedDate":"2022-02-26"},{"lineNumber":171,"author":{"gitId":"a1021492980"},"content":"                        addDeadline();","lastModifiedDate":"2022-02-26"},{"lineNumber":172,"author":{"gitId":"a1021492980"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":173,"author":{"gitId":"a1021492980"},"content":"                        System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":174,"author":{"gitId":"a1021492980"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":175,"author":{"gitId":"a1021492980"},"content":"                        System.out.println(\"☹ OOPS!!! Please set the deadline using \u0027deadline /by time\u0027 format!!!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":176,"author":{"gitId":"a1021492980"},"content":"                    }","lastModifiedDate":"2022-02-26"},{"lineNumber":177,"author":{"gitId":"a1021492980"},"content":"                } else if (isEvent()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":178,"author":{"gitId":"a1021492980"},"content":"                    try {","lastModifiedDate":"2022-02-26"},{"lineNumber":179,"author":{"gitId":"a1021492980"},"content":"                        addEvent();","lastModifiedDate":"2022-02-26"},{"lineNumber":180,"author":{"gitId":"a1021492980"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":181,"author":{"gitId":"a1021492980"},"content":"                        System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":182,"author":{"gitId":"a1021492980"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":183,"author":{"gitId":"a1021492980"},"content":"                        System.out.println(\"☹ OOPS!!! Please set the event time using \u0027event /at time\u0027  format!!!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":184,"author":{"gitId":"a1021492980"},"content":"                    }","lastModifiedDate":"2022-02-26"},{"lineNumber":185,"author":{"gitId":"a1021492980"},"content":"                } else if (isDelete()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":186,"author":{"gitId":"a1021492980"},"content":"                    try {","lastModifiedDate":"2022-02-26"},{"lineNumber":187,"author":{"gitId":"a1021492980"},"content":"                        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":188,"author":{"gitId":"a1021492980"},"content":"                            if (!checkValidity())","lastModifiedDate":"2022-02-26"},{"lineNumber":189,"author":{"gitId":"a1021492980"},"content":"                                System.out.println(\"☹ OOPS!!! You do not have this task.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":190,"author":{"gitId":"a1021492980"},"content":"                            else","lastModifiedDate":"2022-02-26"},{"lineNumber":191,"author":{"gitId":"a1021492980"},"content":"                                deleteTask();","lastModifiedDate":"2022-02-26"},{"lineNumber":192,"author":{"gitId":"a1021492980"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":193,"author":{"gitId":"a1021492980"},"content":"                            System.out.println(\"☹ OOPS!!! What exactly do you want to delete?\");","lastModifiedDate":"2022-02-26"},{"lineNumber":194,"author":{"gitId":"a1021492980"},"content":"                        }","lastModifiedDate":"2022-02-26"},{"lineNumber":195,"author":{"gitId":"a1021492980"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":196,"author":{"gitId":"a1021492980"},"content":"                        System.out.println(\"☹ OOPS!!! What exactly do you want to delete?\");","lastModifiedDate":"2022-02-26"},{"lineNumber":197,"author":{"gitId":"a1021492980"},"content":"                    }","lastModifiedDate":"2022-02-26"},{"lineNumber":198,"author":{"gitId":"a1021492980"},"content":"                }","lastModifiedDate":"2022-02-26"},{"lineNumber":199,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-02-26"},{"lineNumber":200,"author":{"gitId":"a1021492980"},"content":"            Storage.writeToFile();","lastModifiedDate":"2022-02-26"},{"lineNumber":201,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":202,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":203,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"a1021492980":203}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import java.io.File;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"import static Duke.UserInput.*;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"public class Storage {","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    protected static File f \u003d new File(filePath);","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"    protected static File folder \u003d new File(\"data\");","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"     * Adds the tasks in the local file to Duke.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"     * If local file does not exist, create one","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"     * @throws FileNotFoundException if file not exist","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"    public static void initializeData() throws FileNotFoundException {","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"        userInput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"        if (!folder.exists())","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"            folder.mkdir();","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"        if (f.exists())","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"            fileReading(filePath);","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"     * Reads the data from local file","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"     * @param filePath path of the local file","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"     * @throws FileNotFoundException if file not exist","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"    public static void fileReading(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"            var str \u003d s.nextLine();","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"            if (str.charAt(3) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"                UserInput.userInput.add(new Todo(str.substring(10)));","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"                if (str.charAt(7) \u003d\u003d \u0027X\u0027)","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"                    UserInput.userInput.get(inputCount).markAsDone();","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"            } else if (str.charAt(3) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"                UserInput.userInput.add(new Deadline(str.substring(10, str.indexOf(\"(by: \")), str.substring(str.indexOf(\"(by: \") + 5,str.indexOf(\")\") )));","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"                if (str.charAt(7) \u003d\u003d \u0027X\u0027)","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"                    UserInput.userInput.get(inputCount).markAsDone();","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"            } else if (str.charAt(3) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"                UserInput.userInput.add(new Event(str.substring(10, str.indexOf(\"(at: \")), str.substring(str.indexOf(\"(at: \") + 5,str.indexOf(\")\") )));","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"                if (str.charAt(7) \u003d\u003d \u0027X\u0027)","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"                    UserInput.userInput.get(inputCount).markAsDone();","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"            inputCount++;","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"     * Writes the userInput to local file","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"    public static void writeToFile() throws IOException {","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"        File tempFile \u003d new File(\"data/tempdata.txt\");","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"        boolean a \u003d tempFile.createNewFile();","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"        FileWriting fileWriting \u003d new FileWriting();","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"            for (int i \u003d 0; i \u003c inputCount; i++) {","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"                fileWriting.writeToFile(\"data/tempdata.txt\", (i + 1) + \".[\" + UserInput.userInput.get(i).getIcon() + \"] \" + \"[\" + UserInput.userInput.get(i).getStatusIcon() + \"] \" + UserInput.userInput.get(i).description + UserInput.userInput.get(i).showDate() + System.lineSeparator());","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"            f.delete();","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"            tempFile.renameTo(f);","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"a1021492980":73}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"public class Task {","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"    protected String description;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"    protected String icon \u003d \"Null\";","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"    public void markAsDone(){","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"    public String getIcon() {","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"        return icon;","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"    public String getBy(){","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"        return \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"    public String showDate(){return \"\";}","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"    public String getAt() {","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"        return \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"a1021492980":33}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import static Duke.UserInput.*;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"public class TaskList {","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"     * Deletes the chosen task","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidInputException if task not exist","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    public static void deleteTask() throws InvalidInputException {","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"        var taskToBeDeleted \u003d UserInput.userInput.get(Integer.parseInt(line.substring(1 + line.indexOf(\" \"))) - 1);","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"        if ((line.substring(1 + line.indexOf(\" \"))).trim().isEmpty()) throw new InvalidInputException();","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"[\" + taskToBeDeleted.getIcon() + \"]\" + \"[\" + taskToBeDeleted.getStatusIcon() + \"] \" + taskToBeDeleted.description + taskToBeDeleted.showDate());","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"        inputCount--;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Now you have \" + inputCount + \" tasks in the list.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"        userInput.remove(taskToBeDeleted);","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"     * Adds the desired task","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidInputException if task is empty","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    public static void addTodo() throws InvalidInputException {","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"        if ((line.substring(1 + line.indexOf(\" \"))).trim().isEmpty()) throw new InvalidInputException();","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"        userInput.add(inputCount, new Todo((line.substring(1 + line.indexOf(\" \")))));","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"        inputCount++;","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"[\" + userInput.get(inputCount - 1).getIcon() + \"]\" + \"[\" + userInput.get(inputCount - 1).getStatusIcon() + \"] \" + userInput.get(inputCount - 1).description);","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Now you have \" + inputCount + \" tasks in the list.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"     * Adds deadline type of task","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidInputException if deadline input is empty","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"     * @throws NumberFormatException if format of input deadline is incorrect","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"    public static void addDeadline() throws InvalidInputException, NumberFormatException {","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"        if ((line.substring(1 + line.indexOf(\" \"))).trim().isEmpty()) throw new InvalidInputException();","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"        else if (!line.contains(\" /by \")) throw new NumberFormatException();","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"        userInput.add(inputCount, new Deadline((line.substring(1 + line.indexOf(\" \"), line.indexOf(\"/by\"))), line.substring(line.indexOf(\"/by\") + 4)));","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"        inputCount++;","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"[\" + userInput.get(inputCount - 1).getIcon() + \"]\" + \"[\" + userInput.get(inputCount - 1).getStatusIcon() + \"] \" + userInput.get(inputCount - 1).description + \"(by: \" + userInput.get(inputCount - 1).getBy() + \")\");","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Now you have \" + inputCount + \" tasks in the list.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"     * Adds event type of task","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidInputException if event input is empty","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"     * @throws NumberFormatException if format of input event is incorrect","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"    public static void addEvent() throws InvalidInputException, NumberFormatException {","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"        if (((line.substring(1 + line.indexOf(\" \"))).trim()).isEmpty()) throw new InvalidInputException();","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"        else if (!line.contains(\" /at \")) throw new NumberFormatException();","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"        userInput.add(inputCount, new Event((line.substring(1 + line.indexOf(\" \"), line.indexOf(\"/at\"))), line.substring(line.indexOf(\"/at\") + 4)));","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"        inputCount++;","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"[\" + userInput.get(inputCount - 1).getIcon() + \"]\" + \"[\" + userInput.get(inputCount - 1).getStatusIcon() + \"] \" + userInput.get(inputCount - 1).description + \"(at: \" + userInput.get(inputCount - 1).getAt() + \")\");","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Now you have \" + inputCount + \" tasks in the list.\");","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"     * Prints all the tasks in the list","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"    public static void printList(){","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c inputCount; i++) {","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"            System.out.println((i+1) +  \".[\" +  UserInput.userInput.get(i).getIcon() +\"] \" + \"[\" +  UserInput.userInput.get(i).getStatusIcon() +\"] \"+ UserInput.userInput.get(i).description + UserInput.userInput.get(i).showDate());","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"     * Returns true if command is unmark","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"     * @return true if command is unmark","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"    public static boolean isUnmark(){","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"        return Parser.getFirstWord().equalsIgnoreCase(\"unmark\");","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"     * Returns true if command is mark","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"a1021492980"},"content":"     * @return true if command is mark","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"a1021492980"},"content":"    public static boolean isMark(){","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"a1021492980"},"content":"        return Parser.getFirstWord().equalsIgnoreCase(\"mark\");","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":90,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":91,"author":{"gitId":"a1021492980"},"content":"     * Marks the desired task as done","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"a1021492980"},"content":"    public static void markAsDone(){","lastModifiedDate":"2022-02-26"},{"lineNumber":94,"author":{"gitId":"a1021492980"},"content":"        UserInput.valIndex \u003d Integer.parseInt(line.substring(line.indexOf(\" \") + 1));","lastModifiedDate":"2022-02-26"},{"lineNumber":95,"author":{"gitId":"a1021492980"},"content":"        UserInput.userInput.get(UserInput.valIndex - 1).markAsDone();","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"[\" + UserInput.userInput.get(UserInput.valIndex - 1).getIcon() + \"]\" +\"[\" + UserInput.userInput.get(UserInput.valIndex - 1).getStatusIcon() + \"] \" + UserInput.userInput.get(UserInput.valIndex - 1).description + UserInput.userInput.get(UserInput.valIndex -1).showDate());","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"a1021492980"},"content":"     * Marks the desired task as not done","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"a1021492980"},"content":"    public static void markAsUndone(){","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"a1021492980"},"content":"        UserInput.valIndex \u003d Integer.parseInt(line.substring(line.indexOf(\" \") + 1));","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"a1021492980"},"content":"        UserInput.userInput.get(UserInput.valIndex - 1).markAsNotDone();","lastModifiedDate":"2022-02-26"},{"lineNumber":106,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-02-26"},{"lineNumber":107,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"[\" + UserInput.userInput.get(UserInput.valIndex - 1).getIcon() + \"]\" + \"[\" + UserInput.userInput.get(UserInput.valIndex - 1).getStatusIcon() + \"] \" + UserInput.userInput.get(UserInput.valIndex - 1).description + UserInput.userInput.get(UserInput.valIndex -1).showDate());","lastModifiedDate":"2022-02-26"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":109,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":110,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":111,"author":{"gitId":"a1021492980"},"content":"     * Finds the tasks that contain the keywards entered by user","lastModifiedDate":"2022-02-26"},{"lineNumber":112,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidInputException if the entered string is empty","lastModifiedDate":"2022-02-26"},{"lineNumber":113,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":114,"author":{"gitId":"a1021492980"},"content":"    public static void findTask() throws InvalidInputException {","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"a1021492980"},"content":"        if (((line.substring(1 + line.indexOf(\" \"))).trim()).isEmpty()) throw new InvalidInputException();","lastModifiedDate":"2022-02-26"},{"lineNumber":116,"author":{"gitId":"a1021492980"},"content":"        String s \u003d line.substring(1 + line.indexOf(\" \"));","lastModifiedDate":"2022-02-26"},{"lineNumber":117,"author":{"gitId":"a1021492980"},"content":"        int indexCount \u003d 0;","lastModifiedDate":"2022-02-26"},{"lineNumber":118,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c inputCount; i++){","lastModifiedDate":"2022-02-26"},{"lineNumber":119,"author":{"gitId":"a1021492980"},"content":"            if (userInput.get(i).description.contains(s)) {","lastModifiedDate":"2022-02-26"},{"lineNumber":120,"author":{"gitId":"a1021492980"},"content":"                indexCount +\u003d 1;","lastModifiedDate":"2022-02-26"},{"lineNumber":121,"author":{"gitId":"a1021492980"},"content":"                if (indexCount \u003d\u003d 1) System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-26"},{"lineNumber":122,"author":{"gitId":"a1021492980"},"content":"                System.out.println((indexCount) +  \".[\" +  UserInput.userInput.get(i).getIcon() +\"] \" + \"[\" +  UserInput.userInput.get(i).getStatusIcon() +\"] \"+ UserInput.userInput.get(i).description + UserInput.userInput.get(i).showDate());","lastModifiedDate":"2022-02-26"},{"lineNumber":123,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-02-26"},{"lineNumber":124,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":125,"author":{"gitId":"a1021492980"},"content":"        if (indexCount \u003d\u003d 0) System.out.println(\"Sorry, none of the tasks match with your keywords!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":126,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"a1021492980":127}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"    protected String icon;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"        super(description);","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"        this.icon \u003d \"T\";","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"    public String getIcon() {","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"        return icon;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"a1021492980":12}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import static Duke.Parser.*;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"public class Ui {","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"     * Prints the welcome message when user first launch Duke","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"    public static void printWelcomeMessage(){","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"     * Keeps checking for the user input and commands","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    public static void checkCommand() throws IOException, InvalidInputException {","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"        Parser.handleCommand();","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"     * Exits Duke when user command is \u0027bye\u0027","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"    public static void exit() {","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"        if(isBye())","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"a1021492980":37}},{"path":"src/main/java/Duke/UserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package Duke;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"public class UserInput {","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"    public static ArrayList\u003cTask\u003e userInput;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"    public static int valIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"    public static int inputCount \u003d 0;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"    public static final String filePath \u003d \"data/data.txt\";","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    public static String line;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"a1021492980":11}}]
