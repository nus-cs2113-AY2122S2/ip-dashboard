[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"# duke.duke project template","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"striris":2,"-":22}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"    protected String by;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"//this.description \u003d description.substring(0, description.lastIndexOf(\"/\") + 4);","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"striris":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"    private static void greeting() {","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"        String greeting \u003d \"----------------------------------------------\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"                + \"Hello! I\u0027m Duke.Duke\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"                + \"----------------------------------------------\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"        System.out.println(greeting);","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"    private static void farewell() {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"        System.out.println(bye);","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"striris"},"content":"    private static void listTask() {","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"striris"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"striris"},"content":"        for(int i \u003d 0; i\u003ctasks.size() ; i++)","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"striris"},"content":"            System.out.println(i+1 + \".\" + tasks.get(i));","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"striris"},"content":"    private static void markTask(int taskIndex) {","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"striris"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"striris"},"content":"        tasks.get(taskIndex-1).markAsDone();","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"striris"},"content":"        System.out.println(tasks.get(taskIndex-1));","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"striris"},"content":"    private static void unmarkTask(int taskIndex) {","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"striris"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"striris"},"content":"        tasks.get(taskIndex-1).markAsNotDone();","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"striris"},"content":"        System.out.println(tasks.get(taskIndex-1));","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"striris"},"content":"    private static void addTask(Task t) {","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"striris"},"content":"        tasks.add(t);","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"striris"},"content":"        System.out.println(\"Got it! I\u0027ve added this task: \");","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"striris"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"striris"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"striris"},"content":"    private static void deleteTask(int taskIndex) {","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"striris"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"striris"},"content":"        System.out.println(tasks.get(taskIndex -1));","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"striris"},"content":"        tasks.remove(taskIndex -1);","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"striris"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"striris"},"content":"    private static void startBot() {","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"striris"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"striris"},"content":"        String by \u003d new String();","lastModifiedDate":"2022-02-20"},{"lineNumber":59,"author":{"gitId":"striris"},"content":"        String at \u003d new String();","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"striris"},"content":"        while(true){","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"striris"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"striris"},"content":"            String choice \u003d userInput.split(\" \")[0];","lastModifiedDate":"2022-02-20"},{"lineNumber":63,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"striris"},"content":"            System.out.println(\"----------------------------------------------\");","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"striris"},"content":"            if(userInput.equals(\"bye\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"striris"},"content":"                farewell();","lastModifiedDate":"2022-02-20"},{"lineNumber":67,"author":{"gitId":"striris"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"striris"},"content":"            else if(userInput.equals(\"list\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":70,"author":{"gitId":"striris"},"content":"                listTask();","lastModifiedDate":"2022-02-20"},{"lineNumber":71,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"striris"},"content":"            else if(choice.equals(\"mark\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":73,"author":{"gitId":"striris"},"content":"                int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-02-20"},{"lineNumber":74,"author":{"gitId":"striris"},"content":"                markTask(taskIndex);","lastModifiedDate":"2022-02-20"},{"lineNumber":75,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"striris"},"content":"            else if(choice.equals(\"unmark\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":77,"author":{"gitId":"striris"},"content":"                int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-02-20"},{"lineNumber":78,"author":{"gitId":"striris"},"content":"                unmarkTask(taskIndex);","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"striris"},"content":"            else if(choice.equals(\"todo\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"striris"},"content":"                String toDoDescription \u003d userInput.split(\"todo\")[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"striris"},"content":"                Task t \u003d new ToDo(toDoDescription);","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"striris"},"content":"                addTask(t);","lastModifiedDate":"2022-02-20"},{"lineNumber":84,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"striris"},"content":"            else if(choice.equals(\"deadline\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"striris"},"content":"                String[] input \u003d userInput.split(\"/by\");","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"striris"},"content":"                by \u003d input[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"striris"},"content":"                String deadlineDescription \u003d input[0].split(\"deadline\")[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"striris"},"content":"                Task d \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"striris"},"content":"                addTask(d);","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"striris"},"content":"            else if(choice.equals(\"event\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":93,"author":{"gitId":"striris"},"content":"                String[] input \u003d userInput.split(\"/at\");","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"striris"},"content":"                at \u003d input[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"striris"},"content":"                String eventDescription \u003d input[0].split(\"event\")[1].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"striris"},"content":"                Task e \u003d new Event(eventDescription, at);","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"striris"},"content":"                addTask(e);","lastModifiedDate":"2022-02-20"},{"lineNumber":98,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":99,"author":{"gitId":"striris"},"content":"            else if(choice.equals(\"delete\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":100,"author":{"gitId":"striris"},"content":"                int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-02-20"},{"lineNumber":101,"author":{"gitId":"striris"},"content":"                deleteTask(taskIndex);","lastModifiedDate":"2022-02-20"},{"lineNumber":102,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"striris"},"content":"            else{","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"striris"},"content":"                System.out.println(\"I don\u0027t understand D:\");","lastModifiedDate":"2022-02-04"},{"lineNumber":105,"author":{"gitId":"striris"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":106,"author":{"gitId":"striris"},"content":"            System.out.println(\"----------------------------------------------\");","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"striris"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"striris"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-20"},{"lineNumber":111,"author":{"gitId":"striris"},"content":"        greeting();","lastModifiedDate":"2022-02-20"},{"lineNumber":112,"author":{"gitId":"striris"},"content":"        startBot();","lastModifiedDate":"2022-02-20"},{"lineNumber":113,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"striris":111,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"    protected String at;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"striris":16}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"public class Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"    protected String description;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"    public Task(String description) {","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"striris"},"content":"    public void markAsDone(){","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"striris"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"striris"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"striris"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"striris"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"striris"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"striris":28}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"striris"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"striris"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"striris"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"striris"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"striris"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"striris"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"striris"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"striris"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"striris"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"striris"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"striris":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"striris"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"striris":1,"-":20}}]
