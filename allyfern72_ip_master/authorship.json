[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"# Bao","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"Bao is a **desktop app for managing your tasks. It is optimized for use via a Command Line Interface** (CLI). If you can","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"type fast, Bao can manage your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"- [Set Up](#setting-up)","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"## Setting up","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"Prerequisites: Java 11.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"1. Download the latest `bao.jar`.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"2. Place the file into a folder you want to use as the home folder for your Bao.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"3. Start the app. You should be able to see the following in CLI.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"   1. From file explorer: Double-click the `jar` file.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"   2. From CLI: Navigate to home folder and run `java -jar bao.jar`.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"   ","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"   ![img.png](img.png)","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"4. Type in commands in the command box and press Enter to execute it. (Type `help` for information within the app).","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"allyfern72":15,"-":4}},{"path":"data/baoTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"[E][ ] running around (at: 11/04/2222 2000)","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"[T][ ] swim","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"# Bao User Guide","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"Bao is a **desktop app for managing your tasks. It is optimized for use via a Command Line Interface** (CLI). If you can","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"type fast, Bao can manage your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"- [Set Up](#setting-up)","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"- [Features](#features)","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"    - [View help: `help`](#viewing-help-help)","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"    - [List all tasks: `list`](#list-all-tasks-list)","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"    - [Find Task by description keyword: `find`](#find-task-by-description-keyword-find)","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"    - [Add a ToDo: `todo`](#add-a-todo-todo)","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"    - [Add a Deadline: `deadline`](#add-a-deadline-deadline)","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"    - [Add an Event: `event`](#add-an-event-event)","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"    - [Delete a task: `delete`](#delete-a-task-delete)","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"    - [Mark task as done: `mark`](#mark-task-as-done-mark)","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"    - [Mark task as undone: `unmark`](#mark-task-as-undone-unmark)","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"    - [Exit Bao app: `bye`](#exit-bao-app-bye)","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"## Setting up","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"Prerequisites: Java 11.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"1. Download the latest `bao.jar`.","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"2. Place the file into a folder you want to use as the home folder for your Bao.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"3. Start the app. You should be able to see the following in CLI.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"    1. From file explorer: Double-click the `jar` file.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"    2. From CLI: Navigate to home folder and run `java -jar bao.jar`.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"   ![img.png](../img.png)","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"4. Type in commands in the command box and press Enter to execute it. (Type `help` for information within the app).","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"5. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":":memo: Notes about the command format:","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"  e.g. in `find KEYWORD`, `KEYWORD` is a parameter which can be used as `find run`.","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"- `KEYWORD`s are not case-sensitive.","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"allyfern72"},"content":"### View help: `help`","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"allyfern72"},"content":"Shows information for a specific command or a list of commands available.","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"allyfern72"},"content":"Format: `help [COMMAND_KEYWORD]`","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"allyfern72"},"content":"### List all tasks: `list`","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"allyfern72"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"allyfern72"},"content":"Format: `list`","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"allyfern72"},"content":"### Find task by description keyword: `find`","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"allyfern72"},"content":"Shows a list of all tasks in the task list that contains the keyword in their description.","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"allyfern72"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"allyfern72"},"content":"- Only the description of tasks will be searched for the keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"allyfern72"},"content":"- It is considered a match if the keyword is part of a word in the description. E.g. `lock` will match `lockdown` and `clock`.","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"allyfern72"},"content":"Example:","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"allyfern72"},"content":"`find swim` will return tasks `swimming competition` and `go for swim`.","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"allyfern72"},"content":"### Add a ToDo: `todo`","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"allyfern72"},"content":"Adds a ToDo task to the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"allyfern72"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"allyfern72"},"content":"Example:","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"allyfern72"},"content":"`todo read a book`","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"allyfern72"},"content":"### Add a Deadline: `deadline`","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"allyfern72"},"content":"Adds a task with a deadline to the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"allyfern72"},"content":"Format: `deadline DESCRIPTION /by DATETIME`","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"allyfern72"},"content":"- `DATETIME` is to be provided in the format `dd/mm/yyyy HHmm`.","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"allyfern72"},"content":"Example:","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"allyfern72"},"content":"`deadline return car /by 20/04/2022 1600`","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"allyfern72"},"content":"### Add an Event: `event`","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"allyfern72"},"content":"Adds an event to the task list. Contains the date and time of the event.","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"allyfern72"},"content":"Format: `event DESCRIPTION /at DATETIME`","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"allyfern72"},"content":"- `DATETIME` is to be provided in the format `dd/mm/yyyy HHmm`.","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"allyfern72"},"content":"Example:","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"allyfern72"},"content":"`event Christmas gathering /at 20/04/2022 2000","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"allyfern72"},"content":"`","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"allyfern72"},"content":"### Delete a task: `delete`","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"allyfern72"},"content":"Removes a task from the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"allyfern72"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"allyfern72"},"content":"- `TASK_NUMBER` can be obtained via `list`.","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"allyfern72"},"content":"Example:","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"allyfern72"},"content":"`list` followed by `delete 1` removes the 1st task in the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"allyfern72"},"content":"### Mark task as done: `mark`","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"allyfern72"},"content":"Marks a task in the task list as completed.","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"allyfern72"},"content":"Format: `mark TASK_NUMBER`","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"allyfern72"},"content":"- `TASK_NUMBER` can be obtained via `list`.","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"allyfern72"},"content":"Example:","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"allyfern72"},"content":"`list` followed by `mark 2` marks the 2nd task in the task list as completed.","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"allyfern72"},"content":"### Mark task as undone: `unmark`","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"allyfern72"},"content":"Marks a task in the task list as not completed.","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"allyfern72"},"content":"Format: `unmark TASK_NUMBER`","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"allyfern72"},"content":"- `TASK_NUMBER` can be obtained via `list`.","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"allyfern72"},"content":"Example:","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"allyfern72"},"content":"`list` followed by `unmark 3` marks the 3rd task in the task list as not completed.","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"allyfern72"},"content":"### Exit Bao app: `bye`","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"allyfern72"},"content":"Closes Bao app.","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":116,"author":{"gitId":"allyfern72"},"content":"Format: `bye`","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"allyfern72":91,"-":25}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Exceptions.MaxTaskException;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":" * Abstract base class for all commands that can be executed by Bao.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     * Performs all actions required of the command.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"     *  @param taskManager TaskManager to execute command on.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"    public abstract void execute(TaskManager taskManager, UI ui) throws IndexOutOfBoundsException, NumberFormatException,","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"            MaxTaskException;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if command is used to exit Bao app, \u003ccode\u003efalse\u003c/code\u003e otherwise.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"        return isExit;","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"     * @param isExit \u003ccode\u003etrue\u003c/code\u003e if command is used to exit Bao app, \u003ccode\u003efalse\u003c/code\u003e otherwise.","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"    public void setExit(boolean isExit) {","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":34}},{"path":"src/main/java/Commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Components.Task;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":" * Command for Bao to remove a task from the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"    private int index;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"     * Creates delete command for specified task.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"     * @param index Index (in task list) of task to be deleted.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"     * Calls \u003ccode\u003eTaskManager\u003c/code\u003e method to delete task and displays the task that was deleted.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager TaskManager to execute command on.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"            Task deletedTask \u003d taskManager.deleteTask(index);","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"            ui.deleteTaskMessage(deletedTask);","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":39}},{"path":"src/main/java/Commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":" * Command to end Bao\u0027s execution.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"     * Creates exit command.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"        super.setExit(true);","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"     * Empty method. Argument taskManager is not used.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager Not used. May be \u003ccode\u003enull\u003c/code\u003e.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) {","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"        ui.farewell();","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":28}},{"path":"src/main/java/Commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Components.Task;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":" * Command for Bao to display tasks from the task list that have the given keyword in its description.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"    private String keyword;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"     * Creates find command for specified keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"     * @param keyword Word to be searched for in task description.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"     * Searches task descriptions for the given keyword. Tasks with the keyword in the description are displayed.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager TaskManager to execute command on.","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) {","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskManager.getTasks();","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"        String taskString;","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"        int numMatched \u003d 0;","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"allyfern72"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"allyfern72"},"content":"            taskString \u003d task.toString();","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"allyfern72"},"content":"            if (taskString.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"allyfern72"},"content":"                taskStrings.add(numMatched + taskString);","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"allyfern72"},"content":"        ui.findTasksMessage(taskStrings);","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":49}},{"path":"src/main/java/Commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":" * Command to display list of available command formats to the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"    private String command;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"     * Creates help command for specified command keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"     * @param command Command to find help for.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"    public HelpCommand(String command) {","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"     * Calls \u003ccode\u003eUI\u003c/code\u003e method to display help message. Argument taskManager is not used.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager Not used. May be \u003ccode\u003enull\u003c/code\u003e.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) {","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"        ui.helpMessage(command);","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"allyfern72":31}},{"path":"src/main/java/Commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":" * Command for Bao to display all tasks in the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"     * Calls \u003ccode\u003eTaskManager\u003c/code\u003e method to display all tasks. Argument taskManager is not used directly.","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager Not used directly. May be \u003ccode\u003enull\u003c/code\u003e.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) {","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"        ui.listTasksMessage();","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":20}},{"path":"src/main/java/Commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":" * Command for Bao to mark a task in the task list as done.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"    private int index;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     * Creates mark command for specified task.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"     * @param index Index (in task list) of task to be marked.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     * Calls \u003ccode\u003eTaskManager\u003c/code\u003e method to mark task and displays the task that was marked.","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager TaskManager to execute command on.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"            ui.markMessage(taskManager.markTask(index));","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":36}},{"path":"src/main/java/Commands/NewDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Components.Deadline;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Exceptions.MaxTaskException;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":" * Command for Bao to create a task with deadline to add to task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"public class NewDeadlineCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"    private String description;","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"    private String dateTime;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"     * Creates new-deadline command with specified task description and date and time of the deadline.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"     * @param description Description of task to be completed.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"     * @param dateTime Deadline of the task. String input.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"    public NewDeadlineCommand(String description, String dateTime) {","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"     * Creates and adds the new deadline to the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager TaskManager to execute command on.","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) throws MaxTaskException {","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"        try{","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"            Deadline deadline \u003d new Deadline(description, dateTime);","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"            taskManager.addTask(deadline);","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"allyfern72"},"content":"            ui.newTaskMessage(deadline);","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":45}},{"path":"src/main/java/Commands/NewEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Components.Event;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Exceptions.MaxTaskException;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":" * Command for Bao to create a new event to add to task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"public class NewEventCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"    private String description;","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"    private String dateTime;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"     * Creates new-event command with specified task description and date and time of the event.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"     * @param description Description of event happening.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"     * @param dateTime Date and time of the event. String input.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"    public NewEventCommand(String description, String dateTime) {","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"     * Creates and adds the new event to the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager TaskManager to execute command on.","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) throws MaxTaskException {","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"        try{","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"            Event event \u003d new Event(description, dateTime);","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"            taskManager.addTask(event);","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"allyfern72"},"content":"            ui.newTaskMessage(event);","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":45}},{"path":"src/main/java/Commands/NewTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Components.Todo;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Exceptions.MaxTaskException;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":" * Command for Bao to create a task to add to task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"public class NewTodoCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"    private String description;","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"     * Creates new-todo command with specified task description.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"     * @param description Description of task to be completed.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"    public NewTodoCommand(String description) {","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"     * Creates and adds the new task to the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager TaskManager to execute command on.","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) throws MaxTaskException {","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"            taskManager.addTask(todo);","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"            ui.newTaskMessage(todo);","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":42}},{"path":"src/main/java/Commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":" * For all commands that are not implemented in Bao.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"     * Display error message. Argument taskManager is not used.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager Not used. May be \u003ccode\u003enull\u003c/code\u003e.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) {","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"        ui.unknownCommandMessage();","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":21}},{"path":"src/main/java/Commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Managers.TaskManager;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":" * Command for Bao to mark a task in the task list as not done.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"    private int index;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     * Creates unmark command for specified task.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"     * @param index Index (in task list) of task to be unmarked.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     * Calls \u003ccode\u003eTaskManager\u003c/code\u003e method to unmark task and displays the task that was unmarked.","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"     * @param taskManager TaskManager to execute command on.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"     * @param ui The interface that provides interaction with the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"    public void execute(TaskManager taskManager, UI ui) throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"            ui.unmarkMessage(taskManager.unmarkTask(index));","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":36}},{"path":"src/main/java/Components/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Components;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Functions.DateTimeHandler;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":" * Contains a task and a deadline for the task to be completed by.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     * Creates a \u003ccode\u003eDeadline\u003c/code\u003e object with specified task description and deadline.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"     * @param dateTime Deadline of the task. String input.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"    public Deadline(String description, String dateTime) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"        this.dateTime \u003d DateTimeHandler.dateTimeParse(dateTime);","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"     * @return Deadline of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"        return DateTimeHandler.toString(dateTime);","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"     * Returns task information.","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"     * @return String containing task information.","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDateTime() + \")\";","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"allyfern72":39}},{"path":"src/main/java/Components/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Components;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Functions.DateTimeHandler;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":" * Contains an event and a date and time for the event.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     * Creates a \u003ccode\u003eEvent\u003c/code\u003e object with specified event description and the date and time for the event.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"     * @param description Description of the event.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"     * @param dateTime Date and time of the event. String input.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"    public Event(String description, String dateTime) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"        this.dateTime \u003d DateTimeHandler.dateTimeParse(dateTime);","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"     * @return Date and time of the event.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"        return DateTimeHandler.toString(dateTime);","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"     * Returns event information.","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"     * @return String containing event information.","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + getDateTime() + \")\";","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"allyfern72":39}},{"path":"src/main/java/Components/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Components;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":" * Abstract base class for all tasks that are handled by Bao.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"public abstract class Task {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"    private String description;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"    private boolean isDone;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"     * Creates \u003ccode\u003eTask\u003c/code\u003e object with the specified task description. Task is set to undone by default.","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"     * @return \"X\" if task is done and \" \" if undone","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"        // mark done task with X, undone task with space","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"     * Returns task information.","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"     * @return String containing task information.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"allyfern72":41}},{"path":"src/main/java/Components/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Components;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":" * Contains a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"     * Creates a \u003ccode\u003eTodo\u003c/code\u003e object with specified task description.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"    public Todo (String description) {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"     * Returns task information.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"     * @return String containing task information.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"allyfern72":24}},{"path":"src/main/java/Constants/BaoConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Constants;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":" * Constants used by BaoUI.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"public class BaoConstants {","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"    public static final String LOGO \u003d \"\\t  ____       _       ___  \" + System.lineSeparator()","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"            + \"\\t | __ )     / \\\\     / _ \\\\\" + System.lineSeparator()","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"            + \"\\t |  _ \\\\    / _ \\\\   | | | |\" + System.lineSeparator()","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"            + \"\\t | |_) |  / ___ \\\\  | |_| |\" + System.lineSeparator()","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"            + \"\\t |____/  /_/   \\\\_\\\\  \\\\___/\";","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"    public static final String LINE_BREAK \u003d \"______________________________________________________________________________________\"","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"                                            + System.lineSeparator();","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"allyfern72":15}},{"path":"src/main/java/Constants/TaskManagerConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Constants;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":" * Constants used by \u003ccode\u003eTaskManager\u003c/code\u003e.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"public class TaskManagerConstants {","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"     * Represents the maximum number of tasks that are stored in the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"    public static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"     * Length of words used in todo command \u003ccode\u003eString\u003c/code\u003e parsing.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"    public static final int LENGTH_TODO \u003d \"todo\".length();","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"     * Length of words used in deadline command \u003ccode\u003eString\u003c/code\u003e parsing.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"    public static final int LENGTH_DEADLINE \u003d \"deadline\".length();","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     * Length of words used in event command \u003ccode\u003eString\u003c/code\u003e parsing.","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"    public static final int LENGTH_EVENT \u003d \"event\".length();","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"     * Length of words used in deadline and event command \u003ccode\u003eString\u003c/code\u003e parsing.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"    // \"/at\" and \"/by\" are of same length","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"    public static final int LENGTH_DATETIME_DELIMITER \u003d \"/at\".length();","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"allyfern72":32}},{"path":"src/main/java/Exceptions/BadDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Exceptions;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"public class BadDateTimeFormatException extends Exception {","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"    public BadDateTimeFormatException(String message) {","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"        super(message);","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"allyfern72":7}},{"path":"src/main/java/Exceptions/MaxTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Exceptions;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"public class MaxTaskException extends Exception {","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"    public MaxTaskException(String message) {","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"        super(message);","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"allyfern72":7}},{"path":"src/main/java/Exceptions/NoDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Exceptions;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"public class NoDateTimeException extends Exception {","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"    public NoDateTimeException(String message) {","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"        super(message);","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"allyfern72":7}},{"path":"src/main/java/Exceptions/NoKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Exceptions;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"public class NoKeywordException extends Exception {","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"    public NoKeywordException(String message) {","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"        super(message);","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":7}},{"path":"src/main/java/Exceptions/NoTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Exceptions;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"public class NoTaskDescriptionException extends Exception {","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"    public NoTaskDescriptionException(String message) {","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"        super(message);","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"allyfern72":7}},{"path":"src/main/java/Functions/DateTimeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Functions;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":" * Handles date and time conversion between \u003ccode\u003eLocalDateTime\u003c/code\u003e and String.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"public class DateTimeHandler {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"     * Creates \u003ccode\u003eLocalDateTime\u003c/code\u003e object from String input.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"     * @param dateTimeString String input of format \"dd/mm/yyyy HHmm\".","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"     * @throws DateTimeParseException invalid format is used.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"    public static LocalDateTime dateTimeParse(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"     * Creates String from \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"     * @param dateTime LocalDateTime object.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"     * @return String of format \"dd/mm/yyyy HHmm\".","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"    public static String toString(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":33}},{"path":"src/main/java/Functions/MessageDisp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Functions;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import static Constants.BaoConstants.LINE_BREAK;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":" * Message formatter for display to user.","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"public class MessageDisp {","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"     * Formats displayed messages between 2 line dividers.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"     * @param msgs Strings to be displayed to user.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"    public static void printWithLine(String... msgs) {","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"        System.out.print(LINE_BREAK);","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"        for (String s : msgs) {","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"            System.out.println(s);","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"        System.out.print(LINE_BREAK);","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":21}},{"path":"src/main/java/Functions/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Functions;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Commands.*;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Exceptions.BadDateTimeFormatException;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"import Exceptions.NoDateTimeException;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"import Exceptions.NoKeywordException;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"import Exceptions.NoTaskDescriptionException;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"import static Constants.TaskManagerConstants.LENGTH_EVENT;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"import static Constants.TaskManagerConstants.LENGTH_DEADLINE;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"import static Constants.TaskManagerConstants.LENGTH_TODO;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"import static Constants.TaskManagerConstants.LENGTH_DATETIME_DELIMITER;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":" * User input processor.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"public class Parser {","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"     * Creates corresponding \u003ccode\u003eCommand\u003c/code\u003e object based on keyword input.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"     * @param command Input containing command keyword and required information for command execution.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     * @return \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"     * @throws NoTaskDescriptionException no description about the task is given when adding any task.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"     * @throws NoDateTimeException no date and time is given when adding deadline or event.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"     * @throws BadDateTimeFormatException format to input date and time is not followed.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"    public static Command commandParse(String command) throws NoTaskDescriptionException, NoDateTimeException,","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"            BadDateTimeFormatException, NoKeywordException {","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"        String commandWord \u003d command.trim().split(\" \")[0].toLowerCase();","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"            switch (commandWord) {","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"            case \"list\":","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"                return new ListCommand();","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"            case \"mark\":","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"                int markIndex \u003d getIndex(command);","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"                return new MarkCommand(markIndex);","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"            case \"unmark\":","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"allyfern72"},"content":"                int unmarkIndex \u003d getIndex(command);","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"allyfern72"},"content":"                return new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"allyfern72"},"content":"            case \"todo\":","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"allyfern72"},"content":"                String todoDescription;","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"allyfern72"},"content":"                todoDescription \u003d command.substring(LENGTH_TODO).trim();","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"allyfern72"},"content":"                if (todoDescription.isBlank()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"allyfern72"},"content":"                    throw new NoTaskDescriptionException(\"Task description cannot be blank.\");","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"allyfern72"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"allyfern72"},"content":"                return new NewTodoCommand(todoDescription);","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"allyfern72"},"content":"            case \"deadline\":","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"allyfern72"},"content":"                String[] deadlineMsgParsed \u003d deadlineEventParse(command);","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"allyfern72"},"content":"                return new NewDeadlineCommand(deadlineMsgParsed[0], deadlineMsgParsed[1]);","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"allyfern72"},"content":"            case \"event\":","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"allyfern72"},"content":"                String[] eventMsgParsed \u003d deadlineEventParse(command);","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"allyfern72"},"content":"                return new NewEventCommand(eventMsgParsed[0], eventMsgParsed[1]);","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"allyfern72"},"content":"            case \"delete\":","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"allyfern72"},"content":"                int deleteIndex \u003d getIndex(command);","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"allyfern72"},"content":"                return new DeleteTaskCommand(deleteIndex);","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"allyfern72"},"content":"            case \"find\":","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"allyfern72"},"content":"                String findKeyword \u003d getKeyword(command);","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"allyfern72"},"content":"                return new FindCommand(findKeyword);","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"allyfern72"},"content":"            case \"help\":","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"allyfern72"},"content":"                String helpKeyword \u003d (command.indexOf(\" \") \u003d\u003d -1) ? \"\" : getKeyword(command);","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"allyfern72"},"content":"                return new HelpCommand(helpKeyword);","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"allyfern72"},"content":"            case \"bye\":","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"allyfern72"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"allyfern72"},"content":"            default:","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"allyfern72"},"content":"                return new UnknownCommand();","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"allyfern72"},"content":"     * Decomposes user commands for adding deadlines or events. Separates description from date and time.","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"allyfern72"},"content":"     * @param msg User command to parse.","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"allyfern72"},"content":"     * @return Array of Strings. String at index 0 is task/event description. String at index 1 is date and time.","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"allyfern72"},"content":"     * @throws NoTaskDescriptionException no description about the task is given when adding any task.","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"allyfern72"},"content":"     * @throws NoDateTimeException no date and time is given when adding deadline or event.","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"allyfern72"},"content":"     * @throws BadDateTimeFormatException format to input date and time is not followed.","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"allyfern72"},"content":"    public static String[] deadlineEventParse(String msg) throws BadDateTimeFormatException,","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"allyfern72"},"content":"            NoTaskDescriptionException, NoDateTimeException {","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"allyfern72"},"content":"        int dateTimeDelimiterIndex, descDelimiterIndex;","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"allyfern72"},"content":"        String[] strings \u003d new String[2];","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"allyfern72"},"content":"        boolean isDeadline \u003d msg.indexOf(\"/by\") \u003e -1;","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"allyfern72"},"content":"            // Get appropriate delimiters","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"allyfern72"},"content":"            if (isDeadline) {","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"allyfern72"},"content":"                dateTimeDelimiterIndex \u003d msg.indexOf(\"/by\");","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"allyfern72"},"content":"                descDelimiterIndex \u003d LENGTH_DEADLINE;","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"allyfern72"},"content":"            } else {","lastModifiedDate":"2022-03-03"},{"lineNumber":97,"author":{"gitId":"allyfern72"},"content":"                dateTimeDelimiterIndex \u003d msg.indexOf(\"/at\");","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"allyfern72"},"content":"                descDelimiterIndex \u003d LENGTH_EVENT;","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"allyfern72"},"content":"            if (dateTimeDelimiterIndex \u003d\u003d -1) {","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"allyfern72"},"content":"                throw new BadDateTimeFormatException(\"No delimiter.\");","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"allyfern72"},"content":"            // Parse message into String array (index 0 - Description, index 1 - DateTime)","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"allyfern72"},"content":"            strings[0] \u003d msg.substring(descDelimiterIndex, dateTimeDelimiterIndex).trim(); // Task description","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"allyfern72"},"content":"            strings[1] \u003d msg.substring(dateTimeDelimiterIndex + LENGTH_DATETIME_DELIMITER).trim(); // DateTime","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":109,"author":{"gitId":"allyfern72"},"content":"            if (strings[0].isBlank()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":110,"author":{"gitId":"allyfern72"},"content":"                throw new NoTaskDescriptionException(\"Task description cannot be blank.\");","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":113,"author":{"gitId":"allyfern72"},"content":"            if (strings[1].isBlank()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"allyfern72"},"content":"                throw new NoDateTimeException(\"Task DateTime is empty.\");","lastModifiedDate":"2022-03-03"},{"lineNumber":115,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":117,"author":{"gitId":"allyfern72"},"content":"            return strings;","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"allyfern72"},"content":"     * Decomposes user commands for marking, unmarking, and deleting. Separates command keyword from index of target.","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"allyfern72"},"content":"     * @param msg User command to parse.","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"allyfern72"},"content":"     * @return Index of target task in task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"allyfern72"},"content":"     * @throws NumberFormatException an integer is not given after the command keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"allyfern72"},"content":"    public static int getIndex(String msg) throws NumberFormatException {","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"allyfern72"},"content":"            // Extract Task number as String and parse into int","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"allyfern72"},"content":"            int ind \u003d Integer.parseInt( msg.substring(msg.indexOf(\u0027 \u0027) + 1) );","lastModifiedDate":"2022-03-03"},{"lineNumber":134,"author":{"gitId":"allyfern72"},"content":"            return --ind;","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":137,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":140,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"allyfern72"},"content":"     * Decomposes user commands for finding and help. Separates command keyword from target keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":142,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":143,"author":{"gitId":"allyfern72"},"content":"     * @param msg User command to parse.","lastModifiedDate":"2022-03-04"},{"lineNumber":144,"author":{"gitId":"allyfern72"},"content":"     * @return Keyword to find.","lastModifiedDate":"2022-03-04"},{"lineNumber":145,"author":{"gitId":"allyfern72"},"content":"     * @throws NoKeywordException no keyword was given after the command keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":146,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":147,"author":{"gitId":"allyfern72"},"content":"    public static String getKeyword(String msg) throws NoKeywordException {","lastModifiedDate":"2022-03-03"},{"lineNumber":148,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":149,"author":{"gitId":"allyfern72"},"content":"            if (msg.indexOf(\u0027 \u0027) \u003d\u003d -1 || msg.indexOf(\u0027 \u0027) + 1 \u003e\u003d msg.length()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":150,"author":{"gitId":"allyfern72"},"content":"                throw new NoKeywordException(\"No keyword is given\");","lastModifiedDate":"2022-03-03"},{"lineNumber":151,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":152,"author":{"gitId":"allyfern72"},"content":"            String keyword \u003d msg.substring(msg.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2022-03-03"},{"lineNumber":153,"author":{"gitId":"allyfern72"},"content":"            return keyword;","lastModifiedDate":"2022-03-03"},{"lineNumber":154,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":155,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":156,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":157,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":158,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":158}},{"path":"src/main/java/Interfaces/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Interfaces;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import Components.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"public interface UI {","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"    public abstract void helpMessage(String command);","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"    public abstract void newTaskMessage(Task task);","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"    public abstract void deleteTaskMessage(Task deletedTask);","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"    public abstract void findTasksMessage(ArrayList\u003cString\u003e taskStrings);","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"    public abstract void listTasksMessage();","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"    public abstract void markMessage(String taskString);","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"    public abstract void unmarkMessage(String taskString);","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"    public abstract void unknownCommandMessage();","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"    public abstract void farewell();","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":17}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"import Managers.BaoUI;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"public class Main {","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"    public static void main(String[] args){","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"        BaoUI bao \u003d new BaoUI(\"./data\", \"./data/baoTaskList.txt\");","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"        bao.serveUser();","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"allyfern72":8}},{"path":"src/main/java/Managers/BaoUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Managers;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"import Commands.Command;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"import Commands.UnknownCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"import Components.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"import Exceptions.BadDateTimeFormatException;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"import Exceptions.NoDateTimeException;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"import Exceptions.NoKeywordException;","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"import Exceptions.NoTaskDescriptionException;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"import Exceptions.MaxTaskException;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"import static Constants.BaoConstants.LINE_BREAK;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"import static Constants.BaoConstants.LOGO;","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"import Functions.Parser;","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"import Interfaces.UI;","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"import static Functions.MessageDisp.printWithLine;","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":" * User interface of Bao.","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"public class BaoUI implements UI {","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"    private Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"     * Creates a \u003ccode\u003eBAOUI\u003c/code\u003e object using the specified task list text data file.","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"     * @param dirPath Path of directory containing data file.","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"     * @param filePath Path of data file.","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"allyfern72"},"content":"     * @see TaskManager TaskManager","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"allyfern72"},"content":"    public BaoUI(String dirPath, String filePath) {","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"allyfern72"},"content":"        taskManager \u003d new TaskManager(new Storage(dirPath,filePath));","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"allyfern72"},"content":"     * Displays greeting message.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"allyfern72"},"content":"    private void greet() {","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"allyfern72"},"content":"        printWithLine(\"You have\" + System.lineSeparator()","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"allyfern72"},"content":"                        + LOGO + System.lineSeparator()","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"allyfern72"},"content":"                        + \"\\t\\t\\t\\t\\tat your service\",","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"allyfern72"},"content":"                        \"Hello there! Bao here!\" + System.lineSeparator()","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"allyfern72"},"content":"                        + \"How can I help?\");","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"allyfern72"},"content":"     * Displays the corresponding help message.","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"allyfern72"},"content":"     * @param command Keyword of command to seek information on. Optional.","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"allyfern72"},"content":"    public void helpMessage(String command) {","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"allyfern72"},"content":"        switch (command.toLowerCase()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"allyfern72"},"content":"        case \"help\":","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Displays a list of commands available.\", \"Usage: help\", \" \",","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"allyfern72"},"content":"                    \"Shows information for a specific command\", \"Usage: help COMMAND_KEYWORD\");","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"allyfern72"},"content":"        case \"list\":","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Shows a list of all tasks in the task list.\", \"Usage: list\");","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"allyfern72"},"content":"        case \"find\":","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Shows a list of all tasks in the task list that contains the keyword in their description.\",","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"allyfern72"},"content":"                    \"Usage: find KEYWORD\");","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"allyfern72"},"content":"        case \"todo\":","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Adds a ToDo task to the task list.\", \"Usage: todo DESCRIPTION\");","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"allyfern72"},"content":"        case \"deadline\":","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Adds a task with a deadline to the task list.\", \"Usage: deadline DESCRIPTION /by DATETIME\");","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"allyfern72"},"content":"        case \"event\":","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Adds an event to the task list.\", \"Usage: event DESCRIPTION /at DATETIME\");","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"allyfern72"},"content":"        case \"delete\":","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Removes a task from the task list.\", \"Usage delete TASK_NUMBER\");","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"allyfern72"},"content":"        case \"mark\":","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Marks a task in the task list as completed.\", \"Usage: mark TASK_NUMBER\");","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"allyfern72"},"content":"        case \"unmark\":","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Marks a task in the task list as incomplete.\", \"Usage: unmark TASK_NUMBER\");","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"allyfern72"},"content":"        case \"bye\":","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Closes Bao app.\", \"Usage: bye\");","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"allyfern72"},"content":"        case \"\":","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"Not sure what to do next? Try one of these keywords:\", \"list\", \"find\", \"todo\", \"deadline\",","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"allyfern72"},"content":"                    \"event\", \"delete\", \"mark\", \"unmark\", \"bye\");","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"allyfern72"},"content":"            break;","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"allyfern72"},"content":"        default:","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"allyfern72"},"content":"            printWithLine(\"There is no such command, try one of these keywords instead:\", \"list\", \"find\", \"todo\",","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"allyfern72"},"content":"                    \"deadline\", \"event\", \"delete\", \"mark\", \"unmark\", \"bye\");","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"allyfern72"},"content":"     * Continuously accept and execute user commands until user quits app.","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"allyfern72"},"content":"    public void serveUser() {","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"allyfern72"},"content":"        Command command \u003d new UnknownCommand();","lastModifiedDate":"2022-03-03"},{"lineNumber":110,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"allyfern72"},"content":"        greet();","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"allyfern72"},"content":"        do {","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"allyfern72"},"content":"            try {","lastModifiedDate":"2022-03-03"},{"lineNumber":115,"author":{"gitId":"allyfern72"},"content":"                String userInput \u003d in.nextLine();","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"allyfern72"},"content":"                command \u003d Parser.commandParse(userInput);","lastModifiedDate":"2022-03-03"},{"lineNumber":117,"author":{"gitId":"allyfern72"},"content":"                command.execute(taskManager, this);","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"allyfern72"},"content":"            } catch (NoTaskDescriptionException e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"allyfern72"},"content":"                printWithLine(\"What do you have to do?\");","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"allyfern72"},"content":"            } catch (NoDateTimeException | BadDateTimeFormatException e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"allyfern72"},"content":"                printWithLine(\"When is this again?\");","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"allyfern72"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"allyfern72"},"content":"                printWithLine(\"Enter date and time in dd/mm/yyyy hhmm format!\");","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"allyfern72"},"content":"            }  catch (NumberFormatException e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"allyfern72"},"content":"                printWithLine(\"So close! You just need to provide me the task number.\");","lastModifiedDate":"2022-03-03"},{"lineNumber":126,"author":{"gitId":"allyfern72"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"allyfern72"},"content":"                printWithLine(\"I\u0027ve checked and double checked. There is no such task.\");","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"allyfern72"},"content":"            }  catch (MaxTaskException e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":129,"author":{"gitId":"allyfern72"},"content":"                printWithLine(\"Hey! Calm down, Charlie Brown. You\u0027ve too many on your plate right now.\");","lastModifiedDate":"2022-03-03"},{"lineNumber":130,"author":{"gitId":"allyfern72"},"content":"            } catch (NoKeywordException e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"allyfern72"},"content":"                printWithLine(\"What are you looking for mate?\");","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"allyfern72"},"content":"            }catch (Exception e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"allyfern72"},"content":"                printWithLine(\"AHH. Sorry, I glitched. Can you try that again?\");","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"allyfern72"},"content":"        } while (!command.isExit());","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":137,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":139,"author":{"gitId":"allyfern72"},"content":"     * Displays message for adding task to task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"allyfern72"},"content":"     * @param task \u003ccode\u003eTask\u003c/code\u003e that was added.","lastModifiedDate":"2022-03-04"},{"lineNumber":142,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":143,"author":{"gitId":"allyfern72"},"content":"    public void newTaskMessage(Task task) {","lastModifiedDate":"2022-03-04"},{"lineNumber":144,"author":{"gitId":"allyfern72"},"content":"        printWithLine(\"Yup yup yup, \" + System.lineSeparator()","lastModifiedDate":"2022-03-04"},{"lineNumber":145,"author":{"gitId":"allyfern72"},"content":"                + task.toString() + \",\" + System.lineSeparator()","lastModifiedDate":"2022-03-04"},{"lineNumber":146,"author":{"gitId":"allyfern72"},"content":"                + \"annnd there we go, it\u0027s been added!\" + System.lineSeparator()","lastModifiedDate":"2022-03-04"},{"lineNumber":147,"author":{"gitId":"allyfern72"},"content":"                + \"You have \" + taskManager.getNumTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":148,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":149,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":150,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":151,"author":{"gitId":"allyfern72"},"content":"     * Displays message for removing task from task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":152,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"allyfern72"},"content":"     * @param deletedTask \u003ccode\u003eTask\u003c/code\u003e that was removed.","lastModifiedDate":"2022-03-04"},{"lineNumber":154,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":155,"author":{"gitId":"allyfern72"},"content":"    public void deleteTaskMessage(Task deletedTask) {","lastModifiedDate":"2022-03-04"},{"lineNumber":156,"author":{"gitId":"allyfern72"},"content":"        printWithLine(\"You wanna see a magic trick? Now you see this: \" + System.lineSeparator()","lastModifiedDate":"2022-03-04"},{"lineNumber":157,"author":{"gitId":"allyfern72"},"content":"                + deletedTask.toString() + \",\" + System.lineSeparator()","lastModifiedDate":"2022-03-04"},{"lineNumber":158,"author":{"gitId":"allyfern72"},"content":"                + \"AND NOW, you don\u0027t!\" + System.lineSeparator()","lastModifiedDate":"2022-03-04"},{"lineNumber":159,"author":{"gitId":"allyfern72"},"content":"                + \"Check behind your ear, for you still have \" + taskManager.getNumTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":160,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":161,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":162,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":163,"author":{"gitId":"allyfern72"},"content":"     * Displays tasks from task list that had descriptions containing a keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":164,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":165,"author":{"gitId":"allyfern72"},"content":"     * @param taskStrings Array of matching tasks Strings.","lastModifiedDate":"2022-03-04"},{"lineNumber":166,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":167,"author":{"gitId":"allyfern72"},"content":"    public void findTasksMessage(ArrayList\u003cString\u003e taskStrings) {","lastModifiedDate":"2022-03-04"},{"lineNumber":168,"author":{"gitId":"allyfern72"},"content":"        taskStrings.add(0,\"Here are the tasks you asked for: \");","lastModifiedDate":"2022-03-04"},{"lineNumber":169,"author":{"gitId":"allyfern72"},"content":"        printWithLine(taskStrings.toArray(new String[0]));","lastModifiedDate":"2022-03-04"},{"lineNumber":170,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":171,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":172,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":173,"author":{"gitId":"allyfern72"},"content":"     * Displays all tasks in task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":174,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":175,"author":{"gitId":"allyfern72"},"content":"    public void listTasksMessage() {","lastModifiedDate":"2022-03-04"},{"lineNumber":176,"author":{"gitId":"allyfern72"},"content":"        System.out.print(LINE_BREAK);","lastModifiedDate":"2022-03-04"},{"lineNumber":177,"author":{"gitId":"allyfern72"},"content":"        System.out.println(\"Here are your tasks:\");","lastModifiedDate":"2022-03-04"},{"lineNumber":178,"author":{"gitId":"allyfern72"},"content":"        taskManager.listTasks();","lastModifiedDate":"2022-03-04"},{"lineNumber":179,"author":{"gitId":"allyfern72"},"content":"        System.out.print(LINE_BREAK);","lastModifiedDate":"2022-03-04"},{"lineNumber":180,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":181,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":182,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":183,"author":{"gitId":"allyfern72"},"content":"     * Displays message for marking task from task list as done.","lastModifiedDate":"2022-03-04"},{"lineNumber":184,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":185,"author":{"gitId":"allyfern72"},"content":"     * @param taskString Updated task String.","lastModifiedDate":"2022-03-04"},{"lineNumber":186,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":187,"author":{"gitId":"allyfern72"},"content":"    public void markMessage(String taskString) {","lastModifiedDate":"2022-03-04"},{"lineNumber":188,"author":{"gitId":"allyfern72"},"content":"        printWithLine(taskString, \"Boom! Another task done already???\");","lastModifiedDate":"2022-03-04"},{"lineNumber":189,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":190,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":191,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":192,"author":{"gitId":"allyfern72"},"content":"     * Displays message for marking task from task list as undone.","lastModifiedDate":"2022-03-04"},{"lineNumber":193,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":194,"author":{"gitId":"allyfern72"},"content":"     * @param taskString Updated task String.","lastModifiedDate":"2022-03-04"},{"lineNumber":195,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":196,"author":{"gitId":"allyfern72"},"content":"    public void unmarkMessage(String taskString) {","lastModifiedDate":"2022-03-04"},{"lineNumber":197,"author":{"gitId":"allyfern72"},"content":"        printWithLine(taskString, \"Oh oops, overlooked that one did we?\");","lastModifiedDate":"2022-03-04"},{"lineNumber":198,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":199,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":200,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":201,"author":{"gitId":"allyfern72"},"content":"     * Displays error message for commands with no implementation.","lastModifiedDate":"2022-03-04"},{"lineNumber":202,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":203,"author":{"gitId":"allyfern72"},"content":"    public void unknownCommandMessage() {","lastModifiedDate":"2022-03-04"},{"lineNumber":204,"author":{"gitId":"allyfern72"},"content":"        printWithLine(\"I do not understand that yet!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":205,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":206,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":207,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":208,"author":{"gitId":"allyfern72"},"content":"     * Displays exit message.","lastModifiedDate":"2022-03-04"},{"lineNumber":209,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":210,"author":{"gitId":"allyfern72"},"content":"    public void farewell() {","lastModifiedDate":"2022-03-04"},{"lineNumber":211,"author":{"gitId":"allyfern72"},"content":"        printWithLine(\"Alright, goodbye. See you later alligator!\");","lastModifiedDate":"2022-03-03"},{"lineNumber":212,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":213,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"allyfern72":213}},{"path":"src/main/java/Managers/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Managers;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import java.io.File;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"import Components.Deadline;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"import Components.Event;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"import Components.Task;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"import Components.Todo;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":" * Manages writing and loading of task list to a text data file.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"public class Storage {","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"    private final String DIR_PATH;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     * Creates \u003ccode\u003eStorage\u003c/code\u003e object using specified directory and file.","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"     * @param dirPath Path to directory.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"     * @param filePath Path to file.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"    public Storage(String dirPath, String filePath) {","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"        DIR_PATH \u003d dirPath;","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"        FILE_PATH \u003d filePath;","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"     * Creates corresponding \u003ccode\u003eTask\u003c/code\u003e object based on task information String.","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"     * @param taskString Task information String.","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"     * @return Task object.","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"    private Task taskStringToTask(String taskString) {","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"allyfern72"},"content":"        String[] taskStringSplit \u003d taskString.split(\"] \", 2);","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"allyfern72"},"content":"        char taskType \u003d taskStringSplit[0].charAt(1);","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"allyfern72"},"content":"        boolean isDone \u003d taskStringSplit[0].charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"allyfern72"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"allyfern72"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"allyfern72"},"content":"            Todo todo \u003d new Todo(taskStringSplit[1]);","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"allyfern72"},"content":"            todo.setIsDone(isDone);","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"allyfern72"},"content":"            return todo;","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"allyfern72"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"allyfern72"},"content":"            String[] eventDescSplit \u003d taskStringSplit[1].split(\" \\\\(at: \");","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"allyfern72"},"content":"            eventDescSplit[1] \u003d eventDescSplit[1].substring(0,eventDescSplit[1].length()-1);","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"allyfern72"},"content":"            Event event \u003d new Event(eventDescSplit[0], eventDescSplit[1]);","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"allyfern72"},"content":"            event.setIsDone(isDone);","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"allyfern72"},"content":"            return event;","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"allyfern72"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"allyfern72"},"content":"            String[] deadlineDescSplit \u003d taskStringSplit[1].split(\" \\\\(by: \");","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"allyfern72"},"content":"            deadlineDescSplit[1] \u003d deadlineDescSplit[1].substring(0,deadlineDescSplit[1].length()-1);","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"allyfern72"},"content":"            Deadline deadline \u003d new Deadline(deadlineDescSplit[0], deadlineDescSplit[1]);","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"allyfern72"},"content":"            deadline.setIsDone(isDone);","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"allyfern72"},"content":"            return deadline;","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"allyfern72"},"content":"        default:","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"allyfern72"},"content":"            return null;","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"allyfern72"},"content":"     * Converts task list text data into a list of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"allyfern72"},"content":"     * @return Task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"allyfern72"},"content":"     * @throws IOException data file cannot be read.","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"allyfern72"},"content":"    ArrayList\u003cTask\u003e loadTasklist() throws IOException {","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"allyfern72"},"content":"            File dataDir \u003d new File(DIR_PATH);","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"allyfern72"},"content":"            if (!dataDir.exists()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"allyfern72"},"content":"                dataDir.mkdir();","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"allyfern72"},"content":"            File tasklistFile \u003d new File(FILE_PATH);","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"allyfern72"},"content":"            if (!tasklistFile.exists()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"allyfern72"},"content":"                tasklistFile.createNewFile();","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"allyfern72"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"allyfern72"},"content":"            Scanner s \u003d new Scanner(tasklistFile);","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"allyfern72"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"allyfern72"},"content":"                String taskString \u003d s.nextLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"allyfern72"},"content":"                tasks.add(taskStringToTask(taskString));","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"allyfern72"},"content":"            return tasks;","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"allyfern72"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"allyfern72"},"content":"     * Saves task list on the app into the text data file.","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"allyfern72"},"content":"     * @param tasks Task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"allyfern72"},"content":"     * @throws IOException data file cannot be written into.","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"allyfern72"},"content":"    void saveTasklist(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"allyfern72"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"allyfern72"},"content":"            fw.write(\"\");","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"allyfern72"},"content":"            fw.close();","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"allyfern72"},"content":"            fw \u003d new FileWriter(FILE_PATH,true);","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"allyfern72"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"allyfern72"},"content":"                fw.write(tasks.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"allyfern72"},"content":"            fw.close();","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"allyfern72"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"allyfern72":119}},{"path":"src/main/java/Managers/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"allyfern72"},"content":"package Managers;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"allyfern72"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"allyfern72"},"content":"import Components.Task;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"allyfern72"},"content":"import Exceptions.MaxTaskException;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"allyfern72"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"allyfern72"},"content":"import static Constants.TaskManagerConstants.MAX_TASKS;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"allyfern72"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"allyfern72"},"content":" * Contains task list and methods to make changes to the task list or to tasks in the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"allyfern72"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"allyfern72"},"content":"public class TaskManager {","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"allyfern72"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"allyfern72"},"content":"    private int numTasks;","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"allyfern72"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"allyfern72"},"content":"     * Creates \u003ccode\u003eTaskManager\u003c/code\u003e object with task list loaded from storage manager.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"allyfern72"},"content":"     * @param storage Data file storage manager.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"allyfern72"},"content":"    public TaskManager(Storage storage) {","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"allyfern72"},"content":"        numTasks \u003d 0;","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"allyfern72"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"allyfern72"},"content":"            loadTasklist();","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"allyfern72"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"allyfern72"},"content":"            System.out.println(\"Loading failed. Let\u0027s start on a clean slate.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"allyfern72"},"content":"     * Adds task to task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"allyfern72"},"content":"     * @param task \u003ccode\u003eTask\u003c/code\u003e object to add to task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"allyfern72"},"content":"     * @throws MaxTaskException task list is at maximum capacity of tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"allyfern72"},"content":"    public void addTask(Task task) throws MaxTaskException {","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"allyfern72"},"content":"            if (numTasks \u003d\u003d MAX_TASKS) {","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"allyfern72"},"content":"                throw new MaxTaskException(\"Max tasks reached\");","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"allyfern72"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"allyfern72"},"content":"            numTasks++;","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"allyfern72"},"content":"            tasks.add(task);","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"allyfern72"},"content":"            saveTasklist();","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"allyfern72"},"content":"     * Removes task from task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"allyfern72"},"content":"     * @param index Index (in task list) of task to delete.","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"allyfern72"},"content":"     * @return Removed \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"allyfern72"},"content":"     * @throws NumberFormatException an integer is not given after the command keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"allyfern72"},"content":"    public Task deleteTask(int index) throws NumberFormatException {","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"allyfern72"},"content":"            Task deletedTask \u003d tasks.remove(index);","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"allyfern72"},"content":"            numTasks--;","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"allyfern72"},"content":"            saveTasklist();","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"allyfern72"},"content":"            return deletedTask;","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"allyfern72"},"content":"     * Marks task in task list as done.","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"allyfern72"},"content":"     * @param index Index (in task list) of task to mark.","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"allyfern72"},"content":"     * @return String of updated task information.","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"allyfern72"},"content":"     * @throws NumberFormatException an integer is not given after the command keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"allyfern72"},"content":"     * @throws IndexOutOfBoundsException no task exists with given index.","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"allyfern72"},"content":"    public String markTask(int index) throws NumberFormatException, IndexOutOfBoundsException {","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"allyfern72"},"content":"            tasks.get(index).setIsDone(true);","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"allyfern72"},"content":"            saveTasklist();","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"allyfern72"},"content":"            return tasks.get(index).toString();","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"allyfern72"},"content":"     * Marks task in task list as undone.","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"allyfern72"},"content":"     * @param index Index (in task list) of task to unmark.","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"allyfern72"},"content":"     * @return String of updated task information.","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"allyfern72"},"content":"     * @throws NumberFormatException an integer is not given after the command keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"allyfern72"},"content":"     * @throws IndexOutOfBoundsException no task exists with given index.","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"allyfern72"},"content":"    public String unmarkTask(int index) throws NumberFormatException, IndexOutOfBoundsException {","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"allyfern72"},"content":"            tasks.get(index).setIsDone(false);","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"allyfern72"},"content":"            saveTasklist();","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"allyfern72"},"content":"            return tasks.get(index).toString();","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"allyfern72"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-02-11"},{"lineNumber":107,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":108,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":109,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"allyfern72"},"content":"     * Displays tasks in task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"allyfern72"},"content":"    public void listTasks() {","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"allyfern72"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2022-02-10"},{"lineNumber":115,"author":{"gitId":"allyfern72"},"content":"            System.out.println(i+1 + \". \" + tasks.get(i).toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":118,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":119,"author":{"gitId":"allyfern72"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"allyfern72"},"content":"        return tasks;","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"allyfern72"},"content":"     * @return Number of tasks in task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"allyfern72"},"content":"    public int getNumTasks() {","lastModifiedDate":"2022-03-03"},{"lineNumber":127,"author":{"gitId":"allyfern72"},"content":"        return numTasks;","lastModifiedDate":"2022-02-10"},{"lineNumber":128,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":129,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":130,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"allyfern72"},"content":"     * Calls \u003ccode\u003estorage\u003c/code\u003e method to load task list from data file.","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"allyfern72"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"allyfern72"},"content":"     * @throws IOException data file cannot be read.","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"allyfern72"},"content":"    private void loadTasklist() throws IOException {","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":137,"author":{"gitId":"allyfern72"},"content":"            tasks \u003d storage.loadTasklist();","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"allyfern72"},"content":"            numTasks \u003d tasks.size();","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"allyfern72"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"allyfern72"},"content":"            throw e;","lastModifiedDate":"2022-03-03"},{"lineNumber":141,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"allyfern72"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":144,"author":{"gitId":"allyfern72"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":145,"author":{"gitId":"allyfern72"},"content":"     * Calls \u003ccode\u003estorage\u003c/code\u003e method to save task list into data file.","lastModifiedDate":"2022-03-04"},{"lineNumber":146,"author":{"gitId":"allyfern72"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":147,"author":{"gitId":"allyfern72"},"content":"    private void saveTasklist() {","lastModifiedDate":"2022-03-03"},{"lineNumber":148,"author":{"gitId":"allyfern72"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":149,"author":{"gitId":"allyfern72"},"content":"            storage.saveTasklist(tasks);","lastModifiedDate":"2022-03-03"},{"lineNumber":150,"author":{"gitId":"allyfern72"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":151,"author":{"gitId":"allyfern72"},"content":"            System.out.println(\"Saving failed.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":152,"author":{"gitId":"allyfern72"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"allyfern72"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":154,"author":{"gitId":"allyfern72"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"allyfern72":154}}]
