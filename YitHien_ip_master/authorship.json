[{"path":"data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YitHien"},"content":"0 E something /at","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"YitHien":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"YitHien"},"content":"### Add a new To-Do task","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"YitHien"},"content":"Users may add a task that is to be done without a particular deadline.","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"YitHien"},"content":"### Add a new Deadline task","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"YitHien"},"content":"Users may add tasks that have a set due date by indicating that it is a Deadline task.","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"YitHien"},"content":"### Add a new Event task","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"YitHien"},"content":"Users may add events that are scheduled to occur some time in the future.","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"YitHien"},"content":"### List out all tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"YitHien"},"content":"Users may list out all added tasks in the order that they were added.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"YitHien"},"content":"### Remove a task","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"YitHien"},"content":"Users may remove a task based on its current index in the list. Users are advised to use `list` to verify the","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"YitHien"},"content":"task\u0027s index before attempting to remove a task.","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"YitHien"},"content":"### Look for a task using a keyword","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"YitHien"},"content":"Users may use search terms to look for all tasks that contain a particular keyword. A list of tasks will be","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"YitHien"},"content":"displayed containing the keyword.","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"YitHien"},"content":"### Mark or unmark a task as Done/Not Done","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"YitHien"},"content":"Users may mark or unmark a specific task as Done or Not Done using its current index in the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"YitHien"},"content":"Users are advised to use `list` to verify the task\u0027s index before attempting to mark or unmark it.","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"YitHien"},"content":"### `deadline` - Add a new Deadline task","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"YitHien"},"content":"To add a new Deadline task, the keyword `deadline` is used followed by a short description and a delimiter of `/by`,","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"YitHien"},"content":"followed by the due date, in DD-MM-YYYY format.","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"YitHien"},"content":"`deadline Finish CS2113 iP /by 18-02-2022`","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"YitHien"},"content":"The Deadline task will be added to the list of tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"YitHien"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"YitHien"},"content":"[D] [ ] Finish CS2113 iP (by: 18-02-2022)","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":54,"author":{"gitId":"YitHien"},"content":"Total: 1 task(s) in the list!","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"YitHien"},"content":"Task added!","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":57,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"YitHien"},"content":"### `list` - List out all currently saved tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"YitHien"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"YitHien"},"content":"`list`","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"YitHien"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"YitHien"},"content":"1. [D] [ ] Finish CS2113 iP (by: 18-02-2022)","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"YitHien"},"content":"### `delete` - Delete a particular task that exists in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"YitHien"},"content":"After deleting a task, the task is shown before it is removed from the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"YitHien"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"YitHien"},"content":"`delete 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"YitHien"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"YitHien"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"YitHien"},"content":"[D] [ ] Finish CS2113 iP (by: 18-02-2022)","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"YitHien"},"content":"Total: 0 task(s) in the list!","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"YitHien"},"content":"Task deleted!","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"YitHien":64,"-":23}},{"path":"src/main/java/aeon/Aeon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YitHien"},"content":"package aeon;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"YitHien"},"content":"import static aeon.controller.Command.CommandProcessor;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"YitHien"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"YitHien"},"content":" * Represents Aeon itself, displaying a welcome message before making sense","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"YitHien"},"content":" * of user inputs that are typed in. Upon exit, displays goodbye message.","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"YitHien"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"YitHien"},"content":"public class Aeon {","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"YitHien"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"YitHien"},"content":"            printWelcomeMessage();","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"YitHien"},"content":"            CommandProcessor();","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"YitHien"},"content":"            printGoodbyeMessage();","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"YitHien"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"YitHien"},"content":"        String logo \u003d \"     /\\\\   |  ____/ __ \\\\| \\\\ | |\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"YitHien"},"content":"                + \"    /  \\\\  | |__ | |  | |  \\\\| |\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"YitHien"},"content":"                + \"   / /\\\\ \\\\ |  __|| |  | | . ` |\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"YitHien"},"content":"                + \"  / ____ \\\\| |___| |__| | |\\\\  |\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"YitHien"},"content":"                + \" /_/    \\\\_\\\\______\\\\____/|_| \\\\_|\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"YitHien"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"YitHien"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"YitHien"},"content":"        System.out.println(\"Hello! I\u0027m AEON, your personal TO-DO list bot!\\nWhat can I do for you?\");","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"YitHien"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"YitHien"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"YitHien"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"YitHien"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"YitHien":33}},{"path":"src/main/java/aeon/controller/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YitHien"},"content":"package aeon.controller;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"YitHien"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"YitHien"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"YitHien"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"YitHien"},"content":"import java.util.Date;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"YitHien"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"YitHien"},"content":"import aeon.Aeon;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"YitHien"},"content":"import aeon.exception.AeonException;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"YitHien"},"content":"import aeon.task.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"YitHien"},"content":"import aeon.task.Event;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"YitHien"},"content":"import aeon.task.Todo;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"YitHien"},"content":"import aeon.task.Deadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"YitHien"},"content":"import java.io.File;","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"YitHien"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"YitHien"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"YitHien"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"YitHien"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"YitHien"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"YitHien"},"content":" * The core function of parsing and executing the user\u0027s commands into Aeon, and automatically","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"YitHien"},"content":" * saving/loading all tasks to a text file on disk","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"YitHien"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"YitHien"},"content":"public class Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_NOT_FOUND \u003d","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"YitHien"},"content":"            \"Task not found! Perhaps try listing out the available tasks first...\";","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"YitHien"},"content":"    public static final String INVALID_INTEGER_MSG \u003d \"Please type in a valid integer!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"YitHien"},"content":"    public static final String TODO_DESC_ERROR \u003d \"Description of TODO cannot be empty!!!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"YitHien"},"content":"    public static final String DEADLINE_FORMAT_ERR \u003d","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"YitHien"},"content":"            \"Please try again in this format: deadline \u003cdescription\u003e /by \u003cdate\u003e\";","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"YitHien"},"content":"    public static final String EVENT_FORMAT_ERR \u003d","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"YitHien"},"content":"            \"Please try again in this format: event \u003cdescription\u003e /at \u003cdate\u003e\";","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"YitHien"},"content":"    public static final String INVALID_COMMAND \u003d \"Not sure what you were trying to do...\";","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_ADDED \u003d \"Task added!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"YitHien"},"content":"    public static final String CONGRATULATIONS_MSG \u003d \"Congrats on completing this task!:\";","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"YitHien"},"content":"    public static final String MARK_UNDONE \u003d \"Alright, marked as undone!:\";","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"YitHien"},"content":"    public static final String NO_TASKS \u003d \"No tasks!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"YitHien"},"content":"    public static final String FILE_PATH \u003d \"./data/tasklist.txt\";","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"YitHien"},"content":"    public static final String DIR_PATH \u003d \"./data/\";","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"YitHien"},"content":"    public static final String CREATE_FILE_FAILED \u003d \"Failed to create file to store task!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"YitHien"},"content":"    public static final int COMMAND_WORD \u003d 0;","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_LIST \u003d \"list\";","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_MARK \u003d \"mark\";","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_TODO \u003d \"todo\";","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_EVENT \u003d \"event\";","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_DELETE \u003d \"delete\";","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_FIND \u003d \"find\";","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"YitHien"},"content":"    public static final int TASK_TYPE \u003d 0;","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"YitHien"},"content":"    public static final String TASKTYPE_TODO \u003d \"T\";","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"YitHien"},"content":"    public static final String TASKTYPE_DEADLINE \u003d \"D\";","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"YitHien"},"content":"    public static final String TASKTYPE_EVENT \u003d \"E\";","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"YitHien"},"content":"    public static final String USER_BYE \u003d \"bye\";","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_MARKED \u003d \"X\";","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"YitHien"},"content":"    public static final int TARGET_WORD \u003d 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"YitHien"},"content":"    public static final String EMPTY_KEYWORD_MSG \u003d \"Keyword to look for cannot be empty!!!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_DETAILS_MISSING_MSG \u003d \"Details of task not complete!!!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"YitHien"},"content":"    public static final String TEXT_FILE_INCORRECT_CONTENTS \u003d","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"YitHien"},"content":"            \"Some content(s) of text file do not match the correct format! Ignoring faulty commands...\";","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"YitHien"},"content":"    public static final String UNKNOWN_COMMAND_TEXT_FILE \u003d","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"YitHien"},"content":"            \"Unknown command found in text file! Ignoring and moving on...\";","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"YitHien"},"content":"    private static ArrayList\u003cString\u003e rawDescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"YitHien"},"content":"    public static final String TASK_DELETED \u003d \"Task deleted!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"YitHien"},"content":"     * Processes each command input by the user and executes the respective methods depending","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"YitHien"},"content":"     * on the task specified","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"YitHien"},"content":"    public static void CommandProcessor() {","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"YitHien"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"YitHien"},"content":"            readSavedTaskList(list);","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"YitHien"},"content":"        } catch (AeonException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"YitHien"},"content":"            System.out.println(TEXT_FILE_INCORRECT_CONTENTS);","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"YitHien"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-05"},{"lineNumber":79,"author":{"gitId":"YitHien"},"content":"        String response \u003d in.nextLine();","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"YitHien"},"content":"        while (!response.equals(USER_BYE)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"YitHien"},"content":"            String[] words \u003d response.split(\" \", 2);","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"YitHien"},"content":"            executeCommand(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"YitHien"},"content":"            response \u003d in.nextLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"YitHien"},"content":"     * Determines which method to execute based on the user\u0027s input, and executes it","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks entered by the user","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"YitHien"},"content":"     * @param words Command itself","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"YitHien"},"content":"    private static void executeCommand(ArrayList\u003cTask\u003e list, String[] words) {","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"YitHien"},"content":"        switch (words[COMMAND_WORD]) {","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"YitHien"},"content":"        case TASK_LIST:","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"YitHien"},"content":"            printListOfTasks(list);","lastModifiedDate":"2022-02-05"},{"lineNumber":96,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":97,"author":{"gitId":"YitHien"},"content":"        case TASK_UNMARK:","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"YitHien"},"content":"            executeUnmark(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":100,"author":{"gitId":"YitHien"},"content":"        case TASK_MARK:","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"YitHien"},"content":"            executeMark(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"YitHien"},"content":"        case TASK_TODO:","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"YitHien"},"content":"            executeTodo(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"YitHien"},"content":"        case TASK_DEADLINE:","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"YitHien"},"content":"            executeDeadline(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"YitHien"},"content":"        case TASK_EVENT:","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"YitHien"},"content":"            executeEvent(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"YitHien"},"content":"        case TASK_DELETE:","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"YitHien"},"content":"            executeDelete(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"YitHien"},"content":"        case TASK_FIND:","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"YitHien"},"content":"            //String target \u003d words[TARGET_WORD];","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"YitHien"},"content":"            executeFind(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"YitHien"},"content":"        default:","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"YitHien"},"content":"            System.out.println(INVALID_COMMAND);","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"YitHien"},"content":"     * Performs the deletion of a task based on its index","lastModifiedDate":"2022-02-18"},{"lineNumber":127,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks entered by the user","lastModifiedDate":"2022-02-18"},{"lineNumber":128,"author":{"gitId":"YitHien"},"content":"     * @param words Command itself","lastModifiedDate":"2022-02-18"},{"lineNumber":129,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":130,"author":{"gitId":"YitHien"},"content":"    private static void executeDelete(ArrayList\u003cTask\u003e list, String[] words) {","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":132,"author":{"gitId":"YitHien"},"content":"            deleteTask(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_DELETED);","lastModifiedDate":"2022-02-18"},{"lineNumber":134,"author":{"gitId":"YitHien"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":135,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_NOT_FOUND);","lastModifiedDate":"2022-02-05"},{"lineNumber":136,"author":{"gitId":"YitHien"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":137,"author":{"gitId":"YitHien"},"content":"            System.out.println(INVALID_INTEGER_MSG);","lastModifiedDate":"2022-02-05"},{"lineNumber":138,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":139,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":141,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"YitHien"},"content":"     * Inserts a new event into the list of tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks entered by the user","lastModifiedDate":"2022-02-18"},{"lineNumber":144,"author":{"gitId":"YitHien"},"content":"     * @param words Command itself","lastModifiedDate":"2022-02-18"},{"lineNumber":145,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":146,"author":{"gitId":"YitHien"},"content":"    private static void executeEvent(ArrayList\u003cTask\u003e list, String[] words) {","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":148,"author":{"gitId":"YitHien"},"content":"            addEventTask(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":149,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_ADDED);","lastModifiedDate":"2022-02-18"},{"lineNumber":150,"author":{"gitId":"YitHien"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":151,"author":{"gitId":"YitHien"},"content":"            System.out.println(EVENT_FORMAT_ERR);","lastModifiedDate":"2022-02-18"},{"lineNumber":152,"author":{"gitId":"YitHien"},"content":"        } catch (AeonException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_DETAILS_MISSING_MSG);","lastModifiedDate":"2022-02-18"},{"lineNumber":154,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":155,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":156,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":157,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":158,"author":{"gitId":"YitHien"},"content":"     * Inserts a new deadline into the list of tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":159,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks entered by the user","lastModifiedDate":"2022-02-18"},{"lineNumber":160,"author":{"gitId":"YitHien"},"content":"     * @param words Command itself","lastModifiedDate":"2022-02-18"},{"lineNumber":161,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":162,"author":{"gitId":"YitHien"},"content":"    private static void executeDeadline(ArrayList\u003cTask\u003e list, String[] words) {","lastModifiedDate":"2022-02-18"},{"lineNumber":163,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":164,"author":{"gitId":"YitHien"},"content":"            addDeadlineTask(list, words);","lastModifiedDate":"2022-02-05"},{"lineNumber":165,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_ADDED);","lastModifiedDate":"2022-02-18"},{"lineNumber":166,"author":{"gitId":"YitHien"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":167,"author":{"gitId":"YitHien"},"content":"            System.out.println(DEADLINE_FORMAT_ERR);","lastModifiedDate":"2022-02-05"},{"lineNumber":168,"author":{"gitId":"YitHien"},"content":"        } catch (AeonException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":169,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_DETAILS_MISSING_MSG);","lastModifiedDate":"2022-02-18"},{"lineNumber":170,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":171,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":172,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":173,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":174,"author":{"gitId":"YitHien"},"content":"     * Inserts a new \u0027To-Do\u0027 task into the list of tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":175,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks entered by the user","lastModifiedDate":"2022-02-18"},{"lineNumber":176,"author":{"gitId":"YitHien"},"content":"     * @param words Command itself","lastModifiedDate":"2022-02-18"},{"lineNumber":177,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":178,"author":{"gitId":"YitHien"},"content":"    private static void executeTodo(ArrayList\u003cTask\u003e list, String[] words) {","lastModifiedDate":"2022-02-18"},{"lineNumber":179,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":180,"author":{"gitId":"YitHien"},"content":"            addTodoTask(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":181,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_ADDED);","lastModifiedDate":"2022-02-18"},{"lineNumber":182,"author":{"gitId":"YitHien"},"content":"        } catch (IndexOutOfBoundsException | AeonException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":183,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_DETAILS_MISSING_MSG);","lastModifiedDate":"2022-02-18"},{"lineNumber":184,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":185,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":186,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":187,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":188,"author":{"gitId":"YitHien"},"content":"     * Marks a task as Done based on its index.","lastModifiedDate":"2022-02-18"},{"lineNumber":189,"author":{"gitId":"YitHien"},"content":"     * Users may only mark tasks that are currently existing in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":190,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks entered by the user","lastModifiedDate":"2022-02-18"},{"lineNumber":191,"author":{"gitId":"YitHien"},"content":"     * @param words Command itself","lastModifiedDate":"2022-02-18"},{"lineNumber":192,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":193,"author":{"gitId":"YitHien"},"content":"    private static void executeMark(ArrayList\u003cTask\u003e list, String[] words) {","lastModifiedDate":"2022-02-18"},{"lineNumber":194,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":195,"author":{"gitId":"YitHien"},"content":"            markTask(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":196,"author":{"gitId":"YitHien"},"content":"            System.out.println(CONGRATULATIONS_MSG);","lastModifiedDate":"2022-02-18"},{"lineNumber":197,"author":{"gitId":"YitHien"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":198,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_NOT_FOUND);","lastModifiedDate":"2022-02-11"},{"lineNumber":199,"author":{"gitId":"YitHien"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":200,"author":{"gitId":"YitHien"},"content":"            System.out.println(INVALID_INTEGER_MSG);","lastModifiedDate":"2022-02-11"},{"lineNumber":201,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":202,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":203,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":204,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":205,"author":{"gitId":"YitHien"},"content":"     * Marks a task as Not Done based on its index.","lastModifiedDate":"2022-02-18"},{"lineNumber":206,"author":{"gitId":"YitHien"},"content":"     * Users may only unmark tasks that are currently existing in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":207,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks entered by the user","lastModifiedDate":"2022-02-18"},{"lineNumber":208,"author":{"gitId":"YitHien"},"content":"     * @param words Command itself","lastModifiedDate":"2022-02-18"},{"lineNumber":209,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":210,"author":{"gitId":"YitHien"},"content":"    private static void executeUnmark(ArrayList\u003cTask\u003e list, String[] words) {","lastModifiedDate":"2022-02-18"},{"lineNumber":211,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":212,"author":{"gitId":"YitHien"},"content":"            unmarkTask(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":213,"author":{"gitId":"YitHien"},"content":"            System.out.println(MARK_UNDONE);","lastModifiedDate":"2022-02-18"},{"lineNumber":214,"author":{"gitId":"YitHien"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":215,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_NOT_FOUND);","lastModifiedDate":"2022-02-18"},{"lineNumber":216,"author":{"gitId":"YitHien"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":217,"author":{"gitId":"YitHien"},"content":"            System.out.println(INVALID_INTEGER_MSG);","lastModifiedDate":"2022-02-18"},{"lineNumber":218,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":219,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":220,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":221,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":222,"author":{"gitId":"YitHien"},"content":"     * Looks for all existing tasks that contain a specific keyword.","lastModifiedDate":"2022-02-18"},{"lineNumber":223,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks entered by the user","lastModifiedDate":"2022-02-18"},{"lineNumber":224,"author":{"gitId":"YitHien"},"content":"     * @param words Command itself","lastModifiedDate":"2022-02-18"},{"lineNumber":225,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":226,"author":{"gitId":"YitHien"},"content":"    private static void executeFind(ArrayList\u003cTask\u003e list, String[] words) {","lastModifiedDate":"2022-02-18"},{"lineNumber":227,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":228,"author":{"gitId":"YitHien"},"content":"            lookForTasks(list, words);","lastModifiedDate":"2022-02-18"},{"lineNumber":229,"author":{"gitId":"YitHien"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":230,"author":{"gitId":"YitHien"},"content":"                System.out.println(EMPTY_KEYWORD_MSG);","lastModifiedDate":"2022-02-18"},{"lineNumber":231,"author":{"gitId":"YitHien"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":232,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":233,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":234,"author":{"gitId":"YitHien"},"content":"    private static void lookForTasks(ArrayList\u003cTask\u003e list, String[] words) {","lastModifiedDate":"2022-02-18"},{"lineNumber":235,"author":{"gitId":"YitHien"},"content":"        String target \u003d words[TARGET_WORD];","lastModifiedDate":"2022-02-18"},{"lineNumber":236,"author":{"gitId":"YitHien"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2022-02-18"},{"lineNumber":237,"author":{"gitId":"YitHien"},"content":"        for (Task task : list) {","lastModifiedDate":"2022-02-18"},{"lineNumber":238,"author":{"gitId":"YitHien"},"content":"            if (task.getDescription().contains(target)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":239,"author":{"gitId":"YitHien"},"content":"                isFound \u003d true;","lastModifiedDate":"2022-02-18"},{"lineNumber":240,"author":{"gitId":"YitHien"},"content":"                System.out.println(task);","lastModifiedDate":"2022-02-18"},{"lineNumber":241,"author":{"gitId":"YitHien"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":242,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":243,"author":{"gitId":"YitHien"},"content":"        if (!isFound) {","lastModifiedDate":"2022-02-18"},{"lineNumber":244,"author":{"gitId":"YitHien"},"content":"            System.out.println(\"No tasks found!\");","lastModifiedDate":"2022-02-18"},{"lineNumber":245,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":246,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":247,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":248,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":249,"author":{"gitId":"YitHien"},"content":"     * Loads an existing list of tasks from a previously saved text file","lastModifiedDate":"2022-02-18"},{"lineNumber":250,"author":{"gitId":"YitHien"},"content":"     * and stores it in the list of tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":251,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks to store the tasks read from the text file","lastModifiedDate":"2022-02-18"},{"lineNumber":252,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":253,"author":{"gitId":"YitHien"},"content":"    private static void readSavedTaskList(ArrayList\u003cTask\u003e list) throws AeonException {","lastModifiedDate":"2022-02-18"},{"lineNumber":254,"author":{"gitId":"YitHien"},"content":"        File FILE \u003d new File(FILE_PATH);","lastModifiedDate":"2022-02-16"},{"lineNumber":255,"author":{"gitId":"YitHien"},"content":"        File DIRECTORY \u003d new File(DIR_PATH);","lastModifiedDate":"2022-02-16"},{"lineNumber":256,"author":{"gitId":"YitHien"},"content":"        checkDirExists(DIRECTORY);","lastModifiedDate":"2022-02-18"},{"lineNumber":257,"author":{"gitId":"YitHien"},"content":"        checkFileExists(FILE);","lastModifiedDate":"2022-02-18"},{"lineNumber":258,"author":{"gitId":"YitHien"},"content":"        Scanner fileScanner \u003d null;","lastModifiedDate":"2022-02-11"},{"lineNumber":259,"author":{"gitId":"YitHien"},"content":"        fileScanner \u003d openTaskFile(FILE, fileScanner);","lastModifiedDate":"2022-02-18"},{"lineNumber":260,"author":{"gitId":"YitHien"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2022-02-11"},{"lineNumber":261,"author":{"gitId":"YitHien"},"content":"            String taskInFile \u003d fileScanner.nextLine();","lastModifiedDate":"2022-02-11"},{"lineNumber":262,"author":{"gitId":"YitHien"},"content":"            String[] taskInFileArray \u003d taskInFile.split(\" \", 2);","lastModifiedDate":"2022-02-11"},{"lineNumber":263,"author":{"gitId":"YitHien"},"content":"            if (checkDetails(taskInFileArray)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":264,"author":{"gitId":"YitHien"},"content":"                throw new AeonException();","lastModifiedDate":"2022-02-18"},{"lineNumber":265,"author":{"gitId":"YitHien"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":266,"author":{"gitId":"YitHien"},"content":"            try {","lastModifiedDate":"2022-02-18"},{"lineNumber":267,"author":{"gitId":"YitHien"},"content":"                parseSavedTaskList(list, taskInFileArray);","lastModifiedDate":"2022-02-18"},{"lineNumber":268,"author":{"gitId":"YitHien"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":269,"author":{"gitId":"YitHien"},"content":"                System.out.println(TEXT_FILE_INCORRECT_CONTENTS);","lastModifiedDate":"2022-02-18"},{"lineNumber":270,"author":{"gitId":"YitHien"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":271,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":272,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":273,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":274,"author":{"gitId":"YitHien"},"content":"    private static void parseSavedTaskList(ArrayList\u003cTask\u003e list, String[] taskInFileArray) {","lastModifiedDate":"2022-02-18"},{"lineNumber":275,"author":{"gitId":"YitHien"},"content":"        String[] taskType \u003d taskInFileArray[1].split(\" \", 2);","lastModifiedDate":"2022-02-11"},{"lineNumber":276,"author":{"gitId":"YitHien"},"content":"        String isDone \u003d taskInFileArray[0];","lastModifiedDate":"2022-02-11"},{"lineNumber":277,"author":{"gitId":"YitHien"},"content":"        switch (taskType[TASK_TYPE]) {","lastModifiedDate":"2022-02-16"},{"lineNumber":278,"author":{"gitId":"YitHien"},"content":"        case TASKTYPE_TODO:","lastModifiedDate":"2022-02-16"},{"lineNumber":279,"author":{"gitId":"YitHien"},"content":"            readFromFileTodo(list, taskType, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":280,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-11"},{"lineNumber":281,"author":{"gitId":"YitHien"},"content":"        case TASKTYPE_DEADLINE:","lastModifiedDate":"2022-02-16"},{"lineNumber":282,"author":{"gitId":"YitHien"},"content":"            readFromFileDeadline(list, taskType, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":283,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-11"},{"lineNumber":284,"author":{"gitId":"YitHien"},"content":"        case TASKTYPE_EVENT:","lastModifiedDate":"2022-02-16"},{"lineNumber":285,"author":{"gitId":"YitHien"},"content":"            readFromFileEvent(list, taskType, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":286,"author":{"gitId":"YitHien"},"content":"            break;","lastModifiedDate":"2022-02-11"},{"lineNumber":287,"author":{"gitId":"YitHien"},"content":"        default:","lastModifiedDate":"2022-02-18"},{"lineNumber":288,"author":{"gitId":"YitHien"},"content":"            System.out.println(UNKNOWN_COMMAND_TEXT_FILE);","lastModifiedDate":"2022-02-18"},{"lineNumber":289,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":290,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":291,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":292,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":293,"author":{"gitId":"YitHien"},"content":"     * Opens the target file in order to read its contents","lastModifiedDate":"2022-02-18"},{"lineNumber":294,"author":{"gitId":"YitHien"},"content":"     * @param FILE The file to be read","lastModifiedDate":"2022-02-18"},{"lineNumber":295,"author":{"gitId":"YitHien"},"content":"     * @param fileScanner A pointer to the file","lastModifiedDate":"2022-02-18"},{"lineNumber":296,"author":{"gitId":"YitHien"},"content":"     * @return The pointer to the file if said file exists","lastModifiedDate":"2022-02-18"},{"lineNumber":297,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":298,"author":{"gitId":"YitHien"},"content":"    private static Scanner openTaskFile(File FILE, Scanner fileScanner) {","lastModifiedDate":"2022-02-18"},{"lineNumber":299,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":300,"author":{"gitId":"YitHien"},"content":"            fileScanner \u003d getScanner(FILE, fileScanner);","lastModifiedDate":"2022-02-18"},{"lineNumber":301,"author":{"gitId":"YitHien"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":302,"author":{"gitId":"YitHien"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-18"},{"lineNumber":303,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":304,"author":{"gitId":"YitHien"},"content":"        return fileScanner;","lastModifiedDate":"2022-02-18"},{"lineNumber":305,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":306,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":307,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":308,"author":{"gitId":"YitHien"},"content":"     * Checks if target file exists, and creates a new one if it does not exist yet","lastModifiedDate":"2022-02-18"},{"lineNumber":309,"author":{"gitId":"YitHien"},"content":"     * @param FILE The target file","lastModifiedDate":"2022-02-18"},{"lineNumber":310,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":311,"author":{"gitId":"YitHien"},"content":"    private static void checkFileExists(File FILE) {","lastModifiedDate":"2022-02-18"},{"lineNumber":312,"author":{"gitId":"YitHien"},"content":"        if (!FILE.exists()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":313,"author":{"gitId":"YitHien"},"content":"            try {","lastModifiedDate":"2022-02-18"},{"lineNumber":314,"author":{"gitId":"YitHien"},"content":"                createTaskFile(FILE);","lastModifiedDate":"2022-02-18"},{"lineNumber":315,"author":{"gitId":"YitHien"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":316,"author":{"gitId":"YitHien"},"content":"                System.out.println(CREATE_FILE_FAILED);","lastModifiedDate":"2022-02-18"},{"lineNumber":317,"author":{"gitId":"YitHien"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":318,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":319,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":320,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":321,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":322,"author":{"gitId":"YitHien"},"content":"     * Checks if target directory exists, and creates a new one if it does not exist yet","lastModifiedDate":"2022-02-18"},{"lineNumber":323,"author":{"gitId":"YitHien"},"content":"     * @param DIRECTORY The target directory","lastModifiedDate":"2022-02-18"},{"lineNumber":324,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":325,"author":{"gitId":"YitHien"},"content":"    private static void checkDirExists(File DIRECTORY) {","lastModifiedDate":"2022-02-18"},{"lineNumber":326,"author":{"gitId":"YitHien"},"content":"        if (!DIRECTORY.exists()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":327,"author":{"gitId":"YitHien"},"content":"                DIRECTORY.mkdir();","lastModifiedDate":"2022-02-18"},{"lineNumber":328,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":329,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":330,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":331,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":332,"author":{"gitId":"YitHien"},"content":"    private static void createTaskFile(File f) throws IOException {","lastModifiedDate":"2022-02-11"},{"lineNumber":333,"author":{"gitId":"YitHien"},"content":"            f.createNewFile();","lastModifiedDate":"2022-02-11"},{"lineNumber":334,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":335,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":336,"author":{"gitId":"YitHien"},"content":"    private static Scanner getScanner(File f, Scanner fileScanner) throws FileNotFoundException {","lastModifiedDate":"2022-02-11"},{"lineNumber":337,"author":{"gitId":"YitHien"},"content":"        fileScanner \u003d new Scanner(f);","lastModifiedDate":"2022-02-11"},{"lineNumber":338,"author":{"gitId":"YitHien"},"content":"        return fileScanner;","lastModifiedDate":"2022-02-11"},{"lineNumber":339,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":340,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":341,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":342,"author":{"gitId":"YitHien"},"content":"     * Inserts an event from the saved list of tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":343,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks to store the tasks read from the text file","lastModifiedDate":"2022-02-18"},{"lineNumber":344,"author":{"gitId":"YitHien"},"content":"     * @param taskType","lastModifiedDate":"2022-02-18"},{"lineNumber":345,"author":{"gitId":"YitHien"},"content":"     * @param isDone Boolean to represent if the task was previously marked as done","lastModifiedDate":"2022-02-18"},{"lineNumber":346,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":347,"author":{"gitId":"YitHien"},"content":"    private static void readFromFileEvent(ArrayList\u003cTask\u003e list, String[] taskType, String isDone) {","lastModifiedDate":"2022-02-12"},{"lineNumber":348,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":349,"author":{"gitId":"YitHien"},"content":"            addEventTask(list, taskType);","lastModifiedDate":"2022-02-11"},{"lineNumber":350,"author":{"gitId":"YitHien"},"content":"        } catch (AeonException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":351,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_DETAILS_MISSING_MSG);","lastModifiedDate":"2022-02-18"},{"lineNumber":352,"author":{"gitId":"YitHien"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":353,"author":{"gitId":"YitHien"},"content":"            System.out.println(EVENT_FORMAT_ERR);","lastModifiedDate":"2022-02-18"},{"lineNumber":354,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":355,"author":{"gitId":"YitHien"},"content":"        fileMarkTask(list, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":356,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":357,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":358,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":359,"author":{"gitId":"YitHien"},"content":"     * Inserts a deadline from the saved list of tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":360,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks to store the tasks read from the text file","lastModifiedDate":"2022-02-18"},{"lineNumber":361,"author":{"gitId":"YitHien"},"content":"     * @param taskType","lastModifiedDate":"2022-02-18"},{"lineNumber":362,"author":{"gitId":"YitHien"},"content":"     * @param isDone Boolean to represent if the task was previously marked as done","lastModifiedDate":"2022-02-18"},{"lineNumber":363,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":364,"author":{"gitId":"YitHien"},"content":"    private static void readFromFileDeadline(ArrayList\u003cTask\u003e list, String[] taskType, String isDone) {","lastModifiedDate":"2022-02-12"},{"lineNumber":365,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":366,"author":{"gitId":"YitHien"},"content":"            addDeadlineTask(list, taskType);","lastModifiedDate":"2022-02-11"},{"lineNumber":367,"author":{"gitId":"YitHien"},"content":"        } catch (AeonException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":368,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_DETAILS_MISSING_MSG);","lastModifiedDate":"2022-02-18"},{"lineNumber":369,"author":{"gitId":"YitHien"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":370,"author":{"gitId":"YitHien"},"content":"            System.out.println(DEADLINE_FORMAT_ERR);","lastModifiedDate":"2022-02-18"},{"lineNumber":371,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":372,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":373,"author":{"gitId":"YitHien"},"content":"        fileMarkTask(list, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":374,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":375,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":376,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":377,"author":{"gitId":"YitHien"},"content":"     * Inserts a ToDo task from the saved list of tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":378,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks to store the tasks read from the text file","lastModifiedDate":"2022-02-18"},{"lineNumber":379,"author":{"gitId":"YitHien"},"content":"     * @param taskType","lastModifiedDate":"2022-02-18"},{"lineNumber":380,"author":{"gitId":"YitHien"},"content":"     * @param isDone Boolean to represent if the task was previously marked as done","lastModifiedDate":"2022-02-18"},{"lineNumber":381,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":382,"author":{"gitId":"YitHien"},"content":"    private static void readFromFileTodo(ArrayList\u003cTask\u003e list, String[] taskType, String isDone) {","lastModifiedDate":"2022-02-12"},{"lineNumber":383,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":384,"author":{"gitId":"YitHien"},"content":"            addTodoTask(list, taskType);","lastModifiedDate":"2022-02-11"},{"lineNumber":385,"author":{"gitId":"YitHien"},"content":"        } catch (AeonException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":386,"author":{"gitId":"YitHien"},"content":"            System.out.println(TASK_DETAILS_MISSING_MSG);","lastModifiedDate":"2022-02-18"},{"lineNumber":387,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":388,"author":{"gitId":"YitHien"},"content":"        fileMarkTask(list, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":389,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":390,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":391,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":392,"author":{"gitId":"YitHien"},"content":"     * Checks if task from text file was marked as done before, and mark it if true","lastModifiedDate":"2022-02-18"},{"lineNumber":393,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks to store the tasks read from the text file","lastModifiedDate":"2022-02-18"},{"lineNumber":394,"author":{"gitId":"YitHien"},"content":"     * @param isDone Boolean to represent if the task was previously marked as done","lastModifiedDate":"2022-02-18"},{"lineNumber":395,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":396,"author":{"gitId":"YitHien"},"content":"    private static void fileMarkTask(ArrayList\u003cTask\u003e list, String isDone) {","lastModifiedDate":"2022-02-12"},{"lineNumber":397,"author":{"gitId":"YitHien"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":398,"author":{"gitId":"YitHien"},"content":"            Integer index \u003d Task.getNoOfItems();","lastModifiedDate":"2022-02-11"},{"lineNumber":399,"author":{"gitId":"YitHien"},"content":"            list.get(index - 1).setDoneStatus(true);","lastModifiedDate":"2022-02-12"},{"lineNumber":400,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":401,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":402,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":403,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":404,"author":{"gitId":"YitHien"},"content":"     * Adds a task to the list","lastModifiedDate":"2022-02-18"},{"lineNumber":405,"author":{"gitId":"YitHien"},"content":"     * @param list List of tasks itself","lastModifiedDate":"2022-02-18"},{"lineNumber":406,"author":{"gitId":"YitHien"},"content":"     * @param t The task object to be added","lastModifiedDate":"2022-02-18"},{"lineNumber":407,"author":{"gitId":"YitHien"},"content":"     * @param taskType","lastModifiedDate":"2022-02-18"},{"lineNumber":408,"author":{"gitId":"YitHien"},"content":"     * @param rawDesc The actual user input itself, to be saved into the text file","lastModifiedDate":"2022-02-18"},{"lineNumber":409,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":410,"author":{"gitId":"YitHien"},"content":"    public static void addToList(ArrayList\u003cTask\u003e list, Task t, String taskType, String rawDesc) {","lastModifiedDate":"2022-02-12"},{"lineNumber":411,"author":{"gitId":"YitHien"},"content":"        list.add(t);","lastModifiedDate":"2022-02-11"},{"lineNumber":412,"author":{"gitId":"YitHien"},"content":"        rawDescriptions.add(taskType + \" \" + rawDesc);","lastModifiedDate":"2022-02-16"},{"lineNumber":413,"author":{"gitId":"YitHien"},"content":"        Task.setNoOfItems(Task.getNoOfItems() + 1);","lastModifiedDate":"2022-02-05"},{"lineNumber":414,"author":{"gitId":"YitHien"},"content":"        System.out.println(\"Total: \" + Task.getNoOfItems() + \" task(s) in the list!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":415,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":416,"author":{"gitId":"YitHien"},"content":"            writeToFile(list, rawDescriptions);","lastModifiedDate":"2022-02-16"},{"lineNumber":417,"author":{"gitId":"YitHien"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":418,"author":{"gitId":"YitHien"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-11"},{"lineNumber":419,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":420,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":421,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":422,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":423,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":424,"author":{"gitId":"YitHien"},"content":"     * Saves the current list of tasks into a text file on disk","lastModifiedDate":"2022-02-18"},{"lineNumber":425,"author":{"gitId":"YitHien"},"content":"     * @param list The list of tasks to be saved","lastModifiedDate":"2022-02-18"},{"lineNumber":426,"author":{"gitId":"YitHien"},"content":"     * @param rawDesc The actual user input itself, to be saved into the text file","lastModifiedDate":"2022-02-18"},{"lineNumber":427,"author":{"gitId":"YitHien"},"content":"     * @throws IOException If writing to file fails","lastModifiedDate":"2022-02-18"},{"lineNumber":428,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":429,"author":{"gitId":"YitHien"},"content":"    private static void writeToFile(ArrayList\u003cTask\u003e list, ArrayList\u003cString\u003e rawDesc) throws IOException {","lastModifiedDate":"2022-02-12"},{"lineNumber":430,"author":{"gitId":"YitHien"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-02-11"},{"lineNumber":431,"author":{"gitId":"YitHien"},"content":"        Integer noOfItems \u003d Task.getNoOfItems();","lastModifiedDate":"2022-02-11"},{"lineNumber":432,"author":{"gitId":"YitHien"},"content":"        for (int index \u003d 0; index \u003c noOfItems; index++) {","lastModifiedDate":"2022-02-11"},{"lineNumber":433,"author":{"gitId":"YitHien"},"content":"            String taskDone \u003d list.get(index).getStatusIcon();","lastModifiedDate":"2022-02-12"},{"lineNumber":434,"author":{"gitId":"YitHien"},"content":"            if (taskDone.equals(TASK_MARKED)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":435,"author":{"gitId":"YitHien"},"content":"                taskDone \u003d \"1\";","lastModifiedDate":"2022-02-11"},{"lineNumber":436,"author":{"gitId":"YitHien"},"content":"            } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":437,"author":{"gitId":"YitHien"},"content":"                taskDone \u003d \"0\";","lastModifiedDate":"2022-02-11"},{"lineNumber":438,"author":{"gitId":"YitHien"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":439,"author":{"gitId":"YitHien"},"content":"            String[] taskToAdd \u003d rawDesc.get(index).split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":440,"author":{"gitId":"YitHien"},"content":"            String textToAdd \u003d taskDone + \" \" + taskToAdd[0] + \" \" + taskToAdd[1] + \"\\n\";","lastModifiedDate":"2022-02-11"},{"lineNumber":441,"author":{"gitId":"YitHien"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2022-02-11"},{"lineNumber":442,"author":{"gitId":"YitHien"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":443,"author":{"gitId":"YitHien"},"content":"        fw.close();","lastModifiedDate":"2022-02-11"},{"lineNumber":444,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":445,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":446,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":447,"author":{"gitId":"YitHien"},"content":"    private static void addEventTask(ArrayList\u003cTask\u003e list, String[] words) throws IndexOutOfBoundsException, AeonException {","lastModifiedDate":"2022-02-18"},{"lineNumber":448,"author":{"gitId":"YitHien"},"content":"        String[] eventDateTask \u003d words[1].split(\" /at \", 2);","lastModifiedDate":"2022-02-18"},{"lineNumber":449,"author":{"gitId":"YitHien"},"content":"        if (checkDetails(eventDateTask)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":450,"author":{"gitId":"YitHien"},"content":"            throw new AeonException();","lastModifiedDate":"2022-02-18"},{"lineNumber":451,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":452,"author":{"gitId":"YitHien"},"content":"        String rawDate \u003d eventDateTask[1].trim();","lastModifiedDate":"2022-02-18"},{"lineNumber":453,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":454,"author":{"gitId":"YitHien"},"content":"            String eventDate \u003d reformatDate(rawDate);","lastModifiedDate":"2022-02-18"},{"lineNumber":455,"author":{"gitId":"YitHien"},"content":"            Task e \u003d new Event(eventDateTask[0].trim(), eventDate);","lastModifiedDate":"2022-02-18"},{"lineNumber":456,"author":{"gitId":"YitHien"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-18"},{"lineNumber":457,"author":{"gitId":"YitHien"},"content":"            addToList(list, e, \"E\", words[1]);","lastModifiedDate":"2022-02-18"},{"lineNumber":458,"author":{"gitId":"YitHien"},"content":"        } catch (DateTimeParseException x) {","lastModifiedDate":"2022-02-18"},{"lineNumber":459,"author":{"gitId":"YitHien"},"content":"            Task e \u003d new Event(eventDateTask[0].trim(), rawDate);","lastModifiedDate":"2022-02-18"},{"lineNumber":460,"author":{"gitId":"YitHien"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-05"},{"lineNumber":461,"author":{"gitId":"YitHien"},"content":"            addToList(list, e, \"E\", words[1]);","lastModifiedDate":"2022-02-11"},{"lineNumber":462,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":463,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":464,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":465,"author":{"gitId":"YitHien"},"content":"    private static boolean checkDetails(String[] taskDetails) {","lastModifiedDate":"2022-02-18"},{"lineNumber":466,"author":{"gitId":"YitHien"},"content":"        boolean isEmpty \u003d false;","lastModifiedDate":"2022-02-18"},{"lineNumber":467,"author":{"gitId":"YitHien"},"content":"        for (String element : taskDetails) {","lastModifiedDate":"2022-02-18"},{"lineNumber":468,"author":{"gitId":"YitHien"},"content":"            if (element.trim().length() \u003d\u003d 0)","lastModifiedDate":"2022-02-18"},{"lineNumber":469,"author":{"gitId":"YitHien"},"content":"            {","lastModifiedDate":"2022-02-18"},{"lineNumber":470,"author":{"gitId":"YitHien"},"content":"                isEmpty \u003d true;","lastModifiedDate":"2022-02-18"},{"lineNumber":471,"author":{"gitId":"YitHien"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":472,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":473,"author":{"gitId":"YitHien"},"content":"        return isEmpty;","lastModifiedDate":"2022-02-18"},{"lineNumber":474,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":475,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":476,"author":{"gitId":"YitHien"},"content":"    private static void addDeadlineTask(ArrayList\u003cTask\u003e list, String[] words)","lastModifiedDate":"2022-02-18"},{"lineNumber":477,"author":{"gitId":"YitHien"},"content":"            throws IndexOutOfBoundsException, AeonException {","lastModifiedDate":"2022-02-18"},{"lineNumber":478,"author":{"gitId":"YitHien"},"content":"        String[] deadlineTask \u003d words[1].split(\" /by \", 2);","lastModifiedDate":"2022-02-18"},{"lineNumber":479,"author":{"gitId":"YitHien"},"content":"        if (checkDetails(deadlineTask)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":480,"author":{"gitId":"YitHien"},"content":"            throw new AeonException();","lastModifiedDate":"2022-02-18"},{"lineNumber":481,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":482,"author":{"gitId":"YitHien"},"content":"        String rawDate \u003d deadlineTask[1].trim();","lastModifiedDate":"2022-02-18"},{"lineNumber":483,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":484,"author":{"gitId":"YitHien"},"content":"            String dueDate \u003d reformatDate(rawDate);","lastModifiedDate":"2022-02-18"},{"lineNumber":485,"author":{"gitId":"YitHien"},"content":"            Task d \u003d new Deadline(deadlineTask[0].trim(), dueDate);","lastModifiedDate":"2022-02-18"},{"lineNumber":486,"author":{"gitId":"YitHien"},"content":"            System.out.println(d);","lastModifiedDate":"2022-02-18"},{"lineNumber":487,"author":{"gitId":"YitHien"},"content":"            addToList(list, d, \"D\", words[1]);","lastModifiedDate":"2022-02-18"},{"lineNumber":488,"author":{"gitId":"YitHien"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":489,"author":{"gitId":"YitHien"},"content":"            Task d \u003d new Deadline(deadlineTask[0].trim(), rawDate);","lastModifiedDate":"2022-02-18"},{"lineNumber":490,"author":{"gitId":"YitHien"},"content":"            System.out.println(d);","lastModifiedDate":"2022-02-05"},{"lineNumber":491,"author":{"gitId":"YitHien"},"content":"            addToList(list, d, \"D\", words[1]);","lastModifiedDate":"2022-02-11"},{"lineNumber":492,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":493,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":494,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":495,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":496,"author":{"gitId":"YitHien"},"content":"     * Changes the date format from YYYY-MM-DD to MM-DD-YYYY for Deadline and Event tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":497,"author":{"gitId":"YitHien"},"content":"     * @param rawDate The date that the user inputs","lastModifiedDate":"2022-02-18"},{"lineNumber":498,"author":{"gitId":"YitHien"},"content":"     * @return The reformatted date in the form of MM-DD-YYYY","lastModifiedDate":"2022-02-18"},{"lineNumber":499,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":500,"author":{"gitId":"YitHien"},"content":"    private static String reformatDate(String rawDate) {","lastModifiedDate":"2022-02-18"},{"lineNumber":501,"author":{"gitId":"YitHien"},"content":"        LocalDate deadline \u003d LocalDate.parse(rawDate);","lastModifiedDate":"2022-02-18"},{"lineNumber":502,"author":{"gitId":"YitHien"},"content":"        String dueDate \u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":503,"author":{"gitId":"YitHien"},"content":"        return dueDate;","lastModifiedDate":"2022-02-18"},{"lineNumber":504,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":505,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":506,"author":{"gitId":"YitHien"},"content":"    private static void addTodoTask(ArrayList\u003cTask\u003e list, String[] words)","lastModifiedDate":"2022-02-18"},{"lineNumber":507,"author":{"gitId":"YitHien"},"content":"            throws IndexOutOfBoundsException, AeonException {","lastModifiedDate":"2022-02-18"},{"lineNumber":508,"author":{"gitId":"YitHien"},"content":"        Task t \u003d new Todo(words[1]);","lastModifiedDate":"2022-02-05"},{"lineNumber":509,"author":{"gitId":"YitHien"},"content":"        if (checkDetails(words)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":510,"author":{"gitId":"YitHien"},"content":"            throw new AeonException();","lastModifiedDate":"2022-02-18"},{"lineNumber":511,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":512,"author":{"gitId":"YitHien"},"content":"        System.out.println(t);","lastModifiedDate":"2022-02-05"},{"lineNumber":513,"author":{"gitId":"YitHien"},"content":"        addToList(list, t, \"T\", words[1]);","lastModifiedDate":"2022-02-11"},{"lineNumber":514,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":515,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":516,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":517,"author":{"gitId":"YitHien"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":518,"author":{"gitId":"YitHien"},"content":"     *Marks a task as Done based on its index.","lastModifiedDate":"2022-02-18"},{"lineNumber":519,"author":{"gitId":"YitHien"},"content":"     *Users may only mark tasks that are currently existing in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":520,"author":{"gitId":"YitHien"},"content":"     * @param list","lastModifiedDate":"2022-02-18"},{"lineNumber":521,"author":{"gitId":"YitHien"},"content":"     * @param words","lastModifiedDate":"2022-02-18"},{"lineNumber":522,"author":{"gitId":"YitHien"},"content":"     * @throws IndexOutOfBoundsException If task is not found in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":523,"author":{"gitId":"YitHien"},"content":"     * @throws NumberFormatException If the index of the targeted task is not a valid integer","lastModifiedDate":"2022-02-18"},{"lineNumber":524,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":525,"author":{"gitId":"YitHien"},"content":"    private static void markTask(ArrayList\u003cTask\u003e list, String[] words) throws IndexOutOfBoundsException,","lastModifiedDate":"2022-02-11"},{"lineNumber":526,"author":{"gitId":"YitHien"},"content":"            NumberFormatException {","lastModifiedDate":"2022-02-11"},{"lineNumber":527,"author":{"gitId":"YitHien"},"content":"        int index;","lastModifiedDate":"2022-02-05"},{"lineNumber":528,"author":{"gitId":"YitHien"},"content":"        index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-02-05"},{"lineNumber":529,"author":{"gitId":"YitHien"},"content":"        list.get(index - 1).setDoneStatus(true);","lastModifiedDate":"2022-02-11"},{"lineNumber":530,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":531,"author":{"gitId":"YitHien"},"content":"        System.out.println(list.get(index - 1));","lastModifiedDate":"2022-02-11"},{"lineNumber":532,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":533,"author":{"gitId":"YitHien"},"content":"            writeToFile(list, rawDescriptions);","lastModifiedDate":"2022-02-16"},{"lineNumber":534,"author":{"gitId":"YitHien"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":535,"author":{"gitId":"YitHien"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-11"},{"lineNumber":536,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":537,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":538,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":539,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":540,"author":{"gitId":"YitHien"},"content":"     *Marks a task as Not Done based on its index.","lastModifiedDate":"2022-02-18"},{"lineNumber":541,"author":{"gitId":"YitHien"},"content":"     *Users may only unmark tasks that are currently existing in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":542,"author":{"gitId":"YitHien"},"content":"     * @param list","lastModifiedDate":"2022-02-18"},{"lineNumber":543,"author":{"gitId":"YitHien"},"content":"     * @param words","lastModifiedDate":"2022-02-18"},{"lineNumber":544,"author":{"gitId":"YitHien"},"content":"     * @throws IndexOutOfBoundsException If task is not found in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":545,"author":{"gitId":"YitHien"},"content":"     * @throws NumberFormatException If the index of the targeted task is not a valid integer","lastModifiedDate":"2022-02-18"},{"lineNumber":546,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":547,"author":{"gitId":"YitHien"},"content":"    private static void unmarkTask(ArrayList\u003cTask\u003e list, String[] words)","lastModifiedDate":"2022-02-11"},{"lineNumber":548,"author":{"gitId":"YitHien"},"content":"            throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2022-02-05"},{"lineNumber":549,"author":{"gitId":"YitHien"},"content":"        int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-02-05"},{"lineNumber":550,"author":{"gitId":"YitHien"},"content":"        list.get(index - 1).setDoneStatus(false);","lastModifiedDate":"2022-02-11"},{"lineNumber":551,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":552,"author":{"gitId":"YitHien"},"content":"        System.out.println(list.get(index - 1));","lastModifiedDate":"2022-02-11"},{"lineNumber":553,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":554,"author":{"gitId":"YitHien"},"content":"            writeToFile(list, rawDescriptions);","lastModifiedDate":"2022-02-16"},{"lineNumber":555,"author":{"gitId":"YitHien"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":556,"author":{"gitId":"YitHien"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-11"},{"lineNumber":557,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":558,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":559,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":560,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":561,"author":{"gitId":"YitHien"},"content":"     * Prints out all tasks that are currently saved in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":562,"author":{"gitId":"YitHien"},"content":"     * @param list The list of tasks to be printed out","lastModifiedDate":"2022-02-18"},{"lineNumber":563,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":564,"author":{"gitId":"YitHien"},"content":"    private static void printListOfTasks(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-02-11"},{"lineNumber":565,"author":{"gitId":"YitHien"},"content":"        Integer noOfItems \u003d Task.getNoOfItems();","lastModifiedDate":"2022-02-05"},{"lineNumber":566,"author":{"gitId":"YitHien"},"content":"        if (noOfItems \u003d\u003d 0) {","lastModifiedDate":"2022-02-05"},{"lineNumber":567,"author":{"gitId":"YitHien"},"content":"            System.out.println(NO_TASKS);","lastModifiedDate":"2022-02-05"},{"lineNumber":568,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":569,"author":{"gitId":"YitHien"},"content":"        for (int index \u003d 0; index \u003c noOfItems; index++) {","lastModifiedDate":"2022-02-05"},{"lineNumber":570,"author":{"gitId":"YitHien"},"content":"            System.out.println(index + 1 + \". \" + list.get(index));","lastModifiedDate":"2022-02-11"},{"lineNumber":571,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":572,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":573,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":574,"author":{"gitId":"YitHien"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":575,"author":{"gitId":"YitHien"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":576,"author":{"gitId":"YitHien"},"content":"     * Task can only be deleted if it exists in the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":577,"author":{"gitId":"YitHien"},"content":"     * @param list","lastModifiedDate":"2022-02-18"},{"lineNumber":578,"author":{"gitId":"YitHien"},"content":"     * @param words","lastModifiedDate":"2022-02-18"},{"lineNumber":579,"author":{"gitId":"YitHien"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-02-18"},{"lineNumber":580,"author":{"gitId":"YitHien"},"content":"     * @throws NumberFormatException","lastModifiedDate":"2022-02-18"},{"lineNumber":581,"author":{"gitId":"YitHien"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":582,"author":{"gitId":"YitHien"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e list, String[] words)","lastModifiedDate":"2022-02-11"},{"lineNumber":583,"author":{"gitId":"YitHien"},"content":"            throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2022-02-11"},{"lineNumber":584,"author":{"gitId":"YitHien"},"content":"        int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-02-11"},{"lineNumber":585,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":586,"author":{"gitId":"YitHien"},"content":"        System.out.println(list.get(index - 1));","lastModifiedDate":"2022-02-11"},{"lineNumber":587,"author":{"gitId":"YitHien"},"content":"        list.remove(index - 1);","lastModifiedDate":"2022-02-11"},{"lineNumber":588,"author":{"gitId":"YitHien"},"content":"        Task.setNoOfItems(Task.getNoOfItems() - 1);","lastModifiedDate":"2022-02-11"},{"lineNumber":589,"author":{"gitId":"YitHien"},"content":"        System.out.println(\"Total: \" + Task.getNoOfItems() + \" task(s) in the list!\");","lastModifiedDate":"2022-02-11"},{"lineNumber":590,"author":{"gitId":"YitHien"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":591,"author":{"gitId":"YitHien"},"content":"            writeToFile(list, rawDescriptions);","lastModifiedDate":"2022-02-16"},{"lineNumber":592,"author":{"gitId":"YitHien"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":593,"author":{"gitId":"YitHien"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-12"},{"lineNumber":594,"author":{"gitId":"YitHien"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":595,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":596,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":597,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":598,"author":{"gitId":"YitHien"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"YitHien":598}},{"path":"src/main/java/aeon/exception/AeonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YitHien"},"content":"package aeon.exception;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"YitHien"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"YitHien"},"content":" * A custom exception if the user\u0027s input does not match any of the allowed commands","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"YitHien"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"YitHien"},"content":"public class AeonException extends Exception{","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"YitHien"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"YitHien":8}},{"path":"src/main/java/aeon/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YitHien"},"content":"package aeon.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"YitHien"},"content":"import aeon.task.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"YitHien"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"YitHien"},"content":" * Represents a deadline task which needs to include a deadline itself delimited by the keyword \u0027/by\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"YitHien"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"YitHien"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"YitHien"},"content":"    protected String by;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"YitHien"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"YitHien"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"YitHien"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"YitHien"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"YitHien"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"YitHien"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + by + \")\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"YitHien"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"YitHien":18}},{"path":"src/main/java/aeon/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YitHien"},"content":"package aeon.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"YitHien"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"YitHien"},"content":" * Represents an upcoming event, with a targeted future date using the delimiter \u0027/at\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"YitHien"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"YitHien"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"YitHien"},"content":"    protected String eventDate;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"YitHien"},"content":"    public Event(String description, String eventDate) {","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"YitHien"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"YitHien"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"YitHien"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"YitHien"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"YitHien"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + eventDate + \")\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"YitHien"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"YitHien":17}},{"path":"src/main/java/aeon/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YitHien"},"content":"package aeon.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"YitHien"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"YitHien"},"content":" * An abstract class of a task, as all tasks need to belong in one of the 3 subclasses of Deadline, Event or Todo","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"YitHien"},"content":" * This class also keeps track of the total number of tasks in the list already","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"YitHien"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"YitHien"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"YitHien"},"content":"    protected String description;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"YitHien"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"YitHien"},"content":"    private static int noOfItems \u003d 0;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"YitHien"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"YitHien"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"YitHien"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"YitHien"},"content":"    public static int getNoOfItems() {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"YitHien"},"content":"        return noOfItems;","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"YitHien"},"content":"    public static void setNoOfItems(int noOfItems) {","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"YitHien"},"content":"        Task.noOfItems \u003d noOfItems;","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"YitHien"},"content":"    public void setDoneStatus(boolean isDone) {","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"YitHien"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"YitHien"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"YitHien"},"content":"        return description;","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"YitHien"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"YitHien"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"YitHien"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"YitHien"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"YitHien"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"YitHien":40}},{"path":"src/main/java/aeon/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YitHien"},"content":"package aeon.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"YitHien"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"YitHien"},"content":" * Represents a task that the users needs to be reminded of in the future, and has no need for any dates","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"YitHien"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"YitHien"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"YitHien"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"YitHien"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"YitHien"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"YitHien"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"YitHien"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"YitHien"},"content":"        return \"[T] \" + super.toString() + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"YitHien"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"YitHien"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"YitHien":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YitHien"},"content":"todo yithien: Answer CS2113 quiz Monday 9pm","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"YitHien"},"content":"deadline weekly CS2113 quiz /by Monday 9pm","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"YitHien"},"content":"list","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"YitHien"},"content":"event CS2113 lecture /at Friday 4 to 6pm","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"YitHien"},"content":"mark 1","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"YitHien"},"content":"list","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"YitHien":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"YitHien"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\aeon\\*.java","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"YitHien"},"content":"java -classpath ..\\bin aeon.Aeon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YitHien":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"YitHien"},"content":"java -classpath ../bin Aeon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YitHien":1,"-":37}}]
