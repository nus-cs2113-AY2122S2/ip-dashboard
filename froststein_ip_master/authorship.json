[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"# duke.Duke project template","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"froststein":2,"-":22}},{"path":"src/main/java/duke/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"public class CommandParser {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"    public static String getCommand(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"        return input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"    public static String getDeadlineTaskDescription(String input) throws DukeException, StringIndexOutOfBoundsException {","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"        if (input.contains(\"/by\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"            int firstSpaceIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"            int slashIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"            // +1 to exclude \" \" and -1 to exclude \"/\"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"            String description \u003d input.substring(firstSpaceIndex + 1, slashIndex - 1).trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"                throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"            return description;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"        throw new DukeException(\"Oops! It seems that you left out the /by in your command!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"    public static String getDeadlineDate(String input) throws DukeException, StringIndexOutOfBoundsException {","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"        if (input.contains(\"/by\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"            int slashIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"            // +3 to exclude \"/by\"","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"            String date \u003d input.substring(slashIndex + 3).trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"            if (date.isEmpty()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"                throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"froststein"},"content":"            return date;","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"froststein"},"content":"        throw new DukeException(\"Oops! It seems that you left out the date for the /by command!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"froststein"},"content":"    public static String getEventTaskDescription(String input) throws DukeException, StringIndexOutOfBoundsException {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"froststein"},"content":"        if (input.contains(\" \") \u0026\u0026 input.contains(\"/at\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"froststein"},"content":"            int firstSpaceIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"froststein"},"content":"            int slashIndex \u003d input.indexOf(\"/at\");","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"froststein"},"content":"            // +1 to exclude \" \" and -1 to exclude \"/\"","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"froststein"},"content":"            String description \u003d input.substring(firstSpaceIndex + 1, slashIndex - 1).trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"froststein"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"froststein"},"content":"                throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"froststein"},"content":"            return description;","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"froststein"},"content":"        throw new DukeException(\"Oops! It seems that you left out the /at in your command!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"froststein"},"content":"    public static String getEventDateTime(String input) throws DukeException, StringIndexOutOfBoundsException {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"froststein"},"content":"        if (input.contains(\"/at\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"froststein"},"content":"            int slashIndex \u003d input.indexOf(\"/at\");","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"froststein"},"content":"            // +3 to exclude \"/at\"","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"froststein"},"content":"            String dateTime \u003d input.substring(slashIndex + 3).trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"froststein"},"content":"            if (dateTime.isEmpty()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"froststein"},"content":"                throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"froststein"},"content":"            return dateTime;","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"froststein"},"content":"        throw new DukeException(\"Oops! It seems that you left out the date time for the /at command!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"froststein"},"content":"    public static String getToDoTaskDescription(String input) throws DukeException, StringIndexOutOfBoundsException {","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"froststein"},"content":"        if (input.contains(\" \")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"froststein"},"content":"            int firstSpaceIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"froststein"},"content":"            // +1 to exclude \" \"","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"froststein"},"content":"            String description \u003d input.substring(firstSpaceIndex + 1).trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"froststein"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"froststein"},"content":"                throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"froststein"},"content":"            return description;","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"froststein"},"content":"        throw new DukeException(\"Oops! The description of a todo task cannot be empty!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"froststein":77}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"    private static final Scanner SC \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"        UI.printIntro();","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"        while (true) {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"            String input \u003d SC.nextLine();","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"            String command \u003d CommandParser.getCommand(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"            switch (command) {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"                UI.printOutro();","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"                System.exit(0);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"                TaskList.markTask(input, command);","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"            case \"list\":","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"                TaskList.printTaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"            default:","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"                UI.printBorder();","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"                TaskList.addTaskToTaskList(input, command);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"                UI.printBorder();","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"froststein":29,"-":4}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"import java.util.List;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"public class TaskList {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"    protected static List\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"    private static int numOfTask \u003d 0;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"    public static Task getTaskFromListOfTask(int taskNumber) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"        // -1 to offset the counting of array list from 0","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"        return listOfTask.get(taskNumber - 1);","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"    public static int getTaskNumberFromInput(String input) throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"        // check to see if an index of \u003c 0 was given","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"        if (index \u003c\u003d 0 || index \u003e numOfTask) {","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"            throw new IndexOutOfBoundsException(\"Invalid task to be marked!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"        return index;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"    public static void markTask(String input, String taskStatus) {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"            int taskNumber \u003d getTaskNumberFromInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"froststein"},"content":"            // true if it is \"mark\", set to false if it\u0027s not \"mark\"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"froststein"},"content":"            boolean isTaskDone \u003d taskStatus.equalsIgnoreCase(\"mark\");","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"froststein"},"content":"            Task markedTask \u003d getTaskFromListOfTask(taskNumber);","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"            markedTask.setDone(isTaskDone);","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"froststein"},"content":"            if (isTaskDone) {","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"froststein"},"content":"                System.out.println(\"Nice! I\u0027v marked this task as done:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"froststein"},"content":"            } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"froststein"},"content":"                System.out.println(\"Okay! I\u0027v marked this task as not done:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"froststein"},"content":"            System.out.println(markedTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"froststein"},"content":"        } catch (IndexOutOfBoundsException idxError) {","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"froststein"},"content":"            System.out.println(\"Invalid task number to be marked!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"froststein"},"content":"        } catch (NumberFormatException numFormError) {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"froststein"},"content":"            System.out.println(\"Please enter a number to mark task.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"froststein"},"content":"    public static Deadline createDeadlineTask(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"froststein"},"content":"        Deadline newDeadlineTask \u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"froststein"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"froststein"},"content":"            String deadlineDescription \u003d CommandParser.getDeadlineTaskDescription(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"froststein"},"content":"            String dueDateTime \u003d CommandParser.getDeadlineDate(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"froststein"},"content":"            newDeadlineTask \u003d new Deadline(deadlineDescription, dueDateTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"froststein"},"content":"        } catch (DukeException dukeError) {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"froststein"},"content":"            System.out.println(dukeError);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"froststein"},"content":"            return null;","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"froststein"},"content":"        } catch (StringIndexOutOfBoundsException idxError) {","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"froststein"},"content":"            System.out.println(\"Please check your command and formatting again!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"froststein"},"content":"        return newDeadlineTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"froststein"},"content":"    public static Event createEventTask(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"froststein"},"content":"        Event newEventTask \u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"froststein"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"froststein"},"content":"            String eventDescription \u003d CommandParser.getEventTaskDescription(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"froststein"},"content":"            String dueDate \u003d CommandParser.getEventDateTime(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"froststein"},"content":"            newEventTask \u003d new Event(eventDescription, dueDate);","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"froststein"},"content":"        } catch (DukeException dukeError) {","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"froststein"},"content":"            System.out.println(dukeError);","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"froststein"},"content":"            return null;","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"froststein"},"content":"        } catch (StringIndexOutOfBoundsException idxError) {","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"froststein"},"content":"            System.out.println(\"Please check your command and formatting again!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"froststein"},"content":"        return newEventTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"froststein"},"content":"    public static Todo createTodoTask(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"froststein"},"content":"        Todo newTodoTask \u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"froststein"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"froststein"},"content":"            String todoDescription \u003d CommandParser.getToDoTaskDescription(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"froststein"},"content":"            newTodoTask \u003d new Todo(todoDescription);","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"froststein"},"content":"        } catch (DukeException dukeError) {","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"froststein"},"content":"            System.out.println(dukeError);","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"froststein"},"content":"            return null;","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"froststein"},"content":"        } catch (StringIndexOutOfBoundsException idxError) {","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"froststein"},"content":"            System.out.println(\"Please check your command and formatting again!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"froststein"},"content":"            return null;","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"froststein"},"content":"        return newTodoTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"froststein"},"content":"    public static void addTaskToTaskList(String input, String type) {","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"froststein"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"froststein"},"content":"        switch (type.toLowerCase()){","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"froststein"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"froststein"},"content":"            newTask \u003d createDeadlineTask(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"froststein"},"content":"            break;","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"froststein"},"content":"        case \"event\":","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"froststein"},"content":"            newTask \u003d createEventTask(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"froststein"},"content":"            break;","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"froststein"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"froststein"},"content":"            newTask \u003d createTodoTask(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"froststein"},"content":"            break;","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"froststein"},"content":"        default:","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"froststein"},"content":"            System.out.println(\"Invalid type of task given!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":112,"author":{"gitId":"froststein"},"content":"            return;","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":114,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"froststein"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"froststein"},"content":"            listOfTask.add(newTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":117,"author":{"gitId":"froststein"},"content":"            numOfTask++;","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"froststein"},"content":"            printTaskListUpdate(newTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"froststein"},"content":"    public static void printTaskListUpdate(Task newTask) {","lastModifiedDate":"2022-01-30"},{"lineNumber":123,"author":{"gitId":"froststein"},"content":"        System.out.println(\"Got it!. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":124,"author":{"gitId":"froststein"},"content":"        System.out.println(newTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"froststein"},"content":"        System.out.println(\"Now you have \" +numOfTask +\" tasks in the list.\");","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":128,"author":{"gitId":"froststein"},"content":"    public static void printTaskList() {","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"froststein"},"content":"        if (numOfTask \u003d\u003d 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"froststein"},"content":"            System.out.println(\"No task available!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"froststein"},"content":"        for (int i \u003d 0 ; i \u003c numOfTask; i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"froststein"},"content":"            System.out.println(\" \" +(i + 1) +\".\" + listOfTask.get(i));","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":136,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"froststein":136}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"public class UI {","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"    // String assets for Dukebot GUI","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"    final static String BORDER \u003d \"__________________________________________________\";","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"    final static String INTRO_LOGO \u003d \"   ___             _               ___             _     \\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"            \"  |   \\\\   _  _    | |__    ___    | _ )    ___    | |_   \\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"            \"  | |) | | +| |   | / /   / -_)   | _ \\\\   / _ \\\\   |  _|  \\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"            \"  |___/   \\\\_,_|   |_\\\\_\\\\   \\\\___|   |___/   \\\\___/   _\\\\__|  \\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"            \"_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"| \\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"            \"\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027 \";","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"    final static String OUTRO_LOGO \u003d \"                               __\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"            \"                            _ / /\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"            \"  __ ___      ____      __ (_) |\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"            \" / _` \\\\ \\\\ /\\\\ / /\\\\ \\\\ /\\\\ / /   | |\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"            \"| (_| |\\\\ V  V /  \\\\ V  V /   _| |\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"            \" \\\\__,_| \\\\_/\\\\_/    \\\\_/\\\\_/   (_) |\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"            \"                              \\\\_\\\\\";","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"    public static void printIntro() {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"        System.out.println(INTRO_LOGO);","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"        printBorder();","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"        System.out.println(\" Good Morning sir, I am DukeBot, your personal assistant! \" +","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"                \"\\n What can I do for you today?\");","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"        printBorder();","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"    public static void printOutro() {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"        System.out.println(OUTRO_LOGO);","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"        printBorder();","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"        System.out.println(\" I guess it\u0027s time to say good bye...\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"                \"\\n Please come again soon!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"froststein"},"content":"        printBorder();","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"    public static void printBorder(){","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"froststein"},"content":"        System.out.println(BORDER);","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"froststein":39}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package duke.exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"        super(message);","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"froststein":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"    protected String by;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"froststein":18}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"    protected String at;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"froststein":17}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"public class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"    private String description;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"        return description;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"        isDone \u003d done;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"    public String toString(){","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"        return \"[\"+getStatusIcon()+\"] \"+description;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"froststein":29}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"        super(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"froststein":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"todo","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"todo","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"todo test1","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"list","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"event","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"event","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"event /at","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"event something /at","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"event /at some time","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"event test2 /at test2","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"list","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"deadline","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"deadline","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"deadline /by","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"deadline something /by","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"deadline /by some time","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"deadline test3 /at test3","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"list","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"mark -1","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"mark pen","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"mark 3","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"bye","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"froststein":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exceptions\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"froststein":2}}]
