[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"public class Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"    /** The original user input (raw command) */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"    private final String rawCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"    /** The functional unit in raw command */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    private final String[] commandTokens;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"    Command(String rawCommand) {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"        this.rawCommand \u003d rawCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"        commandTokens \u003d parseCommand(rawCommand);","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"     * Split the raw command (a string contains space and quotes) into tokens,","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"     * recognizing string in quotes as a whole string. Automatically","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"     * add a quote at the end of the string if there is an odd number","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"     * of quotes.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"     * @param raw raw command string","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"     * @return a string array containing tokens","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"    public String[] parseCommand(String raw){","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"        int leftIndex \u003d 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"        boolean inQuotes \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"        List\u003cString\u003e tokens \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"        raw \u003d raw.trim();","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"        for(int i \u003d 0; i \u003c raw.length(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"            switch(raw.charAt(i)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"            case \u0027 \u0027:","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"                if(inQuotes) {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"                    continue;","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"                } else if(leftIndex !\u003d -1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"                    tokens.add(raw.substring(leftIndex, i));","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"                    leftIndex \u003d -1;","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"            case \u0027\\\"\u0027:","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"                if(inQuotes) {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"                    tokens.add(raw.substring(leftIndex, i));","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"                    leftIndex \u003d -1;","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"                    inQuotes \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"                    inQuotes \u003d true;","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"                    leftIndex \u003d i + 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"            default:","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"                if(!inQuotes \u0026\u0026 leftIndex \u003d\u003d -1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"                    leftIndex \u003d i;","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"        if(leftIndex !\u003d -1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"            tokens.add(raw.substring(leftIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"        return tokens.toArray(new String[0]);","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"     * @return the original user input (raw string)","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"    public String getRawCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"        return rawCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"     * @return the tokens/args","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"    public String[] getCommandTokens() {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"        return commandTokens;","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"BotBw":76}},{"path":"src/main/java/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"public class CommandManager {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"    /** Scanner to get user input */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"    /** Manage the reminder function */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"    private static ReminderManager reminderManager;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"     *  Get the input string (raw command) from user","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"     * @return the command from user","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"    public static Command getCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"        String rawCommand \u003d sc.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"        return new Command(rawCommand);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"     * Run the corresponding command/method regarding args, default command is add reminder","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"     * @param command the command to execute","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"    public static void runCommand(Command command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"        String[] args \u003d command.getCommandTokens();","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"        // TODO Maybe use something like a function pointer array in C","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"        switch (args[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"        case \"add\":","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"            reminderManager.add(args);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"            reminderManager.mark(args);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"            reminderManager.unmark(args);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"        case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"            reminderManager.list(args);","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"        case \"echo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"            echo(args);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"        default:","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"            String[] defaultArgs \u003d new String[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"            defaultArgs[0] \u003d \"add\";","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"            defaultArgs[1] \u003d command.getRawCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"            reminderManager.add(defaultArgs);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"     * Print every token in args","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"     * @param args tokens to print","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"    private static void echo(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"        if(!args[0].equals(args[0])) {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"            // there must be some error","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"            // TODO exception handle","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"            return;","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"        for(int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"            System.out.print(args[i]);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"            if(i !\u003d args.length - 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"                System.out.print(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"                System.out.print(\"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"BotBw":74}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":" * Duke, your personal terminal assistant","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"    /** The appellation for the guest */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"    private static String userName \u003d \"Mr/Mrs Geek\";","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"     * The main method of Duke, do program initialization and then start running Duke","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"     * @param args the appellation for the guest, should only be assigned to {@value #userName} or None","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"        initializeDuke(args);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"        printUserGreet();","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"        runDuke();","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"        printUserFarewell();","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"     *  Assign the appellation since this in the only thing to initialize","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"     * @param args the appellation for the guest, should only be assigned to {@value #userName} or None","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"    private static void initializeDuke(String[] args) {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"        if(args.length \u003e\u003d 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"            userName \u003d args[args.length-1];","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"     * Return only when user\u0027s command containing word \"bye\"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"     * Get command from user, parse the command and then execute the corresponding command.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"    protected static void runDuke() {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"        while(true) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"            printUserPrompt();","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"            Command command \u003d CommandManager.getCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"            printLineDivider();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"            for(String token:command.getCommandTokens()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"                if(token.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"                    return;","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"            CommandManager.runCommand(command);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"            printLineDivider();","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"     * Print a line Divider, making the layout more clear","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"    protected static void printLineDivider() {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"        // TODO Beautify","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"------------------------------\");","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"     * Greet the user, called right after initialization","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"    protected static void printUserGreet() {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"        // TODO Personalize the greeting information (maybe change DUKE to BECK or something else)","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"                 ____        _       \\s","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"                |  _ \\\\ _   _| | _____\\s","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"                | | | | | | | |/ / _ \\\\","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"                | |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"                |____/ \\\\__,_|_|\\\\_\\\\___|","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"                \"\"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"        printLineDivider();","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Hello, I\u0027m Duke\");","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"What can I do for you? \" + userName);","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"        printLineDivider();","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"BotBw"},"content":"     * Say goodbye to user, called when program is ready to exit","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"BotBw"},"content":"    protected static void printUserFarewell() {","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Bye, \" + userName + \". Hope to see you soon!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"BotBw"},"content":"        printLineDivider();","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"BotBw"},"content":"     *  Print {@value #userName} and prompt symbol, making the layout more clear","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"BotBw"},"content":"    protected static void printUserPrompt() {","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"BotBw"},"content":"        // TODO add more prompt style","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"BotBw"},"content":"        System.out.print(userName + \" \u003e \");","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"BotBw":88,"-":5}},{"path":"src/main/java/Reminder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":" * A basic reminder with status (done or not done yet)","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"public class Reminder {","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"    /** The content of a reminder */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"    private final String content;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"    /** Whether this reminder is marked as done or not */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    private final Boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"     * The only method to create a reminder by others","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"     * @param content","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"    public Reminder(String content) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"        this(content, false);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"     * Inner constructor, used when changing the status of instance","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"     * @param content","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"     * @param isDone","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"    private Reminder(String content, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"     * Get a new Reminder marked as Done with the same content.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"     * @return A new Reminder marked as Done with the same content","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"    public Reminder setDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"        return new Reminder(content, true);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"     * Get a new Reminder marked as not Done yet with the same content.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"     * @return A new Reminder marked as not Done yet with the same content","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"    public Reminder clearDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"        return new Reminder(content, false);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"     * Check the reminder is marked as done or not;","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"     * @return The status of reminder","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"        return isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"     * Get the content of the reminder.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"     * @return The content of the reminder","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"    public String getContent() {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"        return content;","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"        return \"[\" + (isDone() ? \"X\" : \" \") + \"]\\t\" + getContent() + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"BotBw":71}},{"path":"src/main/java/ReminderManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"public class ReminderManager {","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"    /** list to store all reminders */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"    private static List\u003cReminder\u003e reminders \u003d new ArrayList\u003cReminder\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"     * Add all the reminders in args","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"     * @param args reminders to be added","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"    public static void add(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"        if(!args[0].equals(args[0])) {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"            // there must be some error","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"            // TODO exception handle","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"            return;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"        for(int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"            reminders.add(new Reminder(args[i]));","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"            System.out.println(\"Added: \" + args[i]);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"     * Return the corresponding reminder index by its array index.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"     * By conventional reminder index \u003d\u003d array index + 1","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"     * @param arrayID","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"     * @return","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"    private static int getReminderID(int arrayID) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"        return arrayID+1;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"     * Return the corresponding reminder index by its array index.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"     * By conventional array index \u003d\u003d reminder index - 1","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"     * @param reminderID","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"     * @return","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"    private static int getArrayID(int reminderID) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"        return reminderID-1;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"     * List all the reminders","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"     * @param args dump variable, no use","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"    public static void list(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"        // TODO args can be used to control the style of output","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"        if(!args[0].equals(args[0])) {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"            // there must be some error","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"            // TODO exception handle","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"            return;","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"        for(int i \u003d 0; i \u003c reminders.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"            System.out.printf(\"%d. %s\\n\", getReminderID(i), reminders.get(i));","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"     * Mark every reminder whose is in args[1..n) as done","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"     * @param args the name of function and those reminder ID to be marked as done","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"    public static void mark(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"        if(!args[0].equals(args[0])) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"            // there must be some error","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"            // TODO exception handle","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"            return;","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Nice! I\u0027ve marked these tasks as done\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"BotBw"},"content":"        for(int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"BotBw"},"content":"            int reminderID \u003d Integer.parseInt(args[i]);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"BotBw"},"content":"            int arrayID \u003d getArrayID(reminderID);","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"BotBw"},"content":"            reminders.set(arrayID, reminders.get(arrayID).setDone());","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"BotBw"},"content":"            System.out.println(reminders.get(arrayID));","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"BotBw"},"content":"     * Mark every reminder whose is in args[1..n) as not done yet","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"BotBw"},"content":"     * @param args the name of function and those reminder ID to be marked as not done yet","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"BotBw"},"content":"    public static void unmark(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"BotBw"},"content":"        if(!args[0].equals(args[0])) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"BotBw"},"content":"            // there must be some error","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"BotBw"},"content":"            // TODO exception handle","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"BotBw"},"content":"            return;","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Nice! I\u0027ve marked these tasks as not done yet\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"BotBw"},"content":"        for(int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"BotBw"},"content":"            int reminderID \u003d Integer.parseInt(args[i]);","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"BotBw"},"content":"            int arrayID \u003d getArrayID(reminderID);","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"BotBw"},"content":"            reminders.set(arrayID, reminders.get(arrayID).clearDone());","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"BotBw"},"content":"            System.out.println(reminders.get(arrayID));","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"BotBw":102}}]
