[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"1|T|0|read book","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"2|D|1|return book|2022-06-06|1700","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"cheshire-doge":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"Duke is a chat-bot that manages your tasks. It is accessed via a Command Line Interface (CLI).","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"##Quick start","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"1. Ensure that you have **Java 11** installed on your system.","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"2. Download the latest [ip.jar](https://github.com/cheshire-doge/ip/releases/tag/A-Release)","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"3. Open a **Command Line** and change your directory to the folder containing **ip.jar**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"4. Enter `java -jar ip.jar` to start Duke","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"5. Refer to **Usage** below or enter `commands` into the Command Line to view commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"### Storing of Tasks `ToDo`, `Deadline`, `Event`","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"**ToDos** are tasks that do not have a date they have to be accomplished by.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"**Deadlines** are tasks that have a deadline they have to be accomplished by.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"**Events** are tasks that run for a period of time, with a starting time and ending time.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"### Mark/Unmark Tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"Mark or Unmark tasks to remind you if you have completed them.","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"### Find Tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"Search for tasks using specific keywords.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"### Other Features!","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"**Delete**, **Check Date**, **List**","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"### `todo` - Creates a ToDo","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"Example: ","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"`todo DESCRIPTION` - Adds a ToDo with DESCRIPTION onto the task list","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"todo Groceries","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"  [T][ ] Groceries","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"### `deadline` - Creates a Deadline","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"`deadline DESCRIPTION /by DD/MM/YYYY time` - Adds a deadline with DESCRIPTION and deadline","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"deadline iP /by 03/03/2022 2359","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"  [D][ ] iP (by: Mar 3 2022 2359)","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"```","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"cheshire-doge"},"content":"### `event` - Creates an Event","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"cheshire-doge"},"content":"`event DESCRIPTION /at DD/MM/YYYY time /to DD/MM/YYYY time` - Adds an event with DESCRIPTION, start time and end time.","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"cheshire-doge"},"content":"event Project Meeting /at 05/03/2022 2000 /to 05/03/2022 2200","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"cheshire-doge"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"cheshire-doge"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"cheshire-doge"},"content":"  [E][ ] Project Meeting (at: Mar 5 2022 2000 to Mar 5 2022 2200)","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"cheshire-doge"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"cheshire-doge"},"content":"### `list` - Lists out all tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"cheshire-doge"},"content":"`list` - All tasks will be listed down","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"cheshire-doge"},"content":"### `mark`/`unmark` `NUMBER` - marks/unmarks task NUMBER in the list","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"cheshire-doge"},"content":"`mark 3` - Task 3 in the list would be marked","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"cheshire-doge"},"content":"### `find KEYWORD` - searches the list based on KEYWORD","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"cheshire-doge"},"content":"`find project` - Lists down every Task in the list containing `project`","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"cheshire-doge"},"content":"### `check date DD/MM/YYYY` - checks the list if any task is due or happens on that day","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"cheshire-doge"},"content":"`check date 04/03/2021` - Checks if any task happens or is due on 04/03/2021","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"cheshire-doge"},"content":"### `delete NUMBER` - deletes task NUMBER in the list","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"cheshire-doge"},"content":"`delete 1` - Deletes the first task on the list","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"cheshire-doge"},"content":"### `bye` - closes the bot","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"cheshire-doge"},"content":"### `commands` - lists down all commands","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"-":21,"cheshire-doge":72}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.parser.Parser;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.Command;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.storage.Storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":" * Main class for Duke that runs the bot. The bot takes in user inputs, and has various commands","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":" * that would perform various tasks","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"    public static int taskCounter \u003d 0;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     * Main method used to run the bot. It calls the load() method from the Storage class to ","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"     * load data saved from previous uses, will ask for user inputs, will call the writeToFile()","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"     * method from Storage to update the latest information.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"    private void run() {","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"            Storage.load();","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"            System.out.println(\"ERROR IN LOADING FILE\");","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"            return;","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"        Ui.printIntro();","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"        String input \u003d \"\";","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"            try {","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"                Command command \u003d parser.parse(input);","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"                command.execute();","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"                Ui.printError(e);","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"        ","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"     * Main method for Duke.","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"     * @param args NIL.","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"        new Duke().run();","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"cheshire-doge":58}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.storage.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" * Class for ByeCommand. It is created when the user wants to close Duke.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. It initiates the writing of the task list into","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"     * the txt file, and prints a goodbye message before closing Duke.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() {","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"            Storage.writeToFile();","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"            System.out.println(\"ERROR IN WRITING FILE\");","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"        Ui.printBye();","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":25}},{"path":"src/main/java/duke/command/CheckDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.exception.DukeException;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" * Class for the CheckDateCommand. It is created when the user wants to check if a date","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":" * has any task.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"public class CheckDateCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"    private final String date;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for CheckDateCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     * @param date String date that is being checked in the format DD/MM/YYYY","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"    public CheckDateCommand(String date) {","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"    ","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. Calls a Ui method to show tasks on the date.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"        if (isValidDate(convertDate(this.date))) {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"            LocalDate localDate \u003d LocalDate.parse(convertDate(this.date));","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"            Ui.printCheckDate(localDate);","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You have typed an invalid date!\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"            \"The format for date is DD/MM/YYYY !, e.g. 15/02/2022\");","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"cheshire-doge":40}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":" * Abstract class for all Commands. Contains basic methods for different commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     * Method to check if a String is a number.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"     * @param string String that is being checked.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     * @return Boolean value whether the String is a number.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"    protected boolean isNum(String string) {","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"            Integer.parseInt(string);","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"            return false;","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"        } ","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"        return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"     * Method to convert a date from DD/MM/YYYY to YYYY-MM-DD.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"     * @param date String date in DD/MM/YYYY time format.","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"     * @return String date in YYYY-MM-DD format.","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If input date format is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"    protected String convertDate(String date) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"        String[] dateTimeArray \u003d date.split(\" \");","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"        String[] dateArray \u003d dateTimeArray[0].split(\"/\");","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"        if (dateArray.length !\u003d 3) {","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! Your date format is invalid!\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"                    \"The format for date is DD/MM/YYYY !, e.g. 15/02/2022\");","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"        } else if (!isNum(dateArray[0]) || !isNum(dateArray[1]) || !isNum(dateArray[2])) {","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! Your date format is invalid!\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"            \"The format for date is DD/MM/YYYY !, e.g. 15/02/2022\");","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"        String dayString \u003d String.format(\"%02d\", Integer.parseInt(dateArray[0]));","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"cheshire-doge"},"content":"        String monthString \u003d String.format(\"%02d\", Integer.parseInt(dateArray[1])); ","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"        String yearString;","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"        String localDateString;","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"        if (dateArray[2].length() \u003d\u003d 2) {","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"cheshire-doge"},"content":"            yearString \u003d \"20\" + dateArray[2];","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"        } else if (dateArray[2].length() \u003d\u003d 4) {","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"            yearString \u003d dateArray[2];","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You have typed an invalid date!\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"                    \"The format for date is DD/MM/YYYY !, e.g. 15/02/2022\");","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"cheshire-doge"},"content":"        localDateString \u003d yearString + \"-\" + monthString + \"-\" + dayString;","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"cheshire-doge"},"content":"        if (isValidDate(localDateString)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"cheshire-doge"},"content":"            return localDateString;","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You have typed an invalid date!\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"cheshire-doge"},"content":"                    \"The format for date is DD/MM/YYYY !, e.g. 15/02/2022\");","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"cheshire-doge"},"content":"     * Checks if date in YYYY-MM-DD is a valid date.","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"cheshire-doge"},"content":"     * @param date String date in YYYY-MM-DD format.","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"cheshire-doge"},"content":"     * @return Boolean value whether date is a valid date.","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"cheshire-doge"},"content":"    protected boolean isValidDate(String date) {","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"cheshire-doge"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"cheshire-doge"},"content":"            LocalDate.parse(date);","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"cheshire-doge"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"cheshire-doge"},"content":"            return false;","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"cheshire-doge"},"content":"        return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"cheshire-doge"},"content":"     * Method that checks if time input is valid.","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"cheshire-doge"},"content":"     * @param date String date in DD/MM/YYYY time format.","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"cheshire-doge"},"content":"     * @return String time in 24-hour format.","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If time is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"cheshire-doge"},"content":"    protected String convertTime(String date) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"cheshire-doge"},"content":"        String[] dateTimeArray \u003d date.split(\" \");","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"cheshire-doge"},"content":"        String time;","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"cheshire-doge"},"content":"        if (dateTimeArray.length \u003c 2) {","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You did not key in a time\");","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"cheshire-doge"},"content":"            time \u003d dateTimeArray[1];","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"cheshire-doge"},"content":"            if (isNum(time)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"cheshire-doge"},"content":"                if (Integer.parseInt(time) \u003c 2400 \u0026\u0026 Integer.parseInt(time) \u003e\u003d 0 \u0026\u0026","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"cheshire-doge"},"content":"                        Integer.parseInt(time) % 100 \u003c 60) {","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"cheshire-doge"},"content":"                    return time;","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"cheshire-doge"},"content":"                } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"cheshire-doge"},"content":"                    throw new DukeException(\"Oh no! The time you entered is invalid!\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"cheshire-doge"},"content":"                            \"The format for time is in 24-hour format! e.g. 1800\");","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"cheshire-doge"},"content":"                }","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"cheshire-doge"},"content":"            } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"cheshire-doge"},"content":"                throw new DukeException(\"Oh no! The time you entered is invalid!\\n\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"cheshire-doge"},"content":"                            \"The format for time is in 24-hour format! e.g. 1800\");","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"cheshire-doge"},"content":"     * Abstract method that all commands have.","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If command cannot be executed due to invalid inputs.","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"cheshire-doge"},"content":"    public abstract void execute() throws DukeException;","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":120}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.Deadline;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":" * Class for DeadlineCommand. It is called when the user wants to create a Deadline.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    ","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"    private String input;","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for DeadlineCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. It checks if user input is valid, creates a new Deadline","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"     * and adds it onto the task list. It then calls the Ui to print if the task has been added.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"        String[] splitString \u003d input.split(\" /by \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to include a date after \u0027/by\u0027!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"        } else if (splitString[0].equals(\"\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need a description for this event!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"            Deadline task \u003d new Deadline(splitString[0], convertDate(splitString[1]), ","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"                    convertTime(splitString[1]));","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"            Duke.tasks.add(task);","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"            Duke.taskCounter++;","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"            Ui.printTask(task);","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":45}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" * Class for DeleteCommand. It is created when the user wants to delete a task from the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    private final int deleteInt;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"     * @param deleteInt The task of number deleteInt that the user wants to remove.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"    public DeleteCommand(int deleteInt) {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"        this.deleteInt \u003d deleteInt;","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. It gets the task to be removed from the task list, and ","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     * calls the Ui command to show the task that has been deleted.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() {","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"        Task task \u003d Duke.tasks.get(deleteInt - 1);","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"        Duke.tasks.remove(deleteInt - 1);","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"        Duke.taskCounter--;","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"        Ui.printDelete(task);","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":34}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.Event;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":" * Class for EventCommand. It is created when the user wants to create a new Event.","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    ","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"    private String input;","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"     * Method to check if user input dates are valid.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"     * @param startDate The start date in YYYY-MM-DD.","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"     * @param startTime The start time in 24-hour format.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"     * @param endDate The end date in YYYY-MM-DD.","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"     * @param endTime The end time in 24-hour format.","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"     * @return Boolean value whether the input dates are valid.","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"    private boolean isValidDates(String startDate, String startTime, ","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"            String endDate, String endTime) {","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"        LocalDate startLocalDate \u003d LocalDate.parse(startDate);","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"        LocalDate endLocalDate \u003d LocalDate.parse(endDate);","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"        if (startLocalDate.isBefore(endLocalDate)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"            return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"        } else if (startLocalDate.equals(endLocalDate) \u0026\u0026","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"                Integer.parseInt(endTime) \u003e Integer.parseInt(startTime)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"            return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"cheshire-doge"},"content":"            return false;","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. It checks if user input is valid at various points. If","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"     * valid, it creates an Event and adds it onto the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"cheshire-doge"},"content":"        String[] splitString \u003d input.split(\" /at \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"cheshire-doge"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to include a date after \u0027/at\u0027!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"cheshire-doge"},"content":"        } else if (splitString[0].equals(\"\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need a description for this event!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"cheshire-doge"},"content":"            String date \u003d splitString[1];","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"cheshire-doge"},"content":"            if (date.contains(\" /to \")) {","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"cheshire-doge"},"content":"                String[] timings \u003d date.split(\" /to \");","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"cheshire-doge"},"content":"                if (timings.length \u003c 2) {","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"cheshire-doge"},"content":"                    throw new DukeException(\"Oh no! You need to include a date after \u0027/to\u0027!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"cheshire-doge"},"content":"                } else if (timings[0].equals(\"\")) {","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"cheshire-doge"},"content":"                    throw new DukeException(\"Oh no! You need to include a date before \u0027/to\u0027!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"cheshire-doge"},"content":"                } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"cheshire-doge"},"content":"                    String startDate \u003d convertDate(timings[0]);","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"cheshire-doge"},"content":"                    String startTime \u003d convertTime(timings[0]);","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"cheshire-doge"},"content":"                    String endDate \u003d convertDate(timings[1]);","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"cheshire-doge"},"content":"                    String endTime \u003d convertTime(timings[1]);","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"cheshire-doge"},"content":"                    if (isValidDates(startDate, startTime, endDate, endTime)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"cheshire-doge"},"content":"                        Event task \u003d new Event(splitString[0], startDate, ","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"cheshire-doge"},"content":"                                startTime, endDate, endTime);","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"cheshire-doge"},"content":"                        Duke.tasks.add(task);","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"cheshire-doge"},"content":"                        Duke.taskCounter++;","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"cheshire-doge"},"content":"                        Ui.printTask(task);","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"cheshire-doge"},"content":"                    } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"cheshire-doge"},"content":"                        throw new DukeException(\"Oh no! Your ending date is after \" +","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"cheshire-doge"},"content":"                                \"your starting date!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"cheshire-doge"},"content":"                    }","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"cheshire-doge"},"content":"                }","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"cheshire-doge"},"content":"            } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"cheshire-doge"},"content":"                throw new DukeException(\"Oh no! You need to include a \u0027/to\u0027 between\"  +","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"cheshire-doge"},"content":"                        \" your start and end time!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"cheshire-doge"},"content":"            ","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":96}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" * Class for FindCommand. It is created when the user requests to search for a specific keyword in","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":" * the tasks in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    private final String input;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. It calls Ui to search for tasks with description","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     * matching the keyword.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"        String[] splitString \u003d input.split(\" \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need include a keyword to search for\");","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"            Ui.printFind(splitString[1]);","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":38}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":" * Class for InvalidCommand. It is called when the user inputs an invalid command.","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. It calls Ui to print out a message to let the user know","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"     * the command is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() {","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"        Ui.printInvalid();","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":18}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":" * Class for ListCommand. It is created when the user requests for the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. It calls Ui to print out the tasks in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"        Ui.printList();","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":17}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" * Class for MarkCommand. It is created when the user requests to mark a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    private final int markInt;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"     * @param markInt The task of number markInt in the task list that the user wants to mark.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"    public MarkCommand(int markInt) {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"        this.markInt \u003d markInt;","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. It marks the task and calls Ui let the user know the","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     * task has been marked.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() {","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"        Task task \u003d Duke.tasks.get(markInt - 1);","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"        task.setDone(true);","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"        Ui.printMark(markInt, task);","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":33}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.ToDo;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" * Class for ToDoCommand. It is created when the user requests to create a new ToDo.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"    ","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    private String input;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for ToDoCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"    public ToDoCommand(String input) {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out command. It creates a ToDo which is added onto the list, and calls","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     * Ui to print that the ToDo has been added onto the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() {","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"        ToDo task \u003d new ToDo(this.input);","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"        Duke.tasks.add(task);","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"        Duke.taskCounter++;","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"        Ui.printTask(task);","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":34}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" * Class for UnmarkCommand. It is created when the user requests to unmark a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"    ","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    private final int markInt;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"     * @param markInt The task of number markInt in the task list that the user wants to unmark.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"    public UnmarkCommand(int markInt) {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"        this.markInt \u003d markInt;","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. It unmarks the task and calls Ui let the user know the","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     * task has been unmarked.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() {","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"        Task task \u003d Duke.tasks.get(markInt - 1);","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"        task.setDone(false);","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"        Ui.printUnmark(markInt, task);","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":33}},{"path":"src/main/java/duke/command/commandsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.command;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":" * Class for CommandsCommand. It is created when a user request for the command list.","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"public class CommandsCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"     * Method to carry out the command. Calls Ui to print out all valid commands into a list.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"    public void execute() {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"        Ui.printCommand();","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":17}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.exception;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":" * Class for the DukeException. It is the exception that handles almost all errors raised by","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":" * invalid inputs from the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"    ","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"    private final String error;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"     * @param error String error message","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"    public DukeException(String error) {","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"        this.error \u003d error;","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"     * Method to get the error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"     * @return The error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"    public String getMessage() {","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"        return this.error;","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":29}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.parser;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.ui.Ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.Command;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.ListCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.UnmarkCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.MarkCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.DeleteCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.ToDoCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.DeadlineCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.EventCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.InvalidCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.CommandsCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.CheckDateCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.ByeCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.command.FindCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":" * Class for the Parser object. It is the class used to parse user inputs and calls Commands","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":" * from the input.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"public class Parser {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"    private final String LIST \u003d \"list\";","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"    private final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    private final String MARK \u003d \"mark\";","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"    private final String TODO \u003d \"todo\";","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"    private final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"    private final String EVENT \u003d \"event\";","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"    private final String COMMANDS \u003d \"commands\";","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"    private final String DELETE \u003d \"delete\";","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"    private final String CHECK_DATE \u003d \"check date\";","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"    private final String BYE \u003d \"bye\";","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"    private final String FIND \u003d \"find\";","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"    ","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"     * Main method that takes in the initial user input and decides how to deal with it.","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"     * @param input The user input.","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"     * @return Calls another method to handle the input.","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"        String lowerCaseInput \u003d input.toLowerCase();","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"        if (lowerCaseInput.startsWith(LIST)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"cheshire-doge"},"content":"            return parseList();","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"        } else if (lowerCaseInput.startsWith(UNMARK)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"            return parseUnmark(input);","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"        } else if (lowerCaseInput.startsWith(MARK)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"            return parseMark(input);","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"        } else if (lowerCaseInput.startsWith(TODO)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"            return parseToDo(input);","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"        } else if (lowerCaseInput.startsWith(DEADLINE)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"cheshire-doge"},"content":"            if (input.contains(\"/by\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"cheshire-doge"},"content":"                return parseDeadline(input);","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"cheshire-doge"},"content":"            } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"cheshire-doge"},"content":"                throw new DukeException(\"Oh no! You need to include a \u0027/by\u0027 in the command!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"cheshire-doge"},"content":"        } else if (lowerCaseInput.startsWith(EVENT)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"cheshire-doge"},"content":"            if (input.contains(\"/at\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"cheshire-doge"},"content":"                return parseEvent(input);","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"cheshire-doge"},"content":"            } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"cheshire-doge"},"content":"                throw new DukeException(\"Oh no! You need to include a \u0027/at\u0027 in the command!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"cheshire-doge"},"content":"        } else if (lowerCaseInput.startsWith(COMMANDS)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"cheshire-doge"},"content":"            return parseCommands();","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"cheshire-doge"},"content":"        } else if (lowerCaseInput.startsWith(DELETE)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"cheshire-doge"},"content":"            return parseDelete(input);","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"cheshire-doge"},"content":"        } else if (lowerCaseInput.startsWith(CHECK_DATE)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"cheshire-doge"},"content":"            return parseCheckDate(input);","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"cheshire-doge"},"content":"        } else if (lowerCaseInput.startsWith(BYE)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"cheshire-doge"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"cheshire-doge"},"content":"        } else if (lowerCaseInput.startsWith(FIND)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"cheshire-doge"},"content":"            return new FindCommand(input);","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"cheshire-doge"},"content":"            return new InvalidCommand();","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"cheshire-doge"},"content":"     * Method to check if a String is a number","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"cheshire-doge"},"content":"     * @param string String that is being checked.","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"cheshire-doge"},"content":"     * @return Boolean value whether it is a number.","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"cheshire-doge"},"content":"    private boolean isNum(String string) {","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"cheshire-doge"},"content":"        try {","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"cheshire-doge"},"content":"            Integer.parseInt(string);","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"cheshire-doge"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"cheshire-doge"},"content":"            return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"cheshire-doge"},"content":"        } ","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"cheshire-doge"},"content":"        return true;","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"cheshire-doge"},"content":"     * Method to parse user input asking for the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"cheshire-doge"},"content":"     * @return ListCommand which will be executed.","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"cheshire-doge"},"content":"    private Command parseList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"cheshire-doge"},"content":"        return new ListCommand();","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"cheshire-doge"},"content":"     * Method to parse user input asking to unmark a specific task.","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"cheshire-doge"},"content":"     * @return UnmarkCommand to be executed.","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"cheshire-doge"},"content":"    private Command parseUnmark(String input) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"cheshire-doge"},"content":"        String[] splitString \u003d input.split(\" \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"cheshire-doge"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to choose a task to unmark!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"cheshire-doge"},"content":"        } else if (isNum(splitString[1])) {","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"cheshire-doge"},"content":"            int markInt \u003d Integer.parseInt(splitString[1]);","lastModifiedDate":"2022-03-02"},{"lineNumber":131,"author":{"gitId":"cheshire-doge"},"content":"            if ((markInt \u003e Duke.taskCounter) || (markInt \u003c 1)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"cheshire-doge"},"content":"                throw new DukeException(\"Oh no! The number you have chosen is not valid!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"cheshire-doge"},"content":"            } else if (!Duke.tasks.get(markInt - 1).isDone()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":135,"author":{"gitId":"cheshire-doge"},"content":"                throw new DukeException(\"Oh no! The task you have selected is not been marked!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":137,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"cheshire-doge"},"content":"            else {","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"cheshire-doge"},"content":"                return new UnmarkCommand(markInt);","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to choose a number!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":145,"author":{"gitId":"cheshire-doge"},"content":"        } ","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":147,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":148,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":149,"author":{"gitId":"cheshire-doge"},"content":"     * Method to parse user input asking to mark a specific task.","lastModifiedDate":"2022-03-04"},{"lineNumber":150,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":151,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":152,"author":{"gitId":"cheshire-doge"},"content":"     * @return MarkCommand to be executed.","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":154,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":155,"author":{"gitId":"cheshire-doge"},"content":"    private Command parseMark(String input) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":156,"author":{"gitId":"cheshire-doge"},"content":"        String[] splitString \u003d input.split(\" \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":157,"author":{"gitId":"cheshire-doge"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":158,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to choose a task to unmark!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":159,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":160,"author":{"gitId":"cheshire-doge"},"content":"        } else if (isNum(splitString[1])) {","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"cheshire-doge"},"content":"            int markInt \u003d Integer.parseInt(splitString[1]);","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"cheshire-doge"},"content":"            if ((markInt \u003e Duke.taskCounter) || (markInt \u003c 1)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"cheshire-doge"},"content":"                throw new DukeException(\"Oh no! The number you have chosen is not valid!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"cheshire-doge"},"content":"            } else if (Duke.tasks.get(markInt - 1).isDone()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":166,"author":{"gitId":"cheshire-doge"},"content":"                throw new DukeException(\"Oh no! The task you have selected is already been marked\");","lastModifiedDate":"2022-03-02"},{"lineNumber":167,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":168,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":169,"author":{"gitId":"cheshire-doge"},"content":"            else {","lastModifiedDate":"2022-03-02"},{"lineNumber":170,"author":{"gitId":"cheshire-doge"},"content":"                return new MarkCommand(markInt);","lastModifiedDate":"2022-03-02"},{"lineNumber":171,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":172,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":173,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":174,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to choose a number!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":175,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":176,"author":{"gitId":"cheshire-doge"},"content":"        } ","lastModifiedDate":"2022-03-02"},{"lineNumber":177,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":178,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":179,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":180,"author":{"gitId":"cheshire-doge"},"content":"     * Method to parse user input asking to delete a specific task.","lastModifiedDate":"2022-03-04"},{"lineNumber":181,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":182,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":183,"author":{"gitId":"cheshire-doge"},"content":"     * @return DeleteCommand to be executed.","lastModifiedDate":"2022-03-04"},{"lineNumber":184,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":185,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":186,"author":{"gitId":"cheshire-doge"},"content":"    private Command parseDelete(String input) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":187,"author":{"gitId":"cheshire-doge"},"content":"        String[] splitString \u003d input.split(\" \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":188,"author":{"gitId":"cheshire-doge"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":189,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to choose a task to unmark!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":190,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":191,"author":{"gitId":"cheshire-doge"},"content":"        } else if (isNum(splitString[1])) {","lastModifiedDate":"2022-03-02"},{"lineNumber":192,"author":{"gitId":"cheshire-doge"},"content":"            int deleteInt \u003d Integer.parseInt(splitString[1]);","lastModifiedDate":"2022-03-02"},{"lineNumber":193,"author":{"gitId":"cheshire-doge"},"content":"            if ((deleteInt \u003e Duke.taskCounter) || (deleteInt \u003c 1)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":194,"author":{"gitId":"cheshire-doge"},"content":"                throw new DukeException(\"Oh no! The number you have chosen is not valid!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":195,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":196,"author":{"gitId":"cheshire-doge"},"content":"            } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":197,"author":{"gitId":"cheshire-doge"},"content":"                return new DeleteCommand(deleteInt);","lastModifiedDate":"2022-03-02"},{"lineNumber":198,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":199,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":200,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":201,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to choose a number!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":202,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":203,"author":{"gitId":"cheshire-doge"},"content":"        } ","lastModifiedDate":"2022-03-02"},{"lineNumber":204,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":205,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":206,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":207,"author":{"gitId":"cheshire-doge"},"content":"     * Method to parse user input requesting to create a new ToDo.","lastModifiedDate":"2022-03-04"},{"lineNumber":208,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":209,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":210,"author":{"gitId":"cheshire-doge"},"content":"     * @return ToDoCommand to be executed.","lastModifiedDate":"2022-03-04"},{"lineNumber":211,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":212,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":213,"author":{"gitId":"cheshire-doge"},"content":"    private Command parseToDo(String input) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":214,"author":{"gitId":"cheshire-doge"},"content":"        String[] splitString \u003d input.split(\" \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":215,"author":{"gitId":"cheshire-doge"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":216,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to enter the description of the task!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":217,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":218,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":219,"author":{"gitId":"cheshire-doge"},"content":"            return new ToDoCommand(splitString[1]);","lastModifiedDate":"2022-03-02"},{"lineNumber":220,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":221,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":222,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":223,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":224,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":225,"author":{"gitId":"cheshire-doge"},"content":"     * Method to parse user input requesting to create a new Deadline.","lastModifiedDate":"2022-03-04"},{"lineNumber":226,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":227,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":228,"author":{"gitId":"cheshire-doge"},"content":"     * @return DeadlineCommand to be executed.","lastModifiedDate":"2022-03-04"},{"lineNumber":229,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":230,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":231,"author":{"gitId":"cheshire-doge"},"content":"    private Command parseDeadline(String input) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":232,"author":{"gitId":"cheshire-doge"},"content":"        String[] splitString \u003d input.split(\" \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":233,"author":{"gitId":"cheshire-doge"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":234,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to enter the description of the task!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":235,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":236,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":237,"author":{"gitId":"cheshire-doge"},"content":"            return new DeadlineCommand(splitString[1]);","lastModifiedDate":"2022-03-02"},{"lineNumber":238,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":239,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":240,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":241,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":242,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":243,"author":{"gitId":"cheshire-doge"},"content":"     * Method to parse user input requesting to create a new Event.","lastModifiedDate":"2022-03-04"},{"lineNumber":244,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":245,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":246,"author":{"gitId":"cheshire-doge"},"content":"     * @return EventCommand to be executed.","lastModifiedDate":"2022-03-04"},{"lineNumber":247,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":248,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":249,"author":{"gitId":"cheshire-doge"},"content":"    private Command parseEvent(String input) throws DukeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":250,"author":{"gitId":"cheshire-doge"},"content":"        String[] splitString \u003d input.split(\" \", 2);","lastModifiedDate":"2022-03-02"},{"lineNumber":251,"author":{"gitId":"cheshire-doge"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2022-03-02"},{"lineNumber":252,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to enter the description of the task!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":253,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":254,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":255,"author":{"gitId":"cheshire-doge"},"content":"            return new EventCommand(splitString[1]);","lastModifiedDate":"2022-03-02"},{"lineNumber":256,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":257,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":258,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":259,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":260,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":261,"author":{"gitId":"cheshire-doge"},"content":"     * Method to parse user input requesting to check if a specific date has any task.","lastModifiedDate":"2022-03-04"},{"lineNumber":262,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":263,"author":{"gitId":"cheshire-doge"},"content":"     * @param input User input.","lastModifiedDate":"2022-03-04"},{"lineNumber":264,"author":{"gitId":"cheshire-doge"},"content":"     * @return CheckDateCommand to be executed.","lastModifiedDate":"2022-03-04"},{"lineNumber":265,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2022-03-04"},{"lineNumber":266,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":267,"author":{"gitId":"cheshire-doge"},"content":"    private Command parseCheckDate(String input) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":268,"author":{"gitId":"cheshire-doge"},"content":"        String[] splitString \u003d input.split(\" \", 3);","lastModifiedDate":"2022-03-04"},{"lineNumber":269,"author":{"gitId":"cheshire-doge"},"content":"        if (splitString.length \u003c 3) {","lastModifiedDate":"2022-03-04"},{"lineNumber":270,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"Oh no! You need to enter the date that you want to check!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":271,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":272,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":273,"author":{"gitId":"cheshire-doge"},"content":"            return new CheckDateCommand(splitString[2]);","lastModifiedDate":"2022-03-04"},{"lineNumber":274,"author":{"gitId":"cheshire-doge"},"content":"            ","lastModifiedDate":"2022-03-04"},{"lineNumber":275,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":276,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":277,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":278,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":279,"author":{"gitId":"cheshire-doge"},"content":"     * Method to parse user input requesting to see the command list.","lastModifiedDate":"2022-03-04"},{"lineNumber":280,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":281,"author":{"gitId":"cheshire-doge"},"content":"     * @return commandsCommand to be executed.","lastModifiedDate":"2022-03-04"},{"lineNumber":282,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":283,"author":{"gitId":"cheshire-doge"},"content":"    private Command parseCommands() {","lastModifiedDate":"2022-03-02"},{"lineNumber":284,"author":{"gitId":"cheshire-doge"},"content":"        return new CommandsCommand();","lastModifiedDate":"2022-03-04"},{"lineNumber":285,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":286,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":287,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":287}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.storage;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import java.io.File;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.ToDo;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.Deadline;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.Event;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.exception.DukeException;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":" * Class for the Storage object. It contains methods to read from a data file, and to write onto","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":" * it after Duke has ended.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":" * ","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":" * @throws IOException If an input or output exception occured.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":" */ ","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"public class Storage {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"    private static String DATA_DIRECTORY \u003d System.getProperty(\"user.dir\") + \"/data\";","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"    private static String DATA_FILE \u003d DATA_DIRECTORY + \"/duke.txt\";","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    private static Path dataDirectoryPath \u003d Paths.get(DATA_DIRECTORY);","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"     * Method used to initiate read from data/duke.txt, and to retrieve when Duke is started.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"     * @throws IOException If an input or output exception occured.","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If data file is corrupted or contains unexpected information.","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"    public static void load() throws IOException, DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"        boolean directoryExists \u003d new File(DATA_DIRECTORY).exists();","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"        boolean fileExists \u003d new File(DATA_FILE).exists();","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"        File dataFile \u003d new File(DATA_FILE);","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"        if (!directoryExists) {","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"            Files.createDirectory(dataDirectoryPath);","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"        if (!fileExists) {","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"        Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"cheshire-doge"},"content":"            readData(s.nextLine());","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"        Duke.taskCounter \u003d Duke.tasks.size();","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"     * Method that reads lines in duke.txt and adds them to the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"     * @param data Input line from duke.txt.","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"     * @throws DukeException If task type is of an unexpected value.","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"    private static void readData(String data) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"cheshire-doge"},"content":"        String[] dataArr \u003d data.split(\"\\\\|\");","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"cheshire-doge"},"content":"        Task newTask;","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"cheshire-doge"},"content":"        if (dataArr[1].equals(\"T\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"cheshire-doge"},"content":"            newTask \u003d new ToDo(dataArr[3]);","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"cheshire-doge"},"content":"            if (Integer.parseInt(dataArr[2]) \u003d\u003d 1) {","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"cheshire-doge"},"content":"                newTask.setDone(true);","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"cheshire-doge"},"content":"        } else if (dataArr[1].equals(\"D\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"cheshire-doge"},"content":"            newTask \u003d new Deadline(dataArr[3], dataArr[4], dataArr[5]);","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"cheshire-doge"},"content":"            if (Integer.parseInt(dataArr[2]) \u003d\u003d 1) {","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"cheshire-doge"},"content":"                newTask.setDone(true);","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"cheshire-doge"},"content":"        } else if (dataArr[1].equals(\"E\")) {","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"cheshire-doge"},"content":"            newTask \u003d new Event(dataArr[3], dataArr[4], dataArr[5], dataArr[6], dataArr[7]);","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"cheshire-doge"},"content":"            if (Integer.parseInt(dataArr[2]) \u003d\u003d 1) {","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"cheshire-doge"},"content":"                newTask.setDone(true);","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"cheshire-doge"},"content":"            throw new DukeException(\"ERROR IN DATA FILE\");","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"cheshire-doge"},"content":"        Duke.tasks.add(newTask);","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"cheshire-doge"},"content":"     * Method that is used to initiate the writing to data/duke.txt before closing Duke.","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"cheshire-doge"},"content":"     * @throws IOException If an input or output exception occured.","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"cheshire-doge"},"content":"    public static void writeToFile() throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"cheshire-doge"},"content":"        FileWriter fw \u003d new FileWriter(DATA_FILE, false);","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"cheshire-doge"},"content":"        int taskNum \u003d 0;","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"cheshire-doge"},"content":"        for (Task task : Duke.tasks) {","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"cheshire-doge"},"content":"            taskNum++;","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"cheshire-doge"},"content":"            fw.write(convertTask(taskNum, task));","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"cheshire-doge"},"content":"        fw.close();","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"cheshire-doge"},"content":"     * Method that converts a task into a String that can be readable for future use.","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"cheshire-doge"},"content":"     * @param taskNum The number of the task on the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"cheshire-doge"},"content":"     * @param task The task that is being converted.","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"cheshire-doge"},"content":"     * @return A string which is written onto data/duke.txt.","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"cheshire-doge"},"content":"    private static String convertTask(int taskNum, Task task) {","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"cheshire-doge"},"content":"        String line \u003d String.valueOf(taskNum) + \"|\" + task.getType() + \"|\";","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"cheshire-doge"},"content":"        if (task.isDone()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"cheshire-doge"},"content":"            line +\u003d \"1|\";","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":110,"author":{"gitId":"cheshire-doge"},"content":"            line +\u003d \"0|\";","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"cheshire-doge"},"content":"        line +\u003d task.getDescription();","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"cheshire-doge"},"content":"        if (task.toString().contains(\"(\")) {","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"cheshire-doge"},"content":"            line +\u003d \"|\" + task.getDateTime();","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"cheshire-doge"},"content":"        line +\u003d System.lineSeparator();","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"cheshire-doge"},"content":"        return line;","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":119}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.task;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":" * Class for the Deadline object. Deadlines are Tasks that do not have a specific due date.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"    private final String date;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    private final String time;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"    private final LocalDate localDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     * @param description String describing the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"     * @param date String date in YYYY-MM-DD that the task is due by .","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"     * @param time String time in 24-hour format that the task is due by.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"    public Deadline(String description, String date, String time) {","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"        this.localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"     * Method used to show that the Task is a Deadline.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"     * @return A String \"D\".","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"    public String getType() {","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"        return \"D\";","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"     * Method used to retrieve the date the deadline is due.","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"     * @return LocalDate of the due date.","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"        return this.localDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"     * Duplicate method used to retrieve the date the deadline is due.","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"     * @return LocalDate of the due date.","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"        return this.localDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"     * Formats the timing of the event into date|time for saving.","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"cheshire-doge"},"content":"     * @return String in the format for writing to file.","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"cheshire-doge"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"cheshire-doge"},"content":"        return this.date + \"|\" + this.time;","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"cheshire-doge"},"content":"     * Converts the parameters of the Deadline into a readable line with it\u0027s description","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"cheshire-doge"},"content":"     * and due date and time.","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"cheshire-doge"},"content":"     * @return String that contains the information of the Deadline.","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"cheshire-doge"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"cheshire-doge"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"cheshire-doge"},"content":"        String dateTime \u003d this.localDate.","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"cheshire-doge"},"content":"                format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString() + \" \" + this.time;","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"cheshire-doge"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), dateTime);","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"cheshire-doge":78}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.task;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":" * Class for the Event object. An event is a task that has a start date and an end date.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"    ","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"    private final String startDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    private final String startTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"    private final String endDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    private final String endTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"    private final LocalDate localStartDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"    private final LocalDate localEndDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"     * @param description String describing the event.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"     * @param startDate String of the date it starts on in YYYY-MM-DD.","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"     * @param startTime String of the time it starts in 24-hour format.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"     * @param endDate String of the date it ends on in YYYY-MM-DD.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     * @param endTime String of the time it ends in 24-hour format.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    public Event(String description, String startDate, String startTime, ","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"            String endDate, String endTime) {","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"        this.localStartDate \u003d LocalDate.parse(startDate);","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"        this.localEndDate \u003d LocalDate.parse(endDate);","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"     * Method used to show that the Task is an Event.","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"     * @return A String \"E\"","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"    public String getType() {","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"        return \"E\";","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"     * Method used to retrieve the start date of the event.","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"     * @return LocalDate of the start date.","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"        return this.localStartDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"     * Method used to retrieve the end date of the event.","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"cheshire-doge"},"content":"     * @return LocalDate of the end date.","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"cheshire-doge"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"cheshire-doge"},"content":"        return this.localEndDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"cheshire-doge"},"content":"     * Formats the timing of the event into start date|start time|end date|end time for saving.","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"cheshire-doge"},"content":"     * @return String in the format for writing to file.","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"cheshire-doge"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"cheshire-doge"},"content":"        return String.format(\"%s|%s|%s|%s\", this.startDate, this.startTime, ","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"cheshire-doge"},"content":"                this.endDate, this.endTime);","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"cheshire-doge"},"content":"     * Converts the parameters of the Event into a readable line with it\u0027s description, ","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"cheshire-doge"},"content":"     * start and end dates and times.","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"cheshire-doge"},"content":"     * @return String that contains the information of the Event.","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"cheshire-doge"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"cheshire-doge"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"cheshire-doge"},"content":"        String startDateTime \u003d this.localStartDate.","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"cheshire-doge"},"content":"                format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString() + \" \" + ","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"cheshire-doge"},"content":"                this.startTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"cheshire-doge"},"content":"        String endDateTime \u003d this.localEndDate.","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"cheshire-doge"},"content":"                format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString() + \" \" + ","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"cheshire-doge"},"content":"                this.endTime;","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"cheshire-doge"},"content":"        return String.format(\"[E]%s (at: %s to %s)\", super.toString(), ","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"cheshire-doge"},"content":"                startDateTime, endDateTime);","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"cheshire-doge":93}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.task;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":" * Abstract class for ToDos, Deadlines, and Events. It contains basic methods for the ","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":" * 3 sub-classes.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"    public String description;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"    public Boolean isDone \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    public String mark \u003d \" \";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for the Task object.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"     * @param description String of the description of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"    public Task(String description) {","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"     * Marks the task as done or not done.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"     * @param isDone Boolean value that marks the task as done or not.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"    public void setDone(Boolean isDone) {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"     * Method to return the description of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"     * @return String desciption of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"        return this.description;","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"     * Method to find out if the task is done.","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"     * @return Boolean value whether the task is done.","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"cheshire-doge"},"content":"        return this.isDone;","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"cheshire-doge"},"content":"     * Method to show whether a task is done with an \"X\", or \" \" if not done.","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"     * @return A String \"X\" or \" \" depending on whether the task is done.","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"    public String getMark() {","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"        if (this.isDone()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"            this.mark \u003d \"X\";","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"cheshire-doge"},"content":"            this.mark \u003d \" \";","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"cheshire-doge"},"content":"        return this.mark;","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"cheshire-doge"},"content":"     * Abstract method to find out the type of task.","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"cheshire-doge"},"content":"     * @return String \"T\" for ToDos, String \"D\" for Deadlines, String \"E\" for Events.","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"cheshire-doge"},"content":"    public abstract String getType();","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"cheshire-doge"},"content":"     * Abstract method to get the starting date of a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"cheshire-doge"},"content":"     * @return A LocalDate of the starting date of a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"cheshire-doge"},"content":"    public abstract LocalDate getStartDate();","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"cheshire-doge"},"content":"     * Abstract method to get the ending date of a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"cheshire-doge"},"content":"     * @return A LocalDate of the ending date of a task.","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"cheshire-doge"},"content":"    public abstract LocalDate getEndDate();","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"cheshire-doge"},"content":"     * Abstract method to get the date and time of a task in the format for writing onto","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"cheshire-doge"},"content":"     * the save file.","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"cheshire-doge"},"content":"     * @return A String containing the dates and times of the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"cheshire-doge"},"content":"    public abstract String getDateTime();","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"cheshire-doge"},"content":"     * The method to represent the Task object as a String","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"cheshire-doge"},"content":"     * @return A partially complete String that shows whether the task is marked as done, and","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"cheshire-doge"},"content":"     *         it\u0027s description.","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"cheshire-doge"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":101,"author":{"gitId":"cheshire-doge"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"cheshire-doge"},"content":"        return String.format(\"[%s] %s\", this.getMark(), this.description);","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":104,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"cheshire-doge":104}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.task;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":" * Class for the ToDo object. ToDos are Tasks that do not have any specific due date.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"     ","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"     * Constructor for the ToDo object.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"     * @param description A String describing the task.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"        super(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"     * Method used to show that the Task is an ToDo.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"     * @return A String \"T\".","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"    public String getType() {","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"        return \"T\";","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"     * Un-used method from Task","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"        return null;","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"     * Un-used method from Task","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"        return null;","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"     * Un-used method from Task","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"cheshire-doge"},"content":"        return null;","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"cheshire-doge"},"content":"     * The method to represent the ToDo object as a String","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"     * @return String that contains the information of the ToDo","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"cheshire-doge":60}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package main.java.duke.ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":" * The Ui class handles all print statements. It contains all methods for printing ","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":" * the result of various commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.task.Task;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.Duke;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"import main.java.duke.exception.DukeException;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"public class Ui {","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"    private final static String HORIZONTAL_LINE \u003d \"____________________________________\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"            \"________________________\";","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"     * This method is the main method used format outputs such that they appear within 2","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"     * horizontal lines.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"     * @param args A vararg that takes in Strings that are to be printed on a new horizontal line","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"     *             between the 2 horizontal lines.","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"    public static void printFormat(String... args) {","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"        for (String arg : args) {","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"            System.out.println(arg);","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"     * Prints out the DUKE ASCII art, and welcomes the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"    public static void printIntro() {","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"cheshire-doge"},"content":"        printFormat(\"Hello! I\u0027m Duke\",","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"cheshire-doge"},"content":"                \"What can I do for you?\",","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"cheshire-doge"},"content":"                \"type \u0027commands\u0027 for the list of commands\");","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"     * Prints out all tasks description (and date) and numbers them.","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"cheshire-doge"},"content":"    public static void printList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"cheshire-doge"},"content":"        for (int i \u003d 0; i \u003c Duke.tasks.size(); i++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"cheshire-doge"},"content":"            System.out.println(String.valueOf(i + 1) + \".\" + Duke.tasks.get(i).toString());","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"cheshire-doge"},"content":"     * Searches for task description based on a keyword, and prints out the list of those tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"cheshire-doge"},"content":"     * @param keyword A String that is used to search in the description of the tasks.","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"cheshire-doge"},"content":"    public static void printFind(String keyword) {","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"cheshire-doge"},"content":"        Boolean foundTask \u003d false;","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"cheshire-doge"},"content":"        for (int i \u003d 0; i \u003c Duke.tasks.size(); i++) {","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"cheshire-doge"},"content":"            Task task \u003d Duke.tasks.get(i);","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"cheshire-doge"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"cheshire-doge"},"content":"                foundTask \u003d true;","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"cheshire-doge"},"content":"                System.out.println(String.valueOf(i + 1) + \".\" + task.toString());","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"cheshire-doge"},"content":"        if (!foundTask) {","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"cheshire-doge"},"content":"            System.out.println(\"There are no matching task in your list\");","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"cheshire-doge"},"content":"     * Prints a sentence that lets the user know that the task has been unmarked.","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"cheshire-doge"},"content":"     * @param markInt Integer number of the task in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"cheshire-doge"},"content":"     * @param task The task that has been unmarked.","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"cheshire-doge"},"content":"    public static void printUnmark(int markInt, Task task) {","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"cheshire-doge"},"content":"        printFormat(\"OK, I\u0027ve marked this task as not done yet:\", ","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"cheshire-doge"},"content":"                task.toString());","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"cheshire-doge"},"content":"     * Prints a sentence that lets the user know that the task has been marked.","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"cheshire-doge"},"content":"     * @param markInt Integer number of the task in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"cheshire-doge"},"content":"     * @param task The task that has been marked.","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"cheshire-doge"},"content":"    public static void printMark(int markInt, Task task) {","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"cheshire-doge"},"content":"        printFormat(\"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"cheshire-doge"},"content":"                task.toString());","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"cheshire-doge"},"content":"    ","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"cheshire-doge"},"content":"     * Prints a sentence that lets the user know the task has been deleted, and lets the ","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"cheshire-doge"},"content":"     * user know how many tasks are left in the task list.","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"cheshire-doge"},"content":"     * @param task Task that has been removed from the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"cheshire-doge"},"content":"    public static void printDelete(Task task) {","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"cheshire-doge"},"content":"        printFormat(\"Noted. I\u0027ve removed this task:\", task.toString(), ","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"cheshire-doge"},"content":"                \"Now you have \" + String.valueOf(Duke.taskCounter) + \" tasks in the list.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"cheshire-doge"},"content":"     * Method used to let the user know that the task has been added onto the list. It also shows","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"cheshire-doge"},"content":"     * the total number of tasks in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"cheshire-doge"},"content":"     * @param task Task that had been added into the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"cheshire-doge"},"content":"    public static void printTask(Task task) {","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"cheshire-doge"},"content":"        printFormat(\"Got it. I\u0027ve added this task:\", ","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"cheshire-doge"},"content":"                \"  \" + task.toString(),","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"cheshire-doge"},"content":"                \"Now you have \" + String.valueOf(Duke.taskCounter) + \" tasks in the list.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"cheshire-doge"},"content":"     * Prints out possible commands the user can use.","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"cheshire-doge"},"content":"    public static void printCommand() {","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"cheshire-doge"},"content":"        printFormat(\"List of valid commands:\",","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"cheshire-doge"},"content":"                \"\u0027list\u0027 - lists out all tasks and its details\",","lastModifiedDate":"2022-03-02"},{"lineNumber":135,"author":{"gitId":"cheshire-doge"},"content":"                \"\u0027mark NUMBER\u0027 - marks item NUMBER on the list as done\",","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"cheshire-doge"},"content":"                \"   e.g. \u0027mark 3\u0027 marks item 3 on the list\",","lastModifiedDate":"2022-03-04"},{"lineNumber":137,"author":{"gitId":"cheshire-doge"},"content":"                \"\u0027unmark NUMBER\u0027 - unmarks item NUMBER on the list as done\",","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"cheshire-doge"},"content":"                \"   e.g. \u0027unmark 3\u0027 unmarks item 3 on the list\",","lastModifiedDate":"2022-03-04"},{"lineNumber":139,"author":{"gitId":"cheshire-doge"},"content":"                \"\u0027delete NUMBER\u0027 - deletes item NUMBER on the list\",","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"cheshire-doge"},"content":"                \"   e.g. \u0027delete 3\u0027 deletes item 3 on the list\",","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"cheshire-doge"},"content":"                \"\u0027find KEYWORD\u0027 - lists items in the list that contain KEYWORD\",","lastModifiedDate":"2022-03-04"},{"lineNumber":142,"author":{"gitId":"cheshire-doge"},"content":"                \"   e.g. \u0027find book\u0027 lists items in the list that contain \u0027book\u0027\",","lastModifiedDate":"2022-03-04"},{"lineNumber":143,"author":{"gitId":"cheshire-doge"},"content":"                \"\u0027todo DESC\u0027 - ToDos are tasks without specific deadlines\",","lastModifiedDate":"2022-03-04"},{"lineNumber":144,"author":{"gitId":"cheshire-doge"},"content":"                \"   e.g. \u0027todo buy shampoo\u0027 adds the task \u0027buy shampoo\u0027 to the list\",","lastModifiedDate":"2022-03-04"},{"lineNumber":145,"author":{"gitId":"cheshire-doge"},"content":"                \"\u0027deadline DESC /by DD/MM/YYYY TIME\u0027 - Deadlines are tasks that need to\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":146,"author":{"gitId":"cheshire-doge"},"content":"                        \"be done before a specific date and time in 24-hour format\",","lastModifiedDate":"2022-03-04"},{"lineNumber":147,"author":{"gitId":"cheshire-doge"},"content":"                \"   e.g. \u0027deadline math homework /by 2/3/2022 1400\u0027 adds a \" +","lastModifiedDate":"2022-03-04"},{"lineNumber":148,"author":{"gitId":"cheshire-doge"},"content":"                        \"task with deadline Mar 2 2022 1400 to the list\",","lastModifiedDate":"2022-03-04"},{"lineNumber":149,"author":{"gitId":"cheshire-doge"},"content":"                \"\u0027event DESC /at DD/MM/YYYY TIME /to DD/MM/YYYY TIME\u0027 - Events are tasks that\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":150,"author":{"gitId":"cheshire-doge"},"content":"                        \"start at a specific date and time and ends at a specific date and time\",","lastModifiedDate":"2022-03-04"},{"lineNumber":151,"author":{"gitId":"cheshire-doge"},"content":"                \"   e.g. \u0027event project meeting /at 3/3/2022 0900\u0027 /to 4/3/2022 1800 \" +","lastModifiedDate":"2022-03-04"},{"lineNumber":152,"author":{"gitId":"cheshire-doge"},"content":"                        \"adds a task with a time range\",","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"cheshire-doge"},"content":"                \"\u0027check date DD/MM/YYYY\u0027 - checks if there are tasks due or occuring\" +","lastModifiedDate":"2022-03-04"},{"lineNumber":154,"author":{"gitId":"cheshire-doge"},"content":"                        \" on that date\",","lastModifiedDate":"2022-03-04"},{"lineNumber":155,"author":{"gitId":"cheshire-doge"},"content":"                \"   e.g. \u0027check date 04/03/2022\u0027 - checks if anything is on 04/03/2022\",","lastModifiedDate":"2022-03-04"},{"lineNumber":156,"author":{"gitId":"cheshire-doge"},"content":"                \"\u0027bye\u0027 - saves changes and closes Duke\");","lastModifiedDate":"2022-03-04"},{"lineNumber":157,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":158,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":159,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":160,"author":{"gitId":"cheshire-doge"},"content":"     * Prints out tasks that are due or happening on a specific date.","lastModifiedDate":"2022-03-04"},{"lineNumber":161,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":162,"author":{"gitId":"cheshire-doge"},"content":"     * @param localDate The date which the user wants to know if there is anything happening.","lastModifiedDate":"2022-03-04"},{"lineNumber":163,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":164,"author":{"gitId":"cheshire-doge"},"content":"    public static void printCheckDate(LocalDate localDate) {","lastModifiedDate":"2022-03-04"},{"lineNumber":165,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2022-03-04"},{"lineNumber":166,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(\"Here are the tasks on \" + ","lastModifiedDate":"2022-03-04"},{"lineNumber":167,"author":{"gitId":"cheshire-doge"},"content":"                localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString() + \":\");","lastModifiedDate":"2022-03-04"},{"lineNumber":168,"author":{"gitId":"cheshire-doge"},"content":"        for (int i \u003d 0; i \u003c Duke.tasks.size(); i++) {","lastModifiedDate":"2022-03-04"},{"lineNumber":169,"author":{"gitId":"cheshire-doge"},"content":"            Task task \u003d Duke.tasks.get(i);","lastModifiedDate":"2022-03-04"},{"lineNumber":170,"author":{"gitId":"cheshire-doge"},"content":"            if (isOnDate(task, localDate)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":171,"author":{"gitId":"cheshire-doge"},"content":"                System.out.println(String.valueOf(i + 1) + \".\" + task.toString());","lastModifiedDate":"2022-03-04"},{"lineNumber":172,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":173,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":174,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2022-03-04"},{"lineNumber":175,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":176,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":177,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":178,"author":{"gitId":"cheshire-doge"},"content":"     * Method used to check if a task is due or happening on a specific date.","lastModifiedDate":"2022-03-04"},{"lineNumber":179,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":180,"author":{"gitId":"cheshire-doge"},"content":"     * @param task The task that is being checked.","lastModifiedDate":"2022-03-04"},{"lineNumber":181,"author":{"gitId":"cheshire-doge"},"content":"     * @param localDate The date that the task is being checked on.","lastModifiedDate":"2022-03-04"},{"lineNumber":182,"author":{"gitId":"cheshire-doge"},"content":"     * @return A boolean value whether the task is happening on the date.","lastModifiedDate":"2022-03-04"},{"lineNumber":183,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":184,"author":{"gitId":"cheshire-doge"},"content":"    private static boolean isOnDate(Task task, LocalDate localDate) {","lastModifiedDate":"2022-03-04"},{"lineNumber":185,"author":{"gitId":"cheshire-doge"},"content":"        if (task.getType().equals(\"D\")) {","lastModifiedDate":"2022-03-04"},{"lineNumber":186,"author":{"gitId":"cheshire-doge"},"content":"            if (localDate.equals(task.getStartDate())) {","lastModifiedDate":"2022-03-04"},{"lineNumber":187,"author":{"gitId":"cheshire-doge"},"content":"                return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":188,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":189,"author":{"gitId":"cheshire-doge"},"content":"        } else if (task.getType().equals(\"E\")) {","lastModifiedDate":"2022-03-04"},{"lineNumber":190,"author":{"gitId":"cheshire-doge"},"content":"            if (localDate.equals(task.getStartDate()) || localDate.equals(task.getEndDate()) ||","lastModifiedDate":"2022-03-04"},{"lineNumber":191,"author":{"gitId":"cheshire-doge"},"content":"            (localDate.isAfter(task.getStartDate()) \u0026\u0026 localDate.isBefore(task.getEndDate()))) {","lastModifiedDate":"2022-03-04"},{"lineNumber":192,"author":{"gitId":"cheshire-doge"},"content":"                return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":193,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":194,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":195,"author":{"gitId":"cheshire-doge"},"content":"        return false;","lastModifiedDate":"2022-03-04"},{"lineNumber":196,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":197,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":198,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":199,"author":{"gitId":"cheshire-doge"},"content":"     * Prints out a goodbye before shutting the bot down.","lastModifiedDate":"2022-03-04"},{"lineNumber":200,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":201,"author":{"gitId":"cheshire-doge"},"content":"    public static void printBye() {","lastModifiedDate":"2022-03-02"},{"lineNumber":202,"author":{"gitId":"cheshire-doge"},"content":"        printFormat(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-03-02"},{"lineNumber":203,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":204,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":205,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":206,"author":{"gitId":"cheshire-doge"},"content":"     * Prints out a message to let the user know his command was invalid, and suggests the user","lastModifiedDate":"2022-03-04"},{"lineNumber":207,"author":{"gitId":"cheshire-doge"},"content":"     * to use the \u0027command\u0027 command if the user is unsure of commands availiable.","lastModifiedDate":"2022-03-04"},{"lineNumber":208,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":209,"author":{"gitId":"cheshire-doge"},"content":"    public static void printInvalid() {","lastModifiedDate":"2022-03-02"},{"lineNumber":210,"author":{"gitId":"cheshire-doge"},"content":"        printFormat(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\",","lastModifiedDate":"2022-03-02"},{"lineNumber":211,"author":{"gitId":"cheshire-doge"},"content":"                \"Please type in \u0027commands\u0027 if you are not sure of the commands\");","lastModifiedDate":"2022-03-02"},{"lineNumber":212,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":213,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":214,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":215,"author":{"gitId":"cheshire-doge"},"content":"     * Method used to print messages from Exceptions. Usually indicates what the user did wrong.","lastModifiedDate":"2022-03-04"},{"lineNumber":216,"author":{"gitId":"cheshire-doge"},"content":"     * ","lastModifiedDate":"2022-03-04"},{"lineNumber":217,"author":{"gitId":"cheshire-doge"},"content":"     * @param e A DukeException that was thrown during processing of user input.","lastModifiedDate":"2022-03-04"},{"lineNumber":218,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":219,"author":{"gitId":"cheshire-doge"},"content":"    public static void printError(DukeException e) {","lastModifiedDate":"2022-03-02"},{"lineNumber":220,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2022-03-02"},{"lineNumber":221,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":222,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":223,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cheshire-doge":223}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"todo read book","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"deadline return book /by 06/06/2022 1700","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"Event project meeting /at 12/03/2021 0600 /to 13/03/2022 0700","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"list","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"mark 1","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"mark 2","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"unmark 1","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"deadline return book /by 03/04/2023 2401","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"event project meeting /at 04/13/0000 1234 /to 01/12/3214","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"list","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"todo","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"test invalid command","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"mark 2","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"find book","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"delete 3","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"delete 6","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"check date 06/06/2022","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"check date 07/06/2022","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"mark test","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"test","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"delete test","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"desfasda","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"list2131","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"commands","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"deadline /by 04/06/22 1543","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"event testttt /at 06/08/23 1567 /to 06/04/24 1322","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"bye","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"cheshire-doge":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"Pause","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    Pause","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"Pause","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"Pause","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"-":19,"cheshire-doge":5}}]
