[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"T | 1 | read book","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":"T | 0 | testing","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":"E | 0 | testing | some time frame","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"wli-linda":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"wli-linda"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"wli-linda"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"wli-linda"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"wli-linda"},"content":"import static duke.ReadTaskList.readFile;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"wli-linda"},"content":"import static duke.WriteTaskList.writeList;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"wli-linda"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"wli-linda"},"content":" * Runs the Duke chat-bot which takes in user input,","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"wli-linda"},"content":" * and performs certain actions for specific commands.","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"wli-linda"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"wli-linda"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"wli-linda"},"content":"    private static Boolean willExit \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"wli-linda"},"content":"    private static void printFormat(String s) {","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"wli-linda"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"wli-linda"},"content":"                s + \"\\n\" +","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"wli-linda"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"wli-linda"},"content":"    private static void greet() {","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"wli-linda"},"content":"        printFormat(\" Hey there! I\u0027m Duke\\n\" +","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"wli-linda"},"content":"                \" What can I do for you? uwu\");","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"wli-linda"},"content":"    private static void bye() {","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"wli-linda"},"content":"        willExit \u003d true;","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"wli-linda"},"content":"        printFormat(\" Aw, are you leaving now?\\n\" +","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"wli-linda"},"content":"                \" Hope to see you again soon!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"wli-linda"},"content":"    private static void list() {","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"wli-linda"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"wli-linda"},"content":"            printFormat(\"You haven\u0027t added any tasks to your list yet!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"wli-linda"},"content":"            return;","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"wli-linda"},"content":"        String listAsString \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"wli-linda"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"wli-linda"},"content":"            Task curr \u003d list.get(i);","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"wli-linda"},"content":"            listAsString \u003d listAsString.concat(String.format(\" %d. %s\\n\", i + 1, curr));","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"wli-linda"},"content":"        printFormat(\"Here are the tasks in your list:\\n\" + listAsString);","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"wli-linda"},"content":"    private static void markStatus(Boolean shouldMark, String line) {","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"wli-linda"},"content":"        Task curr;","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"wli-linda"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"wli-linda"},"content":"            int taskNum \u003d Integer.parseInt(line.split(\" \", 0)[1]) - 1;","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"wli-linda"},"content":"            if (taskNum \u003e list.size()) {","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"wli-linda"},"content":"                throw new DukeException(\"Please mark / unmark with a number that\u0027s in the list :\u0027)\");","lastModifiedDate":"2022-02-08"},{"lineNumber":60,"author":{"gitId":"wli-linda"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"wli-linda"},"content":"            curr \u003d list.get(taskNum);","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"wli-linda"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"wli-linda"},"content":"            // NumberFormatException caught in IntelliJ runtime env but not in testing...","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"wli-linda"},"content":"            printFormat(\"Please mark / unmark with a valid number :\u0027)\");","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"wli-linda"},"content":"            return;","lastModifiedDate":"2022-02-08"},{"lineNumber":66,"author":{"gitId":"wli-linda"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":67,"author":{"gitId":"wli-linda"},"content":"            printFormat(e.msg);","lastModifiedDate":"2022-02-08"},{"lineNumber":68,"author":{"gitId":"wli-linda"},"content":"            return;","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"wli-linda"},"content":"        if (shouldMark) {","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"wli-linda"},"content":"            curr.setDone(true);","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"wli-linda"},"content":"            printFormat(\"Nice! I\u0027ve marked this task as done:\\n  \" + curr);","lastModifiedDate":"2022-02-08"},{"lineNumber":74,"author":{"gitId":"wli-linda"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"wli-linda"},"content":"            curr.setDone(false);","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"wli-linda"},"content":"            printFormat(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + curr);","lastModifiedDate":"2022-02-08"},{"lineNumber":77,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"wli-linda"},"content":"    private static void removeTask(String line) {","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"wli-linda"},"content":"        Task curr;","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"wli-linda"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"wli-linda"},"content":"            int taskNum \u003d Integer.parseInt(line.split(\" \", 0)[1]) - 1;","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"wli-linda"},"content":"            if (taskNum \u003e list.size()) {","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"wli-linda"},"content":"                throw new DukeException(\"Please delete a task number that\u0027s in the list :\u0027)\");","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"wli-linda"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"wli-linda"},"content":"            curr \u003d list.get(taskNum);","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"wli-linda"},"content":"            list.remove(taskNum);","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"wli-linda"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"wli-linda"},"content":"            printFormat(\"You can only delete with a valid task number :\u0027)\");","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"wli-linda"},"content":"            return;","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"wli-linda"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"wli-linda"},"content":"            printFormat(e.msg);","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"wli-linda"},"content":"            return;","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"wli-linda"},"content":"        printFormat(\"Noted. I\u0027ve removed this task: \\n  \" + curr +","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"wli-linda"},"content":"                String.format(\"\\nNow you have %d tasks in the list.\", list.size()));","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"wli-linda"},"content":"    private static Task parseDeadline(String description) throws DukeException {","lastModifiedDate":"2022-02-08"},{"lineNumber":102,"author":{"gitId":"wli-linda"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"wli-linda"},"content":"            throw new DukeException(\"Please provide a task description!\");","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"wli-linda"},"content":"        String by;","lastModifiedDate":"2022-02-08"},{"lineNumber":106,"author":{"gitId":"wli-linda"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":107,"author":{"gitId":"wli-linda"},"content":"            String[] deadlineBreakdown \u003d description.split(\"/by \", 2);","lastModifiedDate":"2022-02-03"},{"lineNumber":108,"author":{"gitId":"wli-linda"},"content":"            description \u003d deadlineBreakdown[0];","lastModifiedDate":"2022-02-03"},{"lineNumber":109,"author":{"gitId":"wli-linda"},"content":"            by \u003d deadlineBreakdown[1];","lastModifiedDate":"2022-02-08"},{"lineNumber":110,"author":{"gitId":"wli-linda"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":111,"author":{"gitId":"wli-linda"},"content":"            throw new DukeException(\"You need to provide a time for your deadline (e.g. /by 7am)\");","lastModifiedDate":"2022-02-08"},{"lineNumber":112,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":113,"author":{"gitId":"wli-linda"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2022-02-08"},{"lineNumber":114,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":115,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":116,"author":{"gitId":"wli-linda"},"content":"    private static Task parseEvent(String description) throws DukeException {","lastModifiedDate":"2022-02-08"},{"lineNumber":117,"author":{"gitId":"wli-linda"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":118,"author":{"gitId":"wli-linda"},"content":"            throw new DukeException(\"Please provide a task description!\");","lastModifiedDate":"2022-02-11"},{"lineNumber":119,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":120,"author":{"gitId":"wli-linda"},"content":"        String at;","lastModifiedDate":"2022-02-08"},{"lineNumber":121,"author":{"gitId":"wli-linda"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":122,"author":{"gitId":"wli-linda"},"content":"            String[] eventBreakdown \u003d description.split(\" /at \", 2);","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"wli-linda"},"content":"            description \u003d eventBreakdown[0];","lastModifiedDate":"2022-02-03"},{"lineNumber":124,"author":{"gitId":"wli-linda"},"content":"            at \u003d eventBreakdown[1];","lastModifiedDate":"2022-02-08"},{"lineNumber":125,"author":{"gitId":"wli-linda"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":126,"author":{"gitId":"wli-linda"},"content":"            throw new DukeException(\"You need to provide a time for your event (e.g. /at 2-4pm)\");","lastModifiedDate":"2022-02-08"},{"lineNumber":127,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":128,"author":{"gitId":"wli-linda"},"content":"        return new Event(description, at);","lastModifiedDate":"2022-02-08"},{"lineNumber":129,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":130,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":131,"author":{"gitId":"wli-linda"},"content":"    private static Task parseTask(String type, String description) throws DukeException {","lastModifiedDate":"2022-02-08"},{"lineNumber":132,"author":{"gitId":"wli-linda"},"content":"        Task t;","lastModifiedDate":"2022-02-04"},{"lineNumber":133,"author":{"gitId":"wli-linda"},"content":"        switch (type) {","lastModifiedDate":"2022-02-08"},{"lineNumber":134,"author":{"gitId":"wli-linda"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-08"},{"lineNumber":135,"author":{"gitId":"wli-linda"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":136,"author":{"gitId":"wli-linda"},"content":"                throw new DukeException(\"Please provide a task description!\");","lastModifiedDate":"2022-02-11"},{"lineNumber":137,"author":{"gitId":"wli-linda"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":138,"author":{"gitId":"wli-linda"},"content":"            t \u003d new Todo(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":139,"author":{"gitId":"wli-linda"},"content":"            break;","lastModifiedDate":"2022-02-08"},{"lineNumber":140,"author":{"gitId":"wli-linda"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-08"},{"lineNumber":141,"author":{"gitId":"wli-linda"},"content":"            t \u003d parseDeadline(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":142,"author":{"gitId":"wli-linda"},"content":"            break;","lastModifiedDate":"2022-02-08"},{"lineNumber":143,"author":{"gitId":"wli-linda"},"content":"        case \"event\":","lastModifiedDate":"2022-02-08"},{"lineNumber":144,"author":{"gitId":"wli-linda"},"content":"            t \u003d parseEvent(description);","lastModifiedDate":"2022-02-04"},{"lineNumber":145,"author":{"gitId":"wli-linda"},"content":"            break;","lastModifiedDate":"2022-02-08"},{"lineNumber":146,"author":{"gitId":"wli-linda"},"content":"        default:","lastModifiedDate":"2022-02-08"},{"lineNumber":147,"author":{"gitId":"wli-linda"},"content":"            throw new DukeException(\"I don\u0027t understand what you want to do, big sad :(\");","lastModifiedDate":"2022-02-08"},{"lineNumber":148,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":149,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":150,"author":{"gitId":"wli-linda"},"content":"        return t;","lastModifiedDate":"2022-02-04"},{"lineNumber":151,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":152,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":153,"author":{"gitId":"wli-linda"},"content":"    private static void addTask(String line) {","lastModifiedDate":"2022-02-11"},{"lineNumber":154,"author":{"gitId":"wli-linda"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":155,"author":{"gitId":"wli-linda"},"content":"            String[] commands \u003d line.split(\" \", 2);","lastModifiedDate":"2022-02-03"},{"lineNumber":156,"author":{"gitId":"wli-linda"},"content":"            String type \u003d commands[0];","lastModifiedDate":"2022-02-03"},{"lineNumber":157,"author":{"gitId":"wli-linda"},"content":"            String description \u003d \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":158,"author":{"gitId":"wli-linda"},"content":"            if (commands.length \u003e 1) {","lastModifiedDate":"2022-02-08"},{"lineNumber":159,"author":{"gitId":"wli-linda"},"content":"                description \u003d commands[1];","lastModifiedDate":"2022-02-08"},{"lineNumber":160,"author":{"gitId":"wli-linda"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":161,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"wli-linda"},"content":"            Task t \u003d parseTask(type, description);","lastModifiedDate":"2022-02-04"},{"lineNumber":163,"author":{"gitId":"wli-linda"},"content":"            list.add(t);","lastModifiedDate":"2022-02-11"},{"lineNumber":164,"author":{"gitId":"wli-linda"},"content":"            printFormat(\"Got it. I\u0027ve added this task:\\n  \" + t +","lastModifiedDate":"2022-02-08"},{"lineNumber":165,"author":{"gitId":"wli-linda"},"content":"                    String.format(\"\\nNow you have %d tasks in the list.\", list.size()));","lastModifiedDate":"2022-02-11"},{"lineNumber":166,"author":{"gitId":"wli-linda"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":167,"author":{"gitId":"wli-linda"},"content":"            printFormat(e.msg);","lastModifiedDate":"2022-02-08"},{"lineNumber":168,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":169,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":170,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"wli-linda"},"content":"    private static void parseCommands(String line) {","lastModifiedDate":"2022-02-11"},{"lineNumber":172,"author":{"gitId":"wli-linda"},"content":"        if (line.equals(\"bye\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":173,"author":{"gitId":"wli-linda"},"content":"            bye();","lastModifiedDate":"2022-02-03"},{"lineNumber":174,"author":{"gitId":"wli-linda"},"content":"        } else if (line.equals(\"list\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":175,"author":{"gitId":"wli-linda"},"content":"            list();","lastModifiedDate":"2022-02-03"},{"lineNumber":176,"author":{"gitId":"wli-linda"},"content":"        } else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":177,"author":{"gitId":"wli-linda"},"content":"            markStatus(true, line);","lastModifiedDate":"2022-02-04"},{"lineNumber":178,"author":{"gitId":"wli-linda"},"content":"        } else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":179,"author":{"gitId":"wli-linda"},"content":"            markStatus(false, line);","lastModifiedDate":"2022-02-04"},{"lineNumber":180,"author":{"gitId":"wli-linda"},"content":"        } else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":181,"author":{"gitId":"wli-linda"},"content":"            removeTask(line);","lastModifiedDate":"2022-02-11"},{"lineNumber":182,"author":{"gitId":"wli-linda"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"wli-linda"},"content":"            addTask(line);","lastModifiedDate":"2022-02-03"},{"lineNumber":184,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":187,"author":{"gitId":"wli-linda"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":188,"author":{"gitId":"wli-linda"},"content":"        greet();","lastModifiedDate":"2022-02-03"},{"lineNumber":189,"author":{"gitId":"wli-linda"},"content":"        String line;","lastModifiedDate":"2022-02-03"},{"lineNumber":190,"author":{"gitId":"wli-linda"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-03"},{"lineNumber":191,"author":{"gitId":"wli-linda"},"content":"        ArrayList\u003cTask\u003e existingTasks \u003d readFile();","lastModifiedDate":"2022-02-12"},{"lineNumber":192,"author":{"gitId":"wli-linda"},"content":"        for (Task t : existingTasks) {","lastModifiedDate":"2022-02-12"},{"lineNumber":193,"author":{"gitId":"wli-linda"},"content":"            list[taskIndex] \u003d t;","lastModifiedDate":"2022-02-12"},{"lineNumber":194,"author":{"gitId":"wli-linda"},"content":"            taskIndex++;","lastModifiedDate":"2022-02-12"},{"lineNumber":195,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":196,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":197,"author":{"gitId":"wli-linda"},"content":"        while (!willExit) {","lastModifiedDate":"2022-02-03"},{"lineNumber":198,"author":{"gitId":"wli-linda"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2022-02-03"},{"lineNumber":199,"author":{"gitId":"wli-linda"},"content":"            parseCommands(line);","lastModifiedDate":"2022-02-03"},{"lineNumber":200,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":201,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":202,"author":{"gitId":"wli-linda"},"content":"        writeList(list);","lastModifiedDate":"2022-02-12"},{"lineNumber":203,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"wli-linda":202}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":"    public String msg;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"wli-linda"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"wli-linda"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"wli-linda":9}},{"path":"src/main/java/duke/ReadTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"wli-linda"},"content":"import java.io.File;","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"wli-linda"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"wli-linda"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"wli-linda"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"wli-linda"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"wli-linda"},"content":"import static duke.ReadWriteUtil.findFile;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"wli-linda"},"content":"public class ReadTaskList {","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"wli-linda"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"wli-linda"},"content":"    private static Boolean decodeStatus(Integer taskStatusNum) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"wli-linda"},"content":"        switch (taskStatusNum) {","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"wli-linda"},"content":"        case 1:","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"wli-linda"},"content":"            return true;","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"wli-linda"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"wli-linda"},"content":"        case 0:","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"wli-linda"},"content":"            return false;","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"wli-linda"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"wli-linda"},"content":"        default:","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"wli-linda"},"content":"            throw new DukeException(\"Data file contains invalid status :(\");","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"wli-linda"},"content":"    private static Task decodeTaskParsing(String[] details, String description,","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"wli-linda"},"content":"                                          Boolean status) throws  DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"wli-linda"},"content":"        Task t;","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"wli-linda"},"content":"        switch (details[0]) {","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"wli-linda"},"content":"        case \"T\":","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"wli-linda"},"content":"            t \u003d new Todo(description);","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"wli-linda"},"content":"            t.setDone(status);","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"wli-linda"},"content":"            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"wli-linda"},"content":"        case \"D\":","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"wli-linda"},"content":"            String by \u003d details[3];","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"wli-linda"},"content":"            t \u003d new Deadline(description, by);","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"wli-linda"},"content":"            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"wli-linda"},"content":"        case \"E\":","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"wli-linda"},"content":"            String at \u003d details[3];","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"wli-linda"},"content":"            t \u003d new Event(description, at);","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"wli-linda"},"content":"            break;","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"wli-linda"},"content":"        default:","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"wli-linda"},"content":"            throw new DukeException(\"Invalid task type in data file :(\");","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"wli-linda"},"content":"        return t;","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"wli-linda"},"content":"    private static Task decodeTask(String line) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"wli-linda"},"content":"        String[] taskDetails \u003d line.split(\" \\\\| \");","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"wli-linda"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"wli-linda"},"content":"            Integer taskStatusNum \u003d Integer.parseInt(taskDetails[1]);","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"wli-linda"},"content":"            Boolean taskStatus \u003d decodeStatus(taskStatusNum);","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"wli-linda"},"content":"            String taskDescription \u003d taskDetails[2];","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"wli-linda"},"content":"            return decodeTaskParsing(taskDetails, taskDescription, taskStatus);","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"wli-linda"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"wli-linda"},"content":"            throw new DukeException(\"Missing task information in data file :(\");","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"wli-linda"},"content":"    private static void readFileToList(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"wli-linda"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"wli-linda"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"wli-linda"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"wli-linda"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"wli-linda"},"content":"            try {","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"wli-linda"},"content":"                list.add(decodeTask(line));","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"wli-linda"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"wli-linda"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"wli-linda"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"wli-linda"},"content":"    public static ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"wli-linda"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"wli-linda"},"content":"            Path tasksPath \u003d findFile();","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"wli-linda"},"content":"            readFileToList(tasksPath.toString());","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"wli-linda"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"wli-linda"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"wli-linda"},"content":"        return list;","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":90,"author":{"gitId":"wli-linda"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"wli-linda":90}},{"path":"src/main/java/duke/ReadWriteUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"import java.io.File;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"wli-linda"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"wli-linda"},"content":"public class ReadWriteUtil {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"wli-linda"},"content":"    private static final String currDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"wli-linda"},"content":"    // Adapted from https://www.sghill.net/how-do-i-make-cross-platform-file-paths-in-java.html","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"wli-linda"},"content":"    protected static Path findFile() {","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"wli-linda"},"content":"        Path dataDirPath \u003d Paths.get(currDir, \"data\");","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"wli-linda"},"content":"        Path tasksPath \u003d Paths.get(dataDirPath.toString(), \"tasks.txt\");","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"wli-linda"},"content":"        boolean directoryExists \u003d Files.exists(dataDirPath);","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"wli-linda"},"content":"        boolean fileExists \u003d Files.exists(tasksPath);","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"wli-linda"},"content":"        File tasksFile \u003d new File(tasksPath.toString());","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"wli-linda"},"content":"        if (!directoryExists) {","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"wli-linda"},"content":"            try {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"wli-linda"},"content":"                Files.createDirectories(dataDirPath);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"wli-linda"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"wli-linda"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"wli-linda"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"wli-linda"},"content":"        if (!fileExists) {","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"wli-linda"},"content":"            try {","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"wli-linda"},"content":"                tasksFile.createNewFile();","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"wli-linda"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"wli-linda"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"wli-linda"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"wli-linda"},"content":"        return tasksPath;","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"wli-linda"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"wli-linda":38}},{"path":"src/main/java/duke/WriteTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"wli-linda"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"wli-linda"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"wli-linda"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"wli-linda"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"wli-linda"},"content":"public class WriteTaskList {","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"wli-linda"},"content":"    private static String encodeStatus(Boolean isDone) {","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"wli-linda"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"wli-linda"},"content":"            return \"1\";","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"wli-linda"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"wli-linda"},"content":"            return \"0\";","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"wli-linda"},"content":"    private static String encodeTask(Task t) {","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"wli-linda"},"content":"        Boolean isDone \u003d t.isDone();","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"wli-linda"},"content":"        String encodedStatus \u003d encodeStatus(isDone);","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"wli-linda"},"content":"        String description \u003d t.getDescription();","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"wli-linda"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"wli-linda"},"content":"            return String.format(\"T | %s | %s\\n\", encodedStatus, description);","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"wli-linda"},"content":"        } else if (t instanceof Deadline) {","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"wli-linda"},"content":"            String by \u003d ((Deadline) t).getByTime();","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"wli-linda"},"content":"            return String.format(\"D | %s | %s | %s\\n\", encodedStatus, description, by);","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"wli-linda"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"wli-linda"},"content":"            String at \u003d ((Event) t).getAtTime();","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"wli-linda"},"content":"            return String.format(\"E | %s | %s | %s\\n\", encodedStatus, description, at);","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"wli-linda"},"content":"    private static String listToString(Task[] list) {","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"wli-linda"},"content":"        String listAsString \u003d \"\";","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"wli-linda"},"content":"        for (Task t : list) {","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"wli-linda"},"content":"            try {","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"wli-linda"},"content":"                listAsString \u003d listAsString.concat(encodeTask(t));","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"wli-linda"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"wli-linda"},"content":"                break;","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"wli-linda"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"wli-linda"},"content":"        return listAsString;","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"wli-linda"},"content":"    private static void writeListToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"wli-linda"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"wli-linda"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"wli-linda"},"content":"        fw.close();","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"wli-linda"},"content":"    public static void writeList(Task[] list) {","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"wli-linda"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"wli-linda"},"content":"            Path tasksPath \u003d ReadWriteUtil.findFile();","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"wli-linda"},"content":"            String stringOfList \u003d listToString(list);","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"wli-linda"},"content":"            writeListToFile(tasksPath.toString(), stringOfList);","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"wli-linda"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"wli-linda"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"wli-linda"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"wli-linda"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"wli-linda"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"wli-linda"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"wli-linda":67}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"package duke.task;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":"    private String by;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wli-linda"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wli-linda"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wli-linda"},"content":"    public String getByTime() {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"wli-linda"},"content":"        return by;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"wli-linda"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wli-linda"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"wli-linda"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"wli-linda"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wli-linda":19}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"package duke.task;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":"    private String at;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wli-linda"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wli-linda"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wli-linda"},"content":"    public String getAtTime() {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"wli-linda"},"content":"        return at;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"wli-linda"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wli-linda"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"wli-linda"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), at);","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"wli-linda"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wli-linda":19}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"package duke.task;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":" * Describes the Task object; it is an abstract class that","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":" * is the superclass of Todo, Deadline, and Event.","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"wli-linda"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"wli-linda"},"content":"    private String description;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"wli-linda"},"content":"    private boolean isDone;","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"wli-linda"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"wli-linda"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"wli-linda"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"wli-linda"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"wli-linda"},"content":"        return description;","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"wli-linda"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"wli-linda"},"content":"        return isDone;","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"wli-linda"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"wli-linda"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"wli-linda"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"wli-linda"},"content":"        isDone \u003d done;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"wli-linda"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"wli-linda"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"wli-linda"},"content":"        return String.format(\" [%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"wli-linda"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"wli-linda":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"package duke.task;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wli-linda"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wli-linda"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wli-linda"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wli-linda"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wli-linda"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wli-linda"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wli-linda":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wli-linda"},"content":"list","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"wli-linda"},"content":"todo finish iP","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"wli-linda"},"content":"deadline code quality /by midnight before tutorial","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wli-linda"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"wli-linda"},"content":"event tP meeting /at 7-8pm","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wli-linda"},"content":"mark 3","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wli-linda"},"content":"todo","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"wli-linda"},"content":"mark 2","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wli-linda"},"content":"list","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wli-linda"},"content":"blah","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"wli-linda"},"content":"unmark 2","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wli-linda"},"content":"mark 0","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wli-linda"},"content":"mark not a number","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"wli-linda"},"content":"mark 7","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"wli-linda"},"content":"invalid input","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wli-linda"},"content":"deadline invalid format","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"wli-linda"},"content":"list","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"wli-linda"},"content":"delete 18","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"wli-linda"},"content":"delete 2","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"wli-linda"},"content":"list","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"wli-linda"},"content":"deadline dummy /at invalid time format","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"wli-linda"},"content":"event dummy /by invalid time format","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"wli-linda"},"content":"bye","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wli-linda":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"wli-linda"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wli-linda":1}}]
