[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"# duke.Duke project template","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanweili":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"0|event meetup /at 3pm","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"0|deadline project /by Thursday 5pm","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tanweili":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"# Duke User Guide","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"- Adding tasks","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"    - Adding a todo: `todo`","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"    - Adding an event: `event`","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"    - Adding a deadline: `deadline`","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"- Listing all tasks: `list`","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"- Finding tasks based on keyword(s): `find`","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"- Mark a task: `mark`","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"- Unmark a task: `unmark`","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"- Deleting a task: `delete`","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"- Saving tasks to a local data file","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"## Quick Start Example","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"- Add an event task: `event meeting /at 3pm`","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"- List all tasks: `list`","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"- Mark the first task: `mark 1`","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"- unmark the first task: `unmark 1`","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"- Delete the first task: `delete 1`","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"- Exit the program: `bye`","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"## Features","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"- Words in square brackets are parameters to be specified by user: `[example]`","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"Adds a todo task to Duke.","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"Format: `todo [description]`","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"Example: `todo read a book`","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"tanweili"},"content":"1.[T][ ] read a book","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"tanweili"},"content":"### `event` - Add an event task","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"tanweili"},"content":"Adds an event task to Duke.","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"tanweili"},"content":"Format: `event [description] /at [time]`","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"Example: `event meetup /at 3pm`","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"tanweili"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"tanweili"},"content":"2.[E][ ] meetup (at: 3pm)","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"tanweili"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"tanweili"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"tanweili"},"content":"Adds a deadline task to Duke.","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"tanweili"},"content":"Format: `deadline [description] /by [time]`","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"tanweili"},"content":"Example: `deadline project /by Thursday 5pm`","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"tanweili"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"tanweili"},"content":"3.[D][ ] project (by: Thursday 5pm)","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"tanweili"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"tanweili"},"content":"### `list` - List all tasks","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"tanweili"},"content":"List all tasks that Duke knows.","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"tanweili"},"content":"Format: `list`","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"tanweili"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"tanweili"},"content":"1.[T][ ] read a book","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"tanweili"},"content":"2.[E][ ] meetup (at: 3pm)","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"tanweili"},"content":"3.[D][ ] project (by: Thursday 5pm)","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"tanweili"},"content":"### `find` - Find tasks based on matching keyword(s)","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"tanweili"},"content":"Lists all tasks that Duke has with the matching keyword(s)","lastModifiedDate":"2022-02-24"},{"lineNumber":84,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"tanweili"},"content":"Format: `find [keyword(s)]`","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"tanweili"},"content":"Example: `find project`","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"tanweili"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"tanweili"},"content":"1.[D][ ] project (by: Thursday 5pm)","lastModifiedDate":"2022-02-24"},{"lineNumber":92,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"tanweili"},"content":"### `mark` - Mark the task as done","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"tanweili"},"content":"Sets the task with the given index to be marked as done.","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"tanweili"},"content":"Format: `mark [index]`","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"tanweili"},"content":"Example: `mark 1`","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"tanweili"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"tanweili"},"content":"1.[T][X] read a book","lastModifiedDate":"2022-02-24"},{"lineNumber":105,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"tanweili"},"content":"### `unmark` - Mark the task as not done","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"tanweili"},"content":"Sets the task with the given index to be marked as not done.","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"tanweili"},"content":"Format: `unmark [index]`","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"tanweili"},"content":"Example: `unmark 1`","lastModifiedDate":"2022-02-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":116,"author":{"gitId":"tanweili"},"content":"Nice! I\u0027ve marked this task as not done:","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"tanweili"},"content":"1.[T][ ] read a book","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"tanweili"},"content":"### `delete` - Delete a task","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"tanweili"},"content":"Deletes the task with the given index.","lastModifiedDate":"2022-02-24"},{"lineNumber":123,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"tanweili"},"content":"Format: `delete [index]`","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":126,"author":{"gitId":"tanweili"},"content":"Example: `delete 1`","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"tanweili"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"tanweili"},"content":"[T][ ] read a book","lastModifiedDate":"2022-02-24"},{"lineNumber":131,"author":{"gitId":"tanweili"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-02-24"},{"lineNumber":132,"author":{"gitId":"tanweili"},"content":"```","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"tanweili"},"content":"### `bye` - Exits the program","lastModifiedDate":"2022-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"tanweili"},"content":"Duke will terminate.","lastModifiedDate":"2022-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"tanweili"},"content":"Format: `bye`","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":141,"author":{"gitId":"tanweili"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"tanweili":116,"-":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.taskmanagement.TaskManager;","lastModifiedDate":"2022-02-19"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import duke.userinterface.UserInterface;","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"        UserInterface ui \u003d new UserInterface();","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"        TaskManager tasks \u003d new TaskManager();","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"        ui.printGreeting();","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"        parser.run(tasks);","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tanweili":12,"-":3}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.commands;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyDescriptionException;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyTimingDetailsException;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":" * Adds a deadline object into the array list of tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String userInput, int taskUniqueID) {","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"            String description \u003d ui.getDescription(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"            String by \u003d ui.getTimingDetails(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"            Deadline newDeadline \u003d new Deadline(description, taskUniqueID, by);","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"            ui.printMessageForAdding(tasks, newDeadline);","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"            taskUniqueID++;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"            ui.printEmptyDescriptionMessage();","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"        } catch (EmptyTimingDetailsException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"            ui.printEmptyTimingDetailsMessage();","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tanweili":28}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.commands;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyDescriptionException;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyTimingDetailsException;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":" * Adds an Event object into the array list of tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String userInput, int taskUniqueID) {","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"            String description \u003d ui.getDescription(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"            String at \u003d ui.getTimingDetails(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"            Event newEvent \u003d new Event(description, taskUniqueID, at);","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"            ui.printMessageForAdding(tasks, newEvent);","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"            taskUniqueID++;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"            ui.printEmptyDescriptionMessage();","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"        } catch (EmptyTimingDetailsException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"            ui.printEmptyDescriptionMessage();","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tanweili":28}},{"path":"src/main/java/duke/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.commands;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyDescriptionException;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":" * Adds a Todo object into the array list of tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String userInput, int taskUniqueID) {","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"            String description \u003d ui.getDescription(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"            Todo newTodo \u003d new Todo(description, taskUniqueID);","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"            ui.printMessageForAdding(tasks, newTodo);","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"            taskUniqueID++;","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"            ui.printEmptyDescriptionMessage();","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tanweili":24}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.commands;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.userinterface.UserInterface;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"public abstract class Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"    public static UserInterface ui \u003d new UserInterface();","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"    public abstract void execute(ArrayList\u003cTask\u003e tasks, String userInput, int taskUniqueID);","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tanweili":11}},{"path":"src/main/java/duke/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.commands;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":" * Removes a specific task from the array list of tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String userInput, int taskUniqueID) throws NullPointerException,","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"            IndexOutOfBoundsException, NumberFormatException{","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"        int number \u003d ui.getTaskNumber(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"        ui.printTask(tasks, number);","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"        tasks.remove(number);","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tanweili":18}},{"path":"src/main/java/duke/commands/FindTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.commands;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyDescriptionException;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":" * Find all instances of tasks containing the keyword(s).","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"public class FindTasksCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String userInput, int taskUniqueID) {","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"            String keywords \u003d ui.getDescription(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"                if (task.getDescription().contains(keywords)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"                }","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"            ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"            ui.printEmptyDescriptionMessage();","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tanweili":26}},{"path":"src/main/java/duke/commands/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.commands;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.userinterface.UserInterface;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":" * Prints out all tasks currently in the array list of tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String userInput, int taskUniqueID) {","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"        UserInterface ui \u003d new UserInterface();","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"        ui.printTasks(tasks);","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tanweili":16}},{"path":"src/main/java/duke/commands/MarkOrUnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.commands;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":" * Mark or unmark a specific task currently in the array list of tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"public class MarkOrUnmarkTaskCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String userInput, int taskUniqueID) throws NullPointerException,","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"            IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"        String command \u003d ui.getCommand(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"        int number \u003d ui.getTaskNumber(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"        ui.printMarkOrUnmarkMessage(tasks, command, number);","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tanweili":17}},{"path":"src/main/java/duke/customexceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.customexceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"tanweili":4}},{"path":"src/main/java/duke/customexceptions/EmptyTimingDetailsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.customexceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"public class EmptyTimingDetailsException extends  Exception{","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"tanweili":4}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.parser;","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.taskmanagement.TaskManager;","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.userinterface.UserInterface;","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":" * Processes commands from user input that interacts with the current tasks","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"public class Parser {","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"     * User input is parsed to identify the keyword and relevant arguments","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"     * @param tasks TaskManager object containing the list of tasks and methods to modifying the list","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"    public void run(TaskManager tasks) {","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"        UserInterface ui \u003d new UserInterface();","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"            ui.printLine();","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"            userInput \u003d in.nextLine().trim();","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"            String command \u003d ui.getCommand(userInput);","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"            switch (command) {","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"            case \"list\":","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"                tasks.listTasks(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"                tasks.addTodo(userInput);","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"                tasks.addDeadline(userInput);","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"tanweili"},"content":"            case \"event\":","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"                tasks.addEvent(userInput);","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"tanweili"},"content":"            case \"mark\":","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"            case \"unmark\":","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"tanweili"},"content":"                tasks.markOrUnmarkTask(userInput);","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"tanweili"},"content":"            case \"find\":","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"                tasks.findTasks(userInput);","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"            case \"delete\":","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"tanweili"},"content":"                tasks.deleteTask(userInput);","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"            case \"bye\":","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"tanweili"},"content":"                ui.printByeMessage();","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"tanweili"},"content":"            case \"\":","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"tanweili"},"content":"                ui.printNoCommandMessage();","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"tanweili"},"content":"            default:","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"tanweili"},"content":"                ui.printHelpMessage();","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"tanweili":59}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"    protected String by;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"    public Deadline(String description, int taskUniqueID, String by) {","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"        super(description, taskUniqueID);","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"     * Create the description message specific to Deadline objects.","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"     * @return String containing the message","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"tanweili":18}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"public class Event extends Task{","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"    protected String at;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"    public Event(String description, int taskUniqueID, String at) {","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"        super(description, taskUniqueID);","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"     * Create the description message specific to Event objects.","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"     * @return String containing the message","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"tanweili":19}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"    protected String description;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"    protected boolean isMarked;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"    protected int taskUniqueID;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"    public Task(String description, int taskUniqueID) {","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"        this.taskUniqueID \u003d taskUniqueID;","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"    public Task() {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"        this(\"This task has not be defined.\", -1);","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"        return (isMarked ? \"X\" : \" \");","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"        return description;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"    public int getTaskUniqueID() {","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"        return taskUniqueID;","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"tanweili"},"content":"    public void setTaskUniqueID(int taskUniqueID) {","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"        this.taskUniqueID \u003d taskUniqueID;","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"tanweili"},"content":"        return isMarked;","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"    public void setIsMarked() {","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"tanweili"},"content":"        isMarked \u003d true;","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"    public void unsetIsMarked() {","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"        isMarked \u003d false;","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"tanweili"},"content":"     * Create the portion of the description message common to the child classes.","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"tanweili"},"content":"     * @return String containing the message portion.","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"tanweili"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"tanweili"},"content":"        return  \"[\" + this.getStatusIcon() + \"]\" + this.getDescription();","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanweili":58}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"    public Todo(String description,int taskUniqueID) {","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"        super(description, taskUniqueID);","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"     * Create the description message specific to Todo objects.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"     * @return String containing the message","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"tanweili":17}},{"path":"src/main/java/duke/taskmanagement/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.taskmanagement;","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.commands.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyDescriptionException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyTimingDetailsException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"import duke.userinterface.UserInterface;","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":" * In charge of the array list of tasks that is updated by the user. This includes reading, writing, updating and","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":" * deleting tasks as the user interacts with the program.","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"public class TaskManager {","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"    private static int taskUniqueID \u003d 0;","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"    private static TaskRecorder taskRecorder \u003d new TaskRecorder();","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"    private static UserInterface ui \u003d new UserInterface();","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"     * Calls taskRecorder methods to create the initial list of tasks based on file data when Duke first starts up.","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"    public TaskManager() {","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"            ArrayList\u003cString[]\u003e fileData \u003d taskRecorder.loadData();","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"            tasks \u003d taskRecorder.createTasks(fileData);","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"            taskUniqueID \u003d tasks.size() - 1;","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"            ui.printIOExceptionMessageRead();","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"            ui.printEmptyDescriptionMessage();","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"tanweili"},"content":"        } catch (EmptyTimingDetailsException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"            ui.printEmptyTimingDetailsMessage();","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"tanweili"},"content":"    public void listTasks(String userInput) {","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"tanweili"},"content":"        Command listTasksCommand \u003d new ListTasksCommand();","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"tanweili"},"content":"        listTasksCommand.execute(tasks, userInput, taskUniqueID);","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"    public void findTasks(String userInput) {","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"tanweili"},"content":"        Command findTasksCommand \u003d new FindTasksCommand();","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"        findTasksCommand.execute(tasks, userInput, taskUniqueID);","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"tanweili"},"content":"    public void addTodo(String userInput) {","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"tanweili"},"content":"            Command addTodoCommand \u003d new AddTodoCommand();","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"tanweili"},"content":"            addTodoCommand.execute(tasks, userInput,taskUniqueID);","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"tanweili"},"content":"            taskRecorder.addData(userInput);","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"tanweili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"tanweili"},"content":"            ui.printIOExceptionMessageWrite();","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"tanweili"},"content":"    public void addDeadline(String userInput) {","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"tanweili"},"content":"            Command addDeadlineCommand \u003d new AddDeadlineCommand();","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"tanweili"},"content":"            addDeadlineCommand.execute(tasks, userInput, taskUniqueID);","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"tanweili"},"content":"            taskRecorder.addData(userInput);","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"tanweili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":65,"author":{"gitId":"tanweili"},"content":"            ui.printIOExceptionMessageWrite();","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"tanweili"},"content":"    public void addEvent(String userInput) {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"tanweili"},"content":"            Command addEventCommand \u003d new AddEventCommand();","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"tanweili"},"content":"            addEventCommand.execute(tasks, userInput,taskUniqueID);","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"tanweili"},"content":"            taskRecorder.addData(userInput);","lastModifiedDate":"2022-02-20"},{"lineNumber":74,"author":{"gitId":"tanweili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":75,"author":{"gitId":"tanweili"},"content":"            ui.printIOExceptionMessageWrite();","lastModifiedDate":"2022-02-22"},{"lineNumber":76,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"tanweili"},"content":"    public void markOrUnmarkTask(String userInput) {","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"tanweili"},"content":"            Command markOrUnmarkTaskCommand \u003d new MarkOrUnmarkTaskCommand();","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"tanweili"},"content":"            markOrUnmarkTaskCommand.execute(tasks, userInput, taskUniqueID);","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"tanweili"},"content":"            int taskNumber \u003d ui.getTaskNumber(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":84,"author":{"gitId":"tanweili"},"content":"            taskRecorder.markOrUnmarkData(taskNumber);","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"tanweili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"tanweili"},"content":"            ui.printIOExceptionMessageWrite();","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"tanweili"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"tanweili"},"content":"            ui.printOutOfBoundsExceptionMessage();","lastModifiedDate":"2022-02-22"},{"lineNumber":89,"author":{"gitId":"tanweili"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"tanweili"},"content":"            ui.printNumberFormatExceptionMessage();","lastModifiedDate":"2022-02-22"},{"lineNumber":91,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"tanweili"},"content":"    public void deleteTask(String userInput) {","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"tanweili"},"content":"            Command deleteTaskCommand \u003d new DeleteTaskCommand();","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"tanweili"},"content":"            deleteTaskCommand.execute(tasks, userInput, taskUniqueID);","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"tanweili"},"content":"            int number \u003d ui.getTaskNumber(userInput);","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"tanweili"},"content":"            taskRecorder.deleteData(number);","lastModifiedDate":"2022-02-20"},{"lineNumber":100,"author":{"gitId":"tanweili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"tanweili"},"content":"            ui.printIOExceptionMessageWrite();","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"tanweili"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"tanweili"},"content":"            ui.printOutOfBoundsExceptionMessage();","lastModifiedDate":"2022-02-22"},{"lineNumber":104,"author":{"gitId":"tanweili"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"tanweili"},"content":"            ui.printNumberFormatExceptionMessage();","lastModifiedDate":"2022-02-22"},{"lineNumber":106,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":107,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"tanweili":108}},{"path":"src/main/java/duke/taskmanagement/TaskRecorder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.taskmanagement;","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyDescriptionException;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyTimingDetailsException;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"import duke.userinterface.UserInterface;","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-19"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"import java.util.List;","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":" * In charge of managing the file data of tasks created by the user. This includes reading, writing, updating and","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":" * deleting tasks as the user interacts with the program.","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"public class TaskRecorder {","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"    private static final String HOME \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"    private static final java.nio.file.Path PATH \u003d java.nio.file.Paths.get(HOME, \"data\",\"duke.txt\");","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"    private static UserInterface ui \u003d new UserInterface();","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"     * Create the initial list of tasks based on file data when Duke first starts up.","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"     * @param fileData An arraylist of each line extracted from the data file.","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"     * @return An arraylist of tasks from the data file.","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"     * @throws EmptyDescriptionException If no description is written.","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"     * @throws EmptyTimingDetailsException If no timing information is written.","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"    public ArrayList\u003cTask\u003e createTasks(ArrayList\u003cString[]\u003e fileData) throws EmptyDescriptionException,","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"            EmptyTimingDetailsException {","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"tanweili"},"content":"        int taskUniqueID \u003d 0;","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"        String isMarked \u003d \"1\";","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"tanweili"},"content":"        for (String[] data : fileData) {","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"            String Marker \u003d data[0];","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"tanweili"},"content":"            String input \u003d data[1];","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"tanweili"},"content":"            String command \u003d ui.getCommand(input);","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"tanweili"},"content":"            String description \u003d ui.getDescription(input);","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"            switch (command) {","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"tanweili"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"                Todo newTodo \u003d new Todo(description, taskUniqueID);","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"tanweili"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"tanweili"},"content":"                String by \u003d ui.getTimingDetails(input);","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"tanweili"},"content":"                Deadline newDeadline \u003d new Deadline(description, taskUniqueID, by);","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"tanweili"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"tanweili"},"content":"            case \"event\":","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"tanweili"},"content":"                String at \u003d ui.getTimingDetails(input);","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"tanweili"},"content":"                Event newEvent \u003d new Event(description, taskUniqueID, at);","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"tanweili"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"tanweili"},"content":"            if (Marker.equals(isMarked)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"tanweili"},"content":"                tasks.get(tasks.size() - 1).setIsMarked();","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"tanweili"},"content":"            taskUniqueID++;","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"tanweili"},"content":"        return tasks;","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"tanweili"},"content":"     * Extracts each line of the data file into a readable format by Duke.","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"tanweili"},"content":"     * @return An arraylist of each line of data.","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"tanweili"},"content":"     * @throws IOException If the file cannot be loaded.","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"tanweili"},"content":"    public ArrayList\u003cString[]\u003e loadData() throws IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":72,"author":{"gitId":"tanweili"},"content":"        checkFileExists();","lastModifiedDate":"2022-02-19"},{"lineNumber":73,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cString[]\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"tanweili"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(PATH);","lastModifiedDate":"2022-02-19"},{"lineNumber":75,"author":{"gitId":"tanweili"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-02-19"},{"lineNumber":76,"author":{"gitId":"tanweili"},"content":"            String[] lineData \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-02-19"},{"lineNumber":77,"author":{"gitId":"tanweili"},"content":"            tasks.add(lineData);","lastModifiedDate":"2022-02-22"},{"lineNumber":78,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":79,"author":{"gitId":"tanweili"},"content":"        return tasks;","lastModifiedDate":"2022-02-22"},{"lineNumber":80,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":81,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":82,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"tanweili"},"content":"     * Updates the file data with a new line of data to be in sync with the current arraylist of tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":84,"author":{"gitId":"tanweili"},"content":"     * @param userInput Text from user to be stored into the file data","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"tanweili"},"content":"     * @throws IOException If the file cannot be updated.","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"tanweili"},"content":"    public void addData(String userInput) throws IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":88,"author":{"gitId":"tanweili"},"content":"        checkFileExists();","lastModifiedDate":"2022-02-19"},{"lineNumber":89,"author":{"gitId":"tanweili"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(PATH);","lastModifiedDate":"2022-02-19"},{"lineNumber":90,"author":{"gitId":"tanweili"},"content":"        String extraLine \u003d \"0|\" + userInput;","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"tanweili"},"content":"        lines.add(extraLine);","lastModifiedDate":"2022-02-19"},{"lineNumber":92,"author":{"gitId":"tanweili"},"content":"        Files.write(PATH, lines);","lastModifiedDate":"2022-02-19"},{"lineNumber":93,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":94,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":95,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"tanweili"},"content":"     * Updates the file data by deleting a line of data to be in sync with the current arraylist of tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"tanweili"},"content":"     * @param taskCount Index of the task to be deleted.","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"tanweili"},"content":"     * @throws IOException If the file cannot be updated.","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"tanweili"},"content":"    public void deleteData(int taskCount) throws IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":101,"author":{"gitId":"tanweili"},"content":"        checkFileExists();","lastModifiedDate":"2022-02-19"},{"lineNumber":102,"author":{"gitId":"tanweili"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(PATH);","lastModifiedDate":"2022-02-19"},{"lineNumber":103,"author":{"gitId":"tanweili"},"content":"        lines.remove(taskCount);","lastModifiedDate":"2022-02-19"},{"lineNumber":104,"author":{"gitId":"tanweili"},"content":"        Files.write(PATH, lines);","lastModifiedDate":"2022-02-19"},{"lineNumber":105,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":106,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":107,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"tanweili"},"content":"     * Updates the file data to mark the selected data to be in sync with current arraylist of tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"tanweili"},"content":"     * @param taskNumber Index of task in the arraylist to be deleted.","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"tanweili"},"content":"     * @throws IOException If the file cannot be updated.","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"tanweili"},"content":"    public void markOrUnmarkData(int taskNumber) throws IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":113,"author":{"gitId":"tanweili"},"content":"        checkFileExists();","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"tanweili"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(PATH);","lastModifiedDate":"2022-02-20"},{"lineNumber":115,"author":{"gitId":"tanweili"},"content":"        if (lines.get(taskNumber).startsWith(\"0\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":116,"author":{"gitId":"tanweili"},"content":"            String editedData \u003d lines.get(taskNumber).replaceFirst(\"0\",\"1\");","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"tanweili"},"content":"            lines.remove(taskNumber);","lastModifiedDate":"2022-02-20"},{"lineNumber":118,"author":{"gitId":"tanweili"},"content":"            lines.add(taskNumber, editedData);","lastModifiedDate":"2022-02-20"},{"lineNumber":119,"author":{"gitId":"tanweili"},"content":"        } else {","lastModifiedDate":"2022-02-20"},{"lineNumber":120,"author":{"gitId":"tanweili"},"content":"            String editedData \u003d lines.get(taskNumber).replaceFirst(\"1\",\"0\");","lastModifiedDate":"2022-02-20"},{"lineNumber":121,"author":{"gitId":"tanweili"},"content":"            lines.remove(taskNumber);","lastModifiedDate":"2022-02-20"},{"lineNumber":122,"author":{"gitId":"tanweili"},"content":"            lines.add(taskNumber, editedData);","lastModifiedDate":"2022-02-20"},{"lineNumber":123,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":124,"author":{"gitId":"tanweili"},"content":"        Files.write(PATH, lines);","lastModifiedDate":"2022-02-20"},{"lineNumber":125,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":126,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":127,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"tanweili"},"content":"     * Creates the required folder and file to be referenced by Duke if not found","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"tanweili"},"content":"    public void checkFileExists() {","lastModifiedDate":"2022-02-20"},{"lineNumber":131,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-19"},{"lineNumber":132,"author":{"gitId":"tanweili"},"content":"            // create parent folder if it does not exist","lastModifiedDate":"2022-02-19"},{"lineNumber":133,"author":{"gitId":"tanweili"},"content":"            if (!Files.exists(PATH.getParent())) {","lastModifiedDate":"2022-02-19"},{"lineNumber":134,"author":{"gitId":"tanweili"},"content":"                Files.createDirectory(PATH.getParent());","lastModifiedDate":"2022-02-19"},{"lineNumber":135,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-02-19"},{"lineNumber":136,"author":{"gitId":"tanweili"},"content":"            // create file if it does not exists","lastModifiedDate":"2022-02-19"},{"lineNumber":137,"author":{"gitId":"tanweili"},"content":"            if (!Files.exists(PATH)) {","lastModifiedDate":"2022-02-19"},{"lineNumber":138,"author":{"gitId":"tanweili"},"content":"                Files.createFile(PATH);","lastModifiedDate":"2022-02-19"},{"lineNumber":139,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-02-19"},{"lineNumber":140,"author":{"gitId":"tanweili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-19"},{"lineNumber":141,"author":{"gitId":"tanweili"},"content":"            ui.printIOExceptionMessageLoad();","lastModifiedDate":"2022-02-22"},{"lineNumber":142,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":143,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":144,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"tanweili":144}},{"path":"src/main/java/duke/userinterface/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package duke.userinterface;","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyDescriptionException;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import duke.customexceptions.EmptyTimingDetailsException;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":" * Shows messages Duke has for the user in various situations.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":" * Contains methods to extract specific information in user input for command processing.","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"public class UserInterface {","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"    public void printLine() {","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"------------------------------\");","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"    public void printGreeting() {","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Hello! I\u0027m Duke.\");","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"    public void printByeMessage() {","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"    public void printNoCommandMessage() {","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Well, I\u0027ll wait for a command..\");","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"    public void printHelpMessage() {","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Sorry I don\u0027t know what you mean.\");","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"There are currently nine keyword commands: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"1. list, 2. todo, 3. deadline, 4.event, 5. mark, 6. unmark, 7. delete, 8. find, 9. bye\");","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"    public void printEmptyDescriptionMessage() {","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Oops! Please type in a description!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"    public void printEmptyTimingDetailsMessage() {","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Oops! Please indicate the time for the deadline you want to add!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"    public void printIOExceptionMessageLoad() {","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Oops! Something went wrong with loading the data!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"tanweili"},"content":"    public void printIOExceptionMessageWrite() {","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Oops! Something went wrong with writing the data!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"tanweili"},"content":"    public void printIOExceptionMessageRead() {","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Oops! Something went wrong with reading the data!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"tanweili"},"content":"    public void printOutOfBoundsExceptionMessage() {","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Oops! The task number given is not in range. Try again!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"tanweili"},"content":"    public void printNumberFormatExceptionMessage() {","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Oops! Please give an integer value. Try again!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"tanweili"},"content":"    public void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"tanweili"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"tanweili"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"tanweili"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"tanweili"},"content":"                System.out.println(i + 1 + \".\" + tasks.get(i).toString());","lastModifiedDate":"2022-02-22"},{"lineNumber":68,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"tanweili"},"content":"        } else {","lastModifiedDate":"2022-02-22"},{"lineNumber":70,"author":{"gitId":"tanweili"},"content":"            System.out.println(\"Wow, such empty.\");","lastModifiedDate":"2022-02-22"},{"lineNumber":71,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":73,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":74,"author":{"gitId":"tanweili"},"content":"    public void printTask(ArrayList\u003cTask\u003e tasks, int number) {","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + tasks.get(number).toString());","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"tanweili"},"content":"     * prints out all tasks that contain the matching keyword(s)","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"tanweili"},"content":"     * @param tasks processed list of tasks that contain the matching keyword(s)","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"tanweili"},"content":"    public void printMatchingTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"tanweili"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2022-02-22"},{"lineNumber":84,"author":{"gitId":"tanweili"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-22"},{"lineNumber":85,"author":{"gitId":"tanweili"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-22"},{"lineNumber":86,"author":{"gitId":"tanweili"},"content":"                System.out.println(i + 1 + \".\" + tasks.get(i).toString());","lastModifiedDate":"2022-02-22"},{"lineNumber":87,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":88,"author":{"gitId":"tanweili"},"content":"        } else {","lastModifiedDate":"2022-02-22"},{"lineNumber":89,"author":{"gitId":"tanweili"},"content":"            System.out.println(\"There are no tasks in the current list that matches the keywords given!\");","lastModifiedDate":"2022-02-22"},{"lineNumber":90,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":91,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":93,"author":{"gitId":"tanweili"},"content":"    public void printMessageForAdding(ArrayList\u003cTask\u003e tasks, Task task) {","lastModifiedDate":"2022-02-22"},{"lineNumber":94,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-02-22"},{"lineNumber":95,"author":{"gitId":"tanweili"},"content":"        System.out.println(tasks.size() + \".\" + task.toString());","lastModifiedDate":"2022-02-22"},{"lineNumber":96,"author":{"gitId":"tanweili"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":98,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":99,"author":{"gitId":"tanweili"},"content":"    public void printMarkOrUnmarkMessage(ArrayList\u003cTask\u003e tasks, String command, int number) {","lastModifiedDate":"2022-02-22"},{"lineNumber":100,"author":{"gitId":"tanweili"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2022-02-22"},{"lineNumber":101,"author":{"gitId":"tanweili"},"content":"            tasks.get(number).setIsMarked();","lastModifiedDate":"2022-02-22"},{"lineNumber":102,"author":{"gitId":"tanweili"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-02-22"},{"lineNumber":103,"author":{"gitId":"tanweili"},"content":"        } else {","lastModifiedDate":"2022-02-22"},{"lineNumber":104,"author":{"gitId":"tanweili"},"content":"            tasks.get(number).unsetIsMarked();","lastModifiedDate":"2022-02-22"},{"lineNumber":105,"author":{"gitId":"tanweili"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as not done:\");","lastModifiedDate":"2022-02-24"},{"lineNumber":106,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":107,"author":{"gitId":"tanweili"},"content":"        System.out.println(number + 1 + \".\" + tasks.get(number).toString());","lastModifiedDate":"2022-02-22"},{"lineNumber":108,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":109,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":110,"author":{"gitId":"tanweili"},"content":"    public String getCommand(String userInput) {","lastModifiedDate":"2022-02-22"},{"lineNumber":111,"author":{"gitId":"tanweili"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-22"},{"lineNumber":112,"author":{"gitId":"tanweili"},"content":"        String command \u003d words[0];","lastModifiedDate":"2022-02-22"},{"lineNumber":113,"author":{"gitId":"tanweili"},"content":"        return command;","lastModifiedDate":"2022-02-22"},{"lineNumber":114,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":115,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":116,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"tanweili"},"content":"     * Extracts out the description portion of the user input from the accepted input formats.","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"tanweili"},"content":"     * @param userInput","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"tanweili"},"content":"     * @return","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"tanweili"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"tanweili"},"content":"    public String getDescription(String userInput) throws EmptyDescriptionException {","lastModifiedDate":"2022-02-24"},{"lineNumber":123,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"tanweili"},"content":"            int indexOfDescription \u003d userInput.indexOf(\" \");","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"tanweili"},"content":"            int indexOfSlash \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2022-02-24"},{"lineNumber":126,"author":{"gitId":"tanweili"},"content":"            String description \u003d \"\";","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"tanweili"},"content":"            if (indexOfSlash !\u003d -1) {","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"tanweili"},"content":"                description \u003d userInput.substring(indexOfDescription, indexOfSlash);","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"tanweili"},"content":"            } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"tanweili"},"content":"                description \u003d userInput.substring(indexOfDescription);","lastModifiedDate":"2022-02-24"},{"lineNumber":131,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":132,"author":{"gitId":"tanweili"},"content":"            if (description.equals(\" \")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"tanweili"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2022-02-24"},{"lineNumber":134,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":135,"author":{"gitId":"tanweili"},"content":"            return description;","lastModifiedDate":"2022-02-24"},{"lineNumber":136,"author":{"gitId":"tanweili"},"content":"        } catch (StringIndexOutOfBoundsException | EmptyDescriptionException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":137,"author":{"gitId":"tanweili"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2022-02-24"},{"lineNumber":138,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":140,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":141,"author":{"gitId":"tanweili"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":142,"author":{"gitId":"tanweili"},"content":"     * Extracts out timing information from user input from the accepted input formats.","lastModifiedDate":"2022-02-24"},{"lineNumber":143,"author":{"gitId":"tanweili"},"content":"     * @param userInput","lastModifiedDate":"2022-02-24"},{"lineNumber":144,"author":{"gitId":"tanweili"},"content":"     * @return","lastModifiedDate":"2022-02-24"},{"lineNumber":145,"author":{"gitId":"tanweili"},"content":"     * @throws EmptyTimingDetailsException","lastModifiedDate":"2022-02-24"},{"lineNumber":146,"author":{"gitId":"tanweili"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":147,"author":{"gitId":"tanweili"},"content":"    public String getTimingDetails(String userInput) throws EmptyTimingDetailsException {","lastModifiedDate":"2022-02-24"},{"lineNumber":148,"author":{"gitId":"tanweili"},"content":"        int indexOfSlash \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2022-02-24"},{"lineNumber":149,"author":{"gitId":"tanweili"},"content":"        int indexOfTimingDetails \u003d indexOfSlash + 4;","lastModifiedDate":"2022-02-24"},{"lineNumber":150,"author":{"gitId":"tanweili"},"content":"        if (indexOfSlash !\u003d -1) {","lastModifiedDate":"2022-02-24"},{"lineNumber":151,"author":{"gitId":"tanweili"},"content":"            return userInput.substring(indexOfTimingDetails);","lastModifiedDate":"2022-02-24"},{"lineNumber":152,"author":{"gitId":"tanweili"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":153,"author":{"gitId":"tanweili"},"content":"            throw new EmptyTimingDetailsException();","lastModifiedDate":"2022-02-24"},{"lineNumber":154,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":155,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":156,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":157,"author":{"gitId":"tanweili"},"content":"    public int getTaskNumber(String userInput) {","lastModifiedDate":"2022-02-24"},{"lineNumber":158,"author":{"gitId":"tanweili"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-24"},{"lineNumber":159,"author":{"gitId":"tanweili"},"content":"        String taskNumber \u003d words[1];","lastModifiedDate":"2022-02-24"},{"lineNumber":160,"author":{"gitId":"tanweili"},"content":"        int number \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2022-02-24"},{"lineNumber":161,"author":{"gitId":"tanweili"},"content":"        return number;","lastModifiedDate":"2022-02-24"},{"lineNumber":162,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":163,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"tanweili":163}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"bye","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"tanweili":1}}]
