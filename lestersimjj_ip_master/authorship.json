[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"T | 0 | something","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"E | 0 | social networking | 2022-09-13","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"E | 1 | networking | 2022-12-30","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"T | 0 | 123","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"lestersimjj":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"**About the Program**: A personal assistant chatbot to help you keep track of your tasks","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"## Pre-Requisites","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"* Java 11 installed on your system","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"## Quick Start","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"1. Download the v0.2 IP.jar file from [here](https://github.com/lestersimjj/ip/releases/download/A-Release/IP.jar).","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"2. Place the .jar file into an empty folder.","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"3. Open Command Prompt (for Windows) or Terminal (for Mac) and navigate to the directory where the newly created folder is.","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"4. Run the command `java -jar IP.jar` to start the program.","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"5. Enter the commands below.","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"6. Terminate the program by entering `bye`.","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"1. Add 3 types of Task: Todo / Deadline / Event","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"2. Mark a specific task as completed","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"3. Unmark a specific task if it\u0027s not completed yet","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"4. Delete a specific task","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"5. Display all tasks","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"6. Find all tasks that contain a search keyword","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"7. Exit the program","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"## Usage","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"### `todo` - Create a Todo","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"`todo [DESCRIPTION]`","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"Add a Todo task.","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"**Sample Input**:","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"`todo borrow book`","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"**Expected outcome**:","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"Creates a new Todo task and marks it as incomplete as its ","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"lestersimjj"},"content":"initial state as shown by the second empty bracket.","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"lestersimjj"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"lestersimjj"},"content":" [T][ ] borrow book","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"lestersimjj"},"content":"Now you have 4 task(s) in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"lestersimjj"},"content":"### `deadline` - Create a Deadline","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"lestersimjj"},"content":"`deadline [DESCRIPTION] /by [YYYY-DD-MM]`","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"lestersimjj"},"content":"Add a Deadline task with the description and due date specified.","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"lestersimjj"},"content":"**Sample Input**:","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"lestersimjj"},"content":"`deadline project BBA /by 2022-02-12`","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"lestersimjj"},"content":"**Expected outcome**:","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"lestersimjj"},"content":"Creates a new Deadline task and marks it as incomplete as its ","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"lestersimjj"},"content":"initial state with the due date marked in brackets.","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"lestersimjj"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"lestersimjj"},"content":" [D][ ] project BBA (by: 2022-02-12)","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"lestersimjj"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"lestersimjj"},"content":"### `event` - Create an Event","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"lestersimjj"},"content":"`event [DESCRIPTION] /at [YYYY-DD-MM]`","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"lestersimjj"},"content":"Add an Event task with the event description and date specified.","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"lestersimjj"},"content":"**Sample Input**:","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"lestersimjj"},"content":"`event opening ceremony /at 2022-05-05`","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"lestersimjj"},"content":"**Expected outcome**:","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"lestersimjj"},"content":"Creates a new Event task and marks it as incomplete as its ","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"lestersimjj"},"content":"initial state with the event date in brackets.","lastModifiedDate":"2022-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"lestersimjj"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-03-05"},{"lineNumber":87,"author":{"gitId":"lestersimjj"},"content":" [E][ ] opening ceremony (at: 2022-05-05)","lastModifiedDate":"2022-03-05"},{"lineNumber":88,"author":{"gitId":"lestersimjj"},"content":"Now you have 5 task(s) in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":89,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":90,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":91,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":92,"author":{"gitId":"lestersimjj"},"content":"### `mark` - Mark a Task","lastModifiedDate":"2022-03-05"},{"lineNumber":93,"author":{"gitId":"lestersimjj"},"content":"`mark [TASK_INDEX]`","lastModifiedDate":"2022-03-05"},{"lineNumber":94,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":95,"author":{"gitId":"lestersimjj"},"content":"Mark a task as completed by specifying the task index found on the list of tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":96,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":97,"author":{"gitId":"lestersimjj"},"content":"**Sample Input**:","lastModifiedDate":"2022-03-05"},{"lineNumber":98,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"lestersimjj"},"content":"`mark 2`","lastModifiedDate":"2022-03-05"},{"lineNumber":100,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"lestersimjj"},"content":"**Expected outcome**:","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"lestersimjj"},"content":"Marks the second task in the list of tasks as completed as ","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"lestersimjj"},"content":"shown by `[X]` in the sample output below","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":107,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":108,"author":{"gitId":"lestersimjj"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-03-05"},{"lineNumber":109,"author":{"gitId":"lestersimjj"},"content":" [E][X] project meeting (at: 2019-10-16)","lastModifiedDate":"2022-03-05"},{"lineNumber":110,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":111,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":112,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":113,"author":{"gitId":"lestersimjj"},"content":"### `unmark` - Unmark a Task","lastModifiedDate":"2022-03-05"},{"lineNumber":114,"author":{"gitId":"lestersimjj"},"content":"`unmark [TASK_INDEX]`","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"lestersimjj"},"content":"Unmark a task as not completed yet by specifying the task index found on the list of tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":117,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"lestersimjj"},"content":"**Sample Input**:","lastModifiedDate":"2022-03-05"},{"lineNumber":119,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"lestersimjj"},"content":"`unmark 2`","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"lestersimjj"},"content":"**Expected outcome**:","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"lestersimjj"},"content":"Unmark the second task in the list of tasks as not completed as","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"lestersimjj"},"content":"shown by the empty bracket `[ ]` in the sample output below","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"lestersimjj"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"lestersimjj"},"content":" [E][ ] project meeting (at: 2019-10-16)","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"lestersimjj"},"content":"### `delete` - Delete a Task","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"lestersimjj"},"content":"`delete [TASK_INDEX]`","lastModifiedDate":"2022-03-05"},{"lineNumber":136,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"lestersimjj"},"content":"Delete a task by specifying the task index found on the list of tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":139,"author":{"gitId":"lestersimjj"},"content":"**Sample Input**:","lastModifiedDate":"2022-03-05"},{"lineNumber":140,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"lestersimjj"},"content":"`delete 2`","lastModifiedDate":"2022-03-05"},{"lineNumber":142,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":143,"author":{"gitId":"lestersimjj"},"content":"**Expected outcome**:","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"lestersimjj"},"content":"Delete the second task in the list of tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"lestersimjj"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"lestersimjj"},"content":" [E][ ] project meeting (at: 2019-10-16)","lastModifiedDate":"2022-03-05"},{"lineNumber":151,"author":{"gitId":"lestersimjj"},"content":"Now you have 4 tasks in the list","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":153,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":154,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"lestersimjj"},"content":"### `list` - List All Tasks","lastModifiedDate":"2022-03-05"},{"lineNumber":156,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":157,"author":{"gitId":"lestersimjj"},"content":"List all existing tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":158,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":159,"author":{"gitId":"lestersimjj"},"content":"**Sample Input**:","lastModifiedDate":"2022-03-05"},{"lineNumber":160,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":161,"author":{"gitId":"lestersimjj"},"content":"`list`","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"lestersimjj"},"content":"**Expected outcome**:","lastModifiedDate":"2022-03-05"},{"lineNumber":164,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":165,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":166,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":167,"author":{"gitId":"lestersimjj"},"content":"1. [T][X] borrow book","lastModifiedDate":"2022-03-05"},{"lineNumber":168,"author":{"gitId":"lestersimjj"},"content":"2. [D][ ] project BBA (by: 2022-02-12)","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"lestersimjj"},"content":"3. [E][ ] opening ceremony (at: 2022-05-05)","lastModifiedDate":"2022-03-05"},{"lineNumber":170,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":171,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":173,"author":{"gitId":"lestersimjj"},"content":"### `find` - Finding Keywords","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"lestersimjj"},"content":"`find [KEYWORDS]`","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"lestersimjj"},"content":"Find task(s) by searching for a keyword.","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":178,"author":{"gitId":"lestersimjj"},"content":"**Sample Input**:","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":180,"author":{"gitId":"lestersimjj"},"content":"`find books`","lastModifiedDate":"2022-03-05"},{"lineNumber":181,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":182,"author":{"gitId":"lestersimjj"},"content":"**Expected outcome**:","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":184,"author":{"gitId":"lestersimjj"},"content":"Delete the second task in the list of tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":185,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":186,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":187,"author":{"gitId":"lestersimjj"},"content":"list","lastModifiedDate":"2022-03-05"},{"lineNumber":188,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":189,"author":{"gitId":"lestersimjj"},"content":"1. [E][ ] opening ceremony (at: 2022-05-05)","lastModifiedDate":"2022-03-05"},{"lineNumber":190,"author":{"gitId":"lestersimjj"},"content":"2. [T][ ] read books","lastModifiedDate":"2022-03-05"},{"lineNumber":191,"author":{"gitId":"lestersimjj"},"content":"3. [D][ ] return book (by: 2022-05-06)","lastModifiedDate":"2022-03-05"},{"lineNumber":192,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":193,"author":{"gitId":"lestersimjj"},"content":"find book ","lastModifiedDate":"2022-03-05"},{"lineNumber":194,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":195,"author":{"gitId":"lestersimjj"},"content":"1. [T][ ] read books","lastModifiedDate":"2022-03-05"},{"lineNumber":196,"author":{"gitId":"lestersimjj"},"content":"2. [D][ ] return book (by: 2022-05-06)","lastModifiedDate":"2022-03-05"},{"lineNumber":197,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":198,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":199,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":200,"author":{"gitId":"lestersimjj"},"content":"### `bye` - Terminating Duke","lastModifiedDate":"2022-03-05"},{"lineNumber":201,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":202,"author":{"gitId":"lestersimjj"},"content":"Terminate the program.","lastModifiedDate":"2022-03-05"},{"lineNumber":203,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":204,"author":{"gitId":"lestersimjj"},"content":"**Sample Input**:","lastModifiedDate":"2022-03-05"},{"lineNumber":205,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":206,"author":{"gitId":"lestersimjj"},"content":"`bye`","lastModifiedDate":"2022-03-05"},{"lineNumber":207,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":208,"author":{"gitId":"lestersimjj"},"content":"**Expected outcome**:","lastModifiedDate":"2022-03-05"},{"lineNumber":209,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-03-05"},{"lineNumber":211,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":212,"author":{"gitId":"lestersimjj"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-03-05"},{"lineNumber":213,"author":{"gitId":"lestersimjj"},"content":"____________________________________________________________","lastModifiedDate":"2022-03-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":25,"lestersimjj":189}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.command.Command;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"    private Ui ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"     * Initialize a Duke object that reads data from a file specified by the filepath.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"     * A new file to store the list of Tasks will be created if the file is not found.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"     * @param filePath File path of where the saved file can be found or will be stored in","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"     * Represents starting up Duke and accepting user commands","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"    public void run() {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"        while (!isExit) {","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"            try {","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"lestersimjj"},"content":"                ui.showLine(); // show the divider line (\"-------\")","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"lestersimjj"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"lestersimjj"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"lestersimjj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"lestersimjj"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"lestersimjj"},"content":"            } finally {","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"lestersimjj"},"content":"                ui.showLine();","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"lestersimjj"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"lestersimjj"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"lestersimjj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"lestersimjj"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"lestersimjj":51}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"    public DukeException(String e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"        super(e);","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"lestersimjj":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.command.Command;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Event;","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"public class Parser {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"    // Command Constants","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"    public static final String BYE \u003d \"bye\";","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"    public static final String MARK \u003d \"mark\";","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"    public static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"     * Returns a Command that can be executed later on. There are different","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"     * types of Command that can be created, based on the user input.","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"     * @param fullCommand A single line argument that the user keys in","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"     * @return The Command containing its arguments, if any","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"lestersimjj"},"content":"     * @throws DukeException If there is an unknown command","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"lestersimjj"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"lestersimjj"},"content":"        String commandWord \u003d fullCommand.split(\" \", 2)[0];","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"lestersimjj"},"content":"        int taskIndex;","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"lestersimjj"},"content":"        String arguments;","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"lestersimjj"},"content":"        String[] argumentList;","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"lestersimjj"},"content":"        String description;","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"lestersimjj"},"content":"        Task newTask;","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"lestersimjj"},"content":"        LocalDate dateInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"lestersimjj"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"lestersimjj"},"content":"        case LIST:","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"lestersimjj"},"content":"            return new ListCommand();","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"lestersimjj"},"content":"        case BYE:","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"lestersimjj"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"lestersimjj"},"content":"        case TODO:","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"lestersimjj"},"content":"            arguments \u003d getArguments(fullCommand);","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"lestersimjj"},"content":"            newTask \u003d new Todo(arguments);","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"lestersimjj"},"content":"            return new AddCommand(newTask);","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"lestersimjj"},"content":"        case DEADLINE:","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"lestersimjj"},"content":"            arguments \u003d getArguments(fullCommand);","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"lestersimjj"},"content":"            try {","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"lestersimjj"},"content":"                argumentList \u003d arguments.split(\"/by\", 2);","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"lestersimjj"},"content":"                description \u003d argumentList[0].trim(); // eg. return book","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"lestersimjj"},"content":"                dateInput \u003d LocalDate.parse(argumentList[1].trim()); // yyyy-mm-dd","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"lestersimjj"},"content":"                newTask \u003d new Deadline(description, dateInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"lestersimjj"},"content":"                return new AddCommand(newTask);","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"lestersimjj"},"content":"            } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"lestersimjj"},"content":"                throw new DukeException(\"Incorrect input format. Please enter \" +","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"lestersimjj"},"content":"                        \"in this format: deadline project /by 2022-12-31\");","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"lestersimjj"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"lestersimjj"},"content":"        case EVENT:","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"lestersimjj"},"content":"            arguments \u003d getArguments(fullCommand);","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"lestersimjj"},"content":"            try {","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"lestersimjj"},"content":"                argumentList \u003d arguments.split(\"/at\", 2);","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"lestersimjj"},"content":"                description \u003d argumentList[0].trim(); // eg. return book","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"lestersimjj"},"content":"                dateInput \u003d LocalDate.parse(argumentList[1].trim()); // yyyy-mm-dd","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"lestersimjj"},"content":"                newTask \u003d new Event(description, dateInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"lestersimjj"},"content":"                return new AddCommand(newTask);","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"lestersimjj"},"content":"            } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"lestersimjj"},"content":"                throw new DukeException(\"Incorrect input format. Please enter \" +","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"lestersimjj"},"content":"                        \"in this format: event networking /at 2022-12-30\");","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"lestersimjj"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"lestersimjj"},"content":"        case FIND:","lastModifiedDate":"2022-03-05"},{"lineNumber":83,"author":{"gitId":"lestersimjj"},"content":"            return new FindCommand(getArguments(fullCommand));","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"lestersimjj"},"content":"        case MARK:","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"lestersimjj"},"content":"            taskIndex \u003d Integer.parseInt(getArguments(fullCommand)) - 1;","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"lestersimjj"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"lestersimjj"},"content":"        case UNMARK:","lastModifiedDate":"2022-03-05"},{"lineNumber":88,"author":{"gitId":"lestersimjj"},"content":"            taskIndex \u003d Integer.parseInt(getArguments(fullCommand)) - 1;","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"lestersimjj"},"content":"            return new UnmarkCommand(taskIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"lestersimjj"},"content":"        case DELETE:","lastModifiedDate":"2022-03-05"},{"lineNumber":91,"author":{"gitId":"lestersimjj"},"content":"            taskIndex \u003d Integer.parseInt(getArguments(fullCommand)) - 1;","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"lestersimjj"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"lestersimjj"},"content":"        default:","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"lestersimjj"},"content":"            return new UnknownCommand();","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"lestersimjj"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"lestersimjj"},"content":"     * Get the second argument from the user input","lastModifiedDate":"2022-03-05"},{"lineNumber":100,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"lestersimjj"},"content":"     * @param fullCommand Represents the full command given by the user","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"lestersimjj"},"content":"     * @return Returns the second argument as a String","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"lestersimjj"},"content":"     * @throws DukeException If there is no second argument provided","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"lestersimjj"},"content":"     * by the user but is required by the command","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"lestersimjj"},"content":"    public static String getArguments(String fullCommand) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"lestersimjj"},"content":"        if (fullCommand.split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"lestersimjj"},"content":"            throw new DukeException(\"OOPS!!! There are missing descriptions.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"lestersimjj"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"lestersimjj"},"content":"        return fullCommand.split(\" \", 2)[1];","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":113}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Event;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"import java.io.File;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"public class Storage {","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    String folderPath;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"    String fileName;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"        this.folderPath \u003d filePath.split(\"/\")[0];","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"        this.fileName\u003d  filePath.split(\"/\")[1];","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"     * Returns an ArrayList containing the list of Task that have been loaded from the filepath","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"     * @return An ArrayList of Task","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"        // Create new TaskList","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"            File f \u003d new File(folderPath + \"/\" + fileName);","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"lestersimjj"},"content":"                String userInput \u003d s.nextLine();","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"                String[] userInputArr \u003d userInput.split(\" \\\\| \");","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"lestersimjj"},"content":"                String taskType \u003d userInputArr[0];","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"lestersimjj"},"content":"                boolean isDone \u003d userInputArr[1].equals(\"1\");","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"lestersimjj"},"content":"                LocalDate dateInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"lestersimjj"},"content":"                switch (taskType) {","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"lestersimjj"},"content":"                case \"T\":","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"lestersimjj"},"content":"                    tasks.add(new Todo(isDone, userInputArr[2]));","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"lestersimjj"},"content":"                    break;","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"lestersimjj"},"content":"                case \"D\":","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"lestersimjj"},"content":"                    dateInput \u003d LocalDate.parse(userInputArr[3]);","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"lestersimjj"},"content":"                    tasks.add(new Deadline(isDone, userInputArr[2], dateInput));","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"lestersimjj"},"content":"                    break;","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"lestersimjj"},"content":"                case \"E\":","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"lestersimjj"},"content":"                    dateInput \u003d LocalDate.parse(userInputArr[3]);","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"lestersimjj"},"content":"                    tasks.add(new Event(isDone, userInputArr[2], dateInput));","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"lestersimjj"},"content":"                    break;","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"lestersimjj"},"content":"                }","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"lestersimjj"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"lestersimjj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"lestersimjj"},"content":"            File directory \u003d new File(folderPath);","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"lestersimjj"},"content":"            // Create directory if not found","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"lestersimjj"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"lestersimjj"},"content":"                directory.mkdir();","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"lestersimjj"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"lestersimjj"},"content":"            File f \u003d new File(folderPath + \"/\" + fileName);","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"lestersimjj"},"content":"            // Create file if not found. If IOError, print error message","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"lestersimjj"},"content":"            try {","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"lestersimjj"},"content":"                f.createNewFile();","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"lestersimjj"},"content":"            } catch (IOException err) {","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"lestersimjj"},"content":"                throw new DukeException(\"Error loading from the filepath.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"lestersimjj"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"lestersimjj"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"lestersimjj"},"content":"        return tasks;","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"lestersimjj"},"content":"     * Writes each Task found in tasks to the filepath specified earlier by the user","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"lestersimjj"},"content":"     * @param tasks TaskList containing current list of Task","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"lestersimjj"},"content":"    public void writeTasksToStorage(TaskList tasks) {","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"lestersimjj"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"lestersimjj"},"content":"            String output \u003d \"\";","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"lestersimjj"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"lestersimjj"},"content":"                output +\u003d tasks.getTask(i).saveString() + System.lineSeparator();","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"lestersimjj"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"lestersimjj"},"content":"            FileWriter fw \u003d new FileWriter(folderPath + \"/\" + fileName);","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"lestersimjj"},"content":"            fw.write(output);","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"lestersimjj"},"content":"            fw.close();","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"lestersimjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"lestersimjj"},"content":"            System.out.println(\"Error writing to file.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"lestersimjj"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":96}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":" * Represents a container containing the different Tasks that","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":" * have been added by the user.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"public class TaskList {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"    public TaskList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"    public Task removeTask(int taskIndex) {","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"        return this.tasks.remove(taskIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":37}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"public class Ui {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"    private final Scanner in;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"    public Ui() {","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"        this(System.in);","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    public void showLine() {","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"        this.showLine();","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        this.showLine();","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"    public void showError(String e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(e);","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"    public String readCommand() {","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"        String fullCommand \u003d this.in.nextLine();","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"        return fullCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":36}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.DukeException;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":" * Represents a Command to add a Task to the TaskList.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":" * Different types of Task can be added based on the user input.","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    private final Task task;","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"        storage.writeTasksToStorage(tasks);","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(String.format(\"  %s\", this.task));","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.DukeException;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"    public Command() {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"     * All types of Command will be executable and invoked later on","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"     * @param tasks TaskList containing all the tasks that have been saved","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"     * @param ui User interface for reading user inputs or printing outputs","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"     * @param storage Current Storage object containing the filepath to","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"     *                write data to after execution","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"     * @throws DukeException If there are errors specific to Duke that are raised when","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"     * executing the commands","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"    // Default returns false unless specified","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"        return false;","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":" * Represents a Command to delete a Task from the TaskList","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"        Task task \u003d tasks.removeTask(this.taskIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"        storage.writeTasksToStorage(tasks);","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task\");","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(task);","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":28}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":" * Represents a Command to terminate the program and exit out of Duke.","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"        return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":20}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"    private final String keyword;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"        int containsCounter \u003d 0;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"            if (tasks.getTask(i).contains(keyword)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"                containsCounter +\u003d 1;","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"                System.out.println(String.format(\"%d. %s\", containsCounter, tasks.getTask(i)));","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":" * Represents a Command to list all Tasks in the current TaskList","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"            System.out.println(String.format(\"%d. %s\", i+1, tasks.getTask(i)));","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":18}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":" * Represents a Command to mark a Task found in the TaskList as completed.","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"        Task task \u003d tasks.getTask(this.taskIndex).markTask();","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"        storage.writeTasksToStorage(tasks);","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(task);","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":27}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.DukeException;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":" * Represents a Command to tell the user that his/her input is invalid,","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":" * and they should type a command that is recognized.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"        // Throw exception if unknown command inputted","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":19}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.command;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import duke.Storage;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":" * Represents a Command to unmark a Task found in the current TaskList","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":" * as not completed.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"        super();","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"        Task task \u003d tasks.getTask(this.taskIndex).unmarkTask();","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"        storage.writeTasksToStorage(tasks);","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(task);","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"lestersimjj":28}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.task;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":" * Represents a Deadline task (eg. deadline return book /by 2019-10-15)","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"    private LocalDate deadlineDate; // yyyy-mm-dd","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"    public Deadline(String description, LocalDate dateInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"        this(false, description, dateInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    public Deadline(boolean isDone, String description, LocalDate dateInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"        super(isDone, description);","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"        this.deadlineDate \u003d dateInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"    // Representation of Deadline in the saved file","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"    public String saveString() {","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"        return \"D\" + super.saveString() + String.format(\" | %s\", this.deadlineDate);","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"lestersimjj":31}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.task;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":" * Represents an Event task (eg. event project meeting /at 2019-10-15)","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"    private LocalDate eventDate; // yyyy-mm-dd","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"    public Event(String description, LocalDate dateInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"        this(false, description, dateInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    public Event(boolean isDone, String description, LocalDate dateInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"        super(isDone, description);","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"        this.eventDate \u003d dateInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"    // Representation of Event in the saved file","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"    public String saveString() {","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"        return \"E\" + super.saveString() + String.format(\" | %s\", this.eventDate);","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", this.eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"lestersimjj":31}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.task;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"public class Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"    protected String description;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"    public Task (boolean isDone, String description) {","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    // Mark done task with X","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"    // Marks task as done. Returns the task string too","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"    public Task markTask() {","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        return this;","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"    // Unmark the task. Returns the task string too","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"    public Task unmarkTask() {","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"        return this;","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"lestersimjj"},"content":"    // Output string when saved","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"    public String saveString() {","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"lestersimjj"},"content":"        int isDoneStr \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"lestersimjj"},"content":"        return String.format(\" | %d | %s\", isDoneStr, this.description);","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"lestersimjj"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"lestersimjj"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"lestersimjj":48}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package duke.task;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":" * Represents a Todo task (eg. todo borrow book)","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"        super(isDone, description);","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"    // Representation of Todo in the saved file","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    public String saveString() {","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"        return \"T\" + super.saveString();","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"lestersimjj":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"todo borrow book","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"list","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"mark 1","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"list","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"unmark 1","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"list","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"bye","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"lestersimjj":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"lestersimjj":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":31,"lestersimjj":3}}]
