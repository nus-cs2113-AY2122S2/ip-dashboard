[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"T|0|read","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"matheril":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"import java.io.File;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"        //File saveFile \u003d FileHandler.loadOrCreateSaveFile(\"data/duke.txt\");","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"        Scanner mainScan \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"        UserInterface ui \u003d null;","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"            ui \u003d new UserInterface(mainScan);","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"        ui.start();","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"matheril":17}},{"path":"src/main/java/duke/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"import java.io.File;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"public abstract class FileHandler {","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"    public static File loadOrCreateSaveFile(String path) {","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"        File saveFile \u003d new File(path);","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error loading/creating save file: \" + e.getMessage());","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"        return saveFile;","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"matheril":17}},{"path":"src/main/java/duke/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"import java.io.File;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"public class UserInterface {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"    public static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"    public static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"    private Scanner uiScan;","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"    public UserInterface(Scanner mainScan) throws IOException, DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"        this.uiScan \u003d mainScan;","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"        this.tasks \u003d loadSaveFile();","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"matheril"},"content":"     * Loads tasks saved in a save file, currently hardcoded to data/duke.txt.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"matheril"},"content":"     * @return A list of tasks found in the save file.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"matheril"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"matheril"},"content":"     * @throws DukeException","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"matheril"},"content":"    private ArrayList\u003cTask\u003e loadSaveFile() throws IOException, DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"matheril"},"content":"        File saveFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"matheril"},"content":"        saveFile.getParentFile().mkdirs();","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"matheril"},"content":"        saveFile.createNewFile();","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"matheril"},"content":"        Scanner fileScan \u003d new Scanner(saveFile);","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"matheril"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"matheril"},"content":"        while (fileScan.hasNextLine()) {","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"matheril"},"content":"            tasks.add(loadTask(fileScan.nextLine()));","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"matheril"},"content":"        return tasks;","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"matheril"},"content":"     * Reads a single line from the save file and returns a Task representing it.","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"matheril"},"content":"     * @param nextLine The line to be read from the save file.","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"matheril"},"content":"     * @return A task representing a line from the save file.","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"matheril"},"content":"     * @throws DukeException","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"matheril"},"content":"    private Task loadTask(String nextLine) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"matheril"},"content":"        String[] pieces \u003d nextLine.split(\"\\\\|\");","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"matheril"},"content":"        String taskType \u003d pieces[0];","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"matheril"},"content":"        ArrayList\u003cString\u003e task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"matheril"},"content":"        task.add(loadTaskType(taskType));","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"matheril"},"content":"        Boolean isDone \u003d loadCompletionStatus(pieces[1]);","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"matheril"},"content":"        Task loadedTask;","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"matheril"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"matheril"},"content":"        case \"T\":","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"matheril"},"content":"            loadedTask \u003d loadToDoDetails(task, pieces);","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"matheril"},"content":"        case \"D\":","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"matheril"},"content":"            loadedTask \u003d loadDeadlineDetails(task, pieces);","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"matheril"},"content":"        case \"E\":","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"matheril"},"content":"            loadedTask \u003d loadEventDetails(task, pieces);","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"matheril"},"content":"        default:","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"matheril"},"content":"            loadedTask \u003d null;","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"matheril"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"matheril"},"content":"            assert loadedTask !\u003d null;","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"matheril"},"content":"            loadedTask.doTask();","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"matheril"},"content":"        return loadedTask;","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"matheril"},"content":"     * Fills the ToDo task component list with its description.","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"matheril"},"content":"     * @param task An arraylist that will be built into a task.","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"matheril"},"content":"     * @param pieces An array containing the \u0027|\u0027 delimited chunks from a line of the save file.","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"matheril"},"content":"     * @return a Task","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"matheril"},"content":"     * @throws DukeException","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"matheril"},"content":"    private Task loadToDoDetails(ArrayList\u003cString\u003e task, String[] pieces) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"matheril"},"content":"        task.add(pieces[2]);","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"matheril"},"content":"        return buildTask(task);","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"matheril"},"content":"     * Fills the Deadline task component list with its description.","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"matheril"},"content":"     * @param task An arraylist that will be built into a task.","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"matheril"},"content":"     * @param pieces An array containing the \u0027|\u0027 delimited chunks from a line of the save file.","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"matheril"},"content":"     * @return a Task.","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"matheril"},"content":"     * @throws DukeException","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"matheril"},"content":"    private Task loadDeadlineDetails(ArrayList\u003cString\u003e task, String[] pieces) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"matheril"},"content":"        // description of task","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"matheril"},"content":"        task.add(pieces[2]);","lastModifiedDate":"2022-02-16"},{"lineNumber":106,"author":{"gitId":"matheril"},"content":"        // prepositions of task","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"matheril"},"content":"        task.add(pieces[4]);","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"matheril"},"content":"        // deadline of task","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"matheril"},"content":"        task.add(pieces[3]);","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"matheril"},"content":"        return buildTask(task);","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"matheril"},"content":"     * Fills the Event task component list with its description.","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"matheril"},"content":"     * @param task An arraylist that will be built into a task.","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"matheril"},"content":"     * @param pieces An array containing the \u0027|\u0027 delimited chunks from a line of the save file.","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"matheril"},"content":"     * @return a Task.","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"matheril"},"content":"     * @throws DukeException","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":120,"author":{"gitId":"matheril"},"content":"    private Task loadEventDetails(ArrayList\u003cString\u003e task, String[] pieces) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"matheril"},"content":"        // description of task","lastModifiedDate":"2022-02-16"},{"lineNumber":122,"author":{"gitId":"matheril"},"content":"        task.add(pieces[2]);","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"matheril"},"content":"        // prepositions of task","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"matheril"},"content":"        task.add(pieces[4]);","lastModifiedDate":"2022-02-16"},{"lineNumber":125,"author":{"gitId":"matheril"},"content":"        // timing of event","lastModifiedDate":"2022-02-16"},{"lineNumber":126,"author":{"gitId":"matheril"},"content":"        task.add(pieces[3]);","lastModifiedDate":"2022-02-16"},{"lineNumber":127,"author":{"gitId":"matheril"},"content":"        return buildTask(task);","lastModifiedDate":"2022-02-16"},{"lineNumber":128,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":129,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"matheril"},"content":"     * converts the shorthand Task char from a line in the save file to a class name.","lastModifiedDate":"2022-02-16"},{"lineNumber":132,"author":{"gitId":"matheril"},"content":"     * @param taskType","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"matheril"},"content":"     * @return","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"matheril"},"content":"    private String loadTaskType(String taskType) {","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"matheril"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"matheril"},"content":"        case \"T\":","lastModifiedDate":"2022-02-16"},{"lineNumber":138,"author":{"gitId":"matheril"},"content":"            return COMMAND_TODO;","lastModifiedDate":"2022-02-16"},{"lineNumber":139,"author":{"gitId":"matheril"},"content":"        case \"D\":","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"matheril"},"content":"            return COMMAND_DEADLINE;","lastModifiedDate":"2022-02-16"},{"lineNumber":141,"author":{"gitId":"matheril"},"content":"        case \"E\":","lastModifiedDate":"2022-02-16"},{"lineNumber":142,"author":{"gitId":"matheril"},"content":"            return COMMAND_EVENT;","lastModifiedDate":"2022-02-16"},{"lineNumber":143,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":144,"author":{"gitId":"matheril"},"content":"        return null;","lastModifiedDate":"2022-02-16"},{"lineNumber":145,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":146,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":148,"author":{"gitId":"matheril"},"content":"     * Returns true if the task is marked complete in the save file and false if otherwise.","lastModifiedDate":"2022-02-16"},{"lineNumber":149,"author":{"gitId":"matheril"},"content":"     * @param isDone A char from the save file: 1 if the task is done, 0 if not.","lastModifiedDate":"2022-02-16"},{"lineNumber":150,"author":{"gitId":"matheril"},"content":"     * @return true if the task is done, false if not.","lastModifiedDate":"2022-02-16"},{"lineNumber":151,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":152,"author":{"gitId":"matheril"},"content":"    private Boolean loadCompletionStatus(String isDone) {","lastModifiedDate":"2022-02-16"},{"lineNumber":153,"author":{"gitId":"matheril"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":154,"author":{"gitId":"matheril"},"content":"            return true;","lastModifiedDate":"2022-02-16"},{"lineNumber":155,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":156,"author":{"gitId":"matheril"},"content":"        return false;","lastModifiedDate":"2022-02-16"},{"lineNumber":157,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"matheril"},"content":"    public void start() {","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"matheril"},"content":"        printGreeting();","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"matheril"},"content":"        loopCommandInput();","lastModifiedDate":"2022-02-03"},{"lineNumber":162,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":163,"author":{"gitId":"matheril"},"content":"            updateSaveFile();","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"matheril"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":165,"author":{"gitId":"matheril"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":166,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":167,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"matheril"},"content":"     * Reads commands from stdin and executes them using commandExec(commandInput)","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"matheril"},"content":"     * until the user inputs COMMAND_EXIT, upon which the function returns.","lastModifiedDate":"2022-02-03"},{"lineNumber":172,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"matheril"},"content":"    public void loopCommandInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":174,"author":{"gitId":"matheril"},"content":"        String commandInput;","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"matheril"},"content":"        do {","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"matheril"},"content":"            commandInput \u003d uiScan.nextLine();","lastModifiedDate":"2022-02-16"},{"lineNumber":177,"author":{"gitId":"matheril"},"content":"            try {","lastModifiedDate":"2022-02-10"},{"lineNumber":178,"author":{"gitId":"matheril"},"content":"                executeCommand(commandInput);","lastModifiedDate":"2022-02-03"},{"lineNumber":179,"author":{"gitId":"matheril"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":180,"author":{"gitId":"matheril"},"content":"                System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":181,"author":{"gitId":"matheril"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":182,"author":{"gitId":"matheril"},"content":"        } while (!commandInput.equals(COMMAND_EXIT));","lastModifiedDate":"2022-02-03"},{"lineNumber":183,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"matheril"},"content":"     * Checks the String inputted by the user and executes the appropriate command","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"matheril"},"content":"     * using a switch statement.","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":189,"author":{"gitId":"matheril"},"content":"     * @param nextLine The command to be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":190,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"matheril"},"content":"    private void executeCommand(String nextLine) throws DukeException {","lastModifiedDate":"2022-02-10"},{"lineNumber":192,"author":{"gitId":"matheril"},"content":"        ArrayList\u003cString\u003e pieces \u003d new ArrayList\u003c\u003e(Arrays.asList(nextLine.split(\" \")));","lastModifiedDate":"2022-02-02"},{"lineNumber":193,"author":{"gitId":"matheril"},"content":"        String commandType \u003d pieces.get(0);","lastModifiedDate":"2022-02-09"},{"lineNumber":194,"author":{"gitId":"matheril"},"content":"        switch (commandType) {","lastModifiedDate":"2022-02-09"},{"lineNumber":195,"author":{"gitId":"matheril"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2022-02-03"},{"lineNumber":196,"author":{"gitId":"matheril"},"content":"            printGoodbye();","lastModifiedDate":"2022-01-26"},{"lineNumber":197,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"matheril"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2022-02-03"},{"lineNumber":199,"author":{"gitId":"matheril"},"content":"            listTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":200,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":201,"author":{"gitId":"matheril"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2022-02-03"},{"lineNumber":202,"author":{"gitId":"matheril"},"content":"            String taskToMark \u003d pieces.get(1);","lastModifiedDate":"2022-02-09"},{"lineNumber":203,"author":{"gitId":"matheril"},"content":"            doTask(taskToMark);","lastModifiedDate":"2022-02-09"},{"lineNumber":204,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":205,"author":{"gitId":"matheril"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2022-02-03"},{"lineNumber":206,"author":{"gitId":"matheril"},"content":"            String taskToUnmark \u003d pieces.get(1);","lastModifiedDate":"2022-02-09"},{"lineNumber":207,"author":{"gitId":"matheril"},"content":"            undoTask(taskToUnmark);","lastModifiedDate":"2022-02-09"},{"lineNumber":208,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-02-02"},{"lineNumber":209,"author":{"gitId":"matheril"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2022-02-16"},{"lineNumber":210,"author":{"gitId":"matheril"},"content":"            String taskToDelete \u003d pieces.get(1);","lastModifiedDate":"2022-02-16"},{"lineNumber":211,"author":{"gitId":"matheril"},"content":"            deleteTask(taskToDelete);","lastModifiedDate":"2022-02-16"},{"lineNumber":212,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-02-16"},{"lineNumber":213,"author":{"gitId":"matheril"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2022-02-03"},{"lineNumber":214,"author":{"gitId":"matheril"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2022-02-03"},{"lineNumber":215,"author":{"gitId":"matheril"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2022-02-03"},{"lineNumber":216,"author":{"gitId":"matheril"},"content":"            addTask(pieces);","lastModifiedDate":"2022-02-02"},{"lineNumber":217,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":218,"author":{"gitId":"matheril"},"content":"        default:","lastModifiedDate":"2022-01-25"},{"lineNumber":219,"author":{"gitId":"matheril"},"content":"            throw new DukeException(\"Command not found.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":220,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":221,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":222,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":223,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":224,"author":{"gitId":"matheril"},"content":"     * Stores a task in the list of tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":225,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":226,"author":{"gitId":"matheril"},"content":"     * @param inputTasks ArrayList\u003cString\u003e containing input from stdin. The first String in task should represent the type of","lastModifiedDate":"2022-02-02"},{"lineNumber":227,"author":{"gitId":"matheril"},"content":"     *                   Task that must be added to the list of Tasks. Supported tasks: todo, deadline, event","lastModifiedDate":"2022-02-02"},{"lineNumber":228,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":229,"author":{"gitId":"matheril"},"content":"    private void addTask(ArrayList\u003cString\u003e inputTasks) {","lastModifiedDate":"2022-02-02"},{"lineNumber":230,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":231,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":232,"author":{"gitId":"matheril"},"content":"            this.tasks.add(buildTask(inputTasks));","lastModifiedDate":"2022-02-03"},{"lineNumber":233,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + this.tasks.get(this.tasks.size() - 1));","lastModifiedDate":"2022-02-02"},{"lineNumber":234,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Now you have \" + tasks.size()","lastModifiedDate":"2022-02-10"},{"lineNumber":235,"author":{"gitId":"matheril"},"content":"                    + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":236,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":237,"author":{"gitId":"matheril"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":238,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":239,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":240,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":241,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":242,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":243,"author":{"gitId":"matheril"},"content":"     * Constructs a subclass of Task from an ArrayList\u003cString\u003e.","lastModifiedDate":"2022-02-02"},{"lineNumber":244,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":245,"author":{"gitId":"matheril"},"content":"     * @param taskStringArray the ArrayList\u003cString\u003e containing the user\u0027s input, split up by whitespace.","lastModifiedDate":"2022-02-02"},{"lineNumber":246,"author":{"gitId":"matheril"},"content":"     *                        The first element of this list should contain the subclass of task to be constructed.","lastModifiedDate":"2022-02-02"},{"lineNumber":247,"author":{"gitId":"matheril"},"content":"     * @return a subclass of Task determined by the first element of taskStringArray.","lastModifiedDate":"2022-02-02"},{"lineNumber":248,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":249,"author":{"gitId":"matheril"},"content":"    private Task buildTask(ArrayList\u003cString\u003e taskStringArray) throws DukeException {","lastModifiedDate":"2022-02-10"},{"lineNumber":250,"author":{"gitId":"matheril"},"content":"        String taskType \u003d taskStringArray.get(0);","lastModifiedDate":"2022-02-02"},{"lineNumber":251,"author":{"gitId":"matheril"},"content":"        ArrayList\u003cStringBuilder\u003e taskParts \u003d splitTask(taskStringArray);","lastModifiedDate":"2022-02-03"},{"lineNumber":252,"author":{"gitId":"matheril"},"content":"        validateTask(taskType, taskParts);","lastModifiedDate":"2022-02-10"},{"lineNumber":253,"author":{"gitId":"matheril"},"content":"        String prepositions \u003d String.valueOf(taskParts.get(taskParts.size() - 1));","lastModifiedDate":"2022-02-02"},{"lineNumber":254,"author":{"gitId":"matheril"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-02"},{"lineNumber":255,"author":{"gitId":"matheril"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2022-02-03"},{"lineNumber":256,"author":{"gitId":"matheril"},"content":"            return new ToDo(String.valueOf(taskParts.get(0)));","lastModifiedDate":"2022-02-02"},{"lineNumber":257,"author":{"gitId":"matheril"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2022-02-03"},{"lineNumber":258,"author":{"gitId":"matheril"},"content":"            return new Deadline(String.valueOf(taskParts.get(0)),","lastModifiedDate":"2022-02-09"},{"lineNumber":259,"author":{"gitId":"matheril"},"content":"                    String.valueOf(taskParts.get(1)),","lastModifiedDate":"2022-02-09"},{"lineNumber":260,"author":{"gitId":"matheril"},"content":"                    prepositions);","lastModifiedDate":"2022-02-09"},{"lineNumber":261,"author":{"gitId":"matheril"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2022-02-03"},{"lineNumber":262,"author":{"gitId":"matheril"},"content":"            return new Event(String.valueOf(taskParts.get(0)),","lastModifiedDate":"2022-02-09"},{"lineNumber":263,"author":{"gitId":"matheril"},"content":"                    String.valueOf(taskParts.get(1)),","lastModifiedDate":"2022-02-09"},{"lineNumber":264,"author":{"gitId":"matheril"},"content":"                    prepositions);","lastModifiedDate":"2022-02-09"},{"lineNumber":265,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":266,"author":{"gitId":"matheril"},"content":"        return null;","lastModifiedDate":"2022-02-02"},{"lineNumber":267,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":268,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":269,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":270,"author":{"gitId":"matheril"},"content":"     * Validates the input of the task to check for user error.","lastModifiedDate":"2022-02-10"},{"lineNumber":271,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":272,"author":{"gitId":"matheril"},"content":"     * @param taskType  the type of task (todo, deadline etc).","lastModifiedDate":"2022-02-10"},{"lineNumber":273,"author":{"gitId":"matheril"},"content":"     * @param taskParts the list of components that form the task.","lastModifiedDate":"2022-02-10"},{"lineNumber":274,"author":{"gitId":"matheril"},"content":"     * @throws DukeException error message if task is invalid","lastModifiedDate":"2022-02-10"},{"lineNumber":275,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":276,"author":{"gitId":"matheril"},"content":"    private void validateTask(String taskType, ArrayList\u003cStringBuilder\u003e taskParts) throws DukeException {","lastModifiedDate":"2022-02-10"},{"lineNumber":277,"author":{"gitId":"matheril"},"content":"        if (taskParts.isEmpty()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":278,"author":{"gitId":"matheril"},"content":"            throw new DukeException(\"The description of a \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":279,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":280,"author":{"gitId":"matheril"},"content":"        String prepositions \u003d String.valueOf(taskParts.get(taskParts.size() - 1));","lastModifiedDate":"2022-02-10"},{"lineNumber":281,"author":{"gitId":"matheril"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-10"},{"lineNumber":282,"author":{"gitId":"matheril"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2022-02-10"},{"lineNumber":283,"author":{"gitId":"matheril"},"content":"            if (!prepositions.isEmpty()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":284,"author":{"gitId":"matheril"},"content":"                throw new DukeException(\"Todo tasks cannot include the preposition \" + prepositions +\" in the description.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":285,"author":{"gitId":"matheril"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":286,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":287,"author":{"gitId":"matheril"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2022-02-10"},{"lineNumber":288,"author":{"gitId":"matheril"},"content":"            if (taskParts.get(0).toString().equals(\"\")","lastModifiedDate":"2022-02-10"},{"lineNumber":289,"author":{"gitId":"matheril"},"content":"                    || taskParts.get(1).toString().equals(\"\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":290,"author":{"gitId":"matheril"},"content":"                throw new DukeException(\"The description or deadline is incomplete.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":291,"author":{"gitId":"matheril"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":292,"author":{"gitId":"matheril"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":293,"author":{"gitId":"matheril"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2022-02-10"},{"lineNumber":294,"author":{"gitId":"matheril"},"content":"            if (taskParts.get(0).toString().equals(\"\") || taskParts.get(1).toString().equals(\"\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":295,"author":{"gitId":"matheril"},"content":"                throw new DukeException(\"The description or time of event is incomplete.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":296,"author":{"gitId":"matheril"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":297,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":298,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":299,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":300,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":301,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":302,"author":{"gitId":"matheril"},"content":"     * Splits an ArrayList\u003cString\u003e into an ArrayList\u003cStringBuilder\u003e, where each element","lastModifiedDate":"2022-02-02"},{"lineNumber":303,"author":{"gitId":"matheril"},"content":"     * can be used to construct a subclass of Task. Use this in conjunction with buildTask to construct a","lastModifiedDate":"2022-02-03"},{"lineNumber":304,"author":{"gitId":"matheril"},"content":"     * subclass of Task.","lastModifiedDate":"2022-02-02"},{"lineNumber":305,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":306,"author":{"gitId":"matheril"},"content":"     * @param input ArrayList of Strings that represent the user\u0027s input split by whitespace.","lastModifiedDate":"2022-02-02"},{"lineNumber":307,"author":{"gitId":"matheril"},"content":"     * @return an ArrayList\u003cStringBuilder\u003e containing the input split by the \u0027/\u0027 character.","lastModifiedDate":"2022-02-02"},{"lineNumber":308,"author":{"gitId":"matheril"},"content":"     * Each element represents a String used to construct the task.","lastModifiedDate":"2022-02-02"},{"lineNumber":309,"author":{"gitId":"matheril"},"content":"     * The last element contains all prepositions used in a single string.","lastModifiedDate":"2022-02-02"},{"lineNumber":310,"author":{"gitId":"matheril"},"content":"     * e.g.: deadline return book /by Sunday /at library returns the following Arraylist:","lastModifiedDate":"2022-02-02"},{"lineNumber":311,"author":{"gitId":"matheril"},"content":"     * {\"return book\", \"Sunday\", \"Library\", \"/by/at\"}","lastModifiedDate":"2022-02-02"},{"lineNumber":312,"author":{"gitId":"matheril"},"content":"     * returns an empty list if input contains only a command.","lastModifiedDate":"2022-02-10"},{"lineNumber":313,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":314,"author":{"gitId":"matheril"},"content":"    private ArrayList\u003cStringBuilder\u003e splitTask(ArrayList\u003cString\u003e input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":315,"author":{"gitId":"matheril"},"content":"        /* taskPartsIterator increments when a String containing \u0027/\u0027 is encountered.","lastModifiedDate":"2022-02-02"},{"lineNumber":316,"author":{"gitId":"matheril"},"content":"         * inputIterator increments after each String in input is read.","lastModifiedDate":"2022-02-02"},{"lineNumber":317,"author":{"gitId":"matheril"},"content":"         * The loop ends when inputIterator exceeds the size of the ArrayList, indicating that all","lastModifiedDate":"2022-02-02"},{"lineNumber":318,"author":{"gitId":"matheril"},"content":"         * Strings in input have been read.","lastModifiedDate":"2022-02-02"},{"lineNumber":319,"author":{"gitId":"matheril"},"content":"         */","lastModifiedDate":"2022-02-02"},{"lineNumber":320,"author":{"gitId":"matheril"},"content":"        ArrayList\u003cStringBuilder\u003e taskParts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":321,"author":{"gitId":"matheril"},"content":"        if (input.size() \u003c\u003d 1) {","lastModifiedDate":"2022-02-10"},{"lineNumber":322,"author":{"gitId":"matheril"},"content":"            return taskParts;","lastModifiedDate":"2022-02-10"},{"lineNumber":323,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":324,"author":{"gitId":"matheril"},"content":"        StringBuilder prepositions \u003d new StringBuilder();","lastModifiedDate":"2022-02-02"},{"lineNumber":325,"author":{"gitId":"matheril"},"content":"        for (int taskPartsIterator \u003d 0, inputIterator \u003d 0; inputIterator \u003c input.size(); ++taskPartsIterator) {","lastModifiedDate":"2022-02-02"},{"lineNumber":326,"author":{"gitId":"matheril"},"content":"            String finalWord \u003d input.get(inputIterator);","lastModifiedDate":"2022-02-02"},{"lineNumber":327,"author":{"gitId":"matheril"},"content":"            if (finalWord.startsWith(\"/\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":328,"author":{"gitId":"matheril"},"content":"                prepositions.append(finalWord);","lastModifiedDate":"2022-02-02"},{"lineNumber":329,"author":{"gitId":"matheril"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":330,"author":{"gitId":"matheril"},"content":"            inputIterator++;","lastModifiedDate":"2022-02-02"},{"lineNumber":331,"author":{"gitId":"matheril"},"content":"            taskParts.add(new StringBuilder());","lastModifiedDate":"2022-02-02"},{"lineNumber":332,"author":{"gitId":"matheril"},"content":"            for (; inputIterator \u003c input.size()","lastModifiedDate":"2022-02-09"},{"lineNumber":333,"author":{"gitId":"matheril"},"content":"                    \u0026\u0026 !input.get(inputIterator).startsWith(\"/\"); ++inputIterator) {","lastModifiedDate":"2022-02-09"},{"lineNumber":334,"author":{"gitId":"matheril"},"content":"                taskParts.get(taskPartsIterator).append(input.get(inputIterator)).append(\" \");","lastModifiedDate":"2022-02-02"},{"lineNumber":335,"author":{"gitId":"matheril"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":336,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":337,"author":{"gitId":"matheril"},"content":"        taskParts.add(prepositions);","lastModifiedDate":"2022-02-02"},{"lineNumber":338,"author":{"gitId":"matheril"},"content":"        return taskParts;","lastModifiedDate":"2022-02-02"},{"lineNumber":339,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":340,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":341,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":342,"author":{"gitId":"matheril"},"content":"     * Prints all tasks stored in memory by addTask(Task) to stdout","lastModifiedDate":"2022-02-02"},{"lineNumber":343,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":344,"author":{"gitId":"matheril"},"content":"    private void listTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":345,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":346,"author":{"gitId":"matheril"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":347,"author":{"gitId":"matheril"},"content":"        printTasks();","lastModifiedDate":"2022-02-09"},{"lineNumber":348,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-02-09"},{"lineNumber":349,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":350,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":351,"author":{"gitId":"matheril"},"content":"    private void printTasks() {","lastModifiedDate":"2022-02-09"},{"lineNumber":352,"author":{"gitId":"matheril"},"content":"        for (int i \u003d 1; i \u003c\u003d this.tasks.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":353,"author":{"gitId":"matheril"},"content":"            System.out.println(i + \".\" + this.tasks.get(i - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":354,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":355,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":356,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":357,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":358,"author":{"gitId":"matheril"},"content":"     * Marks the task selected by the user as done. Tasks are selected by their visual index on the list","lastModifiedDate":"2022-01-26"},{"lineNumber":359,"author":{"gitId":"matheril"},"content":"     * (starting from 1, not 0) and not by name.","lastModifiedDate":"2022-01-26"},{"lineNumber":360,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":361,"author":{"gitId":"matheril"},"content":"     * @param task The index of the task to be marked done.","lastModifiedDate":"2022-01-26"},{"lineNumber":362,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":363,"author":{"gitId":"matheril"},"content":"    private void doTask(String task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":364,"author":{"gitId":"matheril"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":365,"author":{"gitId":"matheril"},"content":"            System.out.println((\"Task to be done is null.\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":366,"author":{"gitId":"matheril"},"content":"            return;","lastModifiedDate":"2022-01-26"},{"lineNumber":367,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":368,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":369,"author":{"gitId":"matheril"},"content":"            this.tasks.get(Integer.parseInt(task) - 1).doTask();","lastModifiedDate":"2022-01-26"},{"lineNumber":370,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":371,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":372,"author":{"gitId":"matheril"},"content":"            System.out.println(this.tasks.get(Integer.parseInt(task) - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":373,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":374,"author":{"gitId":"matheril"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":375,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":376,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":377,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":378,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":379,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":380,"author":{"gitId":"matheril"},"content":"     * Marks the task selected by the user as undone. Tasks are selected by their visual index on the list","lastModifiedDate":"2022-01-26"},{"lineNumber":381,"author":{"gitId":"matheril"},"content":"     * (starting from 1, not 0) and not by name.","lastModifiedDate":"2022-01-26"},{"lineNumber":382,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":383,"author":{"gitId":"matheril"},"content":"     * @param task The index of the task to be marked done.","lastModifiedDate":"2022-01-26"},{"lineNumber":384,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":385,"author":{"gitId":"matheril"},"content":"    private void undoTask(String task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":386,"author":{"gitId":"matheril"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":387,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: Task to be undone is null.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":388,"author":{"gitId":"matheril"},"content":"            return;","lastModifiedDate":"2022-01-26"},{"lineNumber":389,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":390,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":391,"author":{"gitId":"matheril"},"content":"            this.tasks.get(Integer.parseInt(task) - 1).undoTask();","lastModifiedDate":"2022-01-26"},{"lineNumber":392,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":393,"author":{"gitId":"matheril"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":394,"author":{"gitId":"matheril"},"content":"            System.out.println(this.tasks.get(Integer.parseInt(task) - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":395,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":396,"author":{"gitId":"matheril"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":397,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":398,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":399,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":400,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":401,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":402,"author":{"gitId":"matheril"},"content":"     * Deletes a task based on its visual index in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":403,"author":{"gitId":"matheril"},"content":"      * @param task","lastModifiedDate":"2022-02-16"},{"lineNumber":404,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":405,"author":{"gitId":"matheril"},"content":"    private void deleteTask(String task) {","lastModifiedDate":"2022-02-16"},{"lineNumber":406,"author":{"gitId":"matheril"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2022-02-16"},{"lineNumber":407,"author":{"gitId":"matheril"},"content":"            System.out.println((\"Task to be done is null.\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":408,"author":{"gitId":"matheril"},"content":"            return;","lastModifiedDate":"2022-02-16"},{"lineNumber":409,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":410,"author":{"gitId":"matheril"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":411,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-02-16"},{"lineNumber":412,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-02-16"},{"lineNumber":413,"author":{"gitId":"matheril"},"content":"            System.out.println(this.tasks.get(Integer.parseInt(task) - 1));","lastModifiedDate":"2022-02-16"},{"lineNumber":414,"author":{"gitId":"matheril"},"content":"            this.tasks.remove(Integer.parseInt(task) - 1);","lastModifiedDate":"2022-02-16"},{"lineNumber":415,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":416,"author":{"gitId":"matheril"},"content":"            printDivider();","lastModifiedDate":"2022-02-16"},{"lineNumber":417,"author":{"gitId":"matheril"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":418,"author":{"gitId":"matheril"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-02-16"},{"lineNumber":419,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":420,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":421,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":422,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":423,"author":{"gitId":"matheril"},"content":"     * Replaces the save file with the current list of tasks.","lastModifiedDate":"2022-02-16"},{"lineNumber":424,"author":{"gitId":"matheril"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-16"},{"lineNumber":425,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":426,"author":{"gitId":"matheril"},"content":"    private void updateSaveFile() throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":427,"author":{"gitId":"matheril"},"content":"        FileWriter fileToWriteTo \u003d new FileWriter(new File(\"data/duke.txt\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":428,"author":{"gitId":"matheril"},"content":"        String saveFile \u003d \"\";","lastModifiedDate":"2022-02-16"},{"lineNumber":429,"author":{"gitId":"matheril"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2022-02-16"},{"lineNumber":430,"author":{"gitId":"matheril"},"content":"            saveFile +\u003d (taskToString(task) + System.lineSeparator());","lastModifiedDate":"2022-02-16"},{"lineNumber":431,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":432,"author":{"gitId":"matheril"},"content":"        fileToWriteTo.write(saveFile);","lastModifiedDate":"2022-02-16"},{"lineNumber":433,"author":{"gitId":"matheril"},"content":"        fileToWriteTo.close();","lastModifiedDate":"2022-02-16"},{"lineNumber":434,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":435,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":436,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":437,"author":{"gitId":"matheril"},"content":"     * Turns a task into a String that can be written to the save file.","lastModifiedDate":"2022-02-16"},{"lineNumber":438,"author":{"gitId":"matheril"},"content":"     * @param task The task to be converted.","lastModifiedDate":"2022-02-16"},{"lineNumber":439,"author":{"gitId":"matheril"},"content":"     * @return A String in save file format.","lastModifiedDate":"2022-02-16"},{"lineNumber":440,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":441,"author":{"gitId":"matheril"},"content":"    private String taskToString(Task task) {","lastModifiedDate":"2022-02-16"},{"lineNumber":442,"author":{"gitId":"matheril"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2022-02-16"},{"lineNumber":443,"author":{"gitId":"matheril"},"content":"            return taskToString((ToDo) task);","lastModifiedDate":"2022-02-16"},{"lineNumber":444,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":445,"author":{"gitId":"matheril"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2022-02-16"},{"lineNumber":446,"author":{"gitId":"matheril"},"content":"            return taskToString((Deadline) task);","lastModifiedDate":"2022-02-16"},{"lineNumber":447,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":448,"author":{"gitId":"matheril"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2022-02-16"},{"lineNumber":449,"author":{"gitId":"matheril"},"content":"            return taskToString((Event) task);","lastModifiedDate":"2022-02-16"},{"lineNumber":450,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":451,"author":{"gitId":"matheril"},"content":"        return null;","lastModifiedDate":"2022-02-16"},{"lineNumber":452,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":453,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":454,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":455,"author":{"gitId":"matheril"},"content":"     * Turns a ToDo into save file String format.","lastModifiedDate":"2022-02-16"},{"lineNumber":456,"author":{"gitId":"matheril"},"content":"     * @param task the ToDo to be converted.","lastModifiedDate":"2022-02-16"},{"lineNumber":457,"author":{"gitId":"matheril"},"content":"     * @return a String in save file format.","lastModifiedDate":"2022-02-16"},{"lineNumber":458,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":459,"author":{"gitId":"matheril"},"content":"    private String taskToString(ToDo task) {","lastModifiedDate":"2022-02-16"},{"lineNumber":460,"author":{"gitId":"matheril"},"content":"        String ret \u003d \"T|\";","lastModifiedDate":"2022-02-16"},{"lineNumber":461,"author":{"gitId":"matheril"},"content":"        if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":462,"author":{"gitId":"matheril"},"content":"            ret +\u003d \"1|\";","lastModifiedDate":"2022-02-16"},{"lineNumber":463,"author":{"gitId":"matheril"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":464,"author":{"gitId":"matheril"},"content":"            ret +\u003d \"0|\";","lastModifiedDate":"2022-02-16"},{"lineNumber":465,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":466,"author":{"gitId":"matheril"},"content":"        ret +\u003d task.getDescription();","lastModifiedDate":"2022-02-16"},{"lineNumber":467,"author":{"gitId":"matheril"},"content":"        return ret;","lastModifiedDate":"2022-02-16"},{"lineNumber":468,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":469,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":470,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":471,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":472,"author":{"gitId":"matheril"},"content":"     * Turns a Deadline into save file String format.","lastModifiedDate":"2022-02-16"},{"lineNumber":473,"author":{"gitId":"matheril"},"content":"     * @param task the Deadline to be converted.","lastModifiedDate":"2022-02-16"},{"lineNumber":474,"author":{"gitId":"matheril"},"content":"     * @return a String in save file format.","lastModifiedDate":"2022-02-16"},{"lineNumber":475,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":476,"author":{"gitId":"matheril"},"content":"    private String taskToString(Deadline task) {","lastModifiedDate":"2022-02-16"},{"lineNumber":477,"author":{"gitId":"matheril"},"content":"        String ret \u003d \"D|\";","lastModifiedDate":"2022-02-16"},{"lineNumber":478,"author":{"gitId":"matheril"},"content":"        if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":479,"author":{"gitId":"matheril"},"content":"            ret +\u003d \"1|\";","lastModifiedDate":"2022-02-16"},{"lineNumber":480,"author":{"gitId":"matheril"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":481,"author":{"gitId":"matheril"},"content":"            ret +\u003d \"0|\";","lastModifiedDate":"2022-02-16"},{"lineNumber":482,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":483,"author":{"gitId":"matheril"},"content":"        ret +\u003d (task.getDescription() + \"|\");","lastModifiedDate":"2022-02-16"},{"lineNumber":484,"author":{"gitId":"matheril"},"content":"        ret +\u003d (task.getTiming() + \"|\");","lastModifiedDate":"2022-02-16"},{"lineNumber":485,"author":{"gitId":"matheril"},"content":"        ret +\u003d (task.getPrepositions());","lastModifiedDate":"2022-02-16"},{"lineNumber":486,"author":{"gitId":"matheril"},"content":"        return ret;","lastModifiedDate":"2022-02-16"},{"lineNumber":487,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":488,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":489,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":490,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":491,"author":{"gitId":"matheril"},"content":"     * Turns a Event into save file String format.","lastModifiedDate":"2022-02-16"},{"lineNumber":492,"author":{"gitId":"matheril"},"content":"     * @param task the Event to be converted.","lastModifiedDate":"2022-02-16"},{"lineNumber":493,"author":{"gitId":"matheril"},"content":"     * @return a String in save file format.","lastModifiedDate":"2022-02-16"},{"lineNumber":494,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":495,"author":{"gitId":"matheril"},"content":"    private String taskToString(Event task) {","lastModifiedDate":"2022-02-16"},{"lineNumber":496,"author":{"gitId":"matheril"},"content":"        String ret \u003d \"E|\";","lastModifiedDate":"2022-02-17"},{"lineNumber":497,"author":{"gitId":"matheril"},"content":"        if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":498,"author":{"gitId":"matheril"},"content":"            ret +\u003d \"1|\";","lastModifiedDate":"2022-02-16"},{"lineNumber":499,"author":{"gitId":"matheril"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":500,"author":{"gitId":"matheril"},"content":"            ret +\u003d \"0|\";","lastModifiedDate":"2022-02-16"},{"lineNumber":501,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":502,"author":{"gitId":"matheril"},"content":"        ret +\u003d (task.getDescription() + \"|\");","lastModifiedDate":"2022-02-16"},{"lineNumber":503,"author":{"gitId":"matheril"},"content":"        ret +\u003d (task.getTiming() + \"|\");","lastModifiedDate":"2022-02-16"},{"lineNumber":504,"author":{"gitId":"matheril"},"content":"        ret +\u003d (task.getPrepositions());","lastModifiedDate":"2022-02-16"},{"lineNumber":505,"author":{"gitId":"matheril"},"content":"        return ret;","lastModifiedDate":"2022-02-16"},{"lineNumber":506,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":507,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":508,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":509,"author":{"gitId":"matheril"},"content":"     * Prints a goodbye message and returns.","lastModifiedDate":"2022-01-25"},{"lineNumber":510,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":511,"author":{"gitId":"matheril"},"content":"    private void printGoodbye() {","lastModifiedDate":"2022-01-26"},{"lineNumber":512,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":513,"author":{"gitId":"matheril"},"content":"        System.out.println(\"Goodbye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":514,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":515,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":516,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":517,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":518,"author":{"gitId":"matheril"},"content":"     * Prints 37 underscores to stdout to serve as a divider.","lastModifiedDate":"2022-01-25"},{"lineNumber":519,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":520,"author":{"gitId":"matheril"},"content":"    private void printDivider() {","lastModifiedDate":"2022-01-26"},{"lineNumber":521,"author":{"gitId":"matheril"},"content":"        System.out.println(\"_____________________________________\");","lastModifiedDate":"2022-01-25"},{"lineNumber":522,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":523,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":524,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":525,"author":{"gitId":"matheril"},"content":"     * Prints a greeting with divider lines.","lastModifiedDate":"2022-01-25"},{"lineNumber":526,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":527,"author":{"gitId":"matheril"},"content":"    private void printGreeting() {","lastModifiedDate":"2022-01-27"},{"lineNumber":528,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":529,"author":{"gitId":"matheril"},"content":"        System.out.println(\"Hello! I\u0027m Michel.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":530,"author":{"gitId":"matheril"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-25"},{"lineNumber":531,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-01-26"},{"lineNumber":532,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":533,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"matheril":533}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"package duke.exception;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"    private String errorMessage;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"        super(errorMessage);","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"matheril":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":" * Example: deadline return book /by June 6th","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":" * description: \"return book\"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":" * by: \"June 6th\"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":" * preposition: \"/by\"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"    protected String by;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"    protected String preposition;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"    public Deadline(String description, String by, String preposition) {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"        super(description.trim());","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"        this.by \u003d by.trim();","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"        this.preposition \u003d preposition.substring(1);","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"    public String getTiming() {","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"        return this.by;","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"    public String getPrepositions() {","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"        return \"/\" + this.preposition;","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"        return String.format(\"[D]%s (%s: %s)\", super.toString(), preposition, by);","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"matheril":32}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":" * Example: event company meeting /at 2-4pm, June 8th","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":" * description: \"company meeting\"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":" * by: \"2-4pm, June 8th\"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":" * preposition: \"/at\"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"    protected String at;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"    protected String preposition;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"    public Event(String description, String at, String preposition) {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"        super(description.trim());","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"        this.at \u003d at.trim();","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"        this.preposition \u003d preposition.substring(1);","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"    public String getTiming() {","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"        return this.at;","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"    public String getPrepositions() {","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"        return \"/\" + this.preposition;","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"        return String.format(\"[E]%s (%s: %s)\", super.toString(), preposition, at);","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"matheril":31}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"public class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"    protected String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"     * Returns a String indicating if the task is done or not.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"     * @return \"X\" if task is done, \" \" if otherwise","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"    public void doTask() {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"    public void undoTask() {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"        return this.description;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"matheril"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"matheril"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"matheril"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"matheril":36}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"package duke.task;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":" * Example: todo read book","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":" * description: \"read book\"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"        super(description.trim());","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"    public String toString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"matheril":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"matheril"},"content":"todo read book","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"todo join sports club","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"todo borrow book","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"mark 1","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"mark 4","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"list","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"bye","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"todo","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"todo /by","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"deadline","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"deadline /by","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"deadline test /by","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"deadline /by test","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"deadline test /by test","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"event /at","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"event test /at","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"event /at test","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"event test /at test","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"matheril":21}}]
