[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"# Maahes Duke ","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"* This is a Command Line Interface (CLI) Task Management application. ","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"* It\u0027s named _Maahes Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"## Starting the program","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"**Using IntelliJ**","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"4. Locate the `src/main/java/Duke.java` file. Right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). ","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"5. The application now should run in the console.","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"6. Now you can interact with the program in the console.","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"**Using Command Line**","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"1. \u0027Build\u0027 the project using IntelliJ.","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"2. Open the `Terminal`/`Command Prompt`.","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"3. `cd` into the project\u0027s `out\\production\\IP` directory","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"4. Type `java Duke`, then press enter to execute.","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"5. Now you can interact with the program through the CLI.","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"## Supported commands","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"1. **Viewing help: `help`**","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"   * Format: `help`","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"2. **Adding a todo task: `todo`**","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"   * Add a todo task to the list of tasks.","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"ElaineQT"},"content":"   * Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"ElaineQT"},"content":"   * Words inside `\u003c \u003e` are parameters. There is no need to type the `\u003c` and `\u003e`.","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"ElaineQT"},"content":"   * Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"ElaineQT"},"content":"     * `todo Read textbook`","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"ElaineQT"},"content":"3. **Adding a deadline task: `deadline`**","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"ElaineQT"},"content":"   * Add a deadline task to the list of tasks.","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"ElaineQT"},"content":"   * Format: `deadline \u003ctask\u003e /by \u003cyyyy-MM-dd HH:mm\u003e`","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"ElaineQT"},"content":"   * Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"ElaineQT"},"content":"     * `deadline Submit lab report /by 2022-03-05 23:59`","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"ElaineQT"},"content":"   ","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"ElaineQT"},"content":"4. **Adding a event task: `event`**","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"ElaineQT"},"content":"   * Add an event task to the list of tasks.","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"ElaineQT"},"content":"   * Format: `event \u003ctask\u003e /at \u003cyyyy-MM-dd HH:mm\u003e`","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"ElaineQT"},"content":"   * Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"ElaineQT"},"content":"     * `event Attend meeting /at 2022-03-29 14:00`","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"ElaineQT"},"content":"5. **Listing all tasks: `list`**","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"ElaineQT"},"content":"   * Display the entire list of tasks.","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"ElaineQT"},"content":"   * Format: `list`","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"ElaineQT"},"content":"6. **Finding all tasks containing a keyword in their description: `find`**","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"ElaineQT"},"content":"   * Find all the tasks whose description contains the specified keyword.","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"ElaineQT"},"content":"   * Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"ElaineQT"},"content":"   * Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"ElaineQT"},"content":"     * `find meeting` + ","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"ElaineQT"},"content":"      Returns all tasks containing `meeting` in description.","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"ElaineQT"},"content":"7. **Deleting a task: `delete`**","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"ElaineQT"},"content":"   * Delete a task by specifying the index of it.","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"ElaineQT"},"content":"   * Format: `delete \u003cindex\u003e`","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"ElaineQT"},"content":"   * Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"ElaineQT"},"content":"     * `delete 2` +","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"ElaineQT"},"content":"      Deletes the second task in the task list.","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"ElaineQT"},"content":"8. **Marking a task: `mark`**","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"ElaineQT"},"content":"   * Mark a task as done by specifying the index of it.","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"ElaineQT"},"content":"   * Format: `mark \u003cindex\u003e`","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"ElaineQT"},"content":"   * Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"ElaineQT"},"content":"      * `mark 3` +","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"ElaineQT"},"content":"        Marks the third task in the task list as done.","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"ElaineQT"},"content":"9. **Marking a task: `unmark`**","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"ElaineQT"},"content":"   * Unmark a task as not done yet by specifying the index of it.","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"ElaineQT"},"content":"   * Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"ElaineQT"},"content":"   * Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"ElaineQT"},"content":"      * `mark 1` +","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"ElaineQT"},"content":"        Unmark the first task in the task list.","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"ElaineQT"},"content":"      ","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"ElaineQT"},"content":"10. **Exiting the program: `bye`**","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"ElaineQT"},"content":"    * Exit the program.","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"ElaineQT"},"content":"      * Format: `bye`","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"ElaineQT":80,"-":7}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"import commands.Command;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"import common.DukeException;","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import parser.Parser;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"    public Duke() {","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"        fileManager \u003d new FileManager();","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"            taskManager \u003d new TaskManager(fileManager.loadData());","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"            taskManager \u003d new TaskManager();","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"        ui \u003d new Ui(taskManager);","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"     * Reads user input command and executes the command repeatedly.","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"     * Stops and exits when the command is an exit command.","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"ElaineQT"},"content":"    public void run() {","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"ElaineQT"},"content":"        ui.showGreetingMessage();","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"ElaineQT"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"ElaineQT"},"content":"        while (!isExit) {","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"ElaineQT"},"content":"            try {","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"ElaineQT"},"content":"                String fullCommand \u003d ui.getUserCommand();","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"ElaineQT"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"ElaineQT"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"ElaineQT"},"content":"                c.execute(taskManager, fileManager, ui);","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"ElaineQT"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"ElaineQT"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"ElaineQT"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"ElaineQT"},"content":"            } finally {","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"ElaineQT"},"content":"                ui.showLine();","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"ElaineQT"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"ElaineQT"},"content":"        ui.showExitMessage();","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"ElaineQT"},"content":"        new Duke().run();","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ElaineQT":58,"-":4}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":" * Command to terminate the program.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"        isExit \u003d true;","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    public void execute(TaskManager taskManager, FileManager fileManager, Ui ui) {","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"        ui.showByeMessage();","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"ElaineQT":21}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":" * Represents a general executable command.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"public abstract class Command {","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"    protected boolean isExit;","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"    public Command() {","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"     * Execute the command.","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"     * @param taskManager","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"     * @param fileManager","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"     * @param ui","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"    public abstract void execute(TaskManager taskManager, FileManager fileManager, Ui ui);","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"     * Indicate whether the command is an exit command, which terminates the application.","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"     * @return true if the command is exit command.","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"        return isExit;","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"ElaineQT":34}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import data.Deadline;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":" * Command to add a deadline task.","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"    private Deadline toAdd;","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    public DeadlineCommand(String description, LocalDateTime by) {","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"        toAdd \u003d new Deadline(description, by);","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"        isExit \u003d false;","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"    public void execute(TaskManager taskManager, FileManager fileManager, Ui ui) {","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"        taskManager.addTask(toAdd);","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"            fileManager.saveData(taskManager.getAllTasks());","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"            System.out.println(\"\\t Error: Failed to save data.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"        ui.showNewTask(toAdd);","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"ElaineQT":33}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import common.DukeException;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import data.Task;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":" * Command to delete a task using the last displayed index.","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"    int idx;","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"    public void execute(TaskManager taskManager, FileManager fileManager, Ui ui) {","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"            Task deletedTask \u003d taskManager.getTask(idx);","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"            taskManager.deleteTask(idx);","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"            ui.showRemovedTask(deletedTask);","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"            fileManager.saveData(taskManager.getAllTasks());","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"            System.out.println(\"\\t Error: Failed to save data.\");","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"ElaineQT":35}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import data.Event;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":" * Command to add an event task.","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"    private Event toAdd;","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    public EventCommand(String description, LocalDateTime at) {","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"        toAdd \u003d new Event(description, at);","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"        isExit \u003d false;","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"    public void execute(TaskManager taskManager, FileManager fileManager, Ui ui) {","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"        taskManager.addTask(toAdd);","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"            fileManager.saveData(taskManager.getAllTasks());","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"            System.out.println(\"\\t Error: Failed to save data.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"        ui.showNewTask(toAdd);","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"ElaineQT":33}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import common.DukeException;","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import data.Task;","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":" * Command to find and list all tasks whose description contains the specified keyword.","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"    private String keyword;","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    public FindCommand (String keyword) {","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"    public void execute(TaskManager taskManager, FileManager fileManager, Ui ui) {","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"            ArrayList\u003cInteger\u003e results \u003d taskManager.findTask(keyword);","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"            ui.showFoundResults(results);","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"ElaineQT":31}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":" * Command to display supported instructions.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"    public void execute(TaskManager taskManager, FileManager fileManager, Ui ui) {","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"        ui.showSupportedCommand();","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"ElaineQT":17}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import data.Task;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":" * Command to view all tasks.","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"    public ListCommand() {","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"        isExit \u003d false;","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"    public void execute(TaskManager taskManager, FileManager fileManager, Ui ui) {","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskManager.getAllTasks();","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"        ui.listAllTasks(tasks);","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"ElaineQT":25}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import common.DukeException;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":" * Command to mark a task as done using the last displayed index.","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    int idx;","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"    public MarkCommand(int idx) {","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"    public void execute(TaskManager taskManager, FileManager fileManager, Ui ui) {","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"            taskManager.markTask(idx);","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"            ui.showMarkedTask(idx);","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"            fileManager.saveData(taskManager.getAllTasks());","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"            System.exit(0);","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"ElaineQT":34}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import data.Todo;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":" * Command to add a todo task.","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"public class TodoCommand extends Command{","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    private Todo toAdd;","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"        toAdd \u003d new Todo(description);","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"        isExit \u003d false;","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"    public void execute(TaskManager taskManager, FileManager fileManager, Ui ui) {","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"        taskManager.addTask(toAdd);","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"            fileManager.saveData(taskManager.getAllTasks());","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"            System.out.println(\"\\t Error: Failed to save data.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"        ui.showNewTask(toAdd);","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"ElaineQT":32}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package commands;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import common.DukeException;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import storage.FileManager;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":" * Command to unmark a task as not done using the last displayed index.","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    int idx;","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"    public UnmarkCommand(int idx) {","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"    public void execute(TaskManager taskManager, FileManager fileManager, Ui ui) {","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"            taskManager.unmarkTask(idx);","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"            ui.showUnmarkedTask(idx);","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"            fileManager.saveData(taskManager.getAllTasks());","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"            System.out.println(\"\\t Error: Failed to save data.\");","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"ElaineQT":34}},{"path":"src/main/java/common/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package common;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"    public DukeException(String errorMessage){","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"        super(errorMessage);","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"ElaineQT":7}},{"path":"src/main/java/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package common;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":" * The container for user visible messages.","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"public class Messages {","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"    public static final String GREETING \u003d \"\\t\" + \"-\".repeat(60) + \"\\n\" +","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"            \"\\t Hello! I\u0027m Maahes\\n\" +","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"            \"\\t What can I do for you?\\n\" +","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"            \"\\t\" + \"-\".repeat(60);","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"    public static final String BYE \u003d \"\\t Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"    public static final String LINE \u003d \"\\t\" + \"-\".repeat(60);","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"    public static final String Exit \u003d \"\\t Thank you for using Maahes!\";","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"ElaineQT":17}},{"path":"src/main/java/data/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package data;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":" * Represents a deadline task with description and deadline date and time.","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"     * Class constructor.","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"     * @param description description of the deadline task","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"     * @param by description of the deadline task","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"     * Class constructor specifying whether the task is done.","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"     * @param description description of the deadline task","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"     * @param by description of the deadline task","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"ElaineQT"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"ElaineQT"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")) + \")\";","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"ElaineQT"},"content":"    public String getInfo(){","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"ElaineQT"},"content":"        return \"D / \" + super.isDone() + \" / \" + super.getDescription() + \" / \" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"ElaineQT":45}},{"path":"src/main/java/data/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package data;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":" * Represent an event task with description and the happening date and time of it.","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"     * Class constructor.","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"     * @param description description of the event task","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"     * @param at happening date and time of the event task","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"     * Class constructor specifying whether the task is done.","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"     * @param description description of the event task","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"     * @param at happening date and time of the event task","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"    public Event(String description, LocalDateTime at, boolean isDone) {","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"ElaineQT"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"ElaineQT"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")) + \")\";","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"ElaineQT"},"content":"    public String getInfo(){","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"ElaineQT"},"content":"        return \"E / \" + super.isDone() + \" / \" + super.getDescription() + \" / \" + at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"ElaineQT":45}},{"path":"src/main/java/data/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package data;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":" * Represents a general task with only description.","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"public class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"    private String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"     * Class constructor specifying the task description.","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"     * @param description description of the task","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"     * Class constructor specifying the task description and whether the task is done.","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"     * @param description description of the task","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"    public Task(String description, boolean isDone){","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"        return description;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ElaineQT"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"ElaineQT"},"content":"        return isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ElaineQT"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"ElaineQT"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ElaineQT"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"ElaineQT"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"ElaineQT"},"content":"     * Get the icon indicating whether the task is done.","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"ElaineQT"},"content":"     * @return \"X\" if the task is done.","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"ElaineQT"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"ElaineQT"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"ElaineQT"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"ElaineQT"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"ElaineQT"},"content":"     * Get information of the task that can be stored in data file.","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"ElaineQT"},"content":"     * @return information about the task.","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"ElaineQT"},"content":"    public String getInfo() {","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"ElaineQT"},"content":"        return \"U / \" + isDone + \" / \" + description;","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ElaineQT":74}},{"path":"src/main/java/data/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package data;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import common.DukeException;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":" * Contains and manages the entire list of tasks.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"public class TaskManager {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"     * Class constructor that creates a new task list.","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"    public TaskManager() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"     * Class constructor that creates the task list with the given data.","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"     * @param tasks the given tasks","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"    public TaskManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"     * Add a new task to the task list.","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"     * @param task the new task","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"        tasks.add(task);","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"ElaineQT"},"content":"     * Get all tasks in the task list.","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"ElaineQT"},"content":"     * @return all tasks in the task list.","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"ElaineQT"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"ElaineQT"},"content":"        return tasks;","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"ElaineQT"},"content":"     * Get the total number of tasks stored in the task list.","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"ElaineQT"},"content":"     * @return the total number of tasks.","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"ElaineQT"},"content":"    public int getNoOfTasks () {","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"ElaineQT"},"content":"        return tasks.size();","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"ElaineQT"},"content":"     * Get the task with a specific index.","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"ElaineQT"},"content":"     * @param idx the index of the desired task","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"ElaineQT"},"content":"     * @return the task at specified index","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"ElaineQT"},"content":"     * @throws DukeException if the index is out of bound.","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"ElaineQT"},"content":"    public Task getTask(int idx) throws DukeException {","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"ElaineQT"},"content":"        if(idx \u003c\u003d 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Index out of bound. Failed to get task \" + idx + \".\");","lastModifiedDate":"2022-03-01"},{"lineNumber":66,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"ElaineQT"},"content":"        return tasks.get(idx - 1);","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"ElaineQT"},"content":"     * Delete the task with a specific index.","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"ElaineQT"},"content":"     * @param idx the index of the task to be deleted","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"ElaineQT"},"content":"     * @throws DukeException if the index is out of bound.","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"ElaineQT"},"content":"    public void deleteTask(int idx) throws DukeException{","lastModifiedDate":"2022-03-01"},{"lineNumber":78,"author":{"gitId":"ElaineQT"},"content":"        if(idx \u003c\u003d 0 || idx \u003e tasks.size()){","lastModifiedDate":"2022-03-01"},{"lineNumber":79,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Task index out of bound. I cannot delete task \" + idx + \".\");","lastModifiedDate":"2022-03-01"},{"lineNumber":80,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":81,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":82,"author":{"gitId":"ElaineQT"},"content":"        tasks.remove(idx - 1);","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"ElaineQT"},"content":"     * Mark the task as done with a specific index.","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"ElaineQT"},"content":"     * @param idx the index of the task to be marked as done","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"ElaineQT"},"content":"     * @throws DukeException if the index is out of bound.","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"ElaineQT"},"content":"    public void markTask(int idx) throws DukeException {","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"ElaineQT"},"content":"        if(idx \u003c\u003d 0 || idx \u003e tasks.size()){","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Task index out of bound. I cannot mark task \" + idx + \".\");","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"ElaineQT"},"content":"        tasks.get(idx-1).markAsDone();","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"ElaineQT"},"content":"     * Unmark the task as not done with a specific index.","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"ElaineQT"},"content":"     * @param idx the index of the task","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"ElaineQT"},"content":"     * @throws DukeException if the index is out of bound.","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"ElaineQT"},"content":"    public void unmarkTask(int idx) throws DukeException {","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"ElaineQT"},"content":"        if(idx \u003c\u003d 0 || idx \u003e tasks.size()){","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Task index out of bound. I cannot unmark task \" + idx + \".\");","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"ElaineQT"},"content":"        tasks.get(idx-1).unmark();","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":111,"author":{"gitId":"ElaineQT"},"content":"    public ArrayList\u003cInteger\u003e findTask(String keyword) {","lastModifiedDate":"2022-03-01"},{"lineNumber":112,"author":{"gitId":"ElaineQT"},"content":"        ArrayList\u003cInteger\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-01"},{"lineNumber":113,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":114,"author":{"gitId":"ElaineQT"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-03-01"},{"lineNumber":115,"author":{"gitId":"ElaineQT"},"content":"            if(tasks.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2022-03-01"},{"lineNumber":116,"author":{"gitId":"ElaineQT"},"content":"                results.add(i + 1);","lastModifiedDate":"2022-03-01"},{"lineNumber":117,"author":{"gitId":"ElaineQT"},"content":"            }","lastModifiedDate":"2022-03-01"},{"lineNumber":118,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"ElaineQT"},"content":"        return results;","lastModifiedDate":"2022-03-01"},{"lineNumber":121,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":122,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ElaineQT":122}},{"path":"src/main/java/data/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package data;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":" * Represents a todo task with only task description.","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"     * Class constructor.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"     * @param description description of the todo task","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"     * Class constructor specifying whether the task is done.","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"     * @param description description of the todo task","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"    public String toString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"    public String getInfo(){","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"ElaineQT"},"content":"        return \"T / \" + super.isDone() + \" / \" + super.getDescription();","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"ElaineQT":38}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package parser;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import commands.*;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import common.DukeException;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":" * Parses user input.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"public class Parser {","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"     * Parses user input into a command for execution","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"     * @param fullCommand the full user input command","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"     * @return the executable command corresponding to user input","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"     * @throws DukeException If the command format is incorrect","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"        fullCommand \u003d fullCommand.trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"        String[] splitCommands \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"        String commandWord \u003d splitCommands[0].trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"        String description;","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"        int idx;","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"        Command cmd;","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"            switch (commandWord) {","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"            case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"                description \u003d splitCommands[1].trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"                cmd \u003d prepareTodo(description);","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"            case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"                description \u003d splitCommands[1].trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"ElaineQT"},"content":"                cmd \u003d prepareDeadline(description);","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"ElaineQT"},"content":"            case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"ElaineQT"},"content":"                description \u003d splitCommands[1].trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"ElaineQT"},"content":"                cmd \u003d prepareEvent(description);","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"ElaineQT"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"ElaineQT"},"content":"                cmd \u003d new ListCommand();","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"ElaineQT"},"content":"            case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"ElaineQT"},"content":"                cmd \u003d new ByeCommand();","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"ElaineQT"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"ElaineQT"},"content":"                description \u003d splitCommands[1].trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"ElaineQT"},"content":"                idx \u003d Integer.parseInt(description);","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"ElaineQT"},"content":"                cmd \u003d new DeleteCommand(idx);","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"ElaineQT"},"content":"            case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"ElaineQT"},"content":"                description \u003d splitCommands[1].trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"ElaineQT"},"content":"                idx \u003d Integer.parseInt(description);","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"ElaineQT"},"content":"                cmd \u003d new MarkCommand(idx);","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"ElaineQT"},"content":"            case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"ElaineQT"},"content":"                description \u003d splitCommands[1].trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"ElaineQT"},"content":"                idx \u003d Integer.parseInt(description);","lastModifiedDate":"2022-03-01"},{"lineNumber":61,"author":{"gitId":"ElaineQT"},"content":"                cmd \u003d new UnmarkCommand(idx);","lastModifiedDate":"2022-03-01"},{"lineNumber":62,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"ElaineQT"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"ElaineQT"},"content":"                cmd \u003d new HelpCommand();","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"ElaineQT"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-01"},{"lineNumber":67,"author":{"gitId":"ElaineQT"},"content":"                description \u003d splitCommands[1].trim();","lastModifiedDate":"2022-03-01"},{"lineNumber":68,"author":{"gitId":"ElaineQT"},"content":"                cmd \u003d new FindCommand(description);","lastModifiedDate":"2022-03-01"},{"lineNumber":69,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-03-01"},{"lineNumber":70,"author":{"gitId":"ElaineQT"},"content":"            default:","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"ElaineQT"},"content":"                throw new DukeException(\"Sorry! I cannot read this command :(\\n\\t \"","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"ElaineQT"},"content":"                        + \"Type \\\"help\\\" to view supported command.\");","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"ElaineQT"},"content":"            }","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"ElaineQT"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-01"},{"lineNumber":75,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Index is not an integer.\");","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"ElaineQT"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-01"},{"lineNumber":77,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Sorry! The command format is incorrect :(\\n\\t \"","lastModifiedDate":"2022-03-01"},{"lineNumber":78,"author":{"gitId":"ElaineQT"},"content":"                    + \"Type \\\"help\\\" to view supported command.\");","lastModifiedDate":"2022-03-01"},{"lineNumber":79,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"ElaineQT"},"content":"        return cmd;","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"ElaineQT"},"content":"    private static Command prepareTodo(String description) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":85,"author":{"gitId":"ElaineQT"},"content":"        if(description.isEmpty()) {","lastModifiedDate":"2022-03-01"},{"lineNumber":86,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Todo description is unspecified.\");","lastModifiedDate":"2022-03-01"},{"lineNumber":87,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":88,"author":{"gitId":"ElaineQT"},"content":"        return new TodoCommand(description);","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"ElaineQT"},"content":"    private static Command prepareDeadline(String fullDescription) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":92,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-03-01"},{"lineNumber":93,"author":{"gitId":"ElaineQT"},"content":"            String[] descriptions \u003d fullDescription.split(\"/by\", 2);","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"ElaineQT"},"content":"            String description \u003d descriptions[0].trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"ElaineQT"},"content":"            String byStr \u003d descriptions[1].trim();","lastModifiedDate":"2022-03-01"},{"lineNumber":96,"author":{"gitId":"ElaineQT"},"content":"            if(description.isEmpty() || byStr.isEmpty()) {","lastModifiedDate":"2022-03-01"},{"lineNumber":97,"author":{"gitId":"ElaineQT"},"content":"                throw new DukeException(\"Deadline description is unspecified.\");","lastModifiedDate":"2022-03-01"},{"lineNumber":98,"author":{"gitId":"ElaineQT"},"content":"            }","lastModifiedDate":"2022-03-01"},{"lineNumber":99,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":100,"author":{"gitId":"ElaineQT"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-03-01"},{"lineNumber":101,"author":{"gitId":"ElaineQT"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(byStr, formatter);","lastModifiedDate":"2022-03-01"},{"lineNumber":102,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":103,"author":{"gitId":"ElaineQT"},"content":"            return new DeadlineCommand(description, by);","lastModifiedDate":"2022-02-27"},{"lineNumber":104,"author":{"gitId":"ElaineQT"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Deadline description is unspecified.\");","lastModifiedDate":"2022-03-01"},{"lineNumber":106,"author":{"gitId":"ElaineQT"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-01"},{"lineNumber":107,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Deadline date or time format is incorrect.\");","lastModifiedDate":"2022-03-01"},{"lineNumber":108,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":109,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"ElaineQT"},"content":"    private static Command prepareEvent(String fullDescription) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":112,"author":{"gitId":"ElaineQT"},"content":"        try {","lastModifiedDate":"2022-03-01"},{"lineNumber":113,"author":{"gitId":"ElaineQT"},"content":"            String[] descriptions \u003d fullDescription.split(\"/at\", 2);","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"ElaineQT"},"content":"            String description \u003d descriptions[0].trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"ElaineQT"},"content":"            String atStr \u003d descriptions[1].trim();","lastModifiedDate":"2022-03-01"},{"lineNumber":116,"author":{"gitId":"ElaineQT"},"content":"            if(description.isEmpty() || atStr.isEmpty()) {","lastModifiedDate":"2022-03-01"},{"lineNumber":117,"author":{"gitId":"ElaineQT"},"content":"                throw new DukeException(\"Event description is unspecified.\");","lastModifiedDate":"2022-03-01"},{"lineNumber":118,"author":{"gitId":"ElaineQT"},"content":"            }","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"ElaineQT"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-03-01"},{"lineNumber":121,"author":{"gitId":"ElaineQT"},"content":"            LocalDateTime at \u003d LocalDateTime.parse(atStr, formatter);","lastModifiedDate":"2022-03-01"},{"lineNumber":122,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":123,"author":{"gitId":"ElaineQT"},"content":"            return new EventCommand(description, at);","lastModifiedDate":"2022-02-27"},{"lineNumber":124,"author":{"gitId":"ElaineQT"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-01"},{"lineNumber":125,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Event description is unspecified.\");","lastModifiedDate":"2022-03-01"},{"lineNumber":126,"author":{"gitId":"ElaineQT"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-01"},{"lineNumber":127,"author":{"gitId":"ElaineQT"},"content":"            throw new DukeException(\"Event date or time format is incorrect.\");","lastModifiedDate":"2022-03-01"},{"lineNumber":128,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":129,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"ElaineQT":130}},{"path":"src/main/java/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package storage;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import data.Deadline;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import data.Event;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import data.Task;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"import data.Todo;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"import java.io.*;","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":" * Manages the file used to store task data.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"public class FileManager {","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"    /** Default directory path of the storage file. */","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"    private static String DIR_PATH \u003d \"data\";","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"    /** Default storage file name. */","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"    private static final String fileName \u003d \"duke.txt\";","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"    public FileManager(){","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"        DIR_PATH \u003d System.getProperty(\"user.dir\") + File.separator + \"data\";","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"     * Loads the Task data from storage file, then returns it.","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"     * @return the list of tasks stored in storage file","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"     * @throws IOException If an output exception occurs","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"    public ArrayList\u003cTask\u003e loadData() throws IOException {","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"        File dir \u003d new File(DIR_PATH);","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"        if(!dir.exists()) {","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"ElaineQT"},"content":"            dir.mkdir();","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"ElaineQT"},"content":"        File file \u003d new File(DIR_PATH + File.separator + fileName);","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"ElaineQT"},"content":"        if(!file.exists()) {","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"ElaineQT"},"content":"            file.createNewFile();","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"ElaineQT"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"ElaineQT"},"content":"        ArrayList\u003cString\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"ElaineQT"},"content":"        while(s.hasNextLine()) {","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"ElaineQT"},"content":"            records.add(s.nextLine());","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"ElaineQT"},"content":"        return decodeData(records);","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"ElaineQT"},"content":"     * Stores the list of tasks in storage file.","lastModifiedDate":"2022-03-01"},{"lineNumber":53,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":54,"author":{"gitId":"ElaineQT"},"content":"     * @param tasks the list of tasks to be stored","lastModifiedDate":"2022-03-01"},{"lineNumber":55,"author":{"gitId":"ElaineQT"},"content":"     * @throws IOException if an input exception occurs","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"ElaineQT"},"content":"    public void saveData(ArrayList\u003cTask\u003e tasks) throws IOException{","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"ElaineQT"},"content":"        FileWriter fw \u003d new FileWriter(DIR_PATH + File.separator + fileName);","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"ElaineQT"},"content":"        ArrayList\u003cString\u003e records \u003d encodeData(tasks);","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"ElaineQT"},"content":"        for(int i \u003d 0; i \u003c records.size(); i++){","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"ElaineQT"},"content":"            fw.write(records.get(i));","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"ElaineQT"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"ElaineQT"},"content":"        fw.close();","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":68,"author":{"gitId":"ElaineQT"},"content":"     * Decodes the strings loaded from storage file into a list of tasks.","lastModifiedDate":"2022-03-01"},{"lineNumber":69,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":70,"author":{"gitId":"ElaineQT"},"content":"     * @param records the data loaded from storage file as a list of strings","lastModifiedDate":"2022-03-01"},{"lineNumber":71,"author":{"gitId":"ElaineQT"},"content":"     * @return a list of tasks","lastModifiedDate":"2022-03-01"},{"lineNumber":72,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":73,"author":{"gitId":"ElaineQT"},"content":"    private ArrayList\u003cTask\u003e decodeData(ArrayList\u003cString\u003e records) {","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"ElaineQT"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"ElaineQT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":77,"author":{"gitId":"ElaineQT"},"content":"        for(String record: records) {","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"ElaineQT"},"content":"            String[] data \u003d record.split(\"/\");","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"ElaineQT"},"content":"            for (int i \u003d 0; i \u003c data.length; i++){","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"ElaineQT"},"content":"                data[i] \u003d data[i].trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"ElaineQT"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"ElaineQT"},"content":"            switch (data[0]) {","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"ElaineQT"},"content":"            case \"T\":","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"ElaineQT"},"content":"                tasks.add(new Todo(data[2], Boolean.parseBoolean(data[1])));","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"ElaineQT"},"content":"            case \"D\":","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"ElaineQT"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(data[3], formatter);","lastModifiedDate":"2022-03-01"},{"lineNumber":89,"author":{"gitId":"ElaineQT"},"content":"                tasks.add(new Deadline(data[2], by, Boolean.parseBoolean(data[1])));","lastModifiedDate":"2022-03-01"},{"lineNumber":90,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"ElaineQT"},"content":"            case \"E\":","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"ElaineQT"},"content":"                LocalDateTime at \u003d LocalDateTime.parse(data[3], formatter);","lastModifiedDate":"2022-03-01"},{"lineNumber":93,"author":{"gitId":"ElaineQT"},"content":"                tasks.add(new Event(data[2], at, Boolean.parseBoolean(data[1])));","lastModifiedDate":"2022-03-01"},{"lineNumber":94,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"ElaineQT"},"content":"            default:","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"ElaineQT"},"content":"                break;","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"ElaineQT"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"ElaineQT"},"content":"        return tasks;","lastModifiedDate":"2022-02-27"},{"lineNumber":101,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":102,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":103,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":104,"author":{"gitId":"ElaineQT"},"content":"     * Encodes the list of tasks into a list of strings to be stored in storage file.","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":106,"author":{"gitId":"ElaineQT"},"content":"     * @param tasks the list of tasks to be stored","lastModifiedDate":"2022-03-01"},{"lineNumber":107,"author":{"gitId":"ElaineQT"},"content":"     * @return a list of strings storing the task information","lastModifiedDate":"2022-03-01"},{"lineNumber":108,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":109,"author":{"gitId":"ElaineQT"},"content":"    private ArrayList\u003cString\u003e encodeData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-01"},{"lineNumber":110,"author":{"gitId":"ElaineQT"},"content":"        ArrayList\u003cString\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"ElaineQT"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"ElaineQT"},"content":"            records.add(task.getInfo());","lastModifiedDate":"2022-02-27"},{"lineNumber":113,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"ElaineQT"},"content":"        return records;","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"ElaineQT":117}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"package ui;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"import common.DukeException;","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"import common.Messages;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"import data.Task;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"import data.TaskManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"/**","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":" *  Text UI of the application.","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":" */","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"public class Ui {","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"ElaineQT"},"content":"    private final Scanner sc;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"ElaineQT"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"ElaineQT"},"content":"    public Ui(TaskManager taskManager) {","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"ElaineQT"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"ElaineQT"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"ElaineQT"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(Messages.GREETING);","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"ElaineQT"},"content":"    public void showByeMessage() {","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(Messages.BYE);","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"ElaineQT"},"content":"    public void showExitMessage() {","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(Messages.Exit);","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"ElaineQT"},"content":"     * Displays the separator between two command results.","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"ElaineQT"},"content":"    public void showLine() {","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(Messages.LINE);","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"ElaineQT"},"content":"    public String getUserCommand() {","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"ElaineQT"},"content":"        String fullInputLine \u003d sc.nextLine();","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"ElaineQT"},"content":"        return fullInputLine;","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"ElaineQT"},"content":"     * Displays the newly added task.","lastModifiedDate":"2022-03-01"},{"lineNumber":48,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":49,"author":{"gitId":"ElaineQT"},"content":"     * @param task the new task","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"ElaineQT"},"content":"    public void showNewTask(Task task) {","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Now you have \" + taskManager.getNoOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"ElaineQT"},"content":"     * Displays the newly deleted task.","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":60,"author":{"gitId":"ElaineQT"},"content":"     * @param task the deleted task","lastModifiedDate":"2022-03-01"},{"lineNumber":61,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":62,"author":{"gitId":"ElaineQT"},"content":"    public void showRemovedTask(Task task) {","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t\\t \" + task.toString());","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Now you have \" + taskManager.getNoOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"ElaineQT"},"content":"    public void listAllTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"ElaineQT"},"content":"        if(tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"ElaineQT"},"content":"            System.out.println(\"\\t No task recorded.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"ElaineQT"},"content":"            return;","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"ElaineQT"},"content":"        for(int i \u003d 0;i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"ElaineQT"},"content":"            System.out.println(\"\\t\\t \" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":81,"author":{"gitId":"ElaineQT"},"content":"     * Displays the newly marked task specified by its index.","lastModifiedDate":"2022-03-01"},{"lineNumber":82,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":83,"author":{"gitId":"ElaineQT"},"content":"     * @param idx the index of the marked task","lastModifiedDate":"2022-03-01"},{"lineNumber":84,"author":{"gitId":"ElaineQT"},"content":"     * @throws DukeException If the task index is out of bound","lastModifiedDate":"2022-03-01"},{"lineNumber":85,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":86,"author":{"gitId":"ElaineQT"},"content":"    public void showMarkedTask(int idx) throws DukeException {","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t\\t \" + idx + \".\" + taskManager.getTask(idx).toString());","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":92,"author":{"gitId":"ElaineQT"},"content":"     * Displays the newly unmarked task specified by its index.","lastModifiedDate":"2022-03-01"},{"lineNumber":93,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":94,"author":{"gitId":"ElaineQT"},"content":"     * @param idx the index of the unmarked task","lastModifiedDate":"2022-03-01"},{"lineNumber":95,"author":{"gitId":"ElaineQT"},"content":"     * @throws DukeException If the task index is out of bound","lastModifiedDate":"2022-03-01"},{"lineNumber":96,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":97,"author":{"gitId":"ElaineQT"},"content":"    public void showUnmarkedTask(int idx) throws DukeException {","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t\\t \" + idx + \".\" + taskManager.getTask(idx).toString());","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"ElaineQT"},"content":"    public void showFoundResults(ArrayList\u003cInteger\u003e results) throws DukeException {","lastModifiedDate":"2022-03-01"},{"lineNumber":104,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"ElaineQT"},"content":"        if(results.isEmpty()) {","lastModifiedDate":"2022-03-01"},{"lineNumber":106,"author":{"gitId":"ElaineQT"},"content":"            System.out.println(\"\\t No matching result.\");","lastModifiedDate":"2022-03-01"},{"lineNumber":107,"author":{"gitId":"ElaineQT"},"content":"            return;","lastModifiedDate":"2022-03-01"},{"lineNumber":108,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":109,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":110,"author":{"gitId":"ElaineQT"},"content":"        for(int idx: results) {","lastModifiedDate":"2022-03-01"},{"lineNumber":111,"author":{"gitId":"ElaineQT"},"content":"            System.out.println(\"\\t\\t \" + idx + \".\" + taskManager.getTask(idx).toString());","lastModifiedDate":"2022-03-01"},{"lineNumber":112,"author":{"gitId":"ElaineQT"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":113,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":114,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":115,"author":{"gitId":"ElaineQT"},"content":"    public void showSupportedCommand() {","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Supported commands:\");","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Type \\\"help\\\" to view supported command\");","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Type \\\"todo \u003ctask\u003e\\\" to add a todo task\");","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Type \\\"deadline \u003ctask\u003e /by \u003cyyyy-MM-dd HH:mm\u003e\\\" to add a deadline task\");","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Type \\\"event \u003ctask\u003e /at \u003cyyyy-MM-dd HH:mm\u003e\\\" to add a event task\");","lastModifiedDate":"2022-03-01"},{"lineNumber":121,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Type \\\"list\\\" to list all tasks\");","lastModifiedDate":"2022-02-28"},{"lineNumber":122,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Type \\\"delete \u003ctask index\u003e\\\" to delete a task\");","lastModifiedDate":"2022-03-01"},{"lineNumber":123,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Type \\\"mark \u003ctask index\u003e\\\" to mark a task\");","lastModifiedDate":"2022-03-01"},{"lineNumber":124,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Type \\\"unmark \u003ctask index\u003e\\\" to unmark a task\");","lastModifiedDate":"2022-03-01"},{"lineNumber":125,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Type \\\"find \u003ckeyword\u003e\\\" to search tasks\");","lastModifiedDate":"2022-03-01"},{"lineNumber":126,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Type \\\"bye\\\" to exit\");","lastModifiedDate":"2022-02-28"},{"lineNumber":127,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":128,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":130,"author":{"gitId":"ElaineQT"},"content":"     * Displays the error message and prompts the user to try again.","lastModifiedDate":"2022-03-01"},{"lineNumber":131,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":132,"author":{"gitId":"ElaineQT"},"content":"     * @param message the error message to be displayed","lastModifiedDate":"2022-03-01"},{"lineNumber":133,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":134,"author":{"gitId":"ElaineQT"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-02-27"},{"lineNumber":135,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t \" + message);","lastModifiedDate":"2022-02-27"},{"lineNumber":136,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Please try again.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":137,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":138,"author":{"gitId":"ElaineQT"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":139,"author":{"gitId":"ElaineQT"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":140,"author":{"gitId":"ElaineQT"},"content":"     * Displays the error caused by loading data from local file.","lastModifiedDate":"2022-03-01"},{"lineNumber":141,"author":{"gitId":"ElaineQT"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":142,"author":{"gitId":"ElaineQT"},"content":"     * @param message the error message to be displayed","lastModifiedDate":"2022-03-01"},{"lineNumber":143,"author":{"gitId":"ElaineQT"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":144,"author":{"gitId":"ElaineQT"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2022-02-27"},{"lineNumber":145,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t Error: Failed to load data.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":146,"author":{"gitId":"ElaineQT"},"content":"        System.out.println(\"\\t \" + message);","lastModifiedDate":"2022-03-01"},{"lineNumber":147,"author":{"gitId":"ElaineQT"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":148,"author":{"gitId":"ElaineQT"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"ElaineQT":148}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ElaineQT"},"content":"todo team discussion","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"ElaineQT"},"content":"deadline submit report /by March 2","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"ElaineQT"},"content":"event attend tutorial /at Friday 2pm","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"ElaineQT"},"content":"deadline read book /by tomorrow","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"ElaineQT"},"content":"list","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"ElaineQT"},"content":"mark 2","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"ElaineQT"},"content":"mark 3","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"ElaineQT"},"content":"list","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"ElaineQT"},"content":"unmark 2","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"ElaineQT"},"content":"list","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"ElaineQT"},"content":"delete 4","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"ElaineQT"},"content":"list","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"ElaineQT"},"content":"bye","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"ElaineQT":13}}]
